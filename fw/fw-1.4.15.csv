File,Line,Column,Level,Category,Name,Warning,Suggestion,Note,CWEs,Context,Fingerprint
wireshark-1.4.15/airpcap_loader.c,1550,9,4,buffer,sscanf,"The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20)","Specify a limit to %s, or use a different input function","If the scanf format is influenceable by an attacker, it's exploitable.","CWE-120, CWE-20","    a = sscanf(if_info->name,AIRPCAP_DEVICE_NUMBER_EXTRACT_STRING,&n);",701317050a72078c975ef478dd1b128457fdd5151074ee973082335715af7a23
wireshark-1.4.15/asn1/ldap/packet-ldap-template.c,1559,76,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"ldap_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",b6cb81cb26407afb1843de3561c61dcdcae085f17f282931e52be89c8a139d60
wireshark-1.4.15/asn1/ldap/packet-ldap-template.c,1561,86,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_CONTROL_ACCESS, tvb, offset, 4, access);",b9f9dbe0b51f31889d5608581958ae754732b3b84b6093099477cbf32941ba70
wireshark-1.4.15/asn1/ldap/packet-ldap-template.c,1563,83,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_LIST_OBJECT, tvb, offset, 4, access);",38186990dbf429ad50612f8355cde51aa5d63c1752c86336b66e7a213fdecf3b
wireshark-1.4.15/asn1/ldap/packet-ldap-template.c,1565,83,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_DELETE_TREE, tvb, offset, 4, access);",d9c6eed0507e418ece41580a1ef473ed8a1ba655c6b1c04d16e90ee5eeafdc13
wireshark-1.4.15/asn1/ldap/packet-ldap-template.c,1567,82,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_WRITE_PROP, tvb, offset, 4, access);",b913ea4192fbeda1b90215a3912d476f08c8a36347b11fe9d1badde6c837da4c
wireshark-1.4.15/asn1/ldap/packet-ldap-template.c,1569,81,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_READ_PROP, tvb, offset, 4, access);",3956c60269d9cd20d5ac64502f7c746c86c8100c33b2897f9d3aac644d1d0f01
wireshark-1.4.15/asn1/ldap/packet-ldap-template.c,1571,82,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_SELF_WRITE, tvb, offset, 4, access);",597c803a07d08451b176b5efd55a2ab9b1e372daa3f79fe90c20ab9afa17f1dc
wireshark-1.4.15/asn1/ldap/packet-ldap-template.c,1573,76,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_LIST, tvb, offset, 4, access);",9082012350f3142efe1ab19d197f10e871588d921a148a18b89be9f602b15ff9
wireshark-1.4.15/asn1/ldap/packet-ldap-template.c,1575,84,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_DELETE_CHILD, tvb, offset, 4, access);",da681579c88c22b52d9db9787a2a766db6d74f4298d6d5e7a5c3f39809c0bf7f
wireshark-1.4.15/asn1/ldap/packet-ldap-template.c,1577,84,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_CREATE_CHILD, tvb, offset, 4, access);",ad96a0ac571fa728f6d9e2eb29cb1a173393ffdf6ecf9db23d66612c386b57e4
wireshark-1.4.15/asn1/snmp/packet-snmp-template.c,47,21,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,#define D(args) do {printf args; fflush(stdout); } while(0),154b9948bec589c7a3f70dd8aa743997584dc05bf0e2507eab9ef14b67569535
wireshark-1.4.15/capture_sync.c,598,7,4,shell,execv,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"      execv(argv[0], (gpointer)argv);",430542ae069e0ab5aa72bf4b6cf9a88da20530c3e5925232662e4606701027c9
wireshark-1.4.15/capture_sync.c,813,9,4,shell,execv,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"        execv(argv[0], (gpointer)argv);",430542ae069e0ab5aa72bf4b6cf9a88da20530c3e5925232662e4606701027c9
wireshark-1.4.15/dftest.c,167,2,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	vfprintf(stderr, msg_format, ap);",86136173c58c733984fb74a144954a9280a9688dd7f7e33902cc12829176cb6b
wireshark-1.4.15/dftest.c,178,2,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	fprintf(stderr, file_open_error_message(err, for_writing), filename);",e69ca8d332d0deae88e3f2bee60a43d891aec19018911a0c126cf51a8ad0ec07
wireshark-1.4.15/dumpcap.c,422,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-1.4.15/dumpcap.c,454,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-1.4.15/dumpcap.c,477,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-1.4.15/epan/camel-persistentdata.c,139,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-1.4.15/epan/dfilter/semcheck.c,47,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,	printf x; \,cccfd200c16704b58ec3c09dfbac323ff88747a41348c882c338e7863e1b0d6e
wireshark-1.4.15/epan/diam_dict.c,3015,17,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	if (debugging) vfprintf(stderr, fmt, ap);",942c4caae03cca72f49f78ee892e9fe8a8283cfd69231cd6c1f7a6f2728515c7
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,111,2,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	vfprintf (stderr, format, args);",7598b9622bd5c7f898c540d0b39d18a3af7d081811ece6b6e82a4223e97bac61
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,116,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"		vfprintf (fh, format, args);",9a40b886b7ab23bfcb2f81cf0ce2b144cc17d66894ca176987acfc9e72a5fd45
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,861,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(hf_status, ""hf_%s_opnum"", ifname);",554fb1cf33f1ecfc6702d7d3fe35d943ab997a06e01a41dad9e0b85d94d04ac6
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,862,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(filter_name, ""%s.opnum"", ifname);",d88c3b6c913bed3f8ac5ca394c4f45bdd9b231d1e0d3c24c6aebc0974e3abf68
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,866,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(hf_status, ""hf_%s_rc"", ifname);",f86678874bddc1b7559787525cff44e55dad380cde71ab7f8b9c70335a2ed8f5
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,867,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(filter_name, ""%s.rc"", ifname);",ad68d77e07cb78549d134ce44cc41a3db1325214f25db08bc8bb1c1feeb10cf2
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1062,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1074,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1086,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1099,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1114,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1127,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1142,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1154,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1166,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1179,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1191,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1210,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1225,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1241,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1257,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1272,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1287,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1302,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1316,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1332,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(dissectorname, ""%s_dissect_%s"", ifname, name);",810004f71641358f83441395687c9c98115231af1a9931226778c6f89752af91
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1505,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(dissectorname, ""%s_dissect_%s"", ifname, struct_name);",d048b57ba0489088ff497a7364a4432e5bcbedc2f5423776952158798a6472ae
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1654,3,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"		sprintf(hf_index, ""hf_%s_%s_%s"", ifname, struct_name, field_name);",a4795bd8489c8e25173d581f3ad2c7d8e912540a0b1b9da1debe257f17ec5374
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1660,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(tmpstr, ""%s_dissect_%s_%s"", ifname, struct_name, field_name);",893ee8ff2591041bb9570e72866dbbe420d9845415116897edb740cc4c42391a
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1664,6,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			  sprintf(filter_name, ""%s.%s.%s"", ifname, struct_name, field_name);",1eeea2014810ddc21f816cc96fc465296b274ce84efbb7431f6042f42e0de1be
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1681,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""%s_%s"", pointer_type, ptmpstr);",56f41badb6c38e07fd8f12ad198a651700d06c803eb63976291a839f2ccfec3f
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1696,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""fixedarray_%s"", ptmpstr);",f76bf7edab2c3ecc5da0e01c4ff444a8cd71025e72b9e48d95cf52d323388c44
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1721,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""ucarray_%s"", ptmpstr);",0e1930414a3586014533c482e1b37e17c79228a00544e42a5e1ce8697fc596a1
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1736,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""uvarray_%s"", ptmpstr);",689f28225d46800abc6ebf823cb5edaab58266133c2e930dd6a16067753a07d2
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1751,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""ucvarray_%s"", ptmpstr);",87012a47100cff25ae2a1fec4d4512834690d9a3d360b5711c3425a4e235d5dd
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1775,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""%s_%s"", pointer_type, ptmpstr);",56f41badb6c38e07fd8f12ad198a651700d06c803eb63976291a839f2ccfec3f
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1793,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(tmpstr, ""%s_dissect_%s_%s"", ifname, struct_name, field_name);",893ee8ff2591041bb9570e72866dbbe420d9845415116897edb740cc4c42391a
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1800,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""%s_%s"", pointer_type, ptmpstr);",56f41badb6c38e07fd8f12ad198a651700d06c803eb63976291a839f2ccfec3f
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1803,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""fixedarray_%s"", ptmpstr);",f76bf7edab2c3ecc5da0e01c4ff444a8cd71025e72b9e48d95cf52d323388c44
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1813,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""ucarray_%s"", ptmpstr);",0e1930414a3586014533c482e1b37e17c79228a00544e42a5e1ce8697fc596a1
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1817,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""uvarray_%s"", ptmpstr);",689f28225d46800abc6ebf823cb5edaab58266133c2e930dd6a16067753a07d2
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1821,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""ucvarray_%s"", ptmpstr);",87012a47100cff25ae2a1fec4d4512834690d9a3d360b5711c3425a4e235d5dd
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1834,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""%s_%s"", pointer_type, ptmpstr);",56f41badb6c38e07fd8f12ad198a651700d06c803eb63976291a839f2ccfec3f
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1960,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(dissectorname, ""%s_dissect_%s"", ifname, bitmap_name);",7ee63a33971631094d299e1fd739aa1f909a02ac543b8d81bebd9cc5df1307e5
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2023,3,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"		sprintf(hf_bitname, ""hf_%s_%s_%s"", ifname, bitmap_name, name);",83ee8f74fdeb25419751c8b14ae2940578775fe2c82e46babc78ad656d8de9f6
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2049,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(filter_name, ""%s.%s.%s"", ifname, bitmap_name, name);",54cfee81ab8bcf5a389d1dedb3a447c12031b2e25f67d729b8ef2645517a5108
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2051,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(tfs_name, ""TFS(&%s_tfs)"", name);",3ba8aace8b3e5cfef8b04b79e75081a24bc48f7f34751f2f8e08be7f463296b0
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2208,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(dissectorname, ""%s_dissect_union_%s"", ifname, union_name);",a7acbc45d1e086dc4988c2cdaafb1b2eff2cce6be17133928ffcb59e489ad6da
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2363,3,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"		sprintf(hf_index, ""hf_%s_%s_%s_%s"", ifname, union_name, case2str(bi->case_name), ti->str);",b0ace4b9c2d6ca06a934d6efa4466b2938b12223c723b9bef921564449ff67fc
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2368,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(tmpstr, ""%s_dissect_union_%s_%s_%s"", ifname, union_name, case2str(bi->case_name), ti->str);",531018307d7054afa83c7eabb024ab89547ba41cf3decb26893344b6ee3bf3d5
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2371,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(filter_name, ""%s.%s.%s"", ifname, union_name, ti->str);",275d9876e676b3d0e8a8b7a981c5af8b633f062f6699382945e32e23e86aa964
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2385,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""%s_%s"", ptmpstr, ""unique"");",0c12cc70c4da71b2661d2fd6c2c9a3a0679f1b6b0d0edbce218ae72701b60da6
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2401,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(tmpstr, ""%s_dissect_union_%s_%s_%s"", ifname, union_name, case2str(bi->case_name), ti->str);",531018307d7054afa83c7eabb024ab89547ba41cf3decb26893344b6ee3bf3d5
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2404,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""%s_%s"", ptmpstr, ""unique"");",0c12cc70c4da71b2661d2fd6c2c9a3a0679f1b6b0d0edbce218ae72701b60da6
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2603,3,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"		sprintf(hf_index, ""hf_%s_%s_%s"", ifname, function_name, ti->str);",41e95b9e486d487da8865c6e2e4e7171e567f0d91e1a5f622283875713df29a2
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2609,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(tmpstr, ""%s_dissect_%s_%s"", ifname, function_name, ti->str);",b526dad2dd7eb29b848188a85ee5ac7b27bb11f37d3ea6d1c4b567845e86aba3
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2613,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(filter_name, ""%s.%s.%s"", ifname, function_name, ti->str);",7a0b8e3cece5066a42d78e6c7630085d5187b7d49d4ee1e003daa7810940be92
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2632,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""ucvarray_%s"", ptmpstr);",87012a47100cff25ae2a1fec4d4512834690d9a3d360b5711c3425a4e235d5dd
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2643,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""ucarray_%s"", ptmpstr);",0e1930414a3586014533c482e1b37e17c79228a00544e42a5e1ce8697fc596a1
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2663,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""%s_%s"", pointer_type, ptmpstr);",56f41badb6c38e07fd8f12ad198a651700d06c803eb63976291a839f2ccfec3f
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2678,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"			sprintf(tmpstr, ""%s_dissect_%s_%s"", ifname, function_name, ti->str);",b526dad2dd7eb29b848188a85ee5ac7b27bb11f37d3ea6d1c4b567845e86aba3
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2686,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""ucvarray_%s"", ptmpstr);",87012a47100cff25ae2a1fec4d4512834690d9a3d360b5711c3425a4e235d5dd
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2690,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""ucarray_%s"", ptmpstr);",0e1930414a3586014533c482e1b37e17c79228a00544e42a5e1ce8697fc596a1
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2703,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"				sprintf(tmpstr, ""%s_%s"", pointer_type, ptmpstr);",56f41badb6c38e07fd8f12ad198a651700d06c803eb63976291a839f2ccfec3f
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2879,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(valsstring, ""%s_%s_vals"", ifname, ti->str);",71b26c50ef07df15583d05761e0ff714de5bed7445f64870575945058fdd24ee
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2880,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(dissectorname, ""%s_dissect_%s"", ifname, ti->str);",91fe41b69c1d0f7e666f00f84fcda815dda024f8b4a2950c557f029c02eb94dd
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2923,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(hfvalsstring, ""VALS(%s)"", valsstring);",71d311a344d9ee236a4ab2d95109584ea487ac889e2e1f2754fe844dae969267
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3184,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(idlfile, ""%s.cnf"", argv[1]);",ef68bfcdecd4482c9d4325664eb649cff88caef450048da85a536f23a49b34bc
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3191,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(idlfile, ""%s.idl"", argv[1]);",ae13d154b0ef706b88382579e4ea6b56924e6d6a12dd81bfe40f339bf85abbf5
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3214,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(prefix_str, ""%s_"", ifname);",94bc2242c0ad62c060cbacebde98742424965839f5172a4352e115ec9272d848
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3341,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(line, ""packet-dcerpc-%s.c"", ifname);",eed0b60746e15fac273b33842eb27c1510d4565692f84eb30fd952fd37c9cd42
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3343,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(tmplfile, ""packet-dcerpc-%s-template.c"", argv[1]);",b85289b75a7cefb4ea9cb405b86c8e816509cd96c7853f9203d6c2e1c06624e5
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3377,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(line, ""packet-dcerpc-%s.h"", ifname);",5a331d2072b1d23423e5efae68e391db03d2c57a04c701d26c878376fc7ed181
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3379,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(tmplfile, ""packet-dcerpc-%s-template.h"", argv[1]);",09ff49cacc89cf1a8dc4751e330a38fd656b5287e6f72eb037f0330242a38ff4
wireshark-1.4.15/epan/dissectors/packet-dccp.c,141,41,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                                        fprintf(stdout, \",8d31f0de84c55d411e3022e0cfb37a97024728cf3f7d3fed1106f6cf7bea4b9e
wireshark-1.4.15/epan/dissectors/packet-dccp.c,147,41,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                                        fprintf(stdout, str, ## args); \",0637daa932e3b8031f4c84075d5e6b1b663efa72180c33e5d2cfd3ed066dd15f
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1332,97,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"lsarpc_policy_specific_rights(tvbuff_t *tvb _U_, gint offset _U_, proto_tree *tree _U_, guint32 access _U_)",4fc599a5d7113fdcdd8325a2dd676f8663f3c63822322fbce350ee7c7dba8726
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1334,103,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_NOTIFICATION, tvb, offset, 4, access);",8ada18517b7685b4ce21082317ab9025ee4d84f2606261d0c6afa59bbeef4e4d
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1335,103,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_LOOKUP_NAMES, tvb, offset, 4, access);",0776d1c4c09f244905cf023d845046e708973ddab2c200b3686d1ba3b173cf70
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1336,103,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_SERVER_ADMIN, tvb, offset, 4, access);",08d9dd49acbb4f467993280b7eb26044e9a22dce911bba6cccb6aa8da323c85a
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1337,106,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_AUDIT_LOG_ADMIN, tvb, offset, 4, access);",d080071055c0f3bfd8ba14201409eb9475fd8234319cbb36cc2e02f4eb9635c0
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1338,113,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_SET_AUDIT_REQUIREMENTS, tvb, offset, 4, access);",dc7cd4b05b5f29d054ff8b44ff3e5add027b5b3036bac4c6f78566f6f204e497
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1339,115,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_SET_DEFAULT_QUOTA_LIMITS, tvb, offset, 4, access);",35fde07aad018f9d0cb2af4b760b332f48700307f1942b94ed7d41f8daaff4a6
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1340,107,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_CREATE_PRIVILEGE, tvb, offset, 4, access);",91b72895a833087ac6e9e03fc01c3a4e757eb55c674619338ebfde3f28cd0a28
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1341,104,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_CREATE_SECRET, tvb, offset, 4, access);",b64f27b78b60923b9c21e201a957a1d2664ce2a2b4c1a246099479de9b7fbfa8
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1342,105,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_CREATE_ACCOUNT, tvb, offset, 4, access);",4dbdbb7653be36cef72f5404e3a6f670276588a0dc8fa094fd61260d6e34528b
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1343,102,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_TRUST_ADMIN, tvb, offset, 4, access);",00e240ed966f1819d1f6d559d478d9b8abc3afcd5f1df8cbe1c2568cba1a15f1
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1344,114,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_GET_PRIVATE_INFORMATION, tvb, offset, 4, access);",a07399f82461e01eadc11e47324883e372b370c01060eb225a3fef885e0c8652
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1345,113,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_VIEW_AUDIT_INFORMATION, tvb, offset, 4, access);",821b2b999bcea0a1672527d7b1bab0e76465e7e80b6dfc7d8ba3babc40a7bd99
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1346,113,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_PolicyAccessMask_LSA_POLICY_VIEW_LOCAL_INFORMATION, tvb, offset, 4, access);",f240fd550b82374fe16e83ecef354b36e35745352a2b03aef863ab9ae1cbbfdd
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1349,98,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"lsarpc_account_specific_rights(tvbuff_t *tvb _U_, gint offset _U_, proto_tree *tree _U_, guint32 access _U_)",16cd2738c139439fa3d7eb578ea84f3c9df2779a0f3b52d7580d7182193457e9
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1351,113,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_AccountAccessMask_LSA_ACCOUNT_ADJUST_SYSTEM_ACCESS, tvb, offset, 4, access);",c9534bffe7162048da06672b77089d8dca417eb6e2efeb2eb3cebc32c10b000c
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1352,106,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_AccountAccessMask_LSA_ACCOUNT_ADJUST_QUOTAS, tvb, offset, 4, access);",a1ae9e29b40afcb5d7d07b424f61092a7326acc5e67f4411b5026f8636591536
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1353,110,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_AccountAccessMask_LSA_ACCOUNT_ADJUST_PRIVILEGES, tvb, offset, 4, access);",e00b66795c1eb8df75b3c2ef5b8a49d7567c5fc3be565eb04fd75ad8e17a7822
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1354,97,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_AccountAccessMask_LSA_ACCOUNT_VIEW, tvb, offset, 4, access);",94a7484c9c6bcba3ea5519446847654fbe0ecb32293ae72dd5a1d898b6e23917
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1357,97,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"lsarpc_secret_specific_rights(tvbuff_t *tvb _U_, gint offset _U_, proto_tree *tree _U_, guint32 access _U_)",d5fba9c51cafb3e8d5068436178a180822c98194b9614e5a72021c27f0d9458b
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1359,102,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_SecretAccessMask_LSA_SECRET_QUERY_VALUE, tvb, offset, 4, access);",ebedb983b3c7ac720d17ebb36339867b2f3757a046a5dc0c445962b480078079
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1360,100,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_SecretAccessMask_LSA_SECRET_SET_VALUE, tvb, offset, 4, access);",495c637897f0e6e802eeb10bb0429dc3857ab475083eb5916feef31878176874
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1363,97,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"lsarpc_domain_specific_rights(tvbuff_t *tvb _U_, gint offset _U_, proto_tree *tree _U_, guint32 access _U_)",085cafcf402f66ef7d457fa4beefd0054782e20455e54d14dd48c135097b20b2
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1365,101,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_DomainAccessMask_LSA_DOMAIN_QUERY_AUTH, tvb, offset, 4, access);",f4cf0e67c32492c56b5de14d1322a13c768205e4b2ba634d3df0f790c0a596c8
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1366,99,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_DomainAccessMask_LSA_DOMAIN_SET_AUTH, tvb, offset, 4, access);",49a24ee948403f1285dcf7d42e21e038e3c8c3c84592326a6d14eee308b3f249
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1367,100,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_DomainAccessMask_LSA_DOMAIN_SET_POSIX, tvb, offset, 4, access);",a9d5139988b97b79705b3ee324e76461574b71ec24821fd4c806a37aab79408a
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1368,102,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_DomainAccessMask_LSA_DOMAIN_QUERY_POSIX, tvb, offset, 4, access);",93c691086474ffccd7016cd6a0d5d405fb5bbc727c774c3922283168159cd314
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1369,106,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_DomainAccessMask_LSA_DOMAIN_SET_CONTROLLERS, tvb, offset, 4, access);",3e202d822d43b61bf1ca566ae528e1db03711dc5fccb6e8130a3c64f962e1a01
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1370,108,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_DomainAccessMask_LSA_DOMAIN_QUERY_CONTROLLERS, tvb, offset, 4, access);",af8e2c8a403bb463c8b9fb3059345b1b2970889d4ed2a17a89fcceb02ab9ee24
wireshark-1.4.15/epan/dissectors/packet-dcerpc-lsa.c,1371,108,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_lsarpc_lsa_DomainAccessMask_LSA_DOMAIN_QUERY_DOMAIN_NAME, tvb, offset, 4, access);",148fe08fdcbeec6e02a02b1b7689ce8612e05a7da6cc7ae08011bdc4f9e0bfe3
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,55,26,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"#define debugprintf(...) fprintf(stderr,__VA_ARGS__)",c0c43be001f27ba769816ef737467f4da3b6d65612f701a89f6b39e75dc397c2
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,1996,84,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"samr_connect_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",6708f02d120a9d1a5b23c07d350ece366fd2fda35bf351e5919d56b686da3027
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,1998,105,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_ConnectAccessMask_SAMR_ACCESS_LOOKUP_DOMAIN, tvb, offset, 4, access);",0d08571bd3d8b30a92a5857c2ccae07292c365790060da61f0fe656d366b2377
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,1999,104,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_ConnectAccessMask_SAMR_ACCESS_ENUM_DOMAINS, tvb, offset, 4, access);",1e3d53410d0af300687bd7844518496798ae9f87163c1c28707f529727cb31b8
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2000,105,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_ConnectAccessMask_SAMR_ACCESS_CREATE_DOMAIN, tvb, offset, 4, access);",835299bfef51ee04a947a2e38bf830a6f809f5adc9aedf890f6f2989300e043a
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2001,109,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_ConnectAccessMask_SAMR_ACCESS_INITIALIZE_SERVER, tvb, offset, 4, access);",31224b5de36492de6cf26d69868c26c186e4a95eb8b249001bad9f61ff312fc3
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2002,107,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_ConnectAccessMask_SAMR_ACCESS_SHUTDOWN_SERVER, tvb, offset, 4, access);",d7d13b42a0a214407f482851c516866a0829d564f5eb76f2ff3bb4122e256839
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2003,109,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_ConnectAccessMask_SAMR_ACCESS_CONNECT_TO_SERVER, tvb, offset, 4, access);",462378c6c0f002428fcdc3842d687bbf4b5015b968ffa7db20d817a28e615f56
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2020,82,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"samr_alias_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",ef5f2612370a528a386b8c78a63ae2cb4738578390698b30dea30893df52940a
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2022,106,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_AliasAccessMask_SAMR_ALIAS_ACCESS_ADD_MEMBER, tvb, offset, 4, access);",f78aab7cd682282cdf4a97014502dd5c9995484c9a4ac20b84369e8a92285bc1
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2023,109,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_AliasAccessMask_SAMR_ALIAS_ACCESS_REMOVE_MEMBER, tvb, offset, 4, access);",a7183855868c6fa7bd0f36fd42e91e85cb16639ba9b3b982d8db6aa3e14c03e1
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2024,107,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_AliasAccessMask_SAMR_ALIAS_ACCESS_GET_MEMBERS, tvb, offset, 4, access);",c847e17b21f3265419cd119f65644228fba2a3914f381bae65b2af355c52eb28
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2025,107,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_AliasAccessMask_SAMR_ALIAS_ACCESS_LOOKUP_INFO, tvb, offset, 4, access);",688829614f7796e81dcf4fddc2b19be32907536d79fd164f8c69c7c6021f429d
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2026,104,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_AliasAccessMask_SAMR_ALIAS_ACCESS_SET_INFO, tvb, offset, 4, access);",e04e483f73da8626e92dd93948f7c10d2852d4c2af3fda80d9e390106a87862d
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2043,82,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"samr_group_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",f9a0b8d1a215d645084c26594778c2da3dd0ed0bc1dbea83c24010085bc69cc6
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2045,107,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_GroupAccessMask_SAMR_GROUP_ACCESS_GET_MEMBERS, tvb, offset, 4, access);",cf99e757130a4ab9c2ae1f7e6712fa04ca631509171a81058b75211f99e72b70
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2046,109,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_GroupAccessMask_SAMR_GROUP_ACCESS_REMOVE_MEMBER, tvb, offset, 4, access);",c6472f9801900ec7adb5b80728b36715418163d9b7ef6c0b171b87b64f19f173
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2047,106,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_GroupAccessMask_SAMR_GROUP_ACCESS_ADD_MEMBER, tvb, offset, 4, access);",82adb917b19e1a36057848fe998f47b3833e104128974f77c4623a5594db6dac
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2048,104,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_GroupAccessMask_SAMR_GROUP_ACCESS_SET_INFO, tvb, offset, 4, access);",2e1f4c79101cf1f779c16ff26e8fd723f5f2f35b7a9e8e332d9fd635cbf20d03
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2049,107,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_GroupAccessMask_SAMR_GROUP_ACCESS_LOOKUP_INFO, tvb, offset, 4, access);",3c2c11da740201dff79d6e687b9082c738a33340653153fb0d68fccaad148259
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2066,83,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"samr_domain_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",d060b4dbefe5858c621db39ac98baa8ea9e88e8403efb9d92c033d6e238e8a80
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2068,111,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_DomainAccessMask_SAMR_DOMAIN_ACCESS_LOOKUP_INFO_1, tvb, offset, 4, access);",21b756163a7744ef07dc4673ffbef6bcf26328e39bdae277ad545446474f1d01
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2069,108,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_DomainAccessMask_SAMR_DOMAIN_ACCESS_SET_INFO_1, tvb, offset, 4, access);",73a04b751b5833b6ab572aa785ad8325ca7bcd0336295305bee49b65fb58e5b9
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2070,111,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_DomainAccessMask_SAMR_DOMAIN_ACCESS_LOOKUP_INFO_2, tvb, offset, 4, access);",c49926b13710797311581dfeed7dea2373dda7f612f9474ec44360a8759dadfd
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2071,108,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_DomainAccessMask_SAMR_DOMAIN_ACCESS_SET_INFO_2, tvb, offset, 4, access);",3ac6035e794838fccd88c60ef33e43c67cdd2c31522c02a62899778bf15f20f4
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2072,109,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_DomainAccessMask_SAMR_DOMAIN_ACCESS_CREATE_USER, tvb, offset, 4, access);",39a5529729eef13da4c1eb3a917bb48cf10107b5ea0baba5f0c1d818e569439d
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2073,110,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_DomainAccessMask_SAMR_DOMAIN_ACCESS_CREATE_GROUP, tvb, offset, 4, access);",36656c6c259b6755ae13befc9509835f1ce33694f1c20fbd9f53fbc6d107f979
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2074,110,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_DomainAccessMask_SAMR_DOMAIN_ACCESS_CREATE_ALIAS, tvb, offset, 4, access);",dac5e6ea51b7bb87af699619fc4eefc7e2732bedff3dcf6366723983af1251c5
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2075,110,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_DomainAccessMask_SAMR_DOMAIN_ACCESS_LOOKUP_ALIAS, tvb, offset, 4, access);",f366bd79c7634680e35f9e7a3148c51f88bd42c7b5bd5969f53c1b1039a0a76b
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2076,111,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_DomainAccessMask_SAMR_DOMAIN_ACCESS_ENUM_ACCOUNTS, tvb, offset, 4, access);",1c85ca48b3b28bd7fef255d4a45b28fa9adf891cd1472b39c62ef141f594ee4d
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2077,110,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_DomainAccessMask_SAMR_DOMAIN_ACCESS_OPEN_ACCOUNT, tvb, offset, 4, access);",71d8c0b01e250fa5a61b8b11005f709b60496b2d694c8e41c5f8ae462a4ac4ae
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2078,108,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_DomainAccessMask_SAMR_DOMAIN_ACCESS_SET_INFO_3, tvb, offset, 4, access);",b0d0e373a444fc1f54ebe18f0e5d3d03f4c494da1dcd18316ab4949802d5cdf1
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2095,81,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"samr_user_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",0fe9ca920440c58282134550fa976a8f0e68479f1c55d5153a0869b5eeb7a5b5
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2097,117,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_UserAccessMask_SAMR_USER_ACCESS_CHANGE_GROUP_MEMBERSHIP, tvb, offset, 4, access);",5afa6cac4007457ec1a19c330a748960746ea79aeb281c687c0d56bea69c4ef3
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2098,114,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_UserAccessMask_SAMR_USER_ACCESS_GET_GROUP_MEMBERSHIP, tvb, offset, 4, access);",8f441e94def941d180a7f5d792620bcdc6e8dad25348b9ed86659949c55e6a4d
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2099,104,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_UserAccessMask_SAMR_USER_ACCESS_GET_GROUPS, tvb, offset, 4, access);",9c9261b347be8a69cb4323f5061ef625daf821a9761338b0affb7b963d28136c
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2100,106,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_UserAccessMask_SAMR_USER_ACCESS_SET_PASSWORD, tvb, offset, 4, access);",46442475c1475f40f767f806d78edc1d2c1d5f5f9e5adbac996e973b7c60c60e
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2101,109,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_UserAccessMask_SAMR_USER_ACCESS_CHANGE_PASSWORD, tvb, offset, 4, access);",387fadafe0d03c391ceb3b7ac725b0f4abef78fe7333357a78558dd581062084
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2102,108,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_UserAccessMask_SAMR_USER_ACCESS_SET_ATTRIBUTES, tvb, offset, 4, access);",97281d5725c9c493d71b8b19f894b62127fd12daaf31fb331f7643846b84ec56
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2103,108,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_UserAccessMask_SAMR_USER_ACCESS_GET_ATTRIBUTES, tvb, offset, 4, access);",ef288c692ea1ad53eaca48eff6396b742fdabc4b5f96642ee41452cd8efb4ddd
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2104,107,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_UserAccessMask_SAMR_USER_ACCESS_GET_LOGONINFO, tvb, offset, 4, access);",117dbe31b45648237616d320df64259a03e2ab1bb4d3a87689427e8b9e718591
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2105,105,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_UserAccessMask_SAMR_USER_ACCESS_SET_LOC_COM, tvb, offset, 4, access);",eeb4c75a8f170dc10eeef32691ad7bf672fa4ae891d1303f9079de9e865a9d4f
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2106,104,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_UserAccessMask_SAMR_USER_ACCESS_GET_LOCALE, tvb, offset, 4, access);",9c9b24022b57d310c78074ee2260492adb337266f15f6d35382f4e09ade6cefa
wireshark-1.4.15/epan/dissectors/packet-dcerpc-samr.c,2107,106,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_samr_samr_UserAccessMask_SAMR_USER_ACCESS_GET_NAME_ETC, tvb, offset, 4, access);",ac56439534850dc140b9961ea0f6df496bf32925c646c4b83e1f100c29fbb1bd
wireshark-1.4.15/epan/dissectors/packet-dcerpc-spoolss.c,357,13,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,				guint32 access),cc0db921e462a033043de29bdb0861e0261006451bfad3737b662bd66dde9f47
wireshark-1.4.15/epan/dissectors/packet-dcerpc-spoolss.c,360,48,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		tree, hf_printer_access_use, tvb, offset, 4, access);",59c517dc7eaca61631dabb985e5d16e8bcc1a5558333e9a53a9761d0ebd08141
wireshark-1.4.15/epan/dissectors/packet-dcerpc-spoolss.c,363,50,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		tree, hf_printer_access_admin, tvb, offset, 4, access);",535dae0cdd521efef830d01af45e2679e9eda2be69f0882df8da7a9db511403d
wireshark-1.4.15/epan/dissectors/packet-dcerpc-spoolss.c,375,35,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"				    proto_tree *tree, guint32 access)",c81deb9b11f746f4fe40ba7a06b7ed8690095557c4ac27efef17f508c04e76ba
wireshark-1.4.15/epan/dissectors/packet-dcerpc-spoolss.c,378,48,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		tree, hf_server_access_enum, tvb, offset, 4, access);",9bd645cd60630d786107044d59827d846b09d19874f2535bb94fbd277e57fdd5
wireshark-1.4.15/epan/dissectors/packet-dcerpc-spoolss.c,381,49,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		tree, hf_server_access_admin, tvb, offset, 4, access);",ae6d3a70cb56de2cbb2c0f119bbe49300c25953a612f3d63dabff7b181f354cc
wireshark-1.4.15/epan/dissectors/packet-dcerpc-spoolss.c,393,34,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"			    proto_tree *tree, guint32 access)",c81deb9b11f746f4fe40ba7a06b7ed8690095557c4ac27efef17f508c04e76ba
wireshark-1.4.15/epan/dissectors/packet-dcerpc-spoolss.c,396,46,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		tree, hf_job_access_admin, tvb, offset, 4, access);",909748156369456fb594f7155703f89a08dd74b0f2e1008a6fe88de1d3f6881c
wireshark-1.4.15/epan/dissectors/packet-dcerpc-svcctl.c,88,15,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		    guint32 access),cc0db921e462a033043de29bdb0861e0261006451bfad3737b662bd66dde9f47
wireshark-1.4.15/epan/dissectors/packet-dcerpc-svcctl.c,90,88,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_svcctl_scm_rights_modify_boot_config, tvb, offset, 4, access);",f6452e603e66e7b925c49905455a171c841b96430b286039a365c94be6e2d04f
wireshark-1.4.15/epan/dissectors/packet-dcerpc-svcctl.c,91,87,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_svcctl_scm_rights_query_lock_status, tvb, offset, 4, access);",59b7920fbd1f948e30b896a38c523b86c535b4a8f2a8ed27c9ff30b317a64b2a
wireshark-1.4.15/epan/dissectors/packet-dcerpc-svcctl.c,92,74,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_svcctl_scm_rights_lock, tvb, offset, 4, access);",47db0d3d75cfaedbb2331a808ffc9da084b7a9fcc4217a323514383430b9a933
wireshark-1.4.15/epan/dissectors/packet-dcerpc-svcctl.c,93,87,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_svcctl_scm_rights_enumerate_service, tvb, offset, 4, access);",c891b95b3a8de3641c545af7eeed603adef10e6f92d804b8c49e55fd6d9c4314
wireshark-1.4.15/epan/dissectors/packet-dcerpc-svcctl.c,94,84,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_svcctl_scm_rights_create_service, tvb, offset, 4, access);",fe683442a1d3b798ade890311e2720bfa4ab58581dd2a46f0aec8e1ee1c65721
wireshark-1.4.15/epan/dissectors/packet-dcerpc-svcctl.c,95,77,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_svcctl_scm_rights_connect, tvb, offset, 4, access);",8474a9d19f14851c00778c4ec1e5599329ae0b376e9112b55b2872a0e62b966d
wireshark-1.4.15/epan/dissectors/packet-dcerpc-winreg.c,450,78,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"winreg_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",cbe7eee90743433dcc42eda7f65b0a51d944837f243aa2f3a4c28c53900d6144
wireshark-1.4.15/epan/dissectors/packet-dcerpc-winreg.c,452,92,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_winreg_winreg_AccessMask_KEY_WOW64_32KEY, tvb, offset, 4, access);",efc7c6a2f1ce67bc18dc4a648cd376315af8abd23321edafca84018ff67e2892
wireshark-1.4.15/epan/dissectors/packet-dcerpc-winreg.c,453,92,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_winreg_winreg_AccessMask_KEY_WOW64_64KEY, tvb, offset, 4, access);",df524325d1832209aae57ba0da0f809dd3f8033f60b38b6572688ea3c623d64c
wireshark-1.4.15/epan/dissectors/packet-dcerpc-winreg.c,454,92,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_winreg_winreg_AccessMask_KEY_CREATE_LINK, tvb, offset, 4, access);",887a9d5265f07889222184d9598509fa6e731f5a71f2ba951a545db909dcc0f6
wireshark-1.4.15/epan/dissectors/packet-dcerpc-winreg.c,455,87,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_winreg_winreg_AccessMask_KEY_NOTIFY, tvb, offset, 4, access);",a49aefc6e8a13f071deab65e742d96a0ae748833b699096f647c310a38cee213
wireshark-1.4.15/epan/dissectors/packet-dcerpc-winreg.c,456,99,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_winreg_winreg_AccessMask_KEY_ENUMERATE_SUB_KEYS, tvb, offset, 4, access);",e6c5f415a9be2f5c9cc30ea11484e8a1b79a4f74175818c7a112fc46cd9cfef4
wireshark-1.4.15/epan/dissectors/packet-dcerpc-winreg.c,457,95,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_winreg_winreg_AccessMask_KEY_CREATE_SUB_KEY, tvb, offset, 4, access);",5939be9a0f1f24efb894331ded1936bf8220681bede782671fcef7c17143d177
wireshark-1.4.15/epan/dissectors/packet-dcerpc-winreg.c,458,90,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_winreg_winreg_AccessMask_KEY_SET_VALUE, tvb, offset, 4, access);",27410bd56fd43e3261656e8fd56303bebbccd9b05842abcdd171372f3c3bfbcc
wireshark-1.4.15/epan/dissectors/packet-dcerpc-winreg.c,459,92,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_winreg_winreg_AccessMask_KEY_QUERY_VALUE, tvb, offset, 4, access);",b82d375c464e26bcce9c0ca7c544aa2b32e39ea4605da6470a672c7bf6e7a028
wireshark-1.4.15/epan/dissectors/packet-gsm_a_bssmap.c,607,29,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"    BE_LSA_ACC_CTRL, /. LSA access control suppression ./",7f75be09031a5145231431fa1378b36031e989cc951a7eb2c72a1ae6e8aef401
wireshark-1.4.15/epan/dissectors/packet-icep.c,60,41,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                                        fprintf(stdout, \",8d31f0de84c55d411e3022e0cfb37a97024728cf3f7d3fed1106f6cf7bea4b9e
wireshark-1.4.15/epan/dissectors/packet-icep.c,66,41,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                                        fprintf(stdout, str, ## args); \",0637daa932e3b8031f4c84075d5e6b1b663efa72180c33e5d2cfd3ed066dd15f
wireshark-1.4.15/epan/dissectors/packet-ipmi.c,162,2,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-1.4.15/epan/dissectors/packet-kingfisher.c,62,17,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,    guint8      system;,83a56dae4b401c5053d1ab94d676ed5d3b46e3fa7af6c4e6981f58d5cccee014
wireshark-1.4.15/epan/dissectors/packet-kingfisher.c,288,87,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"    proto_tree_add_uint_format(kingfisher_tree, hf_kingfisher_system, tvb, 0, 1, kfp->system, ""System Identifier: %u (0x%02X)"", kfp->system, kfp->system);",ac2a39eb307dea75a5297f97407e1b79c034d535632315fa7e5a11b1c3342e8b
wireshark-1.4.15/epan/dissectors/packet-kingfisher.c,288,134,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"    proto_tree_add_uint_format(kingfisher_tree, hf_kingfisher_system, tvb, 0, 1, kfp->system, ""System Identifier: %u (0x%02X)"", kfp->system, kfp->system);",ac2a39eb307dea75a5297f97407e1b79c034d535632315fa7e5a11b1c3342e8b
wireshark-1.4.15/epan/dissectors/packet-kingfisher.c,288,147,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"    proto_tree_add_uint_format(kingfisher_tree, hf_kingfisher_system, tvb, 0, 1, kfp->system, ""System Identifier: %u (0x%02X)"", kfp->system, kfp->system);",ac2a39eb307dea75a5297f97407e1b79c034d535632315fa7e5a11b1c3342e8b
wireshark-1.4.15/epan/dissectors/packet-ldap.c,4456,76,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"ldap_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",b6cb81cb26407afb1843de3561c61dcdcae085f17f282931e52be89c8a139d60
wireshark-1.4.15/epan/dissectors/packet-ldap.c,4458,86,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_CONTROL_ACCESS, tvb, offset, 4, access);",b9f9dbe0b51f31889d5608581958ae754732b3b84b6093099477cbf32941ba70
wireshark-1.4.15/epan/dissectors/packet-ldap.c,4460,83,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_LIST_OBJECT, tvb, offset, 4, access);",38186990dbf429ad50612f8355cde51aa5d63c1752c86336b66e7a213fdecf3b
wireshark-1.4.15/epan/dissectors/packet-ldap.c,4462,83,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_DELETE_TREE, tvb, offset, 4, access);",d9c6eed0507e418ece41580a1ef473ed8a1ba655c6b1c04d16e90ee5eeafdc13
wireshark-1.4.15/epan/dissectors/packet-ldap.c,4464,82,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_WRITE_PROP, tvb, offset, 4, access);",b913ea4192fbeda1b90215a3912d476f08c8a36347b11fe9d1badde6c837da4c
wireshark-1.4.15/epan/dissectors/packet-ldap.c,4466,81,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_READ_PROP, tvb, offset, 4, access);",3956c60269d9cd20d5ac64502f7c746c86c8100c33b2897f9d3aac644d1d0f01
wireshark-1.4.15/epan/dissectors/packet-ldap.c,4468,82,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_SELF_WRITE, tvb, offset, 4, access);",597c803a07d08451b176b5efd55a2ab9b1e372daa3f79fe90c20ab9afa17f1dc
wireshark-1.4.15/epan/dissectors/packet-ldap.c,4470,76,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_LIST, tvb, offset, 4, access);",9082012350f3142efe1ab19d197f10e871588d921a148a18b89be9f602b15ff9
wireshark-1.4.15/epan/dissectors/packet-ldap.c,4472,84,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_DELETE_CHILD, tvb, offset, 4, access);",da681579c88c22b52d9db9787a2a766db6d74f4298d6d5e7a5c3f39809c0bf7f
wireshark-1.4.15/epan/dissectors/packet-ldap.c,4474,84,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_ldap_AccessMask_ADS_CREATE_CHILD, tvb, offset, 4, access);",ad96a0ac571fa728f6d9e2eb29cb1a173393ffdf6ecf9db23d66612c386b57e4
wireshark-1.4.15/epan/dissectors/packet-nfs.c,4555,10,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,	guint32 access;,1eed7c01a308f8dc0608da7a2e57112661495d755c0ebb36b527e163cbcd8fd6
wireshark-1.4.15/epan/dissectors/packet-nfs.c,4563,24,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"			""%s: 0x%02x"", name, access);",22ca120ee9def296092c1501a22658fccb8e37416f9e748e2ac4b5a64a34ff8e
wireshark-1.4.15/epan/dissectors/packet-nfs.c,4568,27,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		decode_boolean_bitfield(access,  0x001, 6, ""allow"", ""not allow""));",5961b8da71f50e625e7f0c2e22b5f0cc4ab9d37d073a43f4988105ec93cc36a5
wireshark-1.4.15/epan/dissectors/packet-nfs.c,4570,27,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		decode_boolean_bitfield(access,  0x002, 6, ""allow"", ""not allow""));",2caae085dbdfe72402644eb98a47ad52aa512e690923c6a8fc1c3b207113bdb8
wireshark-1.4.15/epan/dissectors/packet-nfs.c,4572,27,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		decode_boolean_bitfield(access,  0x004, 6, ""allow"", ""not allow""));",3ffc0d744d8261f797eaa099fd67ab210fd8c1b767b225158b463ec3b795ffcc
wireshark-1.4.15/epan/dissectors/packet-nfs.c,4574,27,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		decode_boolean_bitfield(access,  0x008, 6, ""allow"", ""not allow""));",7a58205c822fd60f0b9e33987c5e380bdb51e66cbd7656a48d05cb76fc1a067b
wireshark-1.4.15/epan/dissectors/packet-nfs.c,4576,27,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		decode_boolean_bitfield(access,  0x010, 6, ""allow"", ""not allow""));",88f572c07dc580af374cdd726e928e8a535a67b44c55a0d2e1029bfd0b962f29
wireshark-1.4.15/epan/dissectors/packet-nfs.c,4578,27,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		decode_boolean_bitfield(access,  0x020, 6, ""allow"", ""not allow""));",de8573ccaed3e808504f11259967b680157a9e67d6a6987fb7904e16853a7e7b
wireshark-1.4.15/epan/dissectors/packet-snmp.c,55,21,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,#define D(args) do {printf args; fflush(stdout); } while(0),154b9948bec589c7a3f70dd8aa743997584dc05bf0e2507eab9ef14b67569535
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,3315,12,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    ret += vfprintf(ssl_debug_file, fmt, ap);",34021772e36a1c9d5ace07d615189e6d9782204907cdaa00aa6f9ba16b32d90b
wireshark-1.4.15/epan/dissectors/packet-tpncp.c,355,13,4,buffer,sscanf,"The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20)","Specify a limit to %s, or use a different input function",,"CWE-120, CWE-20","        if (sscanf(line_in_file, ""%s %d"", tpncp_name, &tpncp_id) == 2) {",55764369d5f6aa62f8b3128d7ef4baed8a4046e18f5ff039ec11a8481a3aca34
wireshark-1.4.15/epan/dissectors/packet-tpncp.c,390,13,4,buffer,sscanf,"The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20)","Specify a limit to %s, or use a different input function",,"CWE-120, CWE-20","        if (sscanf(line_in_file, ""%s %s %d"", enum_name, enum_str, &enum_id) == 3) {",66aa79799785bb411e2cb3b1b34f60a4234b083a0392fc964a3583c639e5bd0e
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1596,10,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,	guint32 access;,1eed7c01a308f8dc0608da7a2e57112661495d755c0ebb36b527e163cbcd8fd6
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1606,20,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"					    hfindex, &access);",206c887dbb01eb5ededa3336ca2084940cec68feda4dd776ff91b6abc6ea0c6a
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1619,13,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,	  *perms = access;,38ef2b04254b64efbf8da24efaf258fc995da476336ec7937e60db4495c5aaaf
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1622,64,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	item = proto_tree_add_uint(tree, hfindex, tvb, offset - 4, 4, access);",d5f8927f9e0b0714ffdea64edad242c408603861c53606041ebac5648103485f
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1630,8,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,				   access & GENERIC_RIGHTS_MASK);,ed3568133fb7259455c838ad6e3e44eb84a40177d2de17a96b8f3299bbe227f7
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1637,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1641,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1645,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1649,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1655,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1661,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1667,8,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,				   access & STANDARD_RIGHTS_MASK);,c91b82bc73ff8899ab94c388cf4617e774b0d3d3cd88d79e26f833cbe77605ac
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1674,18,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		offset - 4, 4, access);",577293e09aa95c3559fc42c8ecf902acebc4ba5e6090cac4ad97b88befaf6a85
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1678,18,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		offset - 4, 4, access);",577293e09aa95c3559fc42c8ecf902acebc4ba5e6090cac4ad97b88befaf6a85
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1682,18,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		offset - 4, 4, access);",577293e09aa95c3559fc42c8ecf902acebc4ba5e6090cac4ad97b88befaf6a85
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1686,18,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		offset - 4, 4, access);",577293e09aa95c3559fc42c8ecf902acebc4ba5e6090cac4ad97b88befaf6a85
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1690,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1700,9,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,					   access & SPECIFIC_RIGHTS_MASK);,05ae8ebddcd01dd2ed671ca3c7d2db918c2ef74c4a4258d9be2a82bcac1337f9
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1704,9,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,					   access & SPECIFIC_RIGHTS_MASK);,05ae8ebddcd01dd2ed671ca3c7d2db918c2ef74c4a4258d9be2a82bcac1337f9
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1710,27,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		guint32 mapped_access = access;,ecb322376ed4d7138151ec8b70ff1035f34bfb3a2930152127bac36defe038ad
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1717,36,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"			tvb, offset - 4, specific_tree, access);",4b678be88d95c86266720806c3ea08e2adfa969f8a60e9604883ba70aa71ce7c
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1720,24,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"			map_generic_access(&access, ami->generic_mapping);",5f440365a3094e0e147dadbba1e4c8fe05e75fee507a60e8a31463db39e14377
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1723,25,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"			map_standard_access(&access, ami->standard_mapping);",646b46c934055e62eaa80196fa14c76011177841a7e6162d0264b7f4b941fb56
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1725,7,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		if (access != mapped_access) {,a66cdbaee393ea6776f7dba87e5ca5c559dacd00e66a47cd562d0f7855e4e89e
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1736,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1740,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1744,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1748,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1752,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1756,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1760,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1764,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1768,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1772,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1776,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1780,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1784,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1788,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1792,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.c,1796,3,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		access);,e2e945f4a30977702bde90826ab45268503bb0edc2d430e7c1f0d30f475f614d
wireshark-1.4.15/epan/dissectors/packet-windows-common.h,255,34,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"				   proto_tree *tree, guint32 access);",70f0ddd8e1220ea2d70d97b03458fc264d41f8166cfd7313776934f2ce8d8acd
wireshark-1.4.15/epan/filesystem.c,457,9,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"				if (access(path, X_OK) == 0) {",a7e473c4e82be0e300941a3e6ff636e4cb2eaac4d3265dd191b0adc12631b484
wireshark-1.4.15/epan/ftypes/ftype-pcre.c,155,2,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"	strcpy(buf, fv->value.re->string);",23656fa9ca6ec8a188c825295012dda005f92c34000674b64bfa2987e9f4d5e8
wireshark-1.4.15/epan/ftypes/ftype-pcre.c,290,2,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"	strcpy(buf, g_regex_get_pattern(fv->value.re));",3126733fcdc9c220de397bce783c4ed132cd978f3a9333dfd69ad3cfb9b399da
wireshark-1.4.15/epan/ftypes/ftype-string.c,136,3,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"		strcpy(buf, fv->value.string);",a89d8a8e502570aad0b7685aaba456d5216fa982dfc4642da0a6ab36ec823f93
wireshark-1.4.15/epan/ftypes/ftype-time.c,330,2,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	sprintf(buf, ""\""%s\"""",",c8497d16d7fd8395bd638ea695099838f7323ac9054d06ade725dceba385c62e
wireshark-1.4.15/epan/ftypes/ftype-time.c,347,2,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"	strcpy(buf, rel_time_to_secs_str(&fv->value.time));",c81de00bbda79289e442559c91947ba99613bfa3f08aaa747f5a19171f1bf43e
wireshark-1.4.15/epan/oids.c,51,53,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"#define D(level,args) do if (debuglevel >= level) { printf args; printf(""\n""); fflush(stdout); } while(0)",ce4259a6a88942f65216e0e61cbe08ee48f7cc201855a0458068f6f7d4afab93
wireshark-1.4.15/epan/prefs.c,2958,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_SCROLLBAR_ON_RIGHT "": %s\n"",",3937c593182aa390f529ce17f8175d7da22365b060c9a25edff8b317e3161988
wireshark-1.4.15/epan/prefs.c,2963,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_PLIST_SEL_BROWSE "": %s\n"",",a223db5f48d20c369311602daff1318875a859c23394514dc24178b25abfbc1f
wireshark-1.4.15/epan/prefs.c,2968,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_PTREE_SEL_BROWSE "": %s\n"",",cebb55b2ed04431d7c4d52fe81bab13d23bb0b668fc47a96d82080eaab125edf
wireshark-1.4.15/epan/prefs.c,2973,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_ALTERN_COLORS "": %s\n"",",280d4fbceaf6d5ddc6f07ead722011e116221086d1ea4179ec6937838a2b388e
wireshark-1.4.15/epan/prefs.c,2978,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_FILTER_TOOLBAR_IN_STATUSBAR "": %s\n"",",43b5e9c3b9cd9cda475b5fa1a56524eaa91bcda0b7059df5abacdede1b5b43b2
wireshark-1.4.15/epan/prefs.c,2983,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_PTREE_LINE_STYLE "": %s\n"",",9f31981a48fa749eaa30b27e90fb9114985f0841706958b9f04fd19fcf5f75f9
wireshark-1.4.15/epan/prefs.c,2988,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_PTREE_EXPANDER_STYLE "": %s\n"",",807b9e8e134fa371d6b246115bac714323cab187a4f33eb87f847d715c8d440f
wireshark-1.4.15/epan/prefs.c,2993,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_HEX_DUMP_HIGHLIGHT_STYLE "": %s\n"",",7687da4b33f3e3b42ee56720748510e47d6f66ec3bddf12e95a7f1ee8656ddf5
wireshark-1.4.15/epan/prefs.c,2998,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_TOOLBAR_MAIN_STYLE "": %s\n"",",a6880bc5088d398a8dbdcb8b0c357a8e53fdabfdfc5578b6be427c70838b7329
wireshark-1.4.15/epan/prefs.c,3003,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_TOOLBAR_FILTER_STYLE "": %s\n"",",91399c9c5798ce3829b51c687200d8697f5b126dc494389e2641dd169b25fc4f
wireshark-1.4.15/epan/prefs.c,3008,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_GEOMETRY_SAVE_POSITION "": %s\n"",",49e2775132f95ebd3ca42d28cc374423a977a7f7f202405c59431d54ae039712
wireshark-1.4.15/epan/prefs.c,3013,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_GEOMETRY_SAVE_SIZE "": %s\n"",",65a85f55b3f3e6eae9c4e0f0fee5b282c74c5a87742fdc57ec05b59997137267
wireshark-1.4.15/epan/prefs.c,3018,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_GEOMETRY_SAVE_MAXIMIZED "": %s\n"",",899a91d2d78a9eb09e2bd7fbe5e985d17d3ab14d93fd0301389e0ce8191072fc
wireshark-1.4.15/epan/prefs.c,3023,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_MACOSX_STYLE "": %s\n"",",c64c69cda86c7225dd7421354fed6f70ce39d479786d6362fbe26bff426e8a75
wireshark-1.4.15/epan/prefs.c,3028,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_CONSOLE_OPEN "": %s\n"",",ec59a82f50123b5e4db30ea1a3aa78caa1366101f77c38b050d16cdbb91e501a
wireshark-1.4.15/epan/prefs.c,3033,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_RECENT_DF_ENTRIES_MAX "": %d\n"",",0d29dc32fca16c17051a2aed0ab50a4e637a21eafbb5510d8b4f49d01d30439e
wireshark-1.4.15/epan/prefs.c,3038,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_RECENT_COUNT_MAX "": %d\n"",",1023b4441e460320b4a7df90ac678d176a9c229c32c40c9899f6598c8d8147e7
wireshark-1.4.15/epan/prefs.c,3043,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_FILEOPEN_STYLE "": %s\n"",",d567fceaa0cb11e2a687dafb527705d5c3f5cf93d545b502c875fc8058b779a6
wireshark-1.4.15/epan/prefs.c,3048,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(pf, PRS_GUI_FILEOPEN_DIR "": %s\n"",",9ae01e1dd2b69b98a9e8c7ddd3b1ab4dfe682b119c7786b366c62fb63edf1206
wireshark-1.4.15/epan/prefs.c,3054,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_FILEOPEN_PREVIEW "": %d\n"",",d184a4623eddc945e8d32eb3e1b9aae8b232c272f9bd9a08a5b7490fdd023141
wireshark-1.4.15/epan/prefs.c,3059,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_ASK_UNSAVED "": %s\n"",",6d27a45982458ef120c9aac9f2bccef06d8b7a33a8bdd864836cf8dfc9c34509
wireshark-1.4.15/epan/prefs.c,3064,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_FIND_WRAP "": %s\n"",",4421596e11a8d5be5a3c3c436d854aac360eb32aa3ebc85666b520a1a967dcc1
wireshark-1.4.15/epan/prefs.c,3069,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_USE_PREF_SAVE "": %s\n"",",459de3589621522a46e6b8d597f4b4b28eb50fe5f32cf0fd0fb0f3fe092c5682
wireshark-1.4.15/epan/prefs.c,3074,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_WEBBROWSER "": %s\n"", prefs.gui_webbrowser);",6f49b58eb5ef3d244e6aae27d7db133887c470df31e3232a5cbab02511e7ebb1
wireshark-1.4.15/epan/prefs.c,3077,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_WINDOW_TITLE "": %s\n"",",7165cb09b0d42960384723cc1bf4f3b4d43719e2b98e1e89c0db71a2304be799
wireshark-1.4.15/epan/prefs.c,3081,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_START_TITLE "": %s\n"",",11516d06459739dee8859957365ec5a1e8ca5d3b1b8b160dda3f6d7c77870865
wireshark-1.4.15/epan/prefs.c,3086,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_VERSION_IN_START_PAGE "": %s\n"",",407188303c8989de824ba5e76b551dbea88e9fc279a531ae1da1e9c5831e24b5
wireshark-1.4.15/epan/prefs.c,3092,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_LAYOUT_TYPE "": %d\n"",",f5bf5c5edbd0b704a683b698677155d76a6fe5071e3a8bdfe7efbadffeffa3b6
wireshark-1.4.15/epan/prefs.c,3097,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_LAYOUT_CONTENT_1 "": %s\n"",",4aaf7d701f41f631b7b41b18686d99ab76a9d0b4912e00575864fbeb29f18897
wireshark-1.4.15/epan/prefs.c,3099,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_LAYOUT_CONTENT_2 "": %s\n"",",c43d130b7639f70060ee405fc92856d49308ef7131df705b7f58c763ddbe675d
wireshark-1.4.15/epan/prefs.c,3101,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_LAYOUT_CONTENT_3 "": %s\n"",",212c000239a8a757613698bd4b8f2c5541b7b6fe8502f3fea9722dac590bdbfc
wireshark-1.4.15/epan/prefs.c,3144,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_GUI_FONT_NAME_2 "": %s\n"", prefs.gui_font_name);",2998f57cc237a7e69a293c4768ab16a97854555d7d1c16f898aef2af9faa342d
wireshark-1.4.15/epan/prefs.c,3211,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_CONSOLE_LOG_LEVEL "": %u\n"",",c1fa1a2b6e4d00ad846d3b14689d5fc2a89df1406c7e0e4cc34415f5c9f28f90
wireshark-1.4.15/epan/prefs.c,3218,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(pf, PRS_CAP_DEVICE "": %s\n"", prefs.capture_device);",f27105c8e96d1cfb1c4826c1c48dec6e04d8a229792af6f1ddd714eb6d901af3
wireshark-1.4.15/epan/prefs.c,3225,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(pf, PRS_CAP_DEVICES_LINKTYPES "": %s\n"", prefs.capture_devices_linktypes);",644dd47e2e85bc3534b71876012c16a7a578c3ade709257c18ee9f0dc824b750
wireshark-1.4.15/epan/prefs.c,3231,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(pf, PRS_CAP_DEVICES_DESCR "": %s\n"", prefs.capture_devices_descr);",2995dfc51234f6831c80a9b2f5d43f2db21bc482f05809068ad089dd7ad4dcfe
wireshark-1.4.15/epan/prefs.c,3237,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(pf, PRS_CAP_DEVICES_HIDE "": %s\n"", prefs.capture_devices_hide);",83e335da3b611d3c0ca4296966720211bd610aa267acab5b7ac10d81b9b87656
wireshark-1.4.15/epan/prefs.c,3243,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(pf, PRS_CAP_DEVICES_MONITOR_MODE "": %s\n"", prefs.capture_devices_monitor_mode);",2a72344e30936b62988e600590734624cd5d78bf311e11e7dca9147b9a6a112e
wireshark-1.4.15/epan/prefs.c,3248,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_CAP_PROM_MODE "": %s\n"",",9315657919fb9c37a2be31a47171d872f4080c1ac2345049a2e3cc79ca5ccdc7
wireshark-1.4.15/epan/prefs.c,3253,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_CAP_PCAP_NG "": %s\n"",",5b03ef70e4bb641b821fd6f3d246a01aba42353158fbd67c1c2255c19633f335
wireshark-1.4.15/epan/prefs.c,3258,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_CAP_REAL_TIME "": %s\n"",",bdafde8487a4157d0c4446462a545c452ccccc4bb8b4e8e57746d5196e8e8404
wireshark-1.4.15/epan/prefs.c,3263,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_CAP_AUTO_SCROLL "": %s\n"",",d1573f5e4a59e48da4c43c3bd59a1fb3e7545703c0adcc82435e7cd78d3dfaca
wireshark-1.4.15/epan/prefs.c,3268,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_CAP_SHOW_INFO "": %s\n"",",edf218ba96751e3763c50a31043f5805b2d758b0c8e2986825a3bcce00ef334e
wireshark-1.4.15/epan/prefs.c,3291,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_NAME_RESOLVE "": %s\n"",",ce1a003e42afe3f885853dcb3d4065f3ad55774eb033042b9738a535034370b8
wireshark-1.4.15/epan/prefs.c,3296,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_NAME_RESOLVE_CONCURRENCY "": %d\n"",",bf81f878bfcec959452c19216ae8bf36fde2949530334b7f61707c739f088c3a
wireshark-1.4.15/epan/prefs.c,3301,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_NAME_RESOLVE_LOAD_SMI_MODULES "": %s\n"",",c581175cdef273a2ff2aed6ea9c4610d49916cac3335c3f3254e1e9e278482da
wireshark-1.4.15/epan/prefs.c,3306,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_NAME_RESOLVE_SUPPRESS_SMI_ERRORS "": %s\n"",",67fa3dd5fdf9d56854a56550b5292d5fd1fb26c292b5125e992b30f0357b47bc
wireshark-1.4.15/epan/prefs.c,3313,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_TAP_UPDATE_INTERVAL "": %d\n"",",7ac166f8de24384d866f3c42dca20559bb05ef4bf9ffc71680ea0e7a890207a3
wireshark-1.4.15/epan/prefs.c,3317,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_RTP_PLAYER_MAX_VISIBLE "": %d\n"",",c24a45a4f898575c95fffc59350b841a167cd0e0d03bd3772bf254e2688eb43f
wireshark-1.4.15/epan/prefs.c,3324,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(pf, PRS_DISPLAY_HIDDEN_PROTO_ITEMS "": %s\n"",",21f0b1d7f619051a6a7e08283a1ef8681df01629e37027b9c2247d75b0058ba1
wireshark-1.4.15/epan/proto.c,1094,2,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	vprintf(format, ap);",74ef73f9ef8e838fea6452960cae92146c288c7b215c3bd217bd5aa29ec623ba
wireshark-1.4.15/epan/proto.c,6833,2,4,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",,CWE-120,"	strcat(str,hf_field->name);",00ced25a5a9582cb37985862087bb28724aa75288ec88db69266e483b7f3b8e7
wireshark-1.4.15/epan/proto.c,6959,2,4,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",,CWE-120,"	strcat(str,hf_field->name);",00ced25a5a9582cb37985862087bb28724aa75288ec88db69266e483b7f3b8e7
wireshark-1.4.15/epan/radius_dict.c,2769,128,4,crypto,crypt,"The crypt functions use a poor one-way hashing algorithm; since they only accept passwords of 8 characters or fewer and only a two-byte salt, they are excessively vulnerable to dictionary attacks given today's faster computing equipment (CWE-327)","Use a different algorithm, such as SHA-256, with a larger, non-repeating salt",,CWE-327,"void add_attribute(const gchar* name, const  gchar* codestr, radius_attr_dissector_t type, const  gchar* vendor_name, gboolean crypt, gboolean tagged, const gchar* current_attr) {",a084e88ba0d8965930436c14d49c918deb43350f30f9b188e92460f003c406a3
wireshark-1.4.15/epan/radius_dict.c,2807,15,4,crypto,crypt,"The crypt functions use a poor one-way hashing algorithm; since they only accept passwords of 8 characters or fewer and only a two-byte salt, they are excessively vulnerable to dictionary attacks given today's faster computing equipment (CWE-327)","Use a different algorithm, such as SHA-256, with a larger, non-repeating salt",,CWE-327,	a->encrypt = crypt;,4e324966cb8cc4bf80a48a2950e42fac69d60ebb48b597eaee40d8770b54b157
wireshark-1.4.15/epan/reassemble_test.c,67,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, format, ap);",ccd105b82ded0f97a751df504c97e7c1fecb6887ebafaa47e47f192c4495f4c4
wireshark-1.4.15/epan/reassemble_test.c,1067,5,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    printf(failure?""FAILURE\n"":""SUCCESS\n"");",d1faab38e78f161aef7e334a30df235f9b390f2b51b4ed8b5a6a29f97df88652
wireshark-1.4.15/epan/tcap-persistentdata.c,154,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-1.4.15/epan/to_str.c,983,5,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"    strcpy(p, truedesc);",e7e0e7ff46f3d7f3bd976813c700639922310c39958c1a2558506f37e2eb9736
wireshark-1.4.15/epan/to_str.c,985,5,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"    strcpy(p, falsedesc);",d0f6aa051cfd352dd826831c38b5258dcb30fe469332bfe131badeda067c8b11
wireshark-1.4.15/gtk/capture_dlg.c,1452,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf (rf, RECENT_KEY_REMOTE_HOST "": %s,%s,%d\n"", ri->remote_host, ri->remote_port, ri->auth_type);",b1c6c3f3d2ea0e2102c4639aa02f0fe821ca698c184178a90345293af1aa3590
wireshark-1.4.15/gtk/cfilter_combo_utils.c,76,8,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"       fprintf (rf, RECENT_KEY_CAPTURE_FILTER "": %s\n"", (char *)li->data);",54d772e2606e73a6fb7adffc8b2468f702351d6f63c47c72f190c532ee920d76
wireshark-1.4.15/gtk/graph_analysis.c,317,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"		fprintf(of, CONV_TIME_HEADER);",d854817c52b21713dfde3654b3a27af80412cb4b7b9eb3e6c56b6d97162c7162
wireshark-1.4.15/gtk/graph_analysis.c,322,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"		fprintf(of, TIME_HEADER);",d9841ec9eef29e02e91bb502370ba2f1dac36170e8b0f0c4c2bceb0ec3120e84
wireshark-1.4.15/gtk/main.c,1240,3,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  printf(PACKAGE "" "" VERSION ""%s\n""",d5c722b2e353949afd6d4b3ef322b04538bdce10220dda982a2187393ad2196a
wireshark-1.4.15/gtk/main.c,1267,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-1.4.15/gtk/main_filter_toolbar.c,372,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"			fprintf (rf, RECENT_KEY_DISPLAY_FILTER "": %s\n"", filter_str);",abf15d351dc1516647c703e4d9ea8888b8639da97ace09b83da9b16360a858e5
wireshark-1.4.15/gtk/main_filter_toolbar.c,386,13,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"            fprintf (rf, RECENT_KEY_DISPLAY_FILTER "": %s\n"", (char *)li->data);",659881adb2dd9b605126985910852c760088544abccdbf7208bcc557c3bc2ddf
wireshark-1.4.15/gtk/menus.c,2177,17,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                fprintf (rf, RECENT_KEY_CAPTURE_FILE "": %s\n"", u3_contract_device_path(cf_name));",7c54d894872464f5408bd54750dc64a37dc581d6127a47d11bbc3bac48c4de60
wireshark-1.4.15/gtk/menus.c,2179,17,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                fprintf (rf, RECENT_KEY_CAPTURE_FILE "": %s\n"", cf_name);",6ccb94179f447844ac785c66d92e64b71d739f39835a732afac25e9717256fb5
wireshark-1.4.15/gtk/recent.c,208,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_X "": %d\n"", recent.gui_geometry_main_x);",246696fac19d2349744476eba8dab391be24ac982cb34d0cbb0cf1466a89e656
wireshark-1.4.15/gtk/recent.c,209,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_Y "": %d\n"", recent.gui_geometry_main_y);",19bae5006af09d0c16bc69da6bebf6516cb69e273f6e8db440e2429726dfd8fe
wireshark-1.4.15/gtk/recent.c,210,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_WIDTH "": %d\n"",",1ebd18abd5e18dadc97b4ef80177184c471b6a411d4758f4eb87a464f5a5cc09
wireshark-1.4.15/gtk/recent.c,212,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_HEIGHT "": %d\n"",",5339a413b42a8e33383f199813e7b74f180835542a3bcb2ed8df61f75a7ac1e0
wireshark-1.4.15/gtk/recent.c,217,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_MAXIMIZED "": %s\n"",",a6e3b53307717afc40be3e444f02daa1fa80796e061290ce5ba3b58ad2a24758
wireshark-1.4.15/gtk/recent.c,223,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY_STATUS_PANE_LEFT "": %d\n"",",471e830f0123c48adc385843203986a2ec647492c2bdeef6d624089711678ec1
wireshark-1.4.15/gtk/recent.c,229,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY_STATUS_PANE_RIGHT "": %d\n"",",03831d9b49869f5332882701c9d7c442bfc840521599b9bfc7549f42b5c1d63b
wireshark-1.4.15/gtk/recent.c,234,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_LAST_USED_PROFILE "": %s\n"", get_profile_name());",0a3994299327eadfea2f57e77051cb0d2e17340f54c663e4dd630710606b5bb2
wireshark-1.4.15/gtk/recent.c,238,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY_WLAN_STATS_PANE "": %d\n"",",4e496dde5d15049b76e1cb8f7fddd6628b96231634418c7ae9633cf09db56764
wireshark-1.4.15/gtk/recent.c,243,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_KEY_PRIVS_WARN_IF_ELEVATED "": %s\n"",",4366d81fa7f0d7967649deb0da95c1c1d8342d7744b5377613a5b4e0003fe991
wireshark-1.4.15/gtk/recent.c,248,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_KEY_PRIVS_WARN_IF_NO_NPF "": %s\n"",",d732faafd26da730e1c8578fc0c1b712e4ef4d986bd2bca75df151ebb0531b54
wireshark-1.4.15/gtk/recent.c,308,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_KEY_MAIN_TOOLBAR_SHOW "": %s\n"",",3115762a2ab5b524fb1b7c6d763e2f119af8dba232acd2b0daf8ca17c10cf599
wireshark-1.4.15/gtk/recent.c,313,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_KEY_FILTER_TOOLBAR_SHOW "": %s\n"",",ed2bed09689ff63d1664ef57f0bcbd14993a28cd930bce533bc65e12f71f87b7
wireshark-1.4.15/gtk/recent.c,319,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_KEY_AIRPCAP_TOOLBAR_SHOW "": %s\n"",",46684f5bea3c0297340d9296f4e3c117e55a80d5dbdef1dcd7a9a2b615ec96f6
wireshark-1.4.15/gtk/recent.c,326,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_KEY_DRIVER_CHECK_SHOW "": %s\n"",",f32cb7d7f28224842589297563a2d3ff730585a324b4c027fac469e4d8d6088c
wireshark-1.4.15/gtk/recent.c,332,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_KEY_PACKET_LIST_SHOW "": %s\n"",",177ca9b9a4423100da58bbc65f44bac684b8523dddb3fea306514276bca43d4a
wireshark-1.4.15/gtk/recent.c,337,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_KEY_TREE_VIEW_SHOW "": %s\n"",",3241b5e0233f1e5aeceefdd3818aaa283b993fa3006567466ffd5b2e3866bd36
wireshark-1.4.15/gtk/recent.c,342,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_KEY_BYTE_VIEW_SHOW "": %s\n"",",0bf50ae18814be456bb032a7dbd09a22bc5ec7d1014aff9592c907003d22b4ba
wireshark-1.4.15/gtk/recent.c,347,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_KEY_STATUSBAR_SHOW "": %s\n"",",4e772cbbad9e023a55cfbc5210db0b5e94d769bbfb47e634c5659e323f92fda2
wireshark-1.4.15/gtk/recent.c,352,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_KEY_PACKET_LIST_COLORIZE "": %s\n"",",bf689e238298259fef18cfed8f2cd71a069e7c4b02f202d46ce8a405a74792e5
wireshark-1.4.15/gtk/recent.c,357,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_TIME_FORMAT "": %s\n"",",0f71a47a39a76b27a69bd071f9936681a91097bb554345e029a6995960b5aa3b
wireshark-1.4.15/gtk/recent.c,362,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_TIME_PRECISION "": %s\n"",",8d7e74b161ea2595352404d297e3d70646fcd1f0ad524505295fd791953f4013
wireshark-1.4.15/gtk/recent.c,367,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_SECONDS_FORMAT "": %s\n"",",7c5f5e4bf03278abbc311b785f0fa0406fb807a77dee27c7ff4d8823afffd12c
wireshark-1.4.15/gtk/recent.c,372,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_ZOOM_LEVEL "": %d\n"",",88f4fb19eb360e1582853b0b51cad7daece5025530c7a9ef28109ea0a1004b24
wireshark-1.4.15/gtk/recent.c,377,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_BYTES_VIEW "": %d\n"",",ad21f55aa4edd18c81c9a593a85408fffe0843472c7102ae6200d27b7606560d
wireshark-1.4.15/gtk/recent.c,383,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_UPPER_PANE "": %d\n"",",0442809ed8a9af95f46655c2ca3a699e6027bba02d14b3935ec6b1185d8e3380
wireshark-1.4.15/gtk/recent.c,389,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_LOWER_PANE "": %d\n"",",db445b419a4398b207998beb4a07f00a2e74256deac10220b80a63b111faf1ee
wireshark-1.4.15/gtk/recent.c,405,7,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"      fprintf(rf, RECENT_GUI_FILEOPEN_REMEMBERED_DIR "": %s\n"", u3_contract_device_path(get_last_open_dir()));",6844ab751b4d4776eefaa4a9fe0680dc3b9235954425eb3d30862abf26ea0347
wireshark-1.4.15/gtk/recent.c,407,7,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"      fprintf(rf, RECENT_GUI_FILEOPEN_REMEMBERED_DIR "": %s\n"", get_last_open_dir());",a65d89677cced2cc208005cde84b95b0eb2fde24b6e6ffb02fa14ce3448aa791
wireshark-1.4.15/gtk/recent.c,428,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY ""%s.x: %d\n"", geom->key, geom->x);",d0465a5ad801d0c58d9a27aa6a1d186374ad281516bc9d2864b09a3295ed4038
wireshark-1.4.15/gtk/recent.c,429,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY ""%s.y: %d\n"", geom->key, geom->y);",6ac4758deeb11d505e7968ff8e471594925c93fb836449dcf41693db70c39832
wireshark-1.4.15/gtk/recent.c,430,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY ""%s.width: %d\n"", geom->key,",4e9a7706a202360875428e2c0a708e0fa13566a1fcdb3b70df9241255bb68d83
wireshark-1.4.15/gtk/recent.c,432,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY ""%s.height: %d\n"", geom->key,",f8e60ed2494a64b1bed11959b5a7d9e33bc08d5bc6a220f9668efc5f615ee6d1
wireshark-1.4.15/gtk/recent.c,436,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY ""%s.maximized: %s\n"", geom->key,",6ffb6c79972e36ccaf3254be2548750d24eaac119871c37729d8185f1c836f15
wireshark-1.4.15/gtk/webbrowser.c,123,18,4,shell,ShellExecute,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"  return ((gint) ShellExecute (HWND_DESKTOP, _T(""open""), utf_8to16(url), NULL, NULL, SW_SHOWNORMAL) > 32);",7db3272061d68de59d900a283a5c918b0b5c57834698e55b9b4455774bcd5b28
wireshark-1.4.15/gtk/webbrowser.c,329,16,4,shell,ShellExecute,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"  ret = (gint) ShellExecute (HWND_DESKTOP, _T(""explore""), utf_8to16(xpath), NULL, NULL, SW_SHOWNORMAL);",bdf526018016e150658f1621c2756e9e60082a39e7d0d9a81d38a80848c70b9f
wireshark-1.4.15/packaging/macosx/ScriptExec/main.c,246,5,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"    system(""test -d \""$HOME/.wireshark\"" || mkdir \""$HOME/.wireshark\""; """,f0c8b0dac7765ded8f5ea9e9ae73982e620adade7f1423bc347f600d3e2a35f2
wireshark-1.4.15/packaging/macosx/ScriptExec/main.c,329,5,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"    strcpy((char *)&scriptPath, str);",0d6040a0a662842d32a3af8ac16ccaf550e12213be1e9373c1246f14c83f4e55
wireshark-1.4.15/packaging/macosx/ScriptExec/main.c,334,5,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"    strcpy((char *)&openDocPath, str);",cd35688e624aa263ae6d7d97c8eb04e91f310fd6667043cf64bef7bb29340bff
wireshark-1.4.15/packaging/macosx/ScriptExec/main.c,463,9,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"    if (access(path, F_OK) == -1) return false;",678ed0d834b7e90ec6d07eb72f16f88c1c08841590a30ae57b95bbdb8835ff86
wireshark-1.4.15/packaging/macosx/ScriptExec/main.c,533,13,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"            strcpy(fileArgs[numArgs++], (char *)&path);",a5b6153cb42806d43d8266628bd37d736a0888429d340e4f668ee99ec6bd675e
wireshark-1.4.15/plugins/wimaxasncp/wimaxasncp_dict.c,2782,17,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	if (debugging) vfprintf(stderr, fmt, ap);",942c4caae03cca72f49f78ee892e9fe8a8283cfd69231cd6c1f7a6f2728515c7
wireshark-1.4.15/print.c,112,8,4,shell,popen,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"		fh = popen(dest, ""w"");",b33836834fddb03e42363fd6df285cf095e772d43792c49e3d373713b011117b
wireshark-1.4.15/rawshark.c,1546,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(stderr, file_open_error_message(err, for_writing), filename);",e69ca8d332d0deae88e3f2bee60a43d891aec19018911a0c126cf51a8ad0ec07
wireshark-1.4.15/rawshark.c,1599,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, msg_format, ap);",86136173c58c733984fb74a144954a9280a9688dd7f7e33902cc12829176cb6b
wireshark-1.4.15/rawshark.c,1633,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-1.4.15/rawshark.c,1647,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-1.4.15/tap-bootpstat.c,77,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	printf( format, data->name, data->packets);",b7de7110e1e2ea672bb9307db084725129cd70d776d89a48868fbff4d48823e3
wireshark-1.4.15/tap-httpstat.c,142,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	printf( format, data->response, data->packets); 		",5c1db3ad01a8cc6896674ee1b826c63923b04636c21d797f3f4cb356f4a47356
wireshark-1.4.15/tap-httpstat.c,155,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	printf(format,  data->response_code, data->name, data->packets );",add6c0c29c2e7d11909b9544bbe72aa5973546dca280a4dc486f258716ce6288
wireshark-1.4.15/tap-sipstat.c,189,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	printf( format, data->response, data->packets);",5c1db3ad01a8cc6896674ee1b826c63923b04636c21d797f3f4cb356f4a47356
wireshark-1.4.15/tap-sipstat.c,201,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	printf(format,  data->response_code, data->name, data->packets );",add6c0c29c2e7d11909b9544bbe72aa5973546dca280a4dc486f258716ce6288
wireshark-1.4.15/tap-wspstat.c,75,3,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"		printf(format, *key, data->packets ,data->name);",8e9a0bd93af6ff8c93f96e41a0b8f9b5b7c7ac3685d66555213ac3df69b1e916
wireshark-1.4.15/tools/lemon/lemon.c,61,12,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,extern int access();,b77946c61776e217e7478832760b52bacfb7246eeea3dafa51f6d1a076658ead
wireshark-1.4.15/tools/lemon/lemon.c,277,26,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  __attribute__((format (printf, 3, 4)));",919789de08c93ecf2b7efba458a9c13469821851ca15f67286054e1e9da50df5
wireshark-1.4.15/tools/lemon/lemon.c,1347,3,4,format,vsprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"  vsprintf(errmsg,format,ap);",dae72be2d08fa9c717aedf5b996695439147510328973707ff35a0ad085d9a32
wireshark-1.4.15/tools/lemon/lemon.c,1401,3,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"		strcpy(new_string, fullname);",2413cf777b5c2eaa4f6e7e0d9103875a5d46c0e20415f934e41e6f2a14dbf50b
wireshark-1.4.15/tools/lemon/lemon.c,1407,3,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"		strcpy(new_string, cp);",0056d7df37f8320339f9d8b1190d7ad25ca71af439c24d5e1fe5acf6ff6542b7
wireshark-1.4.15/tools/lemon/lemon.c,1433,3,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"  strcpy(*paz, z);",6dad08f3563c234526b0ab18c1cc61653943936643f1b65848567cff0b2d1b3c
wireshark-1.4.15/tools/lemon/lemon.c,2775,3,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"  strcpy(name,pattern);",ad72630cb34314a1701266cacd94206b361000fb913f894d31aa14646f15b099
wireshark-1.4.15/tools/lemon/lemon.c,2778,3,4,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",,CWE-120,"  strcat(name,suffix);",06f1b05098cdcb42849a58e68957dba0aee2def2f71ac24e63cca343e72d74b7
wireshark-1.4.15/tools/lemon/lemon.c,2816,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"	  strcpy(lemp->outname, lemp->outdirname);",012841750b692676cd6ac01907bfc81efbe21a9cc415981dfc057cc730f7bccb
wireshark-1.4.15/tools/lemon/lemon.c,2822,4,4,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",,CWE-120,"	  strcat(lemp->outname, name);",3201babf37cca011aa233277858113a4a64b6d4e52417844af106b51f7fb2496
wireshark-1.4.15/tools/lemon/lemon.c,3053,16,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"    if( path ) sprintf(path,""%s/%s"",argv0,name);",912f9a59edefba46c507dc58bffdb7d20567efe71db02fe5df368dcde88c2342
wireshark-1.4.15/tools/lemon/lemon.c,3065,9,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"        sprintf(path,""%s/%s"",pathlist,name);",7f3a1673eb43602fb312e9681936704824591aa414619504ccd8cce395715188
wireshark-1.4.15/tools/lemon/lemon.c,3069,13,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"        if( access(path,modemask)==0 ) break;",42f3a31967e7f279bc896db34f04e0cb4ec69a94c0ac41bf6bc5db4554f8c260
wireshark-1.4.15/tools/lemon/lemon.c,3145,6,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	    sprintf(buf,""%s.lt"",lemp->filename);",59f374233f39336c55424f93a6689d9df954d2f73f17e941f8159c4e9f793a84
wireshark-1.4.15/tools/lemon/lemon.c,3147,8,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	  if( access(buf,004)==0 ){",493c4f19c32d5ef82655e1687252a057dbb4607b5951e89793a19f18217ac581
wireshark-1.4.15/tools/lemon/lemon.c,3149,14,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	  }else if( access(templatename,004)==0 ){",35adb62c9859f8b74f20de69a141d3399b59c567858df239190f8f4f103d625f
wireshark-1.4.15/tools/lemon/lemon.c,3301,7,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"      strcpy(&z[used], zInt);",db74c025365e52691acea917a64fe6199b3dbb992cb0b4b663d058179412995d
wireshark-1.4.15/tools/lemon/lemon.c,3518,7,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"      strcpy(types[hash],stddt);",6b138087bcaa3da1b947e4e3fb01b1a780ebdd7d4f57423c96f5f1188f3942b7
wireshark-1.4.15/tools/lemon/lemon.c,3900,5,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"    sprintf(line,""\""%s\"","",lemp->symbols[i]->name);",bbbc5294fcbb661fab2a01db57695e07eb61b422f34f66941a756c6387ded4f2
wireshark-1.4.15/tools/lemon/lemon.c,4055,7,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"      sprintf(pattern,""#define %s%-30s %2d\n"",prefix,lemp->symbols[i]->name,i);",bd7d6e0d19d74ed22b2038cdcb95b2aba33ded5d6ebe889cad0ca6c9a11852c3
wireshark-1.4.15/tools/lemon/lemon.c,4279,5,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"    strcpy(z,y);",dc2a854bcc3c8d8b7719b726d646ec1121d5fd2af8712fa1942ffd1674665cd8
wireshark-1.4.15/tshark.c,2973,7,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"      sprintf(line_bufp + buf_offset, ""%3s"", cf->cinfo.col_data[i]);",dabdc139d9d6b0d1edb3ee1d9cc20b29c297d1e636c32f2db31efe1c5c5c9b13
wireshark-1.4.15/tshark.c,2984,7,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"      sprintf(line_bufp + buf_offset, ""%10s"", cf->cinfo.col_data[i]);",41181e2cc3c11226a37591684e26125102181b4fae03ed08df0a528c589b2bf5
wireshark-1.4.15/tshark.c,3000,7,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"      sprintf(line_bufp + buf_offset, ""%12s"", cf->cinfo.col_data[i]);",925f6155ca902e224763f1ab588ab668bbb09cae77b18f9fad4e7ded7d4bfd7c
wireshark-1.4.15/tshark.c,3016,7,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"      sprintf(line_bufp + buf_offset, ""%-12s"", cf->cinfo.col_data[i]);",056c6aef6147b2db9ea6b49e859bbbf8f5c657f42535e19a78c68278d1a99992
wireshark-1.4.15/tshark.c,3022,7,4,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",,CWE-120,"      strcat(line_bufp + buf_offset, cf->cinfo.col_data[i]);",bcda0124edd036f9aa63a3d2deaea11a6c52a086c2ff87ba570e2a87f6b052d2
wireshark-1.4.15/tshark.c,3497,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(stderr, file_open_error_message(err, for_writing), filename);",e69ca8d332d0deae88e3f2bee60a43d891aec19018911a0c126cf51a8ad0ec07
wireshark-1.4.15/tshark.c,3509,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, msg_format, ap);",86136173c58c733984fb74a144954a9280a9688dd7f7e33902cc12829176cb6b
wireshark-1.4.15/tshark.c,3540,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-1.4.15/tshark.c,3575,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-1.4.15/wiretap/ascend.c,932,21,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,#  define YYFPRINTF fprintf,3081513f6d5b8478741bf9545c0ef772dc8cde67f802ca2075b6bc345156c38c
wireshark-1.4.15/wiretap/k12.c,59,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(dbg_out, fmt, ap);",9ff284965e7641566b6b6e764acebd75e7a0fccb5c9d9324b6e5417b1cae41bf
wireshark-1.4.15/capinfos.c,834,17,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt(argc, argv, ""tEcs"" FILE_HASH_OPT ""dluaeyizvhxoCALTRrSNqQBmb"")) !=-1) {",c7fa34fb270ab02d61ca99cb5ceb2cb7fa0e07ea4b83c668b864b381c888385b
wireshark-1.4.15/capture_sync.c,562,9,3,shell,CreateProcess,This causes a new process to execute and is difficult to use safely (CWE-78),"Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run",,CWE-78,"    if(!CreateProcess(NULL, utf_8to16(args->str), NULL, NULL, TRUE,",aff79eddad9e0d7c4008d077000fb466d47259be560fa6e0952cbaca2dbac94d
wireshark-1.4.15/capture_sync.c,562,9,3,shell,CreateProcess,This causes a new process to execute and is difficult to use safely (CWE-78),"Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run",,CWE-78,"    if(!CreateProcess(NULL, utf_8to16(args->str), NULL, NULL, TRUE,",aff79eddad9e0d7c4008d077000fb466d47259be560fa6e0952cbaca2dbac94d
wireshark-1.4.15/capture_sync.c,762,9,3,shell,CreateProcess,This causes a new process to execute and is difficult to use safely (CWE-78),"Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run",,CWE-78,"    if(!CreateProcess(NULL, utf_8to16(args->str), NULL, NULL, TRUE,",aff79eddad9e0d7c4008d077000fb466d47259be560fa6e0952cbaca2dbac94d
wireshark-1.4.15/capture_sync.c,762,9,3,shell,CreateProcess,This causes a new process to execute and is difficult to use safely (CWE-78),"Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run",,CWE-78,"    if(!CreateProcess(NULL, utf_8to16(args->str), NULL, NULL, TRUE,",aff79eddad9e0d7c4008d077000fb466d47259be560fa6e0952cbaca2dbac94d
wireshark-1.4.15/dumpcap.c,3517,17,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt(argc, argv, OPTSTRING)) != -1) {",7ac551987c23c83f8f7593ad94ec2dc261d94dc62918c96722326b3cca84745d
wireshark-1.4.15/editcap.c,824,17,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt(argc, argv, ""A:B:c:C:dD:E:F:hrs:i:t:S:T:vw:"")) !=-1) {",8af7cd64b4d6950467b8f14408969583aaa501f8dbbf6ef4985729f84e0a92f4
wireshark-1.4.15/editcap.c,835,7,3,random,srand,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,      srand( (unsigned int) (time(NULL) + getpid()) );,d7536a0205ba8cedee976ec226489e2256ac8314f4943efe964eead5928e7c5a
wireshark-1.4.15/epan/dissectors/packet-diameter.c,1352,29,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	gboolean do_debug_parser = getenv(""WIRESHARK_DEBUG_DIAM_DICT_PARSER"") ? TRUE : FALSE;",ae4ba498005ef67ca1a47aa9ca40899cea77b8f7b301f81380ed8a19727b88b7
wireshark-1.4.15/epan/dissectors/packet-diameter.c,1353,26,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	gboolean do_dump_dict = getenv(""WIRESHARK_DUMP_DIAM_DICT"") ? TRUE : FALSE;",2da76190374c24a11be5291b1369b55dfae9a560c866e85662048797fd469de9
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,13571,9,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  tmp = getenv(""WIRESHARK_WEPKEYNUM"");",d9a001dd6d810d15d6ca1ed060fb5683e08d7ca2046eb11a2aff48e72a8d2672
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,13602,11,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",    tmp = getenv(buf);,623a9707af3eb521510c22020b359d861f22913cb71feeddfb3db6688b40894b
wireshark-1.4.15/epan/dissectors/packet-smb.h,362,26,3,random,setstate,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"    int offset, gboolean setstate);",5ea724681be020d59f68800c846ff56cea292c3e024f3c6374f861f8a753e165
wireshark-1.4.15/epan/emem.c,169,24,3,random,g_rand_int_range,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"		canary[i] = (guint8) g_rand_int_range(rand_state, 1, 0x100);",e2e0013bbc176af0123e0689b6aadac6906bbbe44407db13533764e8b710fa73
wireshark-1.4.15/epan/emem.c,280,36,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	ep_packet_mem.debug_use_chunks = (getenv(""WIRESHARK_DEBUG_EP_NO_CHUNKS"") == NULL);",81b585c7ed778b25f09b2ef32bbface4195f0655f67b4bf9bbebc027950eb3da
wireshark-1.4.15/epan/emem.c,281,70,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	ep_packet_mem.debug_use_canary = ep_packet_mem.debug_use_chunks && (getenv(""WIRESHARK_DEBUG_EP_NO_CANARY"") == NULL);",f814114553655779b438e7d4aa7a669ae711bfd92b9d6abc0610c3ff5b175ecb
wireshark-1.4.15/epan/emem.c,284,29,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	intense_canary_checking = (getenv(""WIRESHARK_DEBUG_EP_INTENSE_CANARY"") != NULL);",46b0c11dff85b1eff2f28f3c970bcb95059a60894b2937c118e7729efa5c6037
wireshark-1.4.15/epan/emem.c,301,36,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	se_packet_mem.debug_use_chunks = (getenv(""WIRESHARK_DEBUG_SE_NO_CHUNKS"") == NULL);",85ff28e2ed9d2500e5ebd81de3f2046c18c96de7430fde93b83093db60497c1a
wireshark-1.4.15/epan/emem.c,302,70,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	se_packet_mem.debug_use_canary = se_packet_mem.debug_use_chunks && (getenv(""WIRESHARK_DEBUG_SE_USE_CANARY"") != NULL);",a923922b3c88ff224571f7b2742b46300233f2925eae203c9534dffea5cf010c
wireshark-1.4.15/epan/emem.c,317,6,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	if (getenv(""WIRESHARK_DEBUG_SCRUB_MEMORY""))",5e55c3564862061caaf61aa7a067f581cd2cb270d3cca8f710c6616785466634
wireshark-1.4.15/epan/filesystem.c,376,6,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	if (getenv(""WIRESHARK_RUN_FROM_BUILD_DIRECTORY"") != NULL",7cb1203b681241ab5947bb40b7be857d70ad0784c2dbba8db0370f5e1b024075
wireshark-1.4.15/epan/filesystem.c,443,13,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		pathstr = getenv(""PATH"");",70d1a00e93cadc1b3fc687a1e278b2e0ebd07cfd8488cb3ca1f7cac27664c990
wireshark-1.4.15/epan/filesystem.c,661,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_DATA_DIR"") && !started_with_special_privs()) {",dbc6363b1a1eba3e473aac56f6f858025d775aa3ddaa73c94cb626e52a8e1a99
wireshark-1.4.15/epan/filesystem.c,667,28,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","			datafile_dir = g_strdup(getenv(""WIRESHARK_DATA_DIR""));",1f0f15cd37dac628ecfb6c96348a4b6f35037d874976c7087e9878cc46f75507
wireshark-1.4.15/epan/filesystem.c,744,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_PYTHON_DIR"") && !started_with_special_privs()) {",4f68c431dc0eb1cc979b6c04f5366af6ea89c217201ce878f6475f0e85585091
wireshark-1.4.15/epan/filesystem.c,749,28,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","			wspython_dir = g_strdup(getenv(""WIRESHARK_PYTHON_DIR""));",944e41fe8235f481bf57e9016444fa4a8b2fd642dba724fc5c0642f4edf4deec
wireshark-1.4.15/epan/filesystem.c,840,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_PLUGIN_DIR"") && !started_with_special_privs()) {",9a8c5d42d15fb6fbd6334118794d1d111a46135a637be85890b0ea1edc8e685f
wireshark-1.4.15/epan/filesystem.c,845,26,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","			plugin_dir = g_strdup(getenv(""WIRESHARK_PLUGIN_DIR""));",49e404fcc895e32d12230b39c3cce38b82cb6dd58731fb1d16a987430211a52d
wireshark-1.4.15/epan/filesystem.c,916,11,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",	envvar = getenv(varname);,57f0566bebf5481f92c9026d5e8a210a65427970e44f2a97e49c3efaacec7453
wireshark-1.4.15/epan/filesystem.c,1048,12,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	homedir = getenv(""HOME"");",58d46de664170f98f21681ba00c58e678617f216707617c3230542cbb36a0b76
wireshark-1.4.15/epan/filesystem.c,1588,54,3,buffer,g_get_tmp_dir,"This function is synonymous with 'getenv(""TMP"")';it returns untrustable input if the environment can beset by an attacker.  It can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	return g_strdup_printf(""%s"" G_DIR_SEPARATOR_S ""%s"", g_get_tmp_dir(), filename);",5e5ead46af3256bb2535857cc056ad63ca5a200dcb65910f04f2e5ee78316aab
wireshark-1.4.15/epan/oids.c,93,21,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		char* debug_env = getenv(""WIRESHARK_DEBUG_MIBS"");",374bfa0e819bcb86cd0c59c5a835914e686a0c137fac245ec5bf9c818ab5f93e
wireshark-1.4.15/epan/proto.h,107,5,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  ((getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL) ? \",d43eefc4a4eb1be34b3ef0f313e47c8542aa966ea541365ab750c85a26f0a093
wireshark-1.4.15/gtk/main.c,2218,17,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt(argc, argv, optstring)) != -1) {",7d5488f1833b474e27a8d97664b62a146ed7371f63f6bde1007682dc2e575279
wireshark-1.4.15/gtk/main.c,2451,17,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt(argc, argv, optstring)) != -1) {",7d5488f1833b474e27a8d97664b62a146ed7371f63f6bde1007682dc2e575279
wireshark-1.4.15/gtk/packet_list_store.c,234,23,3,random,g_random_int,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,	packet_list->stamp = g_random_int();,d8c4222dca3a23962467c58fecab3079f851a2d5a59a3c2d16627e6508e4c7a5
wireshark-1.4.15/gtk/proto_help.c,137,61,3,buffer,g_get_tmp_dir,"This function is synonymous with 'getenv(""TMP"")';it returns untrustable input if the environment can beset by an attacker.  It can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	ph_log_path = g_strdup_printf(""%s"" G_DIR_SEPARATOR_S ""%s"", g_get_tmp_dir(), PH_FILE_LOG);",9c9b8679086a9fe37a84da759d5c423fb2c2c61b2bcf97d679c944e607a2bc5f
wireshark-1.4.15/gtk/u3.c,71,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",      getenv,8006d55e367b456b29af7cca473ee32df40eb9f3de21f389e6dab351723a3337
wireshark-1.4.15/gtk/u3.c,87,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",      getenv,8006d55e367b456b29af7cca473ee32df40eb9f3de21f389e6dab351723a3337
wireshark-1.4.15/gtk/u3.c,102,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",      getenv,8006d55e367b456b29af7cca473ee32df40eb9f3de21f389e6dab351723a3337
wireshark-1.4.15/gtk/u3.c,122,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",      getenv,8006d55e367b456b29af7cca473ee32df40eb9f3de21f389e6dab351723a3337
wireshark-1.4.15/gtk/u3.c,178,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",      getenv,8006d55e367b456b29af7cca473ee32df40eb9f3de21f389e6dab351723a3337
wireshark-1.4.15/mergecap.c,166,17,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt(argc, argv, ""hvas:T:F:w:"")) != -1) {",f581429c9e40c0a9e7fa9f4820840754ef546d9bc1fde7e54f863d35339dc052
wireshark-1.4.15/packaging/u3/tools/uuid.c,218,9,3,random,srand,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,        srand((unsigned int),2061be3ea8ce65065cb00c9e7ce34879e6518499a77f6069fd7e26749a5d1717
wireshark-1.4.15/packaging/u3/win32/u3util.c,315,6,3,shell,CreateProcess,This causes a new process to execute and is difficult to use safely (CWE-78),"Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run",,CWE-78,"  if(CreateProcess(NULL, buffer, NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {",f8afcf48b85e3c77de77dc062b4d8a097f4e50136265779f19b9b1d4f91a8999
wireshark-1.4.15/packaging/u3/win32/u3util.c,315,6,3,shell,CreateProcess,This causes a new process to execute and is difficult to use safely (CWE-78),"Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run",,CWE-78,"  if(CreateProcess(NULL, buffer, NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {",f8afcf48b85e3c77de77dc062b4d8a097f4e50136265779f19b9b1d4f91a8999
wireshark-1.4.15/packaging/u3/win32/u3util.c,344,26,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","      u3_device_serial = getenv(""U3_DEVICE_SERIAL"");",3c67eb7e7626fa74d25b4b1c3d30abae131484ef38cd6a3d34f55ffc240056a2
wireshark-1.4.15/packaging/u3/win32/u3util.c,468,24,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  if((u3hostexecpath = getenv(""U3_HOST_EXEC_PATH"")) != NULL) {",6a6ce4360fd9690b171cf518aef81e7bd377d5da65471007dcfe1ad639449cbd
wireshark-1.4.15/packaging/u3/win32/u3util.c,497,23,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  u3_host_exec_path = getenv(""U3_HOST_EXEC_PATH"");",d540957e7cddead70fe12fbb5d58d25720240a1fdcaed77f0cc012664d6f5111
wireshark-1.4.15/packaging/u3/win32/u3util.c,566,12,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  envval = getenv(""U3_HOST_EXEC_PATH"");",4ca49b5930bbd94f3013603cb92ef37642416afa0bcb2af2c6ef456cbc8b8c46
wireshark-1.4.15/packaging/u3/win32/u3util.c,577,19,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",      if(envval = getenv(*envptr)) {,6e122b5606c7c3094a3c12fb1fdaae6f7bb55dca4a672e38db02d366acee512b
wireshark-1.4.15/packaging/u3/win32/u3util.c,675,23,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  u3_host_exec_path = getenv(""U3_HOST_EXEC_PATH"");",d540957e7cddead70fe12fbb5d58d25720240a1fdcaed77f0cc012664d6f5111
wireshark-1.4.15/packaging/u3/win32/u3util.c,737,27,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    u3_device_exec_path = getenv(""U3_DEVICE_EXEC_PATH"");",fd1aaf1a4421a8f206c705db9a45fe3078e75950a09f2c3dbabedc27331cfd22
wireshark-1.4.15/packaging/u3/win32/u3util.c,748,26,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","      u3_device_serial = getenv(""U3_DEVICE_SERIAL"");",3c67eb7e7626fa74d25b4b1c3d30abae131484ef38cd6a3d34f55ffc240056a2
wireshark-1.4.15/packaging/u3/win32/u3util.c,776,27,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    u3_device_exec_path = getenv(""U3_DEVICE_EXEC_PATH"");",fd1aaf1a4421a8f206c705db9a45fe3078e75950a09f2c3dbabedc27331cfd22
wireshark-1.4.15/packaging/u3/win32/u3util.c,786,26,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","      u3_device_serial = getenv(""U3_DEVICE_SERIAL"");",3c67eb7e7626fa74d25b4b1c3d30abae131484ef38cd6a3d34f55ffc240056a2
wireshark-1.4.15/packaging/u3/win32/u3util.c,796,29,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  u3_device_document_path = getenv(""U3_DEVICE_DOCUMENT_PATH"");",5bf79bd7bb9bdfee62bf3991837d4091315e3d19af4ef3daf45da43b77f5af35
wireshark-1.4.15/packaging/u3/win32/u3util.c,875,28,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  u3_is_device_available = getenv(""U3_IS_DEVICE_AVAILABLE"");",7cb99113d0447ae43d9048a15eb2c3217b6a9f79319dc1dfbd73006474dc66f0
wireshark-1.4.15/packaging/u3/win32/u3util.c,882,14,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",    envval = getenv(*envptr);,f76bf609296b5012b2c506f067d2b5d68f56aa6b846bcc1dd355ec01c00875a7
wireshark-1.4.15/plugins/wimaxasncp/packet-wimaxasncp.c,3141,20,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    debug_parser = getenv(""WIRESHARK_DEBUG_WIMAXASNCP_DICT_PARSER"") != NULL;",112045e3777acb2635d0f526d3060dbcd60464dd04ab9af7779434bd4f28fa2a
wireshark-1.4.15/plugins/wimaxasncp/packet-wimaxasncp.c,3142,20,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    dump_dict    = getenv(""WIRESHARK_DUMP_WIMAXASNCP_DICT"") != NULL;",e8c411daabbd185ebd3b1fe3df88980771bef613b8f7b1225f19aa7f06f2a1e1
wireshark-1.4.15/randpkt.c,511,16,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","	while ((opt = getopt(argc, argv, ""b:c:ht:"")) != -1) {",5a6b043c861f6c8b7cd10ace8b16fefe5b154ad8a57d7a2304164efabae2aa51
wireshark-1.4.15/randpkt.c,723,2,3,random,srand,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,	srand(randomness);,f2a0a467e8b5000454517dc1df1a47b45fbad6124dc34da08d9bf9c028e53dd6
wireshark-1.4.15/randpkt.c,731,2,3,random,srand,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,	srand(randomness);,f2a0a467e8b5000454517dc1df1a47b45fbad6124dc34da08d9bf9c028e53dd6
wireshark-1.4.15/rawshark.c,594,19,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","    while ((opt = getopt(argc, argv, optstring)) != -1) {",7d5488f1833b474e27a8d97664b62a146ed7371f63f6bde1007682dc2e575279
wireshark-1.4.15/tempfile.c,184,12,3,buffer,g_get_tmp_dir,"This function is synonymous with 'getenv(""TMP"")';it returns untrustable input if the environment can beset by an attacker.  It can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",	tmp_dir = g_get_tmp_dir();,54e553b4bd52aaa13bb48f4b9c90bf8be536b45a730d8d4c502f2e9072e87aa7
wireshark-1.4.15/tempfile.c,235,12,3,buffer,g_get_tmp_dir,"This function is synonymous with 'getenv(""TMP"")';it returns untrustable input if the environment can beset by an attacker.  It can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",	tmp_dir = g_get_tmp_dir();,54e553b4bd52aaa13bb48f4b9c90bf8be536b45a730d8d4c502f2e9072e87aa7
wireshark-1.4.15/text2pcap.c,1113,17,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","    while ((c = getopt(argc, argv, ""dhqe:i:l:m:o:u:s:S:t:T:"")) != -1) {",66e223ec24fffb9acaff42d7b3e86b10f6b06e7f4c4a756181514e21240b8fdc
wireshark-1.4.15/tools/lemon/lemon.c,3056,16,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    pathlist = getenv(""PATH"");",e6e81267a16d2d526aa73d425aff6938cf7e94b19a969ce76ed5f5ac98caab33
wireshark-1.4.15/tshark.c,848,17,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt(argc, argv, optstring)) != -1) {",7d5488f1833b474e27a8d97664b62a146ed7371f63f6bde1007682dc2e575279
wireshark-1.4.15/tshark.c,1044,17,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt(argc, argv, optstring)) != -1) {",7d5488f1833b474e27a8d97664b62a146ed7371f63f6bde1007682dc2e575279
wireshark-1.4.15/util.c,168,13,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	if ((env = getenv(""SSH_CONNECTION"")) != NULL) {",2936158f60e96b71088b8c967849bdc5cdc37d6e67514f14743e1b2f254482e3
wireshark-1.4.15/util.c,180,20,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	} else if ((env = getenv(""SSH_CLIENT"")) != NULL) {",303079faac8d9a09b2be8e589c1f5a004d76471cae2fcf8da00272847842bcad
wireshark-1.4.15/util.c,187,20,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	} else if ((env = getenv(""REMOTEHOST"")) != NULL) {",24e9bc6552079f14ec0376f6f5f70f0ffae8e60540b5973f54b6aa3bea2f35fd
wireshark-1.4.15/util.c,198,20,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	} else if ((env = getenv(""DISPLAY"")) != NULL) {",ea4824ac5d2f53c21000d26fa228f8efb7c6b6a35f4ab8af866bf3953daec58e
wireshark-1.4.15/util.c,329,20,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	} else if ((env = getenv(""SESSIONNAME"")) != NULL) {",60b56171daa30aa22ef78b721c13106e02bc9d31686cc0042156fb2c4b9a7768
wireshark-1.4.15/wiretap/erf.c,96,12,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  if ((s = getenv(""ERF_RECORDS_TO_CHECK"")) != NULL) {",537740063c27b8a600326fa686801297af3ce8b25e7c264371c2504952d60b37
wireshark-1.4.15/wiretap/k12.c,626,24,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    gchar* env_level = getenv(""K12_DEBUG_LEVEL"");",765d005a3253353ab0c38ff595ace88e81355ac99964a1c346267e1de2cc3aff
wireshark-1.4.15/wiretap/k12.c,627,16,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    env_file = getenv(""K12_DEBUG_FILENAME"");",6df407d6f410e90fe761daac9fcd83ae897e4c04ba0188c70fd3f0968ab67e75
wireshark-1.4.15/wsutil/wsgetopt.c,176,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",char *getenv ();,be70db09bc2d4bb628d6bcebb9eefb1f50e009eecca2a068647e7268b78498a3
wireshark-1.4.15/wsutil/wsgetopt.c,373,16,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","      else if (getenv (""POSIXLY_CORRECT"") != NULL)",71a3dffb336e28f558e6a92648a691b9746d1426b07b6fef6d345bc35a63d72d
wireshark-1.4.15/wsutil/wsgetopt.c,672,1,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","getopt (argc, argv, optstring)",7676f31f14cfc7ab28c23b9c2fd3190ef6c1c7e295b8e7e8005d3fd326e1a855
wireshark-1.4.15/wsutil/wsgetopt.c,702,11,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","      c = getopt (argc, argv, ""abc:d:0123456789"");",fe4e2556472e09b8b6f473fc5e3453a89c234987ae88eb387bcce7039f523728
wireshark-1.4.15/wsutil/wsgetopt.h,102,12,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","extern int getopt (int argc, char *const *argv, const char *shortopts);",a62198ba42c6b84355b90ec7da41d92da828f2116e685152135e981a56d4deac
wireshark-1.4.15/wsutil/wsgetopt.h,104,12,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","extern int getopt (int argc, char *const *argv, const char *optstring);",7dae7dff226ccda60ebdb1fd6dcfacf1884b0f73ba169b1c59a1b68ffd565e6e
wireshark-1.4.15/wsutil/wsgetopt.h,106,12,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","extern int getopt_long (int argc, char *const *argv, const char *shortopts,",34f2e6428b9168caedcb83c8ee5e47e2c6bacf14356f729e6536a05c95e2a39f
wireshark-1.4.15/wsutil/wsgetopt.h,118,12,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20",extern int getopt ();,4b18b594a61484cad59cd24ce3437d1ade499a54cd1c11830c97e1dd0cfe220b
wireshark-1.4.15/wsutil/wsgetopt.h,119,12,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20",extern int getopt_long ();,e58975c4a5cd346657f8d4bb356c7d26b8dc9b845077a763bfac6ba9bbeeca97
wireshark-1.4.15/airpcap_loader.c,1375,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-1.4.15/asn1/ansi_map/packet-ansi_map-template.c,578,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char out[15];,623304ce3f590a32c26994440d5d6478a8a8aefcdfaf220a70de50ebbf19bd47
wireshark-1.4.15/asn1/camel/packet-camel-template.c,288,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char a_bigbuf[1024];,78fb3d82c19967255ed139ee4830937cedce622c1cc5212f459a5d350cc4fde7
wireshark-1.4.15/asn1/camel/packet-camel-template.c,337,32,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,	application_context_version = atoi(version_ptr+1);,ad0fb1034ce2a867246eed5716c8d15072cdb333912029ed03309efe60d1c2fe
wireshark-1.4.15/asn1/cms/packet-cms-template.c,83,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"unsigned char digest_buf[MAX(SHA1_BUFFER_SIZE, MD5_BUFFER_SIZE)];",671a92758a83ba5ab8c9fddf0452387c1d70015a6e9a56a8decd59d5416a9b1b
wireshark-1.4.15/asn1/gsm_map/packet-gsm_map-template.c,1744,35,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,		  application_context_version = atoi(version_ptr+1);,ad0fb1034ce2a867246eed5716c8d15072cdb333912029ed03309efe60d1c2fe
wireshark-1.4.15/asn1/kerberos/packet-kerberos-template.c,348,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(user_data, data.data, data.length);",8996cd2998e12962c75ab71006f7167377e18607efa4205e9312fe5f7210ea4c
wireshark-1.4.15/asn1/kerberos/packet-kerberos-template.c,480,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(cryptocopy, cryptotext, length);",b40b35b1a915a1e58c5cbea7d401fd0080798c16553a8e8a4553465188996841
wireshark-1.4.15/asn1/kerberos/packet-kerberos-template.c,494,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(user_data, data.data, data.length);",8996cd2998e12962c75ab71006f7167377e18607efa4205e9312fe5f7210ea4c
wireshark-1.4.15/asn1/kerberos/packet-kerberos-template.c,515,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    origin[KRB_MAX_ORIG_LEN+1];,17c0f56f80e2819955a6f6a6b01da9aa85dd2453ed90a443be4df47c6e2419d7
wireshark-1.4.15/asn1/kerberos/packet-kerberos-template.c,535,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(new_key->contents, keyvalue, keylength);",a4a04a91beb7ea12e53aeae71d6b92bc73538c7768390fc2626d5c1cbc939d3c
wireshark-1.4.15/asn1/kerberos/packet-kerberos-template.c,562,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char buf[SERVICE_KEY_SIZE];,34592e6dfe0c40ae57831ad1427907a2b39531612af97f0284aa8cb3c6f45f19
wireshark-1.4.15/asn1/kerberos/packet-kerberos-template.c,592,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(sk->contents, buf + 2, DES3_KEY_SIZE);",9c0654b9d4427112fca77440071ced698b0f1f9e43d3d75f7d3d36b2d8f15d22
wireshark-1.4.15/asn1/kerberos/packet-kerberos-template.h,77,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char 			key_origin[KRB_MAX_ORIG_LEN+1];,df26f8ff5e94e3807df48de816ea615e52c075b5a04d9cd05f1f066d4543c528
wireshark-1.4.15/asn1/ldap/packet-ldap-template.c,1238,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-1.4.15/asn1/pkcs12/packet-pkcs12-template.c,102,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char hash[20], buf_b[64], buf_i[128], *p;",b33066e1fc6f33e4b6d02ad049f00fe3c9fe85386923616bae7a8a054d05a467
wireshark-1.4.15/asn1/pkcs12/packet-pkcs12-template.c,154,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy (hash, gcry_md_read (md, 0), 20);",33f4c6611527d9becf1d579d46bb61863f346bd68914c6080ca02969ae9cba8b
wireshark-1.4.15/asn1/snmp/packet-snmp-template.c,398,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label[ITEM_LABEL_LENGTH];,e13879a30490abb6bc65df00b906e235d47e93ff8d1f9ae606071684dff9b26d
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,342,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(L40 + 10, T, sizeof(T));",98425899cd1db7304b73ffa6096cf3e687fa540c664f48eb4f09880f57ced0fc
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,394,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char t[4];,df6adde993e73ac0588ca69e81cb19f6eab355a92d145d33dd2e260855aa74f3
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,396,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char digest[16];,a20b5d2452f9153c62b990a319ee4231f8a9f3ea90fb31ce544f36e2626b9797
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,416,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sgn_cksum, cksum, 8);",a80bca5d9f6044291958b220f9ca284aedf2b02770a0b83fd1d7877447d9039d
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,493,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(SND_SEQ, (unsigned char *)tvb_get_ptr(pinfo->gssapi_wrap_tvb, 8, 8), 8);",6b244042ee759a860a07ead65f2bb39854457e249c8554988bd77a8a435fc7c8
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,523,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(Confounder, (unsigned char *)tvb_get_ptr(pinfo->gssapi_wrap_tvb, 24, 8), 8);",f0b1737acf9c29ca1f15f9902cc9e28d14b74ccfc3bfc0a66565e9e33a13e35f
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,525,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(output_message_buffer, input_message_buffer, datalen);",e4f278915ef24fdaf3142a0925842a19d1a14c6f0e19062aa4fff6b80584f502
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,528,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(Confounder,",02ceb7c0f4859f406d0b9ecafed93a6a9226968af189202343be47a83b777fb0
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,531,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(output_message_buffer,",7bad9ec93eccc4649650a2194c177cc23d1dde261e80b652f4bfb4d13310fd12
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,625,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(cryptocopy, original_data, length);",631074dcc68dfc0eed9e30cc91068a82784a2adb1222424713ab3a30707f82ec
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,650,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	unsigned char *tmp, buf[256];",d6acf3b4c506625fba98a871f66f16386a3589ddcd69bbf43b8ebbccc8c825f1
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,672,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(tmp, data, rrc);",0d8f49c541b932508aae8af04744563b632196c1d0f291d32923af212e5fd98d
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,674,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy((unsigned char *)data + left, tmp, rrc);",80f707e67d494ab4d49924dbc1095c3a90af7284c917ce43bf3d8b14138d9284
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,676,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(tmp, (unsigned char *)data + left, rrc);",d23a84fb556e4daa947d987859f6b600ccb0db375b5085ec0dc1e7e084ea3dab
wireshark-1.4.15/asn1/spnego/packet-spnego-template.c,678,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(data, tmp, rrc);",d7e6478aad14f882fb09916d0353ba2666f6d932be107f5d573910f5824111ff
wireshark-1.4.15/asn1/t38/packet-t38-template.c,354,8,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	      memcpy(fd_head->data+dfpos,fd_i->data,fd_i->len);",9f572296e27283e38abfded87ba6ef8f0783621ebf83470dc32376c03ff6f904
wireshark-1.4.15/asn1/t38/packet-t38-template.c,477,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&(p_t38_packet_conv->src_t38_info), &(p_t38_conv->src_t38_info), sizeof(t38_conv_info));",aaa33a37baf1984e1c3d7efaab9358a6eac8a97767b6b5741b81be535109be4d
wireshark-1.4.15/asn1/t38/packet-t38-template.c,478,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&(p_t38_packet_conv->dst_t38_info), &(p_t38_conv->dst_t38_info), sizeof(t38_conv_info));",f67a4666ee3daa117f7c7723afda7682e3ca8e6b4c143cb4de092e63a70d9737
wireshark-1.4.15/capinfos.c,792,5,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"    sprintf(str+(i*2), ""%02x"", hash[i]);",ee7204d5aa4ecf45b41552bd4a5f16451a1d6ad3657912f49060b7860fe06308
wireshark-1.4.15/capinfos.c,1003,5,2,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",Risk is low because the source is a constant string.,CWE-120,"    strcpy(file_sha1, ""<unknown>"");",de98d2dd2287e4cafd2e001a938e1ced0a427e366ec98a0fcef506c7d248ea29
wireshark-1.4.15/capinfos.c,1004,5,2,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",Risk is low because the source is a constant string.,CWE-120,"    strcpy(file_rmd160, ""<unknown>"");",5e54cb097b6157d4645d0fe5ceda6b2b5abad53cce53af0daef6dcad8bb87529
wireshark-1.4.15/capinfos.c,1005,5,2,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",Risk is low because the source is a constant string.,CWE-120,"    strcpy(file_md5, ""<unknown>"");",6e1b7a7991db9918e567264f00e51ae4e640051d66c5b251d8b6ff310e9bd7d6
wireshark-1.4.15/capture-pcap-util-unix.c,82,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char source[PCAP_BUF_SIZE];,b32d78f662ad1974991887d3703b75a852e71e6b861a25854c9eadb4bfbdedd3
wireshark-1.4.15/capture-pcap-util-unix.c,83,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-1.4.15/capture-pcap-util-unix.c,123,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-1.4.15/capture-pcap-util.c,98,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy((void *)&if_addr->addr.ip6_addr,",e95ba4f2e07e08a406d8628c25f3e8d21a0a40546dca12ecc919391d6a3d2277
wireshark-1.4.15/capture-pcap-util.c,136,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-1.4.15/capture-pcap-util.c,172,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-1.4.15/capture-wpcap.c,606,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char source[PCAP_BUF_SIZE];,b32d78f662ad1974991887d3703b75a852e71e6b861a25854c9eadb4bfbdedd3
wireshark-1.4.15/capture-wpcap.c,607,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-1.4.15/capture-wpcap.c,640,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char ascii_name[MAX_WIN_IF_NAME_LEN + 1];,f568d8a40e2063a81426eace26b88dd06f377ff9705ed4e6b26afb723c7b5d14
wireshark-1.4.15/capture-wpcap.c,641,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char ascii_desc[MAX_WIN_IF_NAME_LEN + 1];,4c894824152a7d589cf3e3167aa1e3f3f73f05807b3749be35ca74835bc22f76
wireshark-1.4.15/capture-wpcap.c,643,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-1.4.15/capture.c,718,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(ps, &sc_item->ps, sizeof(struct pcap_stat));",a1fa0fe2be1f361b0ba14ca9fa0b04fef874bb40c0c8030bd72622ba39007f20
wireshark-1.4.15/capture_info.c,107,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char errmsg_errno[1024+1];,d3a48dd6bc93bca3e84f669e2c8877706d80f16af252aaf122e7357a1411da58
wireshark-1.4.15/capture_info.c,206,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char err_msg[2048+1];,c86741fb6f425926c0720c7ca8230ff44c0076928c73dfca1f4281960aa92a2a
wireshark-1.4.15/capture_sync.c,223,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char errbuf[ERRBUF_SIZE+1];,207fb2aa5f06e9eb853714c08c5e5a71d3b0ad451870028f10da674c28a052f1
wireshark-1.4.15/capture_sync.c,250,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char errbuf[ERRBUF_SIZE+1];,207fb2aa5f06e9eb853714c08c5e5a71d3b0ad451870028f10da674c28a052f1
wireshark-1.4.15/capture_sync.c,322,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char ssnap[ARGV_NUMBER_LEN];,407abde66ea744a3f56ebca8ab46e13ee97a7635188d403ebcb947d4c9b978ec
wireshark-1.4.15/capture_sync.c,323,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sdlt[ARGV_NUMBER_LEN];,e2eaaec955a86b8810e24710ea9415cb0cf4618e7eaec1f71556208de6f001ca
wireshark-1.4.15/capture_sync.c,324,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char scount[ARGV_NUMBER_LEN];,92e09af035ade6f970ac42d8807a65eab510dd29ca93d9a0bff16c3e63554010
wireshark-1.4.15/capture_sync.c,325,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sfilesize[ARGV_NUMBER_LEN];,b7c5937cb30738e197ce194592e207acab8300964a66cf3891b2b2bb91aca7f7
wireshark-1.4.15/capture_sync.c,326,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sfile_duration[ARGV_NUMBER_LEN];,de00177704f9a5c9f66bf6df6005149751d7db3bc2f9ef39ce87dfbc8cb27972
wireshark-1.4.15/capture_sync.c,327,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sring_num_files[ARGV_NUMBER_LEN];,2c92235fa3ffacd137b72fc8803d0d02f3c65b739c7bd53163582b2bf4f5c4cc
wireshark-1.4.15/capture_sync.c,328,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sautostop_files[ARGV_NUMBER_LEN];,4a365cef35ca039ea19a5010305b0afb6a70a9b826737d1f03a9815d8b3dce85
wireshark-1.4.15/capture_sync.c,329,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sautostop_filesize[ARGV_NUMBER_LEN];,c0e3c4dca9bbdd83fdb99927ed3093d00ac3476e5ab997dd88b63d6a635e39ca
wireshark-1.4.15/capture_sync.c,330,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sautostop_duration[ARGV_NUMBER_LEN];,08690949154d5fa024525472f1b6075e2dee71b6dec7ab546742e4c2ea40db0d
wireshark-1.4.15/capture_sync.c,332,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sauth[256];,9d83173787b72ef2b0208473a380b1c13b242505511b6a46090b4fcc3fae9bd4
wireshark-1.4.15/capture_sync.c,335,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char ssampling[ARGV_NUMBER_LEN];,b8ed26fd0dbbd2a46f7ca2197023cda26215095bcd71cc27f4450efba79b9f69
wireshark-1.4.15/capture_sync.c,338,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buffer_size[ARGV_NUMBER_LEN];,ce212d76ce67b562cacaa9f9659c58f736d38b1a44e9ce049cd3cd3c10c4da3f
wireshark-1.4.15/capture_sync.c,350,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char control_id[ARGV_NUMBER_LEN];,5492e90d33ad58a52691732e10f3dd52a25da0628fc81089c35e5ca6fa76e744
wireshark-1.4.15/capture_sync.c,353,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char errmsg[1024+1];,7d55b2d577c5b2e87c25a2e908b6e1d0f90019984d54c9188054dcc69a4b89b8
wireshark-1.4.15/capture_sync.c,689,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char errmsg[1024+1];,7d55b2d577c5b2e87c25a2e908b6e1d0f90019984d54c9188054dcc69a4b89b8
wireshark-1.4.15/capture_sync.c,1481,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(msg, header, sizeof(header));",65fd6725114301c6f3008e32696b6fc79a3c5da088baac66dab5ea58a69ab141
wireshark-1.4.15/capture_sync.c,1516,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buffer[SP_MAX_MSG_LEN+1];,b66be1892b3e69d060953dd3cc4df612fa68dded9fc036e74e7a8b73907d7327
wireshark-1.4.15/capture_sync.c,1591,13,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    nread = atoi(buffer);,3ade8c934841ca9a825b319624c565435aea4976bbdf28a0306b58b1b38c3c00
wireshark-1.4.15/capture_sync.c,1695,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char sigmsg_buf[6+1+3+1];,17c9ad634849d0865950471e38e889da1e744068dfeea65652d04e4508f6d819
wireshark-1.4.15/capture_ui_utils.c,94,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(descr, p2, p - p2);",eb4237863f11792da9fa6c450c44815bd3422c65fa36b0784ab977d70f26a2b7
wireshark-1.4.15/capture_wpcap_packet.c,83,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char      __ss_pad1[ETH_SS_PAD1SIZE];,bd93119bc149221aeee4cc944b1c136636a86ca6574d4133860fa341e78553bb
wireshark-1.4.15/capture_wpcap_packet.c,89,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char      __ss_pad2[ETH_SS_PAD2SIZE];,7d95cb5b6eb6b7b0aa601b2b5b8e4af64ab245fb42e4c8ed7370c70e0f045736
wireshark-1.4.15/capture_wpcap_packet.c,254,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(OidData->Data, value, *length);",e94285130f14ac94512b8902ba469181b8fe6fc40c3c465bd485cabddff23e16
wireshark-1.4.15/capture_wpcap_packet.c,261,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(value, OidData->Data, OidData->Length);",e206a66e6a33625b17639fe2610fda2e9f5217a11c09da2bbf3ec715a86bfe2f
wireshark-1.4.15/dumpcap.c,652,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-1.4.15/dumpcap.c,827,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        addr_str[ADDRSTRLEN];,6e67c4d35264fa441a76b8c076d942cea2fd5f5c94cf6139e846a86a6fc50c96
wireshark-1.4.15/dumpcap.c,935,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        errbuf[PCAP_ERRBUF_SIZE];,6119771016988c0bd86840fb6b1c8553f1de217acb2672a47ab0401d9455006a
wireshark-1.4.15/dumpcap.c,2325,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char appname[100];,5b58f2fda68905aae0e53ce97a6f9b68837cd779d565a9dc553700b1b75e841a
wireshark-1.4.15/dumpcap.c,2695,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char appname[100];,5b58f2fda68905aae0e53ce97a6f9b68837cd779d565a9dc553700b1b75e841a
wireshark-1.4.15/dumpcap.c,2753,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char        errmsg[MSG_MAX_LENGTH+1];,6db537071176420dee19f4afa819082a10820480c5413b22f1857f7948b062f8
wireshark-1.4.15/dumpcap.c,2754,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char        secondary_errmsg[MSG_MAX_LENGTH+1];,e1027e346901dc38192630ab19280c047bffb9aaa3cc5c016a1d76771b5f3a08
wireshark-1.4.15/dumpcap.c,3874,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char tmp[SP_DECISIZE+1+1];,85d136960303ec7b3ce8c09d966ad71251106c83a1a621f798f96b2b7b20c738
wireshark-1.4.15/dumpcap.c,3956,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char tmp[SP_DECISIZE+1+1];,85d136960303ec7b3ce8c09d966ad71251106c83a1a621f798f96b2b7b20c738
wireshark-1.4.15/editcap.c,247,37,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    selectfrm[max_selected].first = atoi(sel);,294ec2a93428d8aaa6564a5476d293b8255c6daf23e6a90114443ae1ba091a0e
wireshark-1.4.15/editcap.c,258,37,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    selectfrm[max_selected].first = atoi(sel);,294ec2a93428d8aaa6564a5476d293b8255c6daf23e6a90114443ae1ba091a0e
wireshark-1.4.15/editcap.c,259,38,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    selectfrm[max_selected].second = atoi(next);,096d1dc66ef1a213ca1545d6a53ec570e18e9c0b90139b5d9adec00358a7c76d
wireshark-1.4.15/editcap.c,956,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,      secs_per_block = atoi(optarg);,d110fdbd71666b75689176f4558c9ffcea2e09f65b02110a0f327dfef971b142
wireshark-1.4.15/epan/addr_resolv.c,216,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char              name[MAXMANUFLEN];,2a9eff77c0a57be67c7e0a939404bd049f3b3784e9031ec23b179e3b3fa2b27a
wireshark-1.4.15/epan/addr_resolv.c,227,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char              hexaddr[6*3];,55ddbf27ebfc2c99d47e838a5eb7186123861e2193d6dd1e3956a666def73cbc
wireshark-1.4.15/epan/addr_resolv.c,228,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char              resolved_name[MAXNAMELEN];,e22fdcef457fb05779b435b1a8028ee8c84adcd754fdb55a3de4763eadf6c337
wireshark-1.4.15/epan/addr_resolv.c,234,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char              name[MAXNAMELEN];,9f949de7f5895f37665c801eb832d17ff9251807257e51c1f5e0e595150222d7
wireshark-1.4.15/epan/addr_resolv.c,242,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char              name[MAXNAMELEN];,9f949de7f5895f37665c801eb832d17ff9251807257e51c1f5e0e595150222d7
wireshark-1.4.15/epan/addr_resolv.c,250,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char              name[MAXNAMELEN];,9f949de7f5895f37665c801eb832d17ff9251807257e51c1f5e0e595150222d7
wireshark-1.4.15/epan/addr_resolv.c,965,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&ip4_addr, addr->data, sizeof ip4_addr);",d1cd04842ae8df9932ef9ba1cb225f756c5fc206e134641f31cf1b00ea922edd
wireshark-1.4.15/epan/addr_resolv.c,971,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&ip6_addr.bytes, addr->data, sizeof ip6_addr.bytes);",c99a97173ee5e26eb3f9affa1bbae3976631bcae7b23b04a50349bb885cdc053
wireshark-1.4.15/epan/addr_resolv.c,993,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&ip4_addr, addr->data, sizeof ip4_addr);",d1cd04842ae8df9932ef9ba1cb225f756c5fc206e134641f31cf1b00ea922edd
wireshark-1.4.15/epan/addr_resolv.c,999,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&ip6_addr.bytes, addr->data, sizeof ip6_addr.bytes);",c99a97173ee5e26eb3f9affa1bbae3976631bcae7b23b04a50349bb885cdc053
wireshark-1.4.15/epan/addr_resolv.c,1408,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(stripped_addr, addr, 3);",462f1520386fc25f427f3b981cdb813617c72a110017bd50eb3721787d06c6bd
wireshark-1.4.15/epan/addr_resolv.c,2050,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&ip6_addr, host_addr, sizeof ip6_addr);",aa01844313f76a1389552b35b1a07e155d32fb92c90626b7a730076f8e1452f8
wireshark-1.4.15/epan/addr_resolv.c,2060,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&ip6_addr, host_addr, sizeof ip6_addr);",aa01844313f76a1389552b35b1a07e155d32fb92c90626b7a730076f8e1452f8
wireshark-1.4.15/epan/addr_resolv.c,2154,19,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    mask_length = atoi(cp2);,44cc19e7f1a6c3e09b705733388b9474a971d05cc247e91c517e9f65fa6e9e2a
wireshark-1.4.15/epan/addr_resolv.c,3000,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ahp->addrp, hp->h_addr, hp->h_length);",449680e43089d13420cbd560f0cc4868347a291086f0f3160e9dec976ec59ccb
wireshark-1.4.15/epan/addr_resolv.c,3065,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&ipaddr, hp->h_addr, hp->h_length);",e06b738058f883e2c85b1892c44251f0c426b5272f3af728140648ace8665532
wireshark-1.4.15/epan/addr_resolv.c,3135,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(addrp, hp->h_addr, hp->h_length);",86e07fecf2bc425a967f42773a927f3c40d0b69ecd0ead8f913a28903f3c749b
wireshark-1.4.15/epan/address.h,112,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(COPY_ADDRESS_data, (from)->data, (from)->len); \",71ba64b34398a86a8f43d1a66a28c47ae1d0f90701c829a76a9e1b0de95326c0
wireshark-1.4.15/epan/address.h,121,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(SE_COPY_ADDRESS_data, (from)->data, (from)->len); \",1d2e3302eda6cc8e3342ae24730e3a87922548803961dbf712af05d75974a61b
wireshark-1.4.15/epan/address_to_str.c,261,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy (oui, &ad[2], 6);",07ae6ba5ab823503c4292f3de47e52f9b2009d956e939c27a974cb035d03cc51
wireshark-1.4.15/epan/address_to_str.c,324,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char temp[32];,8481d9d5955537ccfb8785c1536c8af0c249959ec10ec5e03787ef44a1976bcd
wireshark-1.4.15/epan/address_to_str.c,354,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&ddp_addr, addr->data, sizeof ddp_addr);",c0c7c841b4d79770558e56c38a4d88d917823aa012a8dc25bb919b67e2f23b8c
wireshark-1.4.15/epan/address_to_str.c,384,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, addr->data, copy_len );",2c1eff9ec69a55799788df5d8fe5dbb7e9769a908c0441d59bd6eb1d8948b7a0
wireshark-1.4.15/epan/address_to_str.c,400,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(buf, temp, temp_len);",109a07986dd9844b9d3db41e9706f3aac6e86e8321d405863036547cc0b1c1b9
wireshark-1.4.15/epan/column-utils.c,350,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char        orig_buf[COL_BUF_MAX_LEN];,a53b8e9902a8cfc744198cfc5dfcd28fb885710376f1a833b08e5240c1267c6e
wireshark-1.4.15/epan/column-utils.c,391,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char        orig_buf[COL_BUF_MAX_LEN];,a53b8e9902a8cfc744198cfc5dfcd28fb885710376f1a833b08e5240c1267c6e
wireshark-1.4.15/epan/crypt/airpdcap.c,369,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(new_key, pEAPKey->key_iv, 16);",4e33741b8e00ac643e7f1d07adffee02b1512ff4523d8f011ef710763103cddf
wireshark-1.4.15/epan/crypt/airpdcap.c,370,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(new_key+16, decryption_key, 16);",5dc3758e68f3c65de22508cadb1a789e192e661b72db3ba2c00a77551b69953f
wireshark-1.4.15/epan/crypt/airpdcap.c,420,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(szEncryptedKey, decrypted_data+key_index+8, key_len-key_index-8);",93432c73ac81069a70a123c51f798bc3c54b596328032c225d7cb6b315ed1957
wireshark-1.4.15/epan/crypt/airpdcap.c,437,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sa->wpa.ptk+32, szEncryptedKey, key_len);",ddc02fae8ceb228b3b30f546400f627e04be930068a1c9562a46fa1f8c6e1e4e
wireshark-1.4.15/epan/crypt/airpdcap.c,549,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id.bssid, address, AIRPDCAP_MAC_LEN);",b9bb210517a9ce26baa089259f01971e452065115d779611437805ef9c2ab046
wireshark-1.4.15/epan/crypt/airpdcap.c,551,13,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"            sprintf(msgbuf, ""BSSID: %2X.%2X.%2X.%2X.%2X.%2X\t"", id.bssid[0],id.bssid[1],id.bssid[2],id.bssid[3],id.bssid[4],id.bssid[5]);",46daed5639122ca80ea5a8c25fe0c190431c113d8fd7cc21f169ad0feece53a2
wireshark-1.4.15/epan/crypt/airpdcap.c,560,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(id.sta, broadcast_mac, AIRPDCAP_MAC_LEN);",7bb0e2cb77537c7138e2c49135a38d4e57d47678fede7cbea0200adc784103f9
wireshark-1.4.15/epan/crypt/airpdcap.c,572,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id.sta, address, AIRPDCAP_MAC_LEN);",f32bcc990d79c6fb1a35aa02b5845b86dfaf2b867b17f5421b0f541be261c904
wireshark-1.4.15/epan/crypt/airpdcap.c,574,13,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"            sprintf(msgbuf, ""ST_MAC: %2X.%2X.%2X.%2X.%2X.%2X\t"", id.sta[0],id.sta[1],id.sta[2],id.sta[3],id.sta[4],id.sta[5]);",d6a489483038b332134c342f523da9b2c06214fc57b29724c9d012f51c52ba8a
wireshark-1.4.15/epan/crypt/airpdcap.c,654,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(id.bssid, address, AIRPDCAP_MAC_LEN);",b9bb210517a9ce26baa089259f01971e452065115d779611437805ef9c2ab046
wireshark-1.4.15/epan/crypt/airpdcap.c,656,9,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"        sprintf(msgbuf, ""BSSID: %2X.%2X.%2X.%2X.%2X.%2X\t"", id.bssid[0],id.bssid[1],id.bssid[2],id.bssid[3],id.bssid[4],id.bssid[5]);",46daed5639122ca80ea5a8c25fe0c190431c113d8fd7cc21f169ad0feece53a2
wireshark-1.4.15/epan/crypt/airpdcap.c,666,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(id.sta, address, AIRPDCAP_MAC_LEN);",f32bcc990d79c6fb1a35aa02b5845b86dfaf2b867b17f5421b0f541be261c904
wireshark-1.4.15/epan/crypt/airpdcap.c,668,9,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"        sprintf(msgbuf, ""ST_MAC: %2X.%2X.%2X.%2X.%2X.%2X\t"", id.sta[0],id.sta[1],id.sta[2],id.sta[3],id.sta[4],id.sta[5]);",d6a489483038b332134c342f523da9b2c06214fc57b29724c9d012f51c52ba8a
wireshark-1.4.15/epan/crypt/airpdcap.c,752,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(decrypt_data, data, *decrypt_len);",c70512c7f8b3e69fcf020f4e97872485635e62fbffa84cae8cc7beb8f712dc89
wireshark-1.4.15/epan/crypt/airpdcap.c,777,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(id.sta, broadcast_mac, AIRPDCAP_MAC_LEN);",7bb0e2cb77537c7138e2c49135a38d4e57d47678fede7cbea0200adc784103f9
wireshark-1.4.15/epan/crypt/airpdcap.c,780,21,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"                    sprintf(msgbuf, ""ST_MAC: %2X.%2X.%2X.%2X.%2X.%2X\t"", id.sta[0],id.sta[1],id.sta[2],id.sta[3],id.sta[4],id.sta[5]);",d6a489483038b332134c342f523da9b2c06214fc57b29724c9d012f51c52ba8a
wireshark-1.4.15/epan/crypt/airpdcap.c,847,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&ctx->keys[success], &keys[i], sizeof(keys[i]));",ff5c6630bd36daed3258ab8aba3d65fe8a2974b3d6f887c7c43ba5368fde8ce9
wireshark-1.4.15/epan/crypt/airpdcap.c,921,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ctx->pkt_ssid, pkt_ssid, pkt_ssid_len);",3c754551079ff81600cb0d5e2dd475d997167cf6de822981cbe4868f5b0af8f8
wireshark-1.4.15/epan/crypt/airpdcap.c,1015,8,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"       memcpy(try_data, decrypt_data, *decrypt_len);",0533fb830e72d8b73a3e3cfc500d9a6ccaad7458c43892ae5ab62e604d758e3c
wireshark-1.4.15/epan/crypt/airpdcap.c,1054,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(decrypt_data, try_data, *decrypt_len);",b72906546b374d53d0b2fc3d567d67948af698fc4fd5bc79aab91087f1644ac2
wireshark-1.4.15/epan/crypt/airpdcap.c,1065,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(key, sa->key, sizeof(AIRPDCAP_KEY_ITEM));",645cab6485ddd8bef52d5d29fd76ba4de49e98025fc2a842289d6040829cea36
wireshark-1.4.15/epan/crypt/airpdcap.c,1117,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(try_data, decrypt_data, *decrypt_len);",0533fb830e72d8b73a3e3cfc500d9a6ccaad7458c43892ae5ab62e604d758e3c
wireshark-1.4.15/epan/crypt/airpdcap.c,1120,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(wep_key, try_data+mac_header_len, AIRPDCAP_WEP_IVLEN);",d02ec29e4f8304e7fa85a3da1f51b519024d57396ee5fca2b459d3ce99a8a33d
wireshark-1.4.15/epan/crypt/airpdcap.c,1122,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(wep_key+AIRPDCAP_WEP_IVLEN, tmp_key->KeyData.Wep.WepKey, keylen);",eceb0ed8d8f3a0c0b86ff8d191ce764772d5c96a38904c3d0b1e2563da6f96e4
wireshark-1.4.15/epan/crypt/airpdcap.c,1130,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(decrypt_data, try_data, *decrypt_len);",b72906546b374d53d0b2fc3d567d67948af698fc4fd5bc79aab91087f1644ac2
wireshark-1.4.15/epan/crypt/airpdcap.c,1139,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(key, &sa->key, sizeof(AIRPDCAP_KEY_ITEM));",039dcf460ac033d07affa0c088f2cb880e1928e45eea181b21c4ee27435c01d4
wireshark-1.4.15/epan/crypt/airpdcap.c,1168,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(decrypt_data+offset, decrypt_data+offset+AIRPDCAP_WEP_IVLEN+AIRPDCAP_WEP_KIDLEN, *decrypt_len-offset);",acab1ff30fb7e9f7ea09563ac5266fc9a4a3eb7f81a972d4e1ba39f0e9059484
wireshark-1.4.15/epan/crypt/airpdcap.c,1204,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(tmp_sa, sa, sizeof(AIRPDCAP_SEC_ASSOCIATION));",9fe3c92c527e7b6e69f312d21dab2f114a821a6439f5994e0472a0e650d7284e
wireshark-1.4.15/epan/crypt/airpdcap.c,1229,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(sa->wpa.nonce, data+offset+12, 32);",b89a11568ba37e86df7dc96d17e73895e013c7bf74e5478d708ea358a82c060f
wireshark-1.4.15/epan/crypt/airpdcap.c,1287,29,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                            memcpy(&pkt_key.UserPwd.Ssid, ctx->pkt_ssid, ctx->pkt_ssid_len);",3d53e83736ed6ef9f7c606b09b73bc2575ea70b96c3d9cd9e77e3693db6479ad
wireshark-1.4.15/epan/crypt/airpdcap.c,1303,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(eapol, &data[offset-5], (eapol_len<AIRPDCAP_EAPOL_MAX_LEN?eapol_len:AIRPDCAP_EAPOL_MAX_LEN));",5529278b574550e73b32dc2e8a9a3f137ac8daa6c7615b2ac948418f7e71f5c2
wireshark-1.4.15/epan/crypt/airpdcap.c,1326,29,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                            memcpy(key, &tmp_key, sizeof(AIRPDCAP_KEY_ITEM));",17914f19bb405c84366003c26a5cb7631b770973481e36552a0b3fb676d653b4
wireshark-1.4.15/epan/crypt/airpdcap.c,1415,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id.sta, broadcast_mac, AIRPDCAP_MAC_LEN);",7bb0e2cb77537c7138e2c49135a38d4e57d47678fede7cbea0200adc784103f9
wireshark-1.4.15/epan/crypt/airpdcap.c,1416,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id.bssid, sa->saId.bssid, AIRPDCAP_MAC_LEN);",b3f0239b6e25ce8c5f7c72fd83235fa1c83c5e1fd8d683c1cafe8fb8b9b26057
wireshark-1.4.15/epan/crypt/airpdcap.c,1442,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(mic, eapol+AIRPDCAP_WPA_MICKEY_OFFSET+4, AIRPDCAP_WPA_MICKEY_LEN);",d765d735c5655756e5a91bdb624fb8f88e095ae2f8e0813fcb0b0f7914a8b1e3
wireshark-1.4.15/epan/crypt/airpdcap.c,1583,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&(ctx->sa[ctx->index].saId), id, sizeof(AIRPDCAP_SEC_ASSOCIATION_ID));",b63670a6f8766f9f93b1f8a8abcb9b3e01be42fee2343fae96f89110da8bd5bd
wireshark-1.4.15/epan/crypt/airpdcap.c,1655,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(R, ""Pairwise key expansion"", offset);",aba3decddb5acf9a1ba1cdb1b689161cdbe67df660326aba6e01806abcdc39a1
wireshark-1.4.15/epan/crypt/airpdcap.c,1660,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset, sa->saId.sta, AIRPDCAP_MAC_LEN);",82e2700d52349bbff5dc9164781d417ff620bbf1a64ccd4fc5b5c40cc89fed84
wireshark-1.4.15/epan/crypt/airpdcap.c,1661,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset+AIRPDCAP_MAC_LEN, sa->saId.bssid, AIRPDCAP_MAC_LEN);",42c80d866d77c25dc7fc66453701d65ed36c0437b5b599a2ef0a83d1456010dc
wireshark-1.4.15/epan/crypt/airpdcap.c,1665,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset, sa->saId.bssid, AIRPDCAP_MAC_LEN);",42bc1faf2f6b393aeba261f4b2270a7f0017896c295238eab57e4534e14f85f8
wireshark-1.4.15/epan/crypt/airpdcap.c,1666,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset+AIRPDCAP_MAC_LEN, sa->saId.sta, AIRPDCAP_MAC_LEN);",cdf018c9a856cb9466c17af3bd34ef23a18fe8367d27fc5c18621fb699131641
wireshark-1.4.15/epan/crypt/airpdcap.c,1674,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset, snonce, 32);",ed1fbc36988d7e35c963dd1c31767e1eb31dedbee1691355f0af03d4484b9f88
wireshark-1.4.15/epan/crypt/airpdcap.c,1675,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset + 32, sa->wpa.nonce, 32);",816eba67584dfaf7162d21f56c22c4cb05bea9ac969abb33952c6d1264563cb8
wireshark-1.4.15/epan/crypt/airpdcap.c,1679,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset, sa->wpa.nonce, 32);",77978292bfe4369c45613962bf065b2a4a025c4627922bc3648922e825c054c8
wireshark-1.4.15/epan/crypt/airpdcap.c,1680,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset + 32, snonce, 32);",db3baa48651cac01224b1c8562c802f21eed45973f1f8f03529cb0521c2aee70
wireshark-1.4.15/epan/crypt/airpdcap.c,1706,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(digest, ssid, ssidLength);",6d7a25c80229ebd5e190d3d194e9dce1ee960e3381d4112620444808aeba6a12
wireshark-1.4.15/epan/crypt/airpdcap.c,1714,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(output, digest1, AIRPDCAP_SHA_DIGEST_LEN);",1a890a5916f05258c3d9bbcfacc56f545e1072ba3bb00df2c322f17816f236e1
wireshark-1.4.15/epan/crypt/airpdcap.c,1719,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(digest1, digest, AIRPDCAP_SHA_DIGEST_LEN);",02a14f88d5727fa0eda402586477f7a7bbf0a2038410a23ceee570b522c8ed38
wireshark-1.4.15/epan/crypt/airpdcap.c,1749,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(output, m_output, AIRPDCAP_WPA_PSK_LEN);",8a5b86c38bd6ad572680585d52b97f579f163e59c3e8425fdcdc65637fc8f00d
wireshark-1.4.15/epan/crypt/airpdcap_ccmp.c,88,40,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"#define AIRPDCAP_ADDR_COPY(dst,src)    memcpy(dst,src,AIRPDCAP_MAC_LEN)",c9d645cb738e22db990b16861d638cc36310a8b7ac2d0742ff2ba77985380907
wireshark-1.4.15/epan/crypt/airpdcap_ccmp.c,152,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(aad + 4, wh->addr1, 3 * AIRPDCAP_MAC_LEN);",bc91282a89a81db7fd350f5eb8d67b2f3e0567f7fe61f9afa79812dee57012ed
wireshark-1.4.15/epan/crypt/airpdcap_ccmp.c,239,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(mic, m+len-AIRPDCAP_CCMP_TRAILER, AIRPDCAP_CCMP_TRAILER);",7bfb68505199bc74766d810ad4080adb76d94170dc959be00a505ddc08e20e3a
wireshark-1.4.15/epan/crypt/airpdcap_rijndael.c,59,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(a, cipher_text, 8);",6c373c21cf9e835454ca7845af143f3dfb31ff923154f2ee93818e304c505aca
wireshark-1.4.15/epan/crypt/airpdcap_rijndael.c,62,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(r, c+8, cipher_len - 8);",b18251cb44382e9135b3291a300a7e3bb3b9f29ab27ad963e10b06d96fc58830
wireshark-1.4.15/epan/crypt/airpdcap_rijndael.c,73,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(b, a, 8);",05bcd4b514871be58ba886f98cd1e0edc955de275afc915d923531845ce887d3
wireshark-1.4.15/epan/crypt/airpdcap_rijndael.c,76,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(b+8, r, 8);",355fa33f5541ed1e62a65d5a2e9a7450f9c0d36c5dbbc2e605a9a2e4dd1b9cf7
wireshark-1.4.15/epan/crypt/airpdcap_rijndael.c,80,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(a,b,8);",6a04e62e97e05c622c07ac8a07a893e1a5022082ab48cce073f719647437a904
wireshark-1.4.15/epan/crypt/airpdcap_rijndael.c,81,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(r, b+8, 8);",a690da7618f4b50a17d742b3c617a6b96291571b328d0e9775741a791d16567c
wireshark-1.4.15/epan/crypt/crypt-des.c,56,24,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,#define uchar unsigned char,85aafa1a9550dda5f8aa539cc060f2de8a8d4a8324a34a9cd654cad55f479080
wireshark-1.4.15/epan/crypt/crypt-des.c,166,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char out[64];,7d5455759684d645b4c5f03accd5d904ee5b927ef4d30c7b54ae879b61dfacb6
wireshark-1.4.15/epan/crypt/crypt-des.c,192,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char pk1[56];,dd1571adf4eeb757e64475398988eb6c7477f33d46d9c696e2a7bdc945852ea3
wireshark-1.4.15/epan/crypt/crypt-des.c,193,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char c[28];,0a844eba2f873a69747725393ccc925042bc99c110e1154bd2053256cd4c5de1
wireshark-1.4.15/epan/crypt/crypt-des.c,194,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char d[28];,d54494382c2804b4a7f27ddf57135e4d1a41690a56458f62ee5580b734aff4e1
wireshark-1.4.15/epan/crypt/crypt-des.c,195,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char cd[56];,6e5efbb577662d9e3f80016ad3e2868598aa0e8c5e2602d9517582b8456bee83
wireshark-1.4.15/epan/crypt/crypt-des.c,196,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char ki[16][48];,1c9ee8122049e82a7f0bfafdd5326c5385ad039b53121397ed076140c987d242
wireshark-1.4.15/epan/crypt/crypt-des.c,197,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char pd1[64];,61bd327608cd8a21bf3cb5a1d717c91fdeb0790dd637dd5a4ba30ec277333899
wireshark-1.4.15/epan/crypt/crypt-des.c,198,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char l[32], r[32];",ec6779238db1a83ced848a0bf912d18d5380de05f87ee4dcc89272ca8942e6a6
wireshark-1.4.15/epan/crypt/crypt-des.c,199,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char rl[64];,ee5e3ef0080b0081d94f235806066ac609c0e1c21aaf04b5df6312829ada000b
wireshark-1.4.15/epan/crypt/crypt-des.c,224,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char er[48];,c989aac2afe318347cc328083f346319aa63aed7da793c8dfb86194a9fe9af52
wireshark-1.4.15/epan/crypt/crypt-des.c,225,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char erk[48];,e623a62adeaa0bfe6f254033dba989549c068a097c9141ec0926e2dc48520c21
wireshark-1.4.15/epan/crypt/crypt-des.c,226,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char b[8][6];,7b723bef8eca08a26ee384ce3858b003a2582a99b0da46e490b08d7b8f95a271
wireshark-1.4.15/epan/crypt/crypt-des.c,227,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char cb[32];,1c4a3467ec06562b7a821ddc47a1864df6be06accd4ff7f7a2eae9dc8c94e524
wireshark-1.4.15/epan/crypt/crypt-des.c,228,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char pcb[32];,32cd4fa4e07474446d9687945bb32693da868db36c1b1b283b5d0f7d5c8df8df
wireshark-1.4.15/epan/crypt/crypt-des.c,229,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char r2[32];,934ad61adf692756a2254851e60f72dd981f332233e4a4d714953ae47d5cab1f
wireshark-1.4.15/epan/crypt/crypt-des.c,289,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char outb[64];,d0827305d66efd44d648e3596f49a71a1d2cfa4e9342c53c71d7ff870aefcf22
wireshark-1.4.15/epan/crypt/crypt-des.c,290,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char inb[64];,0b3556bcbda670236f1f5de8a95aba4aa2d69c6c4a6993863d712124bcb582a7
wireshark-1.4.15/epan/crypt/crypt-des.c,291,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char keyb[64];,f203fd8ee825de424286a8e2e5847e41d34bd6ae0f664c1005931ad42e69b2b3
wireshark-1.4.15/epan/crypt/crypt-des.c,292,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char key2[8];,0e9c0584214025b0f79717b3d9a0de65694ad467f7217ea562e5551d62070c04
wireshark-1.4.15/epan/crypt/crypt-md4.c,132,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char buf[128];,3e1bca1160763f157298ac4722c8c12eb2027fe154ac40a167e1fd2acd1e6091
wireshark-1.4.15/epan/crypt/crypt-md4.c,151,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buf, in, n);",a8cb1f555162a790ecd907ee6a1167958b06f28d42163c574d74be285e6b74af
wireshark-1.4.15/epan/crypt/crypt-md5.c,114,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	    memcpy(p, buf, len);",76f33ebb20b88e081513f4d137c956592dd6058a6fba45534e859236d4fe641f
wireshark-1.4.15/epan/crypt/crypt-md5.c,117,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(p, buf, t);",68a82406c237de5f909df5121365bc06029fcbb06788c42bafc34352bb11e392
wireshark-1.4.15/epan/crypt/crypt-md5.c,126,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(ctx->in, buf, 64);",e3393692ad3af6de1549cb1989fb6b9ce8678c15126e51e7f6a3feebd8500902
wireshark-1.4.15/epan/crypt/crypt-md5.c,135,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ctx->in, buf, len);",2f3509d976e8fefa6a5440fa894767b399525fca437d827e6eab119ba00ccc42
wireshark-1.4.15/epan/crypt/crypt-md5.c,142,44,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"void md5_finish(md5_state_t *ctx, unsigned char digest[16])",b326c6d779edcfd5d156bb8deb5ee3e93f2b349c7fca076cad4ccd009d9a7c2f
wireshark-1.4.15/epan/crypt/crypt-md5.c,179,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(digest, ctx->buf, 16);",fa2ea0cf2018ba19274f851cb996354d64f798d426b89a0b99ef7fc1d1a3ab8b
wireshark-1.4.15/epan/crypt/crypt-md5.c,340,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(k_ipad, key, key_len);",6813d4b3c7da07cc2a8c24d049d449956ae0321b5c21366c83197481965728aa
wireshark-1.4.15/epan/crypt/crypt-md5.c,341,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(k_opad, key, key_len);",c4198ee345c698c7ba86bd52ff038e62ed06b088cedbc393fa8011fd985258d8
wireshark-1.4.15/epan/crypt/crypt-rc4.h,27,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char s_box[256];,70aecc854d2d39cdcb3d14ea558b699b364e595102d0bcc3b0e9eac3a8660573
wireshark-1.4.15/epan/crypt/crypt-sha1.c,233,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy( (void *) (ctx->buffer + left),",4222df3643eb998941a60b3a16a0f51179b697b910d9c67464e9897648dd7a9c
wireshark-1.4.15/epan/crypt/crypt-sha1.c,250,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy( (void *) (ctx->buffer + left),",4222df3643eb998941a60b3a16a0f51179b697b910d9c67464e9897648dd7a9c
wireshark-1.4.15/epan/crypt/crypt-sha1.c,360,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char output[41];,225a3641a92b4bc0bd42d1986f063b5a5decb7d59986a17ce0a6a87dc029b37e
wireshark-1.4.15/epan/crypt/crypt-sha1.c,362,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char buf[1000];,3a8a1141315227cf144877c348c6f8ba3b66790cb7b0693737da92f19d743a59
wireshark-1.4.15/epan/crypt/crypt-sha1.c,363,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char sha1sum[20];,09c248013af33620571fecb2de4450798dd1d0ad5fe1f6bc7307bbc5d015bb44
wireshark-1.4.15/epan/crypt/crypt-sha1.c,410,21,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"        if( ! ( f = fopen( argv[1], ""rb"" ) ) )",f57eee11facd6c147ca54b458c047c63e8e028f397aa90ba5fc52e7e6f2b036a
wireshark-1.4.15/epan/diam_dict.c,3072,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buf,read_ptr,max);",2ade04ac3769f3e6811100477b530f8d6e42c9f9549cfa8e7a6eee591ddf31d8
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,101,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char hf_status[256];,c6111ed91780213b2ca402102147ff7cfa9494c37a7532e0dc1fd585c37795fb
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,103,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char line[1024];,ad1eeb28e691100d9bce0fdd643ca0fd0deec92a65e3a1a31c7747a4dbaf6309
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,794,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char filter_name[256];,d3cc39fd0b1fea3d7954faaca5f7db823a3a428528d97b13287f2272bd6755fa
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,929,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char qs[1024];,1efdca76c7841963b1cce45160169a6b029e7fc27351f33340af463c38a0d9d2
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,932,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char token[1024];,58fb0f66ad0fdc860e1581d9f44dc1eeabc035f5ab79e2086d0eb27a036d1ef0
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1060,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char dissectorname[256];,9c30edf052f80d6adcf12f59eef12067d4301a614e019379dfe884e8f26bddb6
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1442,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char dissectorname[256];,9c30edf052f80d6adcf12f59eef12067d4301a614e019379dfe884e8f26bddb6
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1443,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char tmpstr[256], *ptmpstr;",cad1eeb4c3235de1bebeac987e11e8f45fd448159de9497bc183b216f2231615
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1447,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char hf_index[256];,bc2a463049d1fe971e5379439603a2b80d0845c4142966ca34fee99e12f1510e
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1623,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char fss[256];,8fba5e8c44aa6d56135924ec5ddb73a95acbc670a63085f981b4fc94f387e67d
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1628,21,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			fixed_array_size=atoi(ti->str);,9edd98bee1584ef207416cc98a95bdf8e0c44e6954db3e2685383aefdc3f683e
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1629,4,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"			sprintf(fss, ""%d"", fixed_array_size);",cfed4880b18b43a91cdf6bd4122fe4e2e67cdc0fcab35900c5f7d7269df772b3
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1657,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char filter_name[256];,d3cc39fd0b1fea3d7954faaca5f7db823a3a428528d97b13287f2272bd6755fa
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,1900,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char dissectorname[256], hf_bitname[256];",4f72457b55c0698257f048d39db9994d6ea9b67d2cc91988adfb734a480ac311
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2047,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"			char filter_name[256], base_name[256], tfs_name[256];",8a2acf575712fdb0454af1dda609addfc8c6e51e7a7d81d7683b480ea9cf3363
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2050,4,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"			sprintf(base_name, ""%d"", alignment*8);",cc0a0e79ee8f7511eb39fb59b451ba6498a4fe727107683096ef87f212cc6786
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2149,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char dissectorname[256];,9c30edf052f80d6adcf12f59eef12067d4301a614e019379dfe884e8f26bddb6
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2151,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char tmpstr[256], *ptmpstr;",cad1eeb4c3235de1bebeac987e11e8f45fd448159de9497bc183b216f2231615
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2155,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char hf_index[256];,bc2a463049d1fe971e5379439603a2b80d0845c4142966ca34fee99e12f1510e
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2366,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char filter_name[256];,d3cc39fd0b1fea3d7954faaca5f7db823a3a428528d97b13287f2272bd6755fa
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2508,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char tmpstr[256], *ptmpstr;",cad1eeb4c3235de1bebeac987e11e8f45fd448159de9497bc183b216f2231615
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2511,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char hf_index[256];,bc2a463049d1fe971e5379439603a2b80d0845c4142966ca34fee99e12f1510e
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2606,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char filter_name[256];,d3cc39fd0b1fea3d7954faaca5f7db823a3a428528d97b13287f2272bd6755fa
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2773,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char dissectorname[256], valsstring[256], hfvalsstring[256];",cfc27383d0b3a22c67bbe3e0387f6fe440d7e7a2c23b6819f65fb18b65b3ded2
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2850,12,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			el->val=atoi(ti->str);,6181cfd7e4264cdbccf2026db784fa87b92e0738a41464d6ed42ff55088cb6df
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2993,9,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	infile=fopen(name, ""r"");",fba8860f47607eaf94c84750b1ea89fda9ff7b9bd7fc76aaf05ad5ff837eb987
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3010,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char tmpstr[256], *strptr;",330170df1582836995e7645e1e3de2ae29aab1f88587be3e84e9856de8a977f7
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3057,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char cnfline[1024];,289b98289c73dae1123f9897046328e9d1298486fb68e7a0d271259fb47a6534
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3092,14,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			alignment=atoi(al);,d25f5dd6c1006dc0d0bbe22f6ab3d0da6daa42e1bca78dc7b6d8ec69cbeeb15e
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3140,19,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			union_tag_size=atoi(union_tag);,5584fcdcf1dd7835a2fb37cd156b3141f4accf0386e048596f8b127f3f49e121
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3164,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char idlfile[256];,dbcfc285703919be97e86e84aa26fccbf58828bc22b7858422de760d3eb7de28
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3165,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char tmplfile[256];,84732f2422c8b46c7ea16c818a2fd6ad609d383ba9866015829bee12b64f445f
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3166,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char prefix_str[256];,f49ef2bf3751c9be3fc815df02f067e20635c168f040b9ae82f9299aacb6926e
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3175,11,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	eth_code=fopen(""ETH_CODE"", ""w"");",af83468919cdb137afd9e438addceda4224a2a8736818de88b41864403c7e6fe
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3176,10,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	eth_hdr=fopen(""ETH_HDR"", ""w"");",b6dd83e08dadb865099a572332fe8286a1bf0432b654413e38a1e895f23e42b3
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3177,12,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	eth_hfarr=fopen(""ETH_HFARR"", ""w"");",5417f542ab69d5bcc513c0fb4b55efab40e194bac6eecb65ac07fdce535b36f8
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3178,9,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	eth_hf=fopen(""ETH_HF"", ""w"");",ddd6deb90ffb927048dbd7ab9feef6d46732c414b723b6760dce3a30f416dd5d
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3179,13,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	eth_ettarr=fopen(""ETH_ETTARR"", ""w"");",6cf67ec25529e86209fbee0258a264cd6a9275859efb774c2c118a6544587c79
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3180,10,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	eth_ett=fopen(""ETH_ETT"", ""w"");",cd1c27482079fb327badec9f0591ffe23a04c8ae1c88ac62e2cf747fe7fa8c7e
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3181,9,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	eth_ft=fopen(""ETH_FT"", ""w"");",5251bb3d46039de102ac032cdf7cfaef078461484c231ad4eaa36e6a014354c0
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3182,14,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	eth_handoff=fopen(""ETH_HANDOFF"", ""w"");",d247f8aa135f67e47b2fe8506fd1d1ecf712d02a4d2ebca93664de090889d5dd
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3185,5,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	fh=fopen(idlfile,""r"");",ae6ed83b52e13f4191c61332aa4bbc1bd425f9f42b8b1085354a1c29c24418f6
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3192,5,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	fh=fopen(idlfile,""r"");",ae6ed83b52e13f4191c61332aa4bbc1bd425f9f42b8b1085354a1c29c24418f6
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3342,5,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	fh=fopen(line, ""w"");",44d6a9f119d1cdf9fd045506da0a8f4c70d633c7f87cad15e91b87baf72be5cf
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3344,6,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	tfh=fopen(tmplfile, ""r"");",d278f0fcb5b6151f0b5c067a31429afb03b14cb726376e114094453e0d8c0974
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3378,5,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	fh=fopen(line, ""w"");",44d6a9f119d1cdf9fd045506da0a8f4c70d633c7f87cad15e91b87baf72be5cf
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,3380,6,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	tfh=fopen(tmplfile, ""r"");",d278f0fcb5b6151f0b5c067a31429afb03b14cb726376e114094453e0d8c0974
wireshark-1.4.15/epan/dissectors/packet-3g-a11.c,366,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char attrname[ATTRIBUTE_NAME_LEN_MAX];,9af0f2682c1c4f13e6180ba09c0c7e6a615b7dfa42af95e9d370b431bf928fcb
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,482,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ifcid, pinfo->dl_src.data, LOWPAN_IFC_ID_LEN);",25668d96687610b415ee46bc6d7918a1c426c16bc356d7ac0c3a0295ece93d8a
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,492,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ifcid, &addr, LOWPAN_IFC_ID_LEN);",67b8e6e2ec281aa69774300685659e6a0fb37e3efd1d7ec5200367a6d30183dd
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,527,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ifcid, pinfo->dl_dst.data, LOWPAN_IFC_ID_LEN);",58e3059d7d685cac5ba23f656d2d04cdff378fa794cd29ddbab956454f595176
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,537,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ifcid, &addr, LOWPAN_IFC_ID_LEN);",67b8e6e2ec281aa69774300685659e6a0fb37e3efd1d7ec5200367a6d30183dd
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,583,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buffer, ipv6, sizeof(struct ip6_hdr));",a6161cb77f30115379f594560cf750a20fd9cf3318e1a4ad3dd69807edda5f58
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,588,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(cursor, LOWPAN_NHDR_DATA(nhdr), nhdr->length);",8bc55ee96fb77bcd78307a8905bc99753b2c5ab7921b59027efcd9c08ff5455a
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,897,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ipv6.ip6_src.bytes, lowpan_llprefix, sizeof(lowpan_llprefix));",05247e291468b520edd5617172cf0ad6eedba10a1f8ede8112a1f371029e8d32
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,906,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&ipv6.ip6_src.bytes[8], pinfo->src.data, 8);",b0c22ac68d54f7fac0e887928ad9e3eee276e9966d0a1f3ccecf1bab88ed503f
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,934,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ipv6.ip6_dst.bytes, lowpan_llprefix, sizeof(lowpan_llprefix));",b3f33f5ce241b4b270ff80336696ec2603540a8dc74d4c6b82abf2068ab6c4a9
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,943,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&ipv6.ip6_dst.bytes[8], pinfo->dst.data, 8);",8b476c9ce427c12aafff00948826231b41975530704d3b9be0fc7f20085586dd
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,1092,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(LOWPAN_NHDR_DATA(nhdr_list), &udp, sizeof(struct udp_hdr));",db326c0368ec49aec0edef5eb6a01b04967af21168af8d84e15517dcae71017e
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,1607,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(LOWPAN_NHDR_DATA(nhdr), &ipv6_ext, sizeof(struct ip6_ext));",e8edbafe8cafe9e46e065bca8ee616a8e0a130fa060a892f9cfc79e2900766f1
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,1775,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&cksum_phdr.src, pinfo->src.data, sizeof(struct e_in6_addr));",009bb7b9123dd83346c2348d1b7135bc88558864c381a41305d5442b1134802b
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,1776,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&cksum_phdr.dst, pinfo->dst.data, sizeof(struct e_in6_addr));",19e874fd92ded6a3856719714c9deae326f18927659aa9567389bc2d2b715cdd
wireshark-1.4.15/epan/dissectors/packet-6lowpan.c,1802,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(LOWPAN_NHDR_DATA(nhdr), &udp, sizeof(struct udp_hdr));",69b641b5ef3737646fb50faabf317fe3202d398f254b9b8448343f457a9f9028
wireshark-1.4.15/epan/dissectors/packet-afs.c,427,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	{ 	char tmp_orxsv[length+1]; \,43dceb258179bdb0c0a4c1a00382de91c3500fbc5e5e6b3efb8608c887e87ef7
wireshark-1.4.15/epan/dissectors/packet-afs.c,644,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char tmp[10]; \,ab14bd4896fb6a98787fbd197fb604c940941afb1da7fc1efb80aff4b1abf38b
wireshark-1.4.15/epan/dissectors/packet-afs.c,1691,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char user[128]; /* Be sure to adjust sscanf()s below if length is changed... */,5c86aa8de756676e3ff49d29aacdf37152066de234aa4d3f3812914e4678f166
wireshark-1.4.15/epan/dissectors/packet-agentx.c,299,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char context[1024];,a31bcaffed02bf2582e4407a019e2467ec2fe922e5cb01bec048a42abfcb859c
wireshark-1.4.15/epan/dissectors/packet-agentx.c,343,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str_oid[2048];,d9ce4d503972bca71b87ba686945638e79abf840bf00a66a128051840c40e972
wireshark-1.4.15/epan/dissectors/packet-ajp13.c,637,12,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,      cl = atoi(hval);,3e143f4e551a8064fafb9eada0454bb5e8d7b114320e3144943e2a8111c1e1c5
wireshark-1.4.15/epan/dissectors/packet-ansi_637.c,210,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char ansi_637_bigbuf[1024];,b0a37023fa6663bd5316d2dd7c0c9de02633ea35efdafc950944cd1f9c2b6a77
wireshark-1.4.15/epan/dissectors/packet-ansi_637.c,211,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char gsm_637_bigbuf[1024];,b0e86c309defc5eae5baadc33bb1f68b9bf37411d9153e298388c78c13405aef
wireshark-1.4.15/epan/dissectors/packet-ansi_637.c,212,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char ia5_637_bigbuf[1024];,93a3f0ef56d4b1a67e273a429b62ab41188c2c11928d71601cca58a1728594ba
wireshark-1.4.15/epan/dissectors/packet-ansi_683.c,90,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char bigbuf[1024];,79440a3d26a41d342453534437930b7f13f6d946f57b86e3c4ebbe516cb770f2
wireshark-1.4.15/epan/dissectors/packet-ansi_683.c,95,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char dtmf_digits[16] = ""?1234567890?????"";",8ea14e76096951965af7c543cbd5b856228939dfa78dfa91bbacfd93b8ca0ec8
wireshark-1.4.15/epan/dissectors/packet-ansi_683.c,96,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char bcd_digits[16] = ""0123456789??????"";",5c57dad22e63091b62dff187103b33efc685471c0371fe8ba6ce86ced5e8e30f
wireshark-1.4.15/epan/dissectors/packet-ansi_801.c,107,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char bigbuf[1024];,79440a3d26a41d342453534437930b7f13f6d946f57b86e3c4ebbe516cb770f2
wireshark-1.4.15/epan/dissectors/packet-ansi_a.c,714,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char a_bigbuf[1024];,78fb3d82c19967255ed139ee4830937cedce622c1cc5212f459a5d350cc4fde7
wireshark-1.4.15/epan/dissectors/packet-ansi_a.c,735,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char out[16];,032c587684588a772153429155d7dff577c2d120b2b97bf2c72414a13434b8aa
wireshark-1.4.15/epan/dissectors/packet-ansi_map.c,1366,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char out[15];,623304ce3f590a32c26994440d5d6478a8a8aefcdfaf220a70de50ebbf19bd47
wireshark-1.4.15/epan/dissectors/packet-arp.c,225,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(cur, ad, MAX_E164_STR_LEN);",52812c6ed021911a324922faf04fcd811d76714d1461ee9a9af296ebd9847350
wireshark-1.4.15/epan/dissectors/packet-arp.c,228,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(cur, ad, ad_len);",a53cf9e6831b6c6b7bca07f0fcc821dcf9dd9efa0e1dbdd53a586475a6f9d594
wireshark-1.4.15/epan/dissectors/packet-arp.c,493,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(value->mac, mac, 6);",529689746e9fff9b11149fe92f8db4a618ba3d8372891ef5cae1e9d1f685cc61
wireshark-1.4.15/epan/dissectors/packet-artnet.c,758,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char string[255];,4f2b1615d9f5738599286ba756e99c103f6be2c0427a51e1230c6f26febc9fe0
wireshark-1.4.15/epan/dissectors/packet-atalk.c,803,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(request_key.src, (!aspinfo.reply)?pinfo->src.data:pinfo->dst.data, 4);",e65463aca5ef056bbf6a61f506324414b10cc5b7072e73c6db45db1357e3b528
wireshark-1.4.15/epan/dissectors/packet-atalk.c,1289,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(request_key.src, (!aspinfo->reply)?pinfo->src.data:pinfo->dst.data, 4);",2a57ac27c40c281c16fa90a10994d1469874675466b17bb7fb4a1f80ce611c6f
wireshark-1.4.15/epan/dissectors/packet-bacapp.c,6379,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    ar[256];,1a00325ba9c808155c75436b714316762a2b377c78c83775d5ec08adaa2ec8ab
wireshark-1.4.15/epan/dissectors/packet-ber.c,3296,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str_arr[256];,b452267ccc5f6fbc5f2e76f8434f8a22e830176f974ef04eb8afd700db490e25
wireshark-1.4.15/epan/dissectors/packet-ber.c,3984,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[35];,07a6a0490757243f061598ffe3d3b2c5e215b677315425f5caf9ccf28ab03f76
wireshark-1.4.15/epan/dissectors/packet-ber.c,3987,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char first_delim[2];,5ef7644053e2ef7bec531f9598b10fbcbdba4363172d71112178102b185595c4
wireshark-1.4.15/epan/dissectors/packet-ber.c,3989,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char second_delim[2];,968e0f73d74d49a58117d477b9cabc79fd0197c935c5c236937f1d263677fbf6
wireshark-1.4.15/epan/dissectors/packet-ber.c,4090,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char outstr[33];,36a30b27b7ee136af0c1233b0ce4ac9120f7d7d9525e1d7f5c3ad0192364336e
wireshark-1.4.15/epan/dissectors/packet-bittorrent.c,169,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char id[4];,bdbb00c52bf11f8763dbee26b496063be2a0f79d65de119089c54635e645ab6b
wireshark-1.4.15/epan/dissectors/packet-bootp.c,233,52,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static void rfc3825_lci_to_fixpoint(const unsigned char lci[16], struct rfc3825_location_fixpoint_t *fixpoint);",7701186d36bd260e56e9b6219ab066eba5ae05dcd84c1f9a935a0951686f1395
wireshark-1.4.15/epan/dissectors/packet-bootp.c,1671,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			unsigned char lci[16];,1f91f918f07d7f9eadac3c5e958c6e3b3adb6b4b0aa776862c4413d5e1448b11
wireshark-1.4.15/epan/dissectors/packet-bootp.c,2345,40,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"rfc3825_lci_to_fixpoint(const unsigned char lci[16], struct rfc3825_location_fixpoint_t *fixpoint)",d8623a909e64cbc2e664e0b17ff5d095f3409e64c3636bde1ea4262acb61464c
wireshark-1.4.15/epan/dissectors/packet-bootp.c,3372,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char bit_fld[64];,d499d8154005b5db24c7c04e96a2bd396c7f73ead8915139a6809a7404a961f6
wireshark-1.4.15/epan/dissectors/packet-bootp.c,3915,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char bit_fld[24];,2d5514dd0d08c5486844f4953d359573bf8af9df66ad7cae9fed042e65affe7b
wireshark-1.4.15/epan/dissectors/packet-bootp.c,4396,8,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,		ii = atoi(optiondetail[0]);                      /* get the bootp option number               */,a511c7028e9fed9cfde6acc64aab5c7b06a302b4884bc26dc7b1e5676f57b372
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,497,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char label[MAX_NUM_BITS + 1];,6aedcc24c1cb16daa0a184c110d84a092e33275a1c4e1a04ab75a255cc2e5cc3
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,516,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char formatted_label[10];,bd70ab4218b3142ca04e0ac10e52396d01a5e71e549139ad8678b51434d71247
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,527,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char formatted_label[18];,d67b140be8cf8bbea350f242a4bfce66d9059ca8fafc3b30255a6bae442e3471
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,825,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char result[BSSGP_TRANSLATION_MAX_LEN];,045092e7829f28762ae6ba5c3cae2c3d41eefcfe172b8aeb41437226ec755e57
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,862,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char result[BSSGP_TRANSLATION_MAX_LEN];,045092e7829f28762ae6ba5c3cae2c3d41eefcfe172b8aeb41437226ec755e57
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,954,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char result[BSSGP_TRANSLATION_MAX_LEN];,045092e7829f28762ae6ba5c3cae2c3d41eefcfe172b8aeb41437226ec755e57
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,1021,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char result[BSSGP_TRANSLATION_MAX_LEN];,045092e7829f28762ae6ba5c3cae2c3d41eefcfe172b8aeb41437226ec755e57
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,1036,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char result[BSSGP_TRANSLATION_MAX_LEN];,045092e7829f28762ae6ba5c3cae2c3d41eefcfe172b8aeb41437226ec755e57
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,1290,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char digits_str[MAX_NUM_IMSI_DIGITS + 1];,076450c0c72381f97dd86849e8c438603ff4a22b82f1f6e48d02ebc8f3199053
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,1408,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char mcc_mnc[RES_LEN];,1d6a3712fdc237095fbe941f933a0d37ad6fd636d96d0ead416d60fea0f832a9
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,1462,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char lai[RES_LEN];,180fdc2324f94218741367bf19dbe88a70324c64870e1e9fa3656b1e8157e6d3
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,1480,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char rai[RES_LEN];,2e5b9614cf09ec11154978ede3eac5c0a81737044ff3a3c5f586b2d9745c566c
wireshark-1.4.15/epan/dissectors/packet-bssgp.c,1496,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char rai_ci[RES_LEN];,82b24da2d6e992618c7c0ad7c42bc4e2d353e4828b7258f84b5e2cdda83281a4
wireshark-1.4.15/epan/dissectors/packet-bthci_cmd.c,835,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char buf[128];,a7e6ef4b73cb0cf74f88a6a9d4e04522c79ea9387f8f272e9d0ac542fa7168aa
wireshark-1.4.15/epan/dissectors/packet-bthci_evt.c,639,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char buf[128];,a7e6ef4b73cb0cf74f88a6a9d4e04522c79ea9387f8f272e9d0ac542fa7168aa
wireshark-1.4.15/epan/dissectors/packet-camel.c,1233,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char a_bigbuf[1024];,78fb3d82c19967255ed139ee4830937cedce622c1cc5212f459a5d350cc4fde7
wireshark-1.4.15/epan/dissectors/packet-camel.c,3034,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char camel_time[CAMEL_DATE_AND_TIME_LEN];,8b8cb726223f4de18bf64e8559502b337ac3955cc6ce0f218d6fe0a1d33aa29e
wireshark-1.4.15/epan/dissectors/packet-camel.c,3035,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char c[CAMEL_DATE_AND_TIME_LEN]; /*temporary container*/,4f76e7580285e6d48724eb36ce742b65e13e2b026ab46eca923e3cb9d888a2e8
wireshark-1.4.15/epan/dissectors/packet-camel.c,6977,32,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,	application_context_version = atoi(version_ptr+1);,ad0fb1034ce2a867246eed5716c8d15072cdb333912029ed03309efe60d1c2fe
wireshark-1.4.15/epan/dissectors/packet-catapult-dct2000.c,1178,13,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"            atoi(format_text(outhdr_string+digits_start, digits));",3e4c278628865e66a06c7d63d4efdb243bb2400a2d7cf8150e2189a5dccb37e0
wireshark-1.4.15/epan/dissectors/packet-catapult-dct2000.c,1757,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                       atoi((char*)tvb_get_ptr(tvb, variant_start, variant_length)));",942726106ebed98c8e82b112b256932403326825ecc5c7b0d959cce9c8ea5431
wireshark-1.4.15/epan/dissectors/packet-cdp.c,1164,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char blanks[64+1];,61600c464001480e700edf86d3a8fe16c43042d4c982b64a1beaf8aab2056de5
wireshark-1.4.15/epan/dissectors/packet-cip.c,474,16,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static const char my_hex_digits[16] =,945143ec065b57d16dbe2fbb52d5e587b3f0690ca7321574012057bb7d857ed2
wireshark-1.4.15/epan/dissectors/packet-clnp.c,198,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char        flag_string[6+1];,cb72e5fe343446b93e3df202e953d39569a5c04a7e2cfe130e96b3a823bfe0b1
wireshark-1.4.15/epan/dissectors/packet-cms.c,278,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"unsigned char digest_buf[MAX(SHA1_BUFFER_SIZE, MD5_BUFFER_SIZE)];",671a92758a83ba5ab8c9fddf0452387c1d70015a6e9a56a8decd59d5416a9b1b
wireshark-1.4.15/epan/dissectors/packet-cops.c,2741,6,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,     char info[50];,40e2994c265dc5d4525ec0a561e29bb134dd4dec2137bd70bc677d98da36630b
wireshark-1.4.15/epan/dissectors/packet-cops.c,3134,6,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,     char info[50];,40e2994c265dc5d4525ec0a561e29bb134dd4dec2137bd70bc677d98da36630b
wireshark-1.4.15/epan/dissectors/packet-cops.c,5729,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char bit_fld[48];,7c10e04d28f473db40e3dd117d7c0a55e24262681fb26b1b3bc0383a2a14ed9c
wireshark-1.4.15/epan/dissectors/packet-cpfi.c,100,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char src_str[20];,1f4cf8505703d0b364f3bbe21f1eff3335002f23bbe69ebfcfc86d26ddb2a779
wireshark-1.4.15/epan/dissectors/packet-cpfi.c,101,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char dst_str[20];,b0dcd85841a3f2c831d14091d2368f0695404dea78d2734a130bb6b81524a010
wireshark-1.4.15/epan/dissectors/packet-cpha.c,117,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *opcode_type_str_short[NUM_OPCODE_TYPES+1] = {,2e5a12db6d81770abcbca32c6efc0f51962cb2fa3633874e7996e3621eb15fc0
wireshark-1.4.15/epan/dissectors/packet-cpha.c,131,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *opcode_type_str_long[NUM_OPCODE_TYPES+1] = {,f230723c981e42fc820368d76f5482cb8a0d6be0812e555835385e6fa3ef48e3
wireshark-1.4.15/epan/dissectors/packet-cpha.c,146,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *state_str[NUM_STATES] = {,1dd093f169fbdf37c3d8115c729ca984f9bcc9ac9237ddf03c5ed04885eb52d8
wireshark-1.4.15/epan/dissectors/packet-cpha.c,162,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *ha_mode_str[NUM_HA_MODES+1] = {,b45a8a43f8e3028dbb856b8c2bdaef1dbcd4aa55ac37b3769cff97cb4e0fcfc8
wireshark-1.4.15/epan/dissectors/packet-dcc.h,254,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char	string[80*22];,ac13de6f5e6beba2dd767e6987aee4e8ae9826c242d82923f8e57b1db682aed2
wireshark-1.4.15/epan/dissectors/packet-dcc.h,278,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,typedef char DCC_BRAND[64];,9c3bfd596a73b0463cca5568709b2a12cf9f029618d91a572eb71ee29f78b4a9
wireshark-1.4.15/epan/dissectors/packet-dcc.h,342,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char	msg[DCC_ERROR_MSG_LEN];,4941c572cb82b7293ae78b6de7fbd6620da47349d7b3e3716fff1c677ff9eb0e
wireshark-1.4.15/epan/dissectors/packet-dcc.h,381,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    msg[DCC_FLOD_MAX_RESP];,ceec562ba9ae6c8ebff3faa5222e7ed19d7eb00dccac3c0f6888e6e130e2cb5f
wireshark-1.4.15/epan/dissectors/packet-dcc.h,387,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char	    str[DCC_FLOD_MAX_RESP];,17909a334aff7ab285553c9f51ba3dae79afec39a53053969be7fb621207422b
wireshark-1.4.15/epan/dissectors/packet-dcc.h,403,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char	str[DCC_FLOD_VERSION_STR_LEN];,bd0ddd0a8d750cfb46131afca8baa88fbd0b1b664584c7e6ccad4f56d7e1a28f
wireshark-1.4.15/epan/dissectors/packet-dcc.h,410,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char	pad[256-sizeof(DCC_FLOD_VERSION_BODY)-sizeof(DCC_SIGNATURE)];,72577c99d07343230375db33d793894e406d2ba17f0d226d11ca5edb60fc0ee8
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,2530,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(tab,&vars->client_challenge,8);",d20db64c3fece8cce0206359925d04ec46305de029c2273218c9fb9fce0895a5
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,6832,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char ntlm_pass_unicode[258];,5d0d6006253a2157917991bbd9638b172f70c2bcafa2440070a1262259cd0d2f
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,6862,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(pass_list[0].md4,&(ntlm_pass_hash.md4),sizeof(md4_pass));",049b40c65692479acf29995a983416f1f0b3d94dde3511c03ec7b2962df61bd4
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,6868,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(pass_list[i].md4,ek->keyvalue,16);",7a9018659ea2797d2cc7060e3d9d7e47a2cc2eadce26855dd0989d588cee72b3
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,6966,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&vars->session_key,session_key,16);",ecf6ef325706022fa0f3e023c41a1662e291110a76ecef80e8ccc44521b92061
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,7692,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,7701,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,7710,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-1.4.15/epan/dissectors/packet-dcerpc.c,584,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&d->auth_fns, fns, sizeof(dcerpc_auth_subdissector_fns));",c2f8043fcb125c4f0442c2fcad49568694323995aeff8479075cd13a1690d1ca
wireshark-1.4.15/epan/dissectors/packet-dcom.c,335,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(machine->ip, ip, 4);",17735a396964aeefe1100b94efcfab75f96333e05934cfd723d12fba4aaa48b0
wireshark-1.4.15/epan/dissectors/packet-dcom.c,1812,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"						memcpy(ip, &curr_ip, sizeof(curr_ip));",267589574a792f35dd5c64d30ededa09d79212b8c1e061020ee663c5cc187f5b
wireshark-1.4.15/epan/dissectors/packet-dcp-etsi.c,230,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(output+index_out, deinterleaved+index_coded, rsk);",b08879a316bae516e68ac11b51edb6c04da56b1e4a9ed149337c1c7236a11a47
wireshark-1.4.15/epan/dissectors/packet-dcp-etsi.c,232,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(output+index_out+PFT_RS_N_MAX, deinterleaved+index_coded, PFT_RS_P);",2f336f72d25d487212f79fc1b9b6cfdc8b6ba2040e60c86aa0b6b3b0ced847a0
wireshark-1.4.15/epan/dissectors/packet-dect.c,1844,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(rcrcdat, pkt_ptr, 6);",da43f03509bcf21e2ac2e4fe1d8988347a58acb0643f7c62ee3bd10b194127c8
wireshark-1.4.15/epan/dissectors/packet-dect.c,1881,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy((char*)(&(pkt_afield.Tail)), (char*)(pkt_ptr+1), 5);",52eed6d450b755e88e0547a932c2c350a6039a3e0642828310e8cc914344dc86
wireshark-1.4.15/epan/dissectors/packet-dect.c,1888,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy((char*)(&(pkt_bfield.Data)), (char*)(pkt_ptr+8), pkt_len-5-8);",66c242a075ab150dad937fc66574b8462a8a6a279ae623a6456279a95f5f21f4
wireshark-1.4.15/epan/dissectors/packet-dhcpv6.c,412,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char bit_fld[24];,2d5514dd0d08c5486844f4953d359573bf8af9df66ad7cae9fed042e65affe7b
wireshark-1.4.15/epan/dissectors/packet-dhcpv6.c,612,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char bit_fld[24];,2d5514dd0d08c5486844f4953d359573bf8af9df66ad7cae9fed042e65affe7b
wireshark-1.4.15/epan/dissectors/packet-dhcpv6.c,1009,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char domain[256];,24fa0e222b1354d5121c96d9f2725c3a6ddc7009ecb14e4faad8490591e58227
wireshark-1.4.15/epan/dissectors/packet-dis-pdus.c,522,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(newSubtree, parserNodes, sizeof(DIS_ParserNode) * fieldCount);",af8e1a8126cb0ee77e8717f3a26d033a497b87ca306444a746038d7c86527fd1
wireshark-1.4.15/epan/dissectors/packet-distcc.c,146,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char argv[256]; ,80cf4aa79f4082414e0b5d7f2e91e19ec98e80c08ea30266ba676ebbc3dfe286
wireshark-1.4.15/epan/dissectors/packet-distcc.c,177,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char argv[256]; ,80cf4aa79f4082414e0b5d7f2e91e19ec98e80c08ea30266ba676ebbc3dfe286
wireshark-1.4.15/epan/dissectors/packet-distcc.c,208,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char argv[256]; ,80cf4aa79f4082414e0b5d7f2e91e19ec98e80c08ea30266ba676ebbc3dfe286
wireshark-1.4.15/epan/dissectors/packet-distcc.c,286,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char token[4];,d810fa2c8b21aace72ba9d7c73498b45bc5916f6470f597100311ec8eb19942d
wireshark-1.4.15/epan/dissectors/packet-dnp.c,2486,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(tmp_ptr, chk_ptr + data_offset, chk_size - data_offset);",07b6e880e558d2b34ad85f6b3747fa92bd2000f5cdd2db1300aeb6c7156ba251
wireshark-1.4.15/epan/dissectors/packet-dns.c,887,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char buf[10+1+3+1 + 2+1+3+1 + 2+1+3+1+3+1 + 1 + 1];,3cf44e848d45656b58fd7370508bb9dba64d10f93ae6af670cf9a4c77fc39a97
wireshark-1.4.15/epan/dissectors/packet-dpnss.c,1109,18,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"			sup_str_num = atoi(tvb_format_text(tvb, offset, sup_inf_str_len));",90fbb7b627214d08f2e086ef0d15f48a199c2498abc61623fcb56156f159e886
wireshark-1.4.15/epan/dissectors/packet-edonkey.c,2742,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                char binarray[129];,cfd3e28210170a92c339be0d73392641136a42e0aff87fd5ba08bd6639a15e87
wireshark-1.4.15/epan/dissectors/packet-enip.c,642,16,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static const char my_hex_digits[16] =,945143ec065b57d16dbe2fbb52d5e587b3f0690ca7321574012057bb7d857ed2
wireshark-1.4.15/epan/dissectors/packet-fcdns.c,1203,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char dpbuf[2+8+1];,ad3404a4796c3eaf4251adf7f9f6b4666966cbe0c84300ade4fb684f0c962bd2
wireshark-1.4.15/epan/dissectors/packet-fcswils.c,1230,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char dpbuf[2+8+1];,ad3404a4796c3eaf4251adf7f9f6b4666966cbe0c84300ade4fb684f0c962bd2
wireshark-1.4.15/epan/dissectors/packet-fddi.c,323,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(dst, tvb_get_ptr(tvb, FDDI_P_DHOST + FDDI_PADDING, 6), sizeof dst);",96de379d3afd6c35093ae9819098f382c215759df166467f452abf91999ca2aa
wireshark-1.4.15/epan/dissectors/packet-fddi.c,348,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(src, tvb_get_ptr(tvb, FDDI_P_SHOST + FDDI_PADDING, 6), sizeof src);",2d60892e080e103e3aff97babd7101f23fbc8157dbfcc4a33dcdd8bcb4ce86f0
wireshark-1.4.15/epan/dissectors/packet-fix.c,200,12,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    size = atoi(value) +tag->ctrla_offset - base_offset +1;,d5dfd23d4a916bf2f8dccd7be88b488f70412cd3a2512b8cdd77c02609ee95ca
wireshark-1.4.15/epan/dissectors/packet-fix.c,296,21,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        tag_value = atoi(tag_str);,5740dcf03734212c0a8095f1ab9e6388584cee919325ce82ea3a5afea8bae36d
wireshark-1.4.15/epan/dissectors/packet-fix.c,334,58,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                            ""%s (%s)"", value, val_to_str(atoi(value), fix_fields[i].table, ""unknow %d""));",b836844877ce0ec1b0dbbefdcbd143e1322e79545e7e959d375fd4662fae0fc4
wireshark-1.4.15/epan/dissectors/packet-fix.c,356,31,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                    sum_ok = (atoi(value) == sum);,41c9171259552010e2ebdbe5862c6af0940f3fa9d72dc7d76775d9913c85cfb7
wireshark-1.4.15/epan/dissectors/packet-fmp.c,453,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char msg[MAX_MSG_SIZE];,d25e99af9026a59ea27cf74258b53d81101c5300c2c998d05492a0ad05c526e7
wireshark-1.4.15/epan/dissectors/packet-ftp.c,298,15,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,		*ftp_port = atoi(p);,778f3007f31260c719d981bc61ac9ea2dd1caebee2f01099de3e26d9daf42963
wireshark-1.4.15/epan/dissectors/packet-fw1.c,117,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char	*p_interfaces[MAX_INTERFACES];,f0d4df75c2aebbf9298f694b3d0dc2fc3f8ad4c3e5f384716c334be041486fd4
wireshark-1.4.15/epan/dissectors/packet-giop.c,1884,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(print_string, in, len);        /* and make a copy of input data */",776a0f9638f9226fab9b06894bc9d9c192fbe566571cbb9d12acfa2fe34c530f
wireshark-1.4.15/epan/dissectors/packet-gsm_a_bssmap.c,521,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char a_bigbuf[1024];,78fb3d82c19967255ed139ee4830937cedce622c1cc5212f459a5d350cc4fde7
wireshark-1.4.15/epan/dissectors/packet-gsm_a_common.c,683,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char a_bigbuf[1024];,78fb3d82c19967255ed139ee4830937cedce622c1cc5212f459a5d350cc4fde7
wireshark-1.4.15/epan/dissectors/packet-gsm_a_common.c,1233,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[10+1];,796d92e17631c9b82305c37a2d73a1b0f3e9ca507f8e544037045f310afc722f
wireshark-1.4.15/epan/dissectors/packet-gsm_a_common.h,62,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char out[15];,623304ce3f590a32c26994440d5d6478a8a8aefcdfaf220a70de50ebbf19bd47
wireshark-1.4.15/epan/dissectors/packet-gsm_a_dtap.c,487,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char a_bigbuf[1024];,78fb3d82c19967255ed139ee4830937cedce622c1cc5212f459a5d350cc4fde7
wireshark-1.4.15/epan/dissectors/packet-gsm_a_gm.c,2972,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy ( str , cptr , len<MAX_APN_LENGTH?len:MAX_APN_LENGTH );",19451f9722444c800590fe38c107a3f75a57b14611e3044b55623d8c617ea8a2
wireshark-1.4.15/epan/dissectors/packet-gsm_a_rp.c,79,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char a_bigbuf[1024];,78fb3d82c19967255ed139ee4830937cedce622c1cc5212f459a5d350cc4fde7
wireshark-1.4.15/epan/dissectors/packet-gsm_a_rr.c,694,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char a_bigbuf[1024];,78fb3d82c19967255ed139ee4830937cedce622c1cc5212f459a5d350cc4fde7
wireshark-1.4.15/epan/dissectors/packet-gsm_map.c,4322,19,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static unsigned char msgbuf[1024];,4bd4ed06ee540e550897474af7e34c32dad0d6722b1af6788a8336eb25a2f211
wireshark-1.4.15/epan/dissectors/packet-gsm_map.c,18153,35,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,		  application_context_version = atoi(version_ptr+1);,ad0fb1034ce2a867246eed5716c8d15072cdb333912029ed03309efe60d1c2fe
wireshark-1.4.15/epan/dissectors/packet-gsm_sms.c,163,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char bigbuf[1024];,79440a3d26a41d342453534437930b7f13f6d946f57b86e3c4ebbe516cb770f2
wireshark-1.4.15/epan/dissectors/packet-gsm_sms.c,343,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char                addrbuf[MAX_ADDR_SIZE+1];,6b578d7187b5a878769aecc7fd44412fad92b89973f923445b98449264a206ac
wireshark-1.4.15/epan/dissectors/packet-gsm_sms.c,2531,1,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,char    messagebuf[SMS_MAX_MESSAGE_SIZE+1];,9df84952d4c9418b384d4790b08a6d002579875c4284081c3a944af2fb1ba9d3
wireshark-1.4.15/epan/dissectors/packet-h225.c,3099,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char codec_str[50];,acf6e2300867cfe19bb169a488a8c37419444c89ddebf149fa646380a871c9e1
wireshark-1.4.15/epan/dissectors/packet-http.c,1332,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(response_chars, line, 3);",8d0031d4020d85f91b6559282305d0124d69d9b618d31fc5b860cb1098bf581f
wireshark-1.4.15/epan/dissectors/packet-http.c,1861,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			g_free ((char *) hf[i].hfinfo.name);,6dbb60821862075ae6e0ed2f73647ed1cd42f504b34283f66d60908a277a794f
wireshark-1.4.15/epan/dissectors/packet-http.c,1862,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			g_free ((char *) hf[i].hfinfo.abbrev);,dc40b86bd84e71343eb35849fad6abddc0cb26f31e10d486ecdb0a97536a429b
wireshark-1.4.15/epan/dissectors/packet-http.c,1863,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			g_free ((char *) hf[i].hfinfo.blurb);,b1674e7b08d074791492b7fa99ab76da313ce3c7a44ab4e5508bb6528e6d1d83
wireshark-1.4.15/epan/dissectors/packet-iax2.c,566,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(new_key->address_data,address_p->data,new_key->addr.len);",7ac96dd13a69f779e8087690f0a2f9835c596d65d6961e3feb54c9da509d880b
wireshark-1.4.15/epan/dissectors/packet-iax2.c,1282,15,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"              memcpy(&addr, ie_data->peer_address.data, 4);",c6b566b79d6ae85acca243115719ee9c85daa72583e9790fb77a3d9d182c320f
wireshark-1.4.15/epan/dissectors/packet-icmpv6.c,1637,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"        char typebuf[256], codebuf[256];",8ef19cc9f8869660f7e5ce0fe807e4d53de64f41f813a6f5079748c890e6d371
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,153,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char *wep_keystr[MAX_ENCRYPTION_KEYS];,69e533c76ba223d8bbe13b44ceff67e99b83b36fabd312c7f1097c417e22e196
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,749,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *qos_tags[8] = {,dbc852adb2914af917e0bf55a2c8bd66c84b71857c24e8dc2cd377e47b8d84de
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,763,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *qos_acs[8] = {,7f4b1f6949a42c6c9c8b105fe72805fc83215a517bae37d5280a2328820701ac
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,2495,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char devname[16];,bd42dba51ee4d3031305ca36535af6949cf6d5ead342b5615033abf58a144abf
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,2684,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char out_buff[SHORT_STR];,48c161044536cdaa7925c67ee0e8219ced7ebbe89508113ff089cc35b992ef8a
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,4030,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char out_buff[SHORT_STR], valid_str[SHORT_STR] = """";",b9cc2e1bc5eb7690529b840747ead554cbd5ca4f49516b77a1346ddd45ef9deb
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,4162,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char out_buff[SHORT_STR];,48c161044536cdaa7925c67ee0e8219ced7ebbe89508113ff089cc35b992ef8a
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,5211,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char out_buff[SHORT_STR];,48c161044536cdaa7925c67ee0e8219ced7ebbe89508113ff089cc35b992ef8a
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,5212,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char print_buff[SHORT_STR];,6124c9f22a37482d28ec654d825040ed8955d8f68835c1f2c4df4372b865b7ea
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,5276,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(wlan_stats.ssid, ssid, MIN(tag_len, MAX_SSID_LEN));",f1b3178e18c1e1fbd7068cd8725fa058a10226490ff31951476a97d82e555ed9
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,6992,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char out_buff[SHORT_STR];,48c161044536cdaa7925c67ee0e8219ced7ebbe89508113ff089cc35b992ef8a
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,7915,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(key.bssid, bssid, 6);",af28a52f818ef588eacb740f16014434d52af46948db93091a85c48d4283fa68
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,7916,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(key.src, src, 6);",3265377984be46b20e945e760b3c682c4230ce376e5f2b13eac628f529966a66
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,13341,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(tmp, enc_data, len);",713c6bf8e3c6d2af0b0bd56df3dc665bfd927777f74945f6ef1a4472f3599066
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,13417,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(key.KeyData.Wep.WepKey, bytes->data, bytes->len);",02e699941b98d30c2dcde152569518b7e7fa4fc7926b1813e424beb0d079966d
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,13434,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(key.UserPwd.Ssid, dk->ssid->data, dk->ssid->len);",d2edda4e8630ff32256fdab20238538232f450ed8647e86604db34a655901196
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,13450,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(key.KeyData.Wpa.Pmk, bytes->data, bytes->len);",e472f1f725e7c8601b7bfd832a125efef3579fb5384777e109e5aa17bbb17a90
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,13498,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(key+3, wep_keys[keyidx], wep_keylens[keyidx]);",3544bd892fe33e0f3b53790f26bccfca71723ec877924dfa0936cfd6e1b6c6b6
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,13576,17,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,  num_wepkeys = atoi(tmp);,55623abe68339c414eb51141ff024c02fd643bfa127d9a21dcc42b1faabfac11
wireshark-1.4.15/epan/dissectors/packet-ieee80211.c,13624,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(wep_keys[keyidx], bytes->data, bytes->len * sizeof(guint8));",c7b412c4eedab6a0eafb9101a6fa199f0d6bfedce19ea683c4668b2c14022e1d
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,1809,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char       key[16];,36a3cefea823918ce2cdb6619676777f5598ee9509e53777ca83412692711dcc
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,1810,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char       tmp[16];,6d57f5674432b1f75ad2ce9dbbd31e422e6787f37d45fb1712bedf52492dfb00
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,1811,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char       rx_mic[16];,e5dfded277c2423017a9dd8392e361a859dfe0f1220ebed34cf5df843d3883a3
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,1892,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(key, ieee802154_key, IEEE802154_CIPHER_SIZE);",91f95292346301e17188ffa47aa0b67f0cef821c2a93be9a96dbd2ab72fde908
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,1944,18,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        unsigned char           dec_mic[16];,8c5f71a5a5b63fb4b917f0c81716ae94b337897bc097141dadace3a71cd81f3a
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,2103,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char       block[16];,27e4383b82b15797d74aa67ff8939834585aa782331cb875b366b0a5f347e0d5
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,2163,15,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        else {memcpy(block, a, a_len); memset(block+a_len, 0, sizeof(block)-a_len);}",7d52ebfc88f666e2ccdfe5d1741e3eabfff7b319dca99d4b0d3597cc67e37b4d
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,2178,15,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        else {memcpy(block, m, m_len); memset(block+m_len, 0, sizeof(block)-m_len);}",c9d64da4cdb1da2990aae394082abc16b3db641982e728ca7934d2234289d1f2
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,2592,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ieee802154_key, bytes->data, IEEE802154_CIPHER_SIZE);",9c05a9a31e26ae586f257c8d3cf712a3db9bf901e3a9fe5c3000995d9924692a
wireshark-1.4.15/epan/dissectors/packet-igmp.c,773,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[20];,90f9d5685b966121e5a6eae2f61e8f266d703e27ea4c7b87d2a4e8c629a5699b
wireshark-1.4.15/epan/dissectors/packet-image-png.c,243,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char str[5];,699a5cb0c29492d502ce566dbbcaf5eed620d8bc45bb32f34fe463ab034adc93
wireshark-1.4.15/epan/dissectors/packet-infiniband.h,108,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char data[232];,f6521d22b8e02866b3b759cb3d3a0afa2b73f91244b50f496e99da8da02ac069
wireshark-1.4.15/epan/dissectors/packet-ip.c,1639,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&addr, iph->ip_src.data, 4);",84415ca5d90df7b605d51e9ce0ede83d1d78a2ce5525558e3a89cf8b6a945418
wireshark-1.4.15/epan/dissectors/packet-ip.c,1699,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&addr, iph->ip_dst.data, 4);",47d4c0e4168841c826e28592ed41f082d67bb682549088dfa0614b9a51fc54b6
wireshark-1.4.15/epan/dissectors/packet-ipdc.c,86,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char tmp_tag_text[IPDC_STR_LEN + 1];,976ccc630bfc03d649071343872c97f26d05d49227a2ecd4460d6556295e9fd8
wireshark-1.4.15/epan/dissectors/packet-ipmi-picmg.c,715,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[32];,917f6ed0ae72790ae84d5546f1fd6d51df65d8cc348e82b8bf2389e3a4b61c78
wireshark-1.4.15/epan/dissectors/packet-ipmi-picmg.c,818,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[32];,917f6ed0ae72790ae84d5546f1fd6d51df65d8cc348e82b8bf2389e3a4b61c78
wireshark-1.4.15/epan/dissectors/packet-ipmi-se.c,1589,15,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static const char *override_state[2] = {,8ea0c217e939452e3412c8b62ee586eaab8273606e6f2a13c25c97cc0a04c928
wireshark-1.4.15/epan/dissectors/packet-ipmi.c,928,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char buf[64];,c53828a26a00d4ca72b0101c88b4eac4e2138d9eb8057c6b4920f507b2a726a4
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,269,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char suffix[IPSEC_STRLEN_IPV6 + 1];,aabc74385ba9096edec481000a2715ec298d6896a0d1e3de52da3063451b5364
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,342,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(ipv6_suffix,suffix,j + 1);",34936a44906e5bb13ada962ea212fd7aa67a56ff45efefff5f6e5cf59722d5e6
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,366,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char suffix[IPSEC_STRLEN_IPV6 + 1];,aabc74385ba9096edec481000a2715ec298d6896a0d1e3de52da3063451b5364
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,367,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char prefix[IPSEC_STRLEN_IPV6 + 1];,8a1083e870bee514ab5d32a7f7f23aeee767046f9a1501284b28aafeffddf16d
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,396,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(ipv6_addr_expanded,prefix,prefix_len);",592606d78ace30e9f5c415e657da18bf05533e94b2c0a8d9d372a252f8c4e006
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,405,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(ipv6_addr_expanded + IPSEC_STRLEN_IPV6 - suffix_len, suffix,suffix_len + 1);",c6eac58c5d5561447630f5bf5c4a9ce57037ad5ee6acb103f90d935cebf0254a
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,434,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char addr_byte_string_tmp[4];,551416a8c0eaac470526592701dd49f8e30c11964ede2814573f06b5a6d5b4eb
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,435,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char addr_byte_string[4];,3dacbb9fcf0d7f594cb4f0aa75144b61fd0e35aae012084063df81ea0ec4ef1b
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,556,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char addr_string[IPSEC_IPV6_ADDR_MAX + 1];,bf405cc37f9925a63b93c1435ec627fa75c50aa3c15a4a9c7f8114606162fcc7
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,608,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char addr_string[IPSEC_IPV4_ADDR_MAX + 1];,c36dfe4cd55323b74e7dcb888199b875a2594cf01a129e9ae90491ed184542ee
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,762,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char len_string[IPSEC_ADDR_LEN_MAX + 1];,5aaa3315f9f83a64c7bf1f39ef3c410eb6f43e282b8cb22f9a5f891a02fa7f90
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,794,12,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,		  *len = atoi(len_string);,c7c0e77c7564759b65981dff5eb2c83b330ab180ba8ff7e6fc79feaf680c95ed
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1072,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char filter_string_tmp[3];,a75f6cf39809b8e615d872831e32804483d89a55b2d6fcd9ebeb56d2b6fc71b3
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1073,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char addr_string_tmp[3];,27ebe3bc32309ef784bc56a2cda5af8194e1dd636c9c95141727ac3eeb363583
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1530,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char res[3];,75ebaffe4b93ebedc36f6b36e72d37fff420b71cb990d1f7c20a3f428a429077
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1585,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char ctr_block[16];,d4adaf3cb8603993d3acac49d60aa26f6a2f921ce06def6c9a5e3b114bc09144
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1657,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(ip_src + i*2, res, 2);",30720bc402722285d3c5dce066d2684f219aa595be8b7970118f30be014b048a
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1671,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(ip_dst + i*2, res, 2);",9920e6370d3559db2ae85bbde948501f711cfbda17ce5626ae4453b846916677
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1698,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(ip_src + i*2, res, 2);",30720bc402722285d3c5dce066d2684f219aa595be8b7970118f30be014b048a
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1712,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(ip_dst + i*2, res, 2);",9920e6370d3559db2ae85bbde948501f711cfbda17ce5626ae4453b846916677
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1976,20,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,				      unsigned char authenticator_data_computed_car[3];,7cbb6c49c046497e58083807ac83fde727864145e73b37356419e2a3213cf10b
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,2417,14,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			          memcpy(ctr_block, esp_crypt_key + esp_crypt_key_len - 4, 4);",ee58439fcc986e7510abc6769c9fd82587607b0e9fc67a1de5032fdb31b6cde7
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,2418,14,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			          memcpy(ctr_block + 4, encrypted_data, 8);",99b309320f21a2c05709e44c6a09c49d9b58719191cbdccd23c371ad82444f5b
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,2423,18,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			              memcpy(decrypted_data, encrypted_data, esp_iv_len);",99de3d6385872f2cd9a22fe64fbd2bdbc1e74b77b22babbb0523f1e59a5f15b8
wireshark-1.4.15/epan/dissectors/packet-ipv6.c,528,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char              name_str[7+1+1+2+2+1+1];	/* ""Unknown (0x%02x)"" */",bfa5291aef5def300f9a612f52abdf4333e4bc013206dae8366455d71dbd8589
wireshark-1.4.15/epan/dissectors/packet-ipx.c,877,15,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	static const char	*rip_type[3] = { ""Request"", ""Response"", ""Unknown"" };",81811e507dcf0b973f572413b12f71b8bfc659bbc4763631700a5affc799a54d
wireshark-1.4.15/epan/dissectors/packet-ipx.c,1215,15,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	static const char	*sap_type[4] = { ""General Query"", ""General Response"",",a305fd798db24dce08872a6d82c202ad19450331a194f17291cc93e7aeda8c6e
wireshark-1.4.15/epan/dissectors/packet-isakmp.c,1686,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	  memcpy(ic_key, i_cookie, COOKIE_SIZE);",4871501d01c73dc753eedf185df0022c65764d789970cbf82939eccf6c40c206
wireshark-1.4.15/epan/dissectors/packet-isakmp.c,1692,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(decr->secret, secret, secret_len);",17553d62c288363b5a91440cc8b65eefe80362790bf841293b688c575bb54a6a
wireshark-1.4.15/epan/dissectors/packet-isakmp.c,1752,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(iv, ivd->iv, iv_len);",e7c8f1613efd37bc8cf1d10c75024589b72aae91323f8639ec6776f03816348f
wireshark-1.4.15/epan/dissectors/packet-isakmp.c,1777,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(ivd->iv, gcry_md_read(md_ctx, gcry_md_algo), digest_size);",339dc6e2a7265fa53013cc4a7498e85ec2c0df8fa485fa774757bb850007517f
wireshark-1.4.15/epan/dissectors/packet-isakmp.c,1780,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(iv, ivd->iv, iv_len);",e7c8f1613efd37bc8cf1d10c75024589b72aae91323f8639ec6776f03816348f
wireshark-1.4.15/epan/dissectors/packet-isakmp.c,1786,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	  memcpy(decr->last_p1_cbc, decr->last_cbc, cbc_block_size);",ad514b2cb005476cd0d29fde88cc4361fa5789ff99ea53dc318177cf69d13345
wireshark-1.4.15/epan/dissectors/packet-isakmp.c,1795,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ivd->iv, gcry_md_read(md_ctx, gcry_md_algo), digest_size);",339dc6e2a7265fa53013cc4a7498e85ec2c0df8fa485fa774757bb850007517f
wireshark-1.4.15/epan/dissectors/packet-isakmp.c,1798,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ivd->iv, decr->last_cbc, ivd->iv_len);",8bbd22a5925251669dbe9064d9971115e401c2dc88fe87426e22afbb724f278e
wireshark-1.4.15/epan/dissectors/packet-isakmp.c,1802,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(iv, ivd->iv, iv_len);",e7c8f1613efd37bc8cf1d10c75024589b72aae91323f8639ec6776f03816348f
wireshark-1.4.15/epan/dissectors/packet-isakmp.c,1834,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(decr->last_cbc, buf + buf_len - cbc_block_size, cbc_block_size);",d8d75b4bd084324518a0da40ed8e0c867d7e4160d1db9e6e090e9c61faa98d06
wireshark-1.4.15/epan/dissectors/packet-isakmp.c,2682,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(ic_key, i_cookie, COOKIE_SIZE);",4871501d01c73dc753eedf185df0022c65764d789970cbf82939eccf6c40c206
wireshark-1.4.15/epan/dissectors/packet-isakmp.c,4463,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(decr_data, encr_data, decr_data_len);",a7973ba134905b8832d37326b1c726de7d888eb6d7dbeea763979f6197802598
wireshark-1.4.15/epan/dissectors/packet-iscsi.c,588,12,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,				port = atoi(p);,33c7a9889f596c1bba9f67df18b9c341e25e0ddac77e820a829e889c5cb0c40d
wireshark-1.4.15/epan/dissectors/packet-isup.c,1923,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char called_number[MAXDIGITS + 1]="""";",3c7c815ffde66a0eb61dd17042ef67e3ede2d9364ef1e21ee62db5d1f76e7858
wireshark-1.4.15/epan/dissectors/packet-isup.c,1993,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char called_number[MAXDIGITS + 1]="""";",3c7c815ffde66a0eb61dd17042ef67e3ede2d9364ef1e21ee62db5d1f76e7858
wireshark-1.4.15/epan/dissectors/packet-isup.c,3544,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char calling_number[MAXDIGITS + 1]="""";",965e20c96a9524baa8ce97a5908e595ee30274f05c00cb8d3b9e22d0ef49e98c
wireshark-1.4.15/epan/dissectors/packet-isup.c,3620,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char calling_number[MAXDIGITS + 1]="""";",965e20c96a9524baa8ce97a5908e595ee30274f05c00cb8d3b9e22d0ef49e98c
wireshark-1.4.15/epan/dissectors/packet-isup.c,3685,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char calling_number[MAXDIGITS + 1]="""";",965e20c96a9524baa8ce97a5908e595ee30274f05c00cb8d3b9e22d0ef49e98c
wireshark-1.4.15/epan/dissectors/packet-isup.c,3750,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char called_number[MAXDIGITS + 1]="""";",3c7c815ffde66a0eb61dd17042ef67e3ede2d9364ef1e21ee62db5d1f76e7858
wireshark-1.4.15/epan/dissectors/packet-isup.c,3847,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char NI_digits[5]="""";",2ae65342f09a9ee2ab9dd6c24319cba4930d64700a75f00a7b1c94312985eb70
wireshark-1.4.15/epan/dissectors/packet-isup.c,3903,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char calling_number[MAXDIGITS + 1]="""";",965e20c96a9524baa8ce97a5908e595ee30274f05c00cb8d3b9e22d0ef49e98c
wireshark-1.4.15/epan/dissectors/packet-isup.c,3963,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char network_id[MAXDIGITS + 1]="""";",55bf55b1f58d70506ba819e0dd410d7c82d546b9f7640da45dc30ed59f3b9f7b
wireshark-1.4.15/epan/dissectors/packet-isup.c,4445,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char NI_digits[5]="""";",2ae65342f09a9ee2ab9dd6c24319cba4930d64700a75f00a7b1c94312985eb70
wireshark-1.4.15/epan/dissectors/packet-isup.c,4572,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char calling_number[MAXDIGITS + 1]="""";",965e20c96a9524baa8ce97a5908e595ee30274f05c00cb8d3b9e22d0ef49e98c
wireshark-1.4.15/epan/dissectors/packet-isup.c,4697,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char calling_number[MAXDIGITS + 1]="""";",965e20c96a9524baa8ce97a5908e595ee30274f05c00cb8d3b9e22d0ef49e98c
wireshark-1.4.15/epan/dissectors/packet-isup.c,4846,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char calling_number[MAXDIGITS + 1]="""";",965e20c96a9524baa8ce97a5908e595ee30274f05c00cb8d3b9e22d0ef49e98c
wireshark-1.4.15/epan/dissectors/packet-isup.c,5048,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char calling_number[MAXDIGITS + 1]="""";",965e20c96a9524baa8ce97a5908e595ee30274f05c00cb8d3b9e22d0ef49e98c
wireshark-1.4.15/epan/dissectors/packet-isup.c,5119,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char called_number[MAXDIGITS + 1]="""";",3c7c815ffde66a0eb61dd17042ef67e3ede2d9364ef1e21ee62db5d1f76e7858
wireshark-1.4.15/epan/dissectors/packet-isup.c,5201,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char calling_number[MAXDIGITS + 1]="""";",965e20c96a9524baa8ce97a5908e595ee30274f05c00cb8d3b9e22d0ef49e98c
wireshark-1.4.15/epan/dissectors/packet-iwarp-mpa.c,324,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(mfree_buff+tot_copy, raw_data_ptr, cur_copy);",75267f1316a8df28be81e70380bda049e69f627aef6182a69a87eaf383eb89e2
wireshark-1.4.15/epan/dissectors/packet-kdp.c,202,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char ack_string[BUFFER_SIZE];,7bbfc01a9f57bfe59c7a43eaa3df70b349bdd83bfda453f5cd5ca57bbbb4f406
wireshark-1.4.15/epan/dissectors/packet-kdp.c,203,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char seq_num_string[BUFFER_SIZE];,793aeb3b3a3ff0ec55499e43d33311387115e0990888e6ac14e82ca1a15efc5b
wireshark-1.4.15/epan/dissectors/packet-kdp.c,204,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char src_flowid_string[BUFFER_SIZE];,6d6d506052e5b7cab98604e62d8bc967cd0e1f272d80d7792ea89ac0c3322ce8
wireshark-1.4.15/epan/dissectors/packet-kerberos.c,758,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    origin[KRB_MAX_ORIG_LEN+1];,17c0f56f80e2819955a6f6a6b01da9aa85dd2453ed90a443be4df47c6e2419d7
wireshark-1.4.15/epan/dissectors/packet-kerberos.c,804,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char buf[SERVICE_KEY_SIZE];,34592e6dfe0c40ae57831ad1427907a2b39531612af97f0284aa8cb3c6f45f19
wireshark-1.4.15/epan/dissectors/packet-kerberos.c,1828,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char netbios_name[(NETBIOS_NAME_LEN - 1)*4 + 1];,c18da943fffa180c7a84f023ca4219ee54a39ec929806f5e9c470189c324f089
wireshark-1.4.15/epan/dissectors/packet-kerberos.c,1971,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char name_string[256];,54499c55210c86781e124488c57ef10a5ccf0e9cc4932aa6c61a6d41a79ab0e1
wireshark-1.4.15/epan/dissectors/packet-kerberos.h,73,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char 			key_origin[KRB_MAX_ORIG_LEN+1];,df26f8ff5e94e3807df48de816ea615e52c075b5a04d9cd05f1f066d4543c528
wireshark-1.4.15/epan/dissectors/packet-kismet.c,247,11,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"						t = atoi(format_text (line, tokenlen));",35717b8046bb900e9e05a8f931a97909b58b48ad3d82313040750a3654fd59ee
wireshark-1.4.15/epan/dissectors/packet-l2tp.c,200,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *calltypestr[NUM_CONTROL_CALL_TYPES+1] = {,e192db98de54f87a5e0dab96cc8b42ccb419b38337738c907e3aca4b656e1b13
wireshark-1.4.15/epan/dissectors/packet-l2tp.c,233,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *calltype_short_str[NUM_CONTROL_CALL_TYPES+1] = {,670c9a0759161e0efcf2a3000ca98309d8d83065b16d27411a507488e5ebd9fc
wireshark-1.4.15/epan/dissectors/packet-ldap.c,4135,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-1.4.15/epan/dissectors/packet-ldss.c,614,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"					memcpy(transfer_info->file->digest, digest_bytes->data, digest_bytes->len);",47e1822ccde2b598f95e4f6627511040b65f9bf20b7d5777d912613c329ae472
wireshark-1.4.15/epan/dissectors/packet-mac-lte.c,938,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char info_buffer[MAX_INFO_BUFFER];,a50c8ed6ed33fbc50e3ea86696137d0239db0f0bb8d7cacd0197bd41478e47c1
wireshark-1.4.15/epan/dissectors/packet-mac-lte.c,1603,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(thisData->data,",92cda002fe9b6105bba4589b726f2396e7b0b52efca4efdfdf58cf0aee306907
wireshark-1.4.15/epan/dissectors/packet-mac-lte.c,1717,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(thisData->data,",92cda002fe9b6105bba4589b726f2396e7b0b52efca4efdfdf58cf0aee306907
wireshark-1.4.15/epan/dissectors/packet-mac-lte.c,2582,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char buff[64];,967c3bdd7aaf41eccb304007e54fa58cba764fd786a0e6d6a78a9b7ab38faf4a
wireshark-1.4.15/epan/dissectors/packet-mac-lte.c,2632,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&data->data, tvb_get_ptr(tvb, offset, data_length), data_length);",1bf28722856abc1e9fe7fdc86d142193314cec9ac5cff7802b8b020a875481be
wireshark-1.4.15/epan/dissectors/packet-manolito.c,122,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char field_name_str[3];  /* printable name */,f553f282761e24cf190727a9f1d009255afd8221f01761e7ae03b60e3866bf42
wireshark-1.4.15/epan/dissectors/packet-megaco.c,2415,13,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			reason = atoi(ServiceChangeReason_str);,8c595bc0f4b7a6d697f8613c4e25b0d0b9a6d026181438c44b1394f640aeb6d5
wireshark-1.4.15/epan/dissectors/packet-megaco.c,2898,15,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,	error_code = atoi(error);,4897058ce84b9d8b29eabce3787e90ad687a9e85400e201e77e79103d1b63812
wireshark-1.4.15/epan/dissectors/packet-memcache.c,1107,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy (response_chars, first_colon + 1, tokenlen);",0864e63c88ff2346e7b018fa18183a839743d43ead9e089de314fe952ca56a26
wireshark-1.4.15/epan/dissectors/packet-memcache.c,1121,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-1.4.15/epan/dissectors/packet-memcache.c,1234,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-1.4.15/epan/dissectors/packet-memcache.c,1248,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-1.4.15/epan/dissectors/packet-memcache.c,1264,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-1.4.15/epan/dissectors/packet-memcache.c,1431,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-1.4.15/epan/dissectors/packet-memcache.c,1445,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-1.4.15/epan/dissectors/packet-memcache.c,1459,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-1.4.15/epan/dissectors/packet-memcache.c,1474,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-1.4.15/epan/dissectors/packet-memcache.c,1569,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-1.4.15/epan/dissectors/packet-memcache.c,1640,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-1.4.15/epan/dissectors/packet-mgcp.c,1408,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char code_with_verb[64] = """";  /* To fit ""<4-letter-code> (<longest-verb>)"" */",929154f61b2bddad1b16855b78c9fe272ca1dc5fcb7fcfef0997bd93b989b86b
wireshark-1.4.15/epan/dissectors/packet-mgcp.c,1459,16,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,					rspcode = atoi(code);,d62c3f734379ae0104723966c92a139c57f64d9c9b9ec0b2a3d6def749f83e8d
wireshark-1.4.15/epan/dissectors/packet-mgcp.c,1473,19,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,				mi->transid = atol(transid);,633a18b45b617aec8bdbd1c61e26070ee40dff24d8df814038d7ebb7fb4a8d4f
wireshark-1.4.15/epan/dissectors/packet-mgcp.c,1936,64,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"					proto_tree_add_uint(tree, hf_uint, tvb, offset, tokenlen, atol(typval[1]));",9dc3b3449f6b2fc9daa4f2ed3b611c3a41d3d89078c8a86cd0987a209e8d3df9
wireshark-1.4.15/epan/dissectors/packet-mgcp.c,2096,64,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"					proto_tree_add_uint(tree, hf_uint, tvb, offset, tokenlen, atol(typval[1]));",9dc3b3449f6b2fc9daa4f2ed3b611c3a41d3d89078c8a86cd0987a209e8d3df9
wireshark-1.4.15/epan/dissectors/packet-mgcp.h,40,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char code[5];,833bba9d59e16180f401928f9d7b568baeae98af84e22c88995b9be7ee3f2c24
wireshark-1.4.15/epan/dissectors/packet-mgcp.h,57,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char code[5];,833bba9d59e16180f401928f9d7b568baeae98af84e22c88995b9be7ee3f2c24
wireshark-1.4.15/epan/dissectors/packet-mip6.c,794,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char              name_str[7+1+1+2+2+1+1];	/* ""Unknown (0x%02x)"" */",bfa5291aef5def300f9a612f52abdf4333e4bc013206dae8366455d71dbd8589
wireshark-1.4.15/epan/dissectors/packet-mount.c,105,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char group_name_list[MAX_GROUP_NAME_LIST];,5e9cca62439dd1fcf1cd02cc22c5343c4de467efa19721ae066eaee1a73c11e1
wireshark-1.4.15/epan/dissectors/packet-mount.c,185,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(ptr, host, strlen(host));",3539d5867a86cd911c6842a9012e818942ebf1b650ca573c9fe30cadad08040c
wireshark-1.4.15/epan/dissectors/packet-mount.c,188,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(ptr, dir, len);",a4f3536149e88c24afd00b45124f7eb25e838ecb05bdf3c29f5647681f52ba34
wireshark-1.4.15/epan/dissectors/packet-ms-mms.c,750,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    protocol[3+1];,e5ce16ccb62e5e5a9230dbd61aa17b552764d8ef9785f5c15da02888d060d450
wireshark-1.4.15/epan/dissectors/packet-msrp.c,247,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(p_conv_packet_data, p_conv_data,",939a127fbc713ef599086672b3721f6510bfbfa8bacb2242d2bfaa82a4108997
wireshark-1.4.15/epan/dissectors/packet-msrp.c,587,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"			                    atoi(tvb_get_ephemeral_string(tvb, token_3_start, token_3_len)));",21814f232a5fbd4e6773732bb61e32399230bea0420d001202657c5c120cbb20
wireshark-1.4.15/epan/dissectors/packet-mtp3.c,406,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char pc_string[MAX_STRUCTURED_PC_LENGTH];,fa5b46d3e46abd90d41967a4cf35c2061b75acad067aa048427e198c2f477143
wireshark-1.4.15/epan/dissectors/packet-mtp3.c,702,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&(tap_rec->addr_opc),mtp3_addr_opc,sizeof(mtp3_addr_pc_t));",8739ca8e51e68f8e16a572290d23a30f7f4224a0b136462067dfbad0160bd17a
wireshark-1.4.15/epan/dissectors/packet-mtp3.c,703,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&(tap_rec->addr_dpc),mtp3_addr_dpc,sizeof(mtp3_addr_pc_t));",1eba8e314810a932d7d9b504a95877195187f6392448fd602408713aa3377303
wireshark-1.4.15/epan/dissectors/packet-nbipx.c,216,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		name[(NETBIOS_NAME_LEN - 1)*4 + 1];,e0856ae08a3d24e4353e8468a9b3b3c1d8690b5eace2b6179788ac772d964ead
wireshark-1.4.15/epan/dissectors/packet-nbipx.c,668,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		name[(NETBIOS_NAME_LEN - 1)*4 + 1];,e0856ae08a3d24e4353e8468a9b3b3c1d8690b5eace2b6179788ac772d964ead
wireshark-1.4.15/epan/dissectors/packet-nbipx.c,670,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		node_name[(NETBIOS_NAME_LEN - 1)*4 + 1];,dcd2ef54fa97867a75713ac1c1c7eb4a1cf6d63816a85420c20710cab01f544b
wireshark-1.4.15/epan/dissectors/packet-ncp-int.h,127,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char			object_name[256];,e9e02aa7c33a885949ec1103d675bfc615dbf2adadd0aa27427bdb3e78931bfe
wireshark-1.4.15/epan/dissectors/packet-ncp-sss.c,436,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char    buffer[1024];,0d4b5dd860a6e9ae97c693ac1860926aafa24d1c459d2c815e8b008d5009a25e
wireshark-1.4.15/epan/dissectors/packet-netbios.c,282,15,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	static const char hex_digits[16] = ""0123456789abcdef"";",4ccc6f2b60da26756959a40c9a45357a752e69b9d62e9c0a98b3c14f7aebca74
wireshark-1.4.15/epan/dissectors/packet-netbios.c,345,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char  name_str[(NETBIOS_NAME_LEN - 1)*4 + 1];,17666e57b63df392166ae37302c35fa9fee49f05162bf4d1ff6bab6e8bb74585
wireshark-1.4.15/epan/dissectors/packet-netbios.c,1092,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char 			name[(NETBIOS_NAME_LEN - 1)*4 + 1];,25c93e50916c7cf373f0e4cc3fe460d1f1373cfa22cb526d1fd49fe3a3fdab3d
wireshark-1.4.15/epan/dissectors/packet-netflow.c,3562,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&v9_template_cache[v9_template_hash(tplt.id,",fea5c20ec5eee39976ca49b71e84c2ef95dce602f25fac8a452ebc727a4f472d
wireshark-1.4.15/epan/dissectors/packet-netflow.c,3665,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(&v9_template_cache[v9_template_hash(tplt.id,",fea5c20ec5eee39976ca49b71e84c2ef95dce602f25fac8a452ebc727a4f472d
wireshark-1.4.15/epan/dissectors/packet-netflow.c,4109,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy((guint8 *)&temp, p, 4);",9e132eb1912f01ff36b5cad1f7832525354599f82b34f9abf60f2fd568abe872
wireshark-1.4.15/epan/dissectors/packet-nfs.c,744,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy((void *)new_nfs_fh->fh, nfs_fh->fh, nfs_fh->len);",646c0040b856ffbc77ab9f57c3ec5415bf46a040952fc364d4d155d2722bd490
wireshark-1.4.15/epan/dissectors/packet-nfs.c,887,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(nns->name, ptr, name_len);",9b18f56b01a25ee9b30efa272b3feaf0a81539f49f5c0611e9af20c82986d752
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,87,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static unsigned char gbl_zeros[24] = ""\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"";",62a871d4ad75dc0a6c90a51bac611d76cd3d4724f4e7b9a488c945a191851b39
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,273,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char server_challenge[8];,66c8a80978f72078ccbc84a7ab0b2aa52d4413d0864932d0b3cddd212f768100
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,274,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char client_challenge[8];,026b832b9385d7b7b2acf11d56816a7e6f797148bfe414ce2edc5a32500d8864
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,346,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(pw21, key, 16);",fd87bee44c8e37112f00f9e44206e28b09db42f0932623082462f2d01735ecdd
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,368,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(pw21, passhash, 16);",84c57a5517546b45968b4c9188aabb6e6d1040daaa76133029dcb20a2b71ff69
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,404,30,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"get_keyexchange_key(unsigned char keyexchangekey[NTLMSSP_KEY_LEN],const unsigned char sessionbasekey[NTLMSSP_KEY_LEN],const unsigned char lm_challenge_response[24],int flags)",b5b5ba2c5b65e81b73945b97636bb728fcc6a2fdd51d8a41f9711231993fa0d9
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,404,82,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"get_keyexchange_key(unsigned char keyexchangekey[NTLMSSP_KEY_LEN],const unsigned char sessionbasekey[NTLMSSP_KEY_LEN],const unsigned char lm_challenge_response[24],int flags)",b5b5ba2c5b65e81b73945b97636bb728fcc6a2fdd51d8a41f9711231993fa0d9
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,404,134,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"get_keyexchange_key(unsigned char keyexchangekey[NTLMSSP_KEY_LEN],const unsigned char sessionbasekey[NTLMSSP_KEY_LEN],const unsigned char lm_challenge_response[24],int flags)",b5b5ba2c5b65e81b73945b97636bb728fcc6a2fdd51d8a41f9711231993fa0d9
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,412,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(basekey,sessionbasekey,8);",91dde086bba84be817bf677b810120f2e86c9ec26c29abbe6a7e289093106300
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,438,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(keyexchangekey,sessionbasekey,NTLMSSP_KEY_LEN);",f8ee7245fc1032a8df2fb2eda1d8e8ccbdeba03cb8f6340cd148f173e49d830b
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,449,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char nt_password_hash[NTLMSSP_KEY_LEN];,875042e0b0fafd3f88493f196bc15be354c7ee14c71b8db26b70eea9068eebec
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,451,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char nt_password_unicode[256];,65aa53d5a582a0a85b987c137ad560d187b967116f2fc472a9e61753175248fd
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,481,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(pass_list[i].md4,nt_password_hash,NTLMSSP_KEY_LEN);",f27861b8d60bb9eaf5b0673e297398b606e006a8611293307e6ab7f53cb63fcb
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,486,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(pass_list[i].md4,ek->keyvalue,NTLMSSP_KEY_LEN);",9c8d23480c2eb714f05a8b9eeae05399420a646ed076ab3d36da4b9b029781f5
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,498,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char domain_name_unicode[256];,f3be21977891dd2db774affbe70c326824460b82ead78f542c9deca57c7bda76
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,499,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char user_uppercase[256];,12136b3d74e746bd8baf1a0dd226f8c4435ab23dae576e1d5bc30894726d1acd
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,500,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buf[512];,657ff8329591453022e3359353e72b30b702c62cf6567d962d837e05e108b31a
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,502,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char nt_password_hash[NTLMSSP_KEY_LEN];,875042e0b0fafd3f88493f196bc15be354c7ee14c71b8db26b70eea9068eebec
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,503,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char nt_proof[NTLMSSP_KEY_LEN];,781b2657a21a2549922375cb31ed32995f2b1eb4b9c70c0f9f82f2f6aaa46a17
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,504,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char ntowf[NTLMSSP_KEY_LEN];,8e063f106f8e66ad60197e789f0a3565ed70d1960c57448ee062f552b1995198
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,550,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(nt_password_hash,pass_list[i].md4,NTLMSSP_KEY_LEN);",e0b95e893fb3b3b4f07597f89e24ca0c62fe7cd2269ff7d4c74819fe613c3806
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,555,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf,user_uppercase,user_len*2);",9f9259b902dbebabd31f1b3fa424ea5382592b1a980d8a759598f8d0bf25d8ac
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,556,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf+user_len*2,domain_name_unicode,domain_len*2);",2d687fa27678dbe5d8ac5db78fd178521b828e994daaa87c171cfb697df6ad22
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,560,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf,serverchallenge,8);",aff652c1760730f30b57e5953dfe7af7a67aaf3d590effb908cacf03a1775838
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,561,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf+8,clientchallenge,8);",b3575579de6de5562811281ca041a2db0f930bfe6ecc7d9a1d4dec45cc5ebad9
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,563,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(lm_challenge_response+NTLMSSP_KEY_LEN,clientchallenge,8);",52a66dbafacc6581d1ccb4cb1480298a1b98ae239fb6619f0178987ffa38a34e
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,568,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf,serverchallenge,8);",aff652c1760730f30b57e5953dfe7af7a67aaf3d590effb908cacf03a1775838
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,569,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf+8,ntlm_response.contents+NTLMSSP_KEY_LEN,ntlm_response.length-NTLMSSP_KEY_LEN);",56c86ad6d4df211492f2c7d7013ab5b002f9491d48fa1318e5454c7026eda5b0
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,588,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sessionkey,encryptedsessionkey,NTLMSSP_KEY_LEN);",1b9c7f4423cd5a850da3ba5874ef3200c78dee91c83d29f950adca900f9b79ce
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,594,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sessionkey,keyexchangekey,NTLMSSP_KEY_LEN);",8d7c21497a7fe74ce0dddcc9090deda08684ea2b7bfdfc50213b2e376c255885
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,607,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char lm_password_upper[NTLMSSP_KEY_LEN];,1fca1cff4016e11ccada8c5e9745afcf2c51c195ef7991946661648068f9dd4a
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,608,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char lm_password_hash[NTLMSSP_KEY_LEN];,9a06d2ecf92824fc9bd3aa3eccab160d3e7adf4bb40e7986efdae547dff48c30
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,609,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char nt_password_hash[NTLMSSP_KEY_LEN];,875042e0b0fafd3f88493f196bc15be354c7ee14c71b8db26b70eea9068eebec
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,610,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char challenges_hash[NTLMSSP_KEY_LEN];,94ae801622419b0b2851ea95314e24330f3137ff91c61a5ae82a778f085a8536
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,611,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char challenges_hash_first8[8];,997268b1b305997fc5b9fcb4ae52148912764ade574a768d74c95d168169c1e6
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,612,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char challenges[NTLMSSP_KEY_LEN];,6a0c900836c7fc1bf51d52df806d4602dc037936bc22813e6882f75e8cbcfae5
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,621,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char nt_password_unicode[256];,65aa53d5a582a0a85b987c137ad560d187b967116f2fc472a9e61753175248fd
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,657,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sessionbasekey,lm_password_hash,NTLMSSP_KEY_LEN);",e5157eae2e45eaa498e57475a413a452bd2197744959acb3697079a07891f6d9
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,669,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(nt_password_hash,pass_list[i].md4,NTLMSSP_KEY_LEN);",e0b95e893fb3b3b4f07597f89e24ca0c62fe7cd2269ff7d4c74819fe613c3806
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,672,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(lm_challenge_response,clientchallenge,8);",f967c7794b1e0e43561eae36437b1f773f91f53599fd4a7e7e76d92233992949
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,677,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(challenges_hash_first8,challenges_hash,8);",1d20fc4305f230e0f1e0509eb2423671da814233fd6629bf3bb52ba216d8c204
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,688,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(lm_challenge_response,nt_challenge_response,24);",ae917e9026d6006102f6b054e973ad460f71ffe9a36061116fa2c777160c8136
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,702,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     memcpy(challenges,serverchallenge,8);",217f40ed681af9c179660df22f24e8082295ef6943f8f7c37e0c204f8e00d153
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,703,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     memcpy(challenges+8,clientchallenge,8);",67e9913fe8696142ae3c3e6a95e7b868f89ca0c074d59375792e5fad4d0a827e
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,708,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     memcpy(sessionbasekey,md4,NTLMSSP_KEY_LEN);",ed284094e1c93fe2a0904dea115fc6fddd9605acd53401440da69b670f23401f
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,724,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sessionkey,encryptedsessionkey,NTLMSSP_KEY_LEN);",1b9c7f4423cd5a850da3ba5874ef3200c78dee91c83d29f950adca900f9b79ce
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,730,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sessionkey,keyexchangekey,NTLMSSP_KEY_LEN);",8d7c21497a7fe74ce0dddcc9090deda08684ea2b7bfdfc50213b2e376c255885
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,760,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(clientsealkey,exportedsessionkey,NTLMSSP_KEY_LEN);",6d4f05469f9c628986d5792023cc995233247d2f2519caeb98d99f6f26d38c78
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,781,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(serversealkey,clientsealkey,NTLMSSP_KEY_LEN);",8f999f843611c10e92d08ee86233c3f96fc88024eef806f3c6cb10f2c349b0de
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,813,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    serversealkey = memcpy(serversealkey,clientsealkey,*keylen);",ec4cdf0ce917e3574242bc08efd4b95bbd8d781f257709fa2bf05c182a4207e2
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,1711,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(conv_ntlmssp_info->client_challenge,conv_ntlmssp_info->ntlm_response.contents+32,8);",6cea13adc9269825295653d63ae68137c0c1d812dcb79da48d81130d614aa34b
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,1801,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(encryptedsessionkey,sessionblob.contents,sessionblob.length);",bd5dd0580bb2c301842ca6bc6158a948cc9fe5dba40d4c1d0849aaf6bbb34e56
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,1815,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(conv_ntlmssp_info->client_challenge,conv_ntlmssp_info->lm_response.contents,8);",ec6a5e12fac4247bd9b6db0184c4818e34080e7e34c0c1137a2d7de10450b00a
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,2037,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(packet_ntlmssp_info,stored_packet_ntlmssp_info,sizeof(ntlmssp_packet_info));",eaa56c4b66f0c07188b126f0a1e56b5fdce963e8f17e8e7214bc7d850a9a906d
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,2278,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(check_buf,&sequence,4);",692804cb53bd4df9963c26845d9f3f05c2fc7004d199e4160901f19f63d4723d
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,2279,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(check_buf+4,packet_ntlmssp_info->decrypted_payload,packet_ntlmssp_info->payload_len);",b1f75bfd229e5d26db93a0ebf150da934f52f4efbd777e7f37074eaf4d14810a
wireshark-1.4.15/epan/dissectors/packet-ntp.c,549,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *mon_names[12] = {,992987e147907c0bfaef8c775b7201e93f906970972c895741fb2efca33ccb55
wireshark-1.4.15/epan/dissectors/packet-null.c,278,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((char *)&null_header, (const char *)&pd[0], sizeof(null_header));",6aa2f593513d6eb48de973abc00f3e481f585f850f23026c086c94c5251a5348
wireshark-1.4.15/epan/dissectors/packet-olsr.c,983,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(ett, ett_base, sizeof(ett_base));",827bd9f79ef5bf5d3f3a34c16d448f700ba1cd5b18f8fa638693a8906869c2e9
wireshark-1.4.15/epan/dissectors/packet-ospf.c,949,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char auth_data[8+1];,3aabde0cca2f875780cc8327686b06f5e3a185665a9fc32330d70414a1d8eb34
wireshark-1.4.15/epan/dissectors/packet-p_mul.c,564,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy((guint8 *)&dstIp, dst->data, 4);",c8daec7e341164af1b51230faef3ce0eafb272151108ee9328c279e7daab1ff0
wireshark-1.4.15/epan/dissectors/packet-p_mul.c,599,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((guint8 *)&dstIp, dst->data, 4);",c8daec7e341164af1b51230faef3ce0eafb272151108ee9328c279e7daab1ff0
wireshark-1.4.15/epan/dissectors/packet-packetbb.c,1042,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(ett, ett_base, sizeof(ett_base));",827bd9f79ef5bf5d3f3a34c16d448f700ba1cd5b18f8fa638693a8906869c2e9
wireshark-1.4.15/epan/dissectors/packet-paltalk.c,74,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy((guint8 *)&src32, pinfo->net_src.data, 4); /* *Network* order */",7e3e14ff37dd9fee293b99a080afd139a481e19b936d587d2248cb10306a653a
wireshark-1.4.15/epan/dissectors/packet-paltalk.c,75,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy((guint8 *)&dst32, pinfo->net_dst.data, 4); /* *Network* order */",f361ea6600fd0caf348ebf7ba52d06475c74232dbaff087c4a365e72b7bcb370
wireshark-1.4.15/epan/dissectors/packet-per.c,762,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char tmp_buf[256];,789a2d0a9c6f05d362abb0c29776a418478f9b93d60d6b34ce2563c2af2b9bdd
wireshark-1.4.15/epan/dissectors/packet-per.c,783,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char sorted_alphabet[128];,031eedf750dc1ba2164c010720387cb99e1d8801538997845d1838b75f206731
wireshark-1.4.15/epan/dissectors/packet-pflog.c,121,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char rulestr[MAX_RULE_STR];,aa434d725810bbde27894f70d8b0933d14635454de4f2aa167c5be5e57ad91cb
wireshark-1.4.15/epan/dissectors/packet-pflog.h,40,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	ifname[16];,0bcc92c89d827cc9a4f77a682f233a876863493ebf4be4fe230da65f04e9e78b
wireshark-1.4.15/epan/dissectors/packet-pflog.h,41,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	ruleset[16];,77f5697acd91fd1da693691a61b2a7225d0ff2dc3c3eb5dd49b748d6ff372281
wireshark-1.4.15/epan/dissectors/packet-pflog.h,55,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char          ifname[16];,e759e430f1255f0f095e9d58b4721aa3c360ce9a75ff619c3db7ad9ebc0d53c2
wireshark-1.4.15/epan/dissectors/packet-pkcs12.c,194,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char hash[20], buf_b[64], buf_i[128], *p;",b33066e1fc6f33e4b6d02ad049f00fe3c9fe85386923616bae7a8a054d05a467
wireshark-1.4.15/epan/dissectors/packet-pkcs12.c,246,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy (hash, gcry_md_read (md, 0), 20);",33f4c6611527d9becf1d579d46bb61863f346bd68914c6080ca02969ae9cba8b
wireshark-1.4.15/epan/dissectors/packet-pop.c,292,37,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            data_val->msg_tot_len = atoi(line + 4);,ede043231429a2f1d8309a0db1ded19cc002018f313ff6c18388b41084135fc4
wireshark-1.4.15/epan/dissectors/packet-ppp.c,1837,16,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static const char *ctrlchars[32] = {,7b62cda570c8856b33994ab002c2d8c8d7269cb521926fde663ff9f757f4ae43
wireshark-1.4.15/epan/dissectors/packet-pptp.c,54,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *frametypestr[NUM_FRAME_TYPES] = {,2e77ee1b3f013d26557d3262c95a09b9a13a90b68a61171d7f279e357e0848f3
wireshark-1.4.15/epan/dissectors/packet-pptp.c,65,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *bearertypestr[NUM_BEARER_TYPES] = {,eee06f83139ced4b1588bb3f32d12286ee963ff3d0116def7d8fbe2bd2e9bfc1
wireshark-1.4.15/epan/dissectors/packet-pptp.c,76,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *cntrlresulttypestr[NUM_CNTRLRESULT_TYPES] = {,dc1692f77df453f3bcbe10d23e4caf09c5989906bdd3235480a148709e2bc2ba
wireshark-1.4.15/epan/dissectors/packet-pptp.c,89,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *errortypestr[NUM_ERROR_TYPES] = {,9c7cd633ac45c09715cbe5740ad504769d38c65c62ad6f9593f5d47411d9a5cb
wireshark-1.4.15/epan/dissectors/packet-pptp.c,103,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *reasontypestr[NUM_REASON_TYPES] = {,85597b575f9582e3116d0fa6bf8dbdd1a6dd93e20233c52f81db524bd857f00b
wireshark-1.4.15/epan/dissectors/packet-pptp.c,114,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *stopresulttypestr[NUM_STOPRESULT_TYPES] = {,4b301737dda1e1507a77ac88eca432e66cb37edffeb0c64109b6d2aa8a695af8
wireshark-1.4.15/epan/dissectors/packet-pptp.c,124,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *echoresulttypestr[NUM_ECHORESULT_TYPES] = {,2f50a2e63f1dd1d0750fb4bed555dd4e30b486240a9faff2ecd51763933f39e6
wireshark-1.4.15/epan/dissectors/packet-pptp.c,134,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *outresulttypestr[NUM_OUTRESULT_TYPES] = {,453158fac03fcbd46c90bbf7ba4be1beca6980656d518569ee31f8cdee0074fd
wireshark-1.4.15/epan/dissectors/packet-pptp.c,149,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *inresulttypestr[NUM_INRESULT_TYPES] = {,f6b3815b1a97029c30255667f9bfa73e56e182b2fc154a904b414fd85916f7eb
wireshark-1.4.15/epan/dissectors/packet-pptp.c,160,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *discresulttypestr[NUM_DISCRESULT_TYPES] = {,9be69827c17b1a8fd7c7e3d07db205e7959ecbd8bfd1d39a1bbd93b5a24a79ca
wireshark-1.4.15/epan/dissectors/packet-pvfs2.c,853,19,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		string_buffer = memcpy(ep_alloc(string_length_copy+1), tmpstr, string_length_copy);",3256f85df6d413ab24322b96b592b4879cc0997ca88d7e40dfebf29d82fbc83e
wireshark-1.4.15/epan/dissectors/packet-q931.c,2608,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&(q931_pi->crv), call_ref, call_ref_len > sizeof(q931_pi->crv) ? sizeof(q931_pi->crv) : call_ref_len );",7e24510b1b02a269a8f104bb94e6aee66a255228cda39fe7dd2df14ab6eb803b
wireshark-1.4.15/epan/dissectors/packet-quakeworld.c,90,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static	char		com_token[MAX_TEXT_SIZE+1];,d8c0b88d095260001a44b21d0527a5aa6b938debc7fd7b94b7dbf102e47a89da
wireshark-1.4.15/epan/dissectors/packet-quakeworld.c,157,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static	char		*cmd_argv[MAX_ARGS];,c85b92ac4032150b48902f68d04c42ff513870799a1df675465fbb880b928f0d
wireshark-1.4.15/epan/dissectors/packet-quakeworld.c,445,14,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			version = atoi(Cmd_Argv(1));,1702f0b430905e5caf44dfbb686967365378f0fa2c5e17e2d293990bca547648
wireshark-1.4.15/epan/dissectors/packet-quakeworld.c,446,12,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			qport = atoi(Cmd_Argv(2));,3cf53bec26b78e485c85cd7d66217a3b9d745924588ee59fd6cdbba911623e78
wireshark-1.4.15/epan/dissectors/packet-quakeworld.c,447,16,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			challenge = atoi(Cmd_Argv(3));,96aec9b114d1c814630659af17e94d397d5a90a14f7a641eb15be2516f9b9952
wireshark-1.4.15/epan/dissectors/packet-quakeworld.c,486,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char remaining[MAX_TEXT_SIZE+1];,c56b2629dcf74a31163e6601442b627a18617531bdf5ae7891a1368fba463e83
wireshark-1.4.15/epan/dissectors/packet-raw.c,43,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char zeroes[10];,2085433516d21ff7d76e1c53ccab664ffa7ac8d421c8c3d132a64cb175a7400c
wireshark-1.4.15/epan/dissectors/packet-ripng.h,82,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char	ru6_tracefile[1];,0cee24d08a2e35eaec7a8160af0bfa0a94c74f18a7580819245214d27e04dd38
wireshark-1.4.15/epan/dissectors/packet-rlc-lte.c,373,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char info_buffer[MAX_INFO_BUFFER];,a50c8ed6ed33fbc50e3ea86696137d0239db0f0bb8d7cacd0197bd41478e47c1
wireshark-1.4.15/epan/dissectors/packet-rlc-lte.c,788,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(p_channel_key, &channel_key, sizeof(rlc_channel_hash_key));",2ecbe36d3aa930be7ce215303865664abc0be32a91568a992937dfbe80ae87d9
wireshark-1.4.15/epan/dissectors/packet-rlc-lte.c,1023,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(p_channel_key, &channel_key, sizeof(rlc_channel_hash_key));",2ecbe36d3aa930be7ce215303865664abc0be32a91568a992937dfbe80ae87d9
wireshark-1.4.15/epan/dissectors/packet-rlc.c,576,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(sdu->data + offs, temp->data, temp->len);",9ef846cb28c61462e745520a90f6a5c3f39069da3d00ecc43e017b98bcc74bd5
wireshark-1.4.15/epan/dissectors/packet-rlogin.c,90,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char             user_name[NAME_LEN];,008e5a2994f80a84658310dff7fb36979035012a60c6533101d867cc1ad25b4b
wireshark-1.4.15/epan/dissectors/packet-rlogin.c,303,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"			                    atoi(tvb_format_text(tvb, offset, str_len)));",d29a4ccacafad19724135b9141d3fe73e16cad77a0ee3a682fad694119eb4b55
wireshark-1.4.15/epan/dissectors/packet-rsvp.c,1425,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char buf[100];,b8242c26c59e3ca585e77c324e07df499aaaa03d260783e1946c3b9f699c5da9
wireshark-1.4.15/epan/dissectors/packet-rsvp.c,1466,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char buf[80];,c52b259d0598945a01eb53dfc4d64d4bb0d19be78a5dde7e8cf968729115c477
wireshark-1.4.15/epan/dissectors/packet-rtcp.c,771,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char strbuf[64];,f7fb6c9ed096d7d3dbb96fa383b0c343375fc49559132d55eefa73fa300eabbe
wireshark-1.4.15/epan/dissectors/packet-rtcp.c,953,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char ascii_name[5];,97496c9df07934a4caf18be9e4e426a5b8972036792ebe21780c81da5c7cdc6c
wireshark-1.4.15/epan/dissectors/packet-rtcp.c,2094,21,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                    char bits[20+1];,18c30dfc6a43d394af92ff6517405dff6e7f5f4250935a00699efacea8332571
wireshark-1.4.15/epan/dissectors/packet-rtcp.c,2338,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(p_conv_packet_data, p_conv_data,",939a127fbc713ef599086672b3721f6510bfbfa8bacb2242d2bfaa82a4108997
wireshark-1.4.15/epan/dissectors/packet-rtps.c,871,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char temp_buff[MAX_LOCATOR_SIZE];,a5fd73b086f4435a020d1bdaabc936fd9a333286d99393d9ddce132914edc338
wireshark-1.4.15/epan/dissectors/packet-rtps.c,872,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char addr_buff[MAX_IPV6_SIZE];,cf498b12bba28d099403b3a388b0ea91d7f9cedc44661fc905d62fcff2db780e
wireshark-1.4.15/epan/dissectors/packet-rtps.c,994,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char temp_buff[20];,49656db62b81e33010e1e6afef4c78e77d18948a3c04a0f26caf4a844749fdfa
wireshark-1.4.15/epan/dissectors/packet-rtps.c,1085,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char portLabel[MAX_PORT_SIZE];,8fc93d58070f84121e80a5bd274d76583ec8374781ed2b3825dbdac4852ad527
wireshark-1.4.15/epan/dissectors/packet-rtps.c,1086,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char addr[MAX_IPV4_ADDRESS_SIZE];,070c2471342381a24b21ef7dbde5c8f36e9a5918338457a9f9afac47c06939e1
wireshark-1.4.15/epan/dissectors/packet-rtps.c,1604,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char temp_buff[16];,8540d9944806b52695cf4c39791c1725460cfce7c1418e999226526b0bc87972
wireshark-1.4.15/epan/dissectors/packet-rtps.c,1864,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char temp_buff[MAX_LABEL_SIZE];,2a4c9ee90eea7fa20c234b58be165bb96e710fbe887ece17cc918430f4603ec4
wireshark-1.4.15/epan/dissectors/packet-rtps.c,1927,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char temp_buff[MAX_LABEL_SIZE];,2a4c9ee90eea7fa20c234b58be165bb96e710fbe887ece17cc918430f4603ec4
wireshark-1.4.15/epan/dissectors/packet-rtps.c,1928,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char overview_buff[MAX_PARAM_SIZE];,cc4309ab90e97e17a7a6874873e1312298e0639c6d319afcfba5a2da5eea31d2
wireshark-1.4.15/epan/dissectors/packet-rtps.c,2028,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char    indent_string[40];,86b3a8fb70c737de734eb05931008c549b6e69ccc2de2df3e9bd94a094f34db6
wireshark-1.4.15/epan/dissectors/packet-rtps.c,2030,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char    type_name[40];,793363a5717c6fbb30a6c8f7400ec1da647e10c3ae4c771e1303bc2491130be0
wireshark-1.4.15/epan/dissectors/packet-rtps.c,2754,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char temp_buff[MAX_BITMAP_SIZE];,a8ace056383c4f22c01cdabf22c39daa456ec41446d0b16504fd7fbabdd779ed
wireshark-1.4.15/epan/dissectors/packet-rtps.c,2844,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char flags_str[MAX_FLAG_SIZE];,c6872bfadac78e219b4c75d4d963c355bba52b6336befa1d768661cd562a5cb7
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,902,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char buffer[10] = ""(?[??])"";",4910fb38d1c70a3cc7943b6e28feb1c3d6badc95f7da5a9c0274c36c1e06963d
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,1123,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char temp_buff[MAX_LOCATOR_SIZE];,a5fd73b086f4435a020d1bdaabc936fd9a333286d99393d9ddce132914edc338
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,1124,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char addr_buff[MAX_IPV6_SIZE];,cf498b12bba28d099403b3a388b0ea91d7f9cedc44661fc905d62fcff2db780e
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,1252,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char temp_buff[20];,49656db62b81e33010e1e6afef4c78e77d18948a3c04a0f26caf4a844749fdfa
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,1345,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char portLabel[MAX_PORT_SIZE];,8fc93d58070f84121e80a5bd274d76583ec8374781ed2b3825dbdac4852ad527
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,1346,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char addr[MAX_IPV4_ADDRESS_SIZE];,070c2471342381a24b21ef7dbde5c8f36e9a5918338457a9f9afac47c06939e1
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,1843,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char temp_buff[16];,8540d9944806b52695cf4c39791c1725460cfce7c1418e999226526b0bc87972
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,1887,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char temp_buff[16];,8540d9944806b52695cf4c39791c1725460cfce7c1418e999226526b0bc87972
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,2151,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char temp_buff[MAX_LABEL_SIZE];,2a4c9ee90eea7fa20c234b58be165bb96e710fbe887ece17cc918430f4603ec4
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,2219,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char temp_buff[MAX_LABEL_SIZE];,2a4c9ee90eea7fa20c234b58be165bb96e710fbe887ece17cc918430f4603ec4
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,2220,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char overview_buff[MAX_PARAM_SIZE];,cc4309ab90e97e17a7a6874873e1312298e0639c6d319afcfba5a2da5eea31d2
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,2322,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char    indent_string[40];,86b3a8fb70c737de734eb05931008c549b6e69ccc2de2df3e9bd94a094f34db6
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,2324,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char    type_name[40];,793363a5717c6fbb30a6c8f7400ec1da647e10c3ae4c771e1303bc2491130be0
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,3280,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char flags_str[MAX_FLAG_SIZE];,c6872bfadac78e219b4c75d4d963c355bba52b6336befa1d768661cd562a5cb7
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,3336,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char flags_str[MAX_FLAG_SIZE];,c6872bfadac78e219b4c75d4d963c355bba52b6336befa1d768661cd562a5cb7
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4893,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char bitbuf[33];,8eae699b06bf82c8d9f85b67fa7b0cf9e2d9f24b56ca439058f2551b8415c941
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,5388,15,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,              char temp_buff[MAX_LABEL_SIZE];,2a4c9ee90eea7fa20c234b58be165bb96e710fbe887ece17cc918430f4603ec4
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,8478,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char             info_summary_text[MAX_SUMMARY_SIZE];,f61cde42c633a1261e70fcda9ca94f96552dc9e0086b9b5f8c4ae625233ee867
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,356,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buf, line_begin, line_len);",b78a37c8d240b02bd982ffe1a16e05242007f1a42a2062cb03e9298276b87546
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,507,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buf, line_begin, line_len);",b78a37c8d240b02bd982ffe1a16e05242007f1a42a2062cb03e9298276b87546
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,909,25,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"				                    atoi(tvb_format_text(tvb, value_offset,",20be659b1ebbe29f02d8c3cfc7e6cf15fcfab92bc780ad5895540e7839da6fe6
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,950,25,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"				rdt_feature_level = atoi(tvb_format_text(tvb, value_offset,",e001c9c6f696beb636e17c690224b47d67845e6adca85913e568f791818c05bd
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,954,25,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"				                    atoi(tvb_format_text(tvb, value_offset,",20be659b1ebbe29f02d8c3cfc7e6cf15fcfab92bc780ad5895540e7839da6fe6
wireshark-1.4.15/epan/dissectors/packet-scsi-smc.c,262,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char volid[32+1];,2e45f00a4df9b49b34a43cb61c2d29ebbf74086f03a2ae4de3af52058e484b5a
wireshark-1.4.15/epan/dissectors/packet-sctp.c,572,18,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  if (addr->len) memcpy(k[4].key, addr->data, addr->len);",4d20c2dcea94a63a17ebb12c4a8b82c496973f73fe1c00bc3291196f08da85e4
wireshark-1.4.15/epan/dissectors/packet-sctp.c,691,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char ds[64];,f860a8d4f9646963e847a66c3ab9668b575524cd7f49b6e474f72ee48c2e4e9a
wireshark-1.4.15/epan/dissectors/packet-sctp.c,2494,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(message->data + offset, frag_i->data, frag_i->len);",d81411e6239dc2d027f7569901b0a843d22ef5c196ef5a1b6513b82e1b399931
wireshark-1.4.15/epan/dissectors/packet-sctp.c,2507,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(message->data + offset, frag_i->data, frag_i->len);",d81411e6239dc2d027f7569901b0a843d22ef5c196ef5a1b6513b82e1b399931
wireshark-1.4.15/epan/dissectors/packet-sctp.c,2521,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(message->data + offset, frag_i->data, frag_i->len);",d81411e6239dc2d027f7569901b0a843d22ef5c196ef5a1b6513b82e1b399931
wireshark-1.4.15/epan/dissectors/packet-sdp.c,211,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char *encoding_name[SDP_NO_OF_PT];,6c9839f369aeea49c4d056c917cc5321f00b3d698157e06cb23f79b4a9c085dc
wireshark-1.4.15/epan/dissectors/packet-sdp.c,213,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char *media_port[SDP_MAX_RTP_CHANNELS];,78ad42d9f37cbc4e26370f2c79eae80baeb328c1622a64aecf2e436356df8b1c
wireshark-1.4.15/epan/dissectors/packet-sdp.c,214,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char *media_proto[SDP_MAX_RTP_CHANNELS];,dc120b99f704e2b8eda8c86ba0dd1c2bffd2eaf240a00e33ac95126eb5697310
wireshark-1.4.15/epan/dissectors/packet-sdp.c,461,14,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,      port = atol(transport_info.media_port[n]);,abfa2b56678ba6a1b52cb1ed443094b2392e017267d9bae971e37113e420128e
wireshark-1.4.15/epan/dissectors/packet-sdp.c,557,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char num_pt[10];,b7093a2fe0b863c179f39eff699c1ceba69b9c8e09d200639f0fe20979231ada
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1099,25,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                        atoi((char*)tvb_get_ephemeral_string(tvb, offset, tokenlen)));",ce9867476c3884fa7f33eab74e6d7366ea8291867e26f1366f6fcfa6d4064d6b
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1119,25,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                        atoi((char*)tvb_get_ephemeral_string(tvb, offset, tokenlen)));",ce9867476c3884fa7f33eab74e6d7366ea8291867e26f1366f6fcfa6d4064d6b
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1152,50,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                            tokenlen, val_to_str(atol((char*)media_format), rtp_payload_type_vals, ""%u""));",cc5216001afc39b433573aa44db512a3b5958b0094f943c0c9c851ac0b1f7b0b
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1154,68,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,      transport_info->media[transport_info->media_count].pt[idx] = atol((char*)media_format);,7a007bbfc8cc9b831925cef566ff2922eb3d572f26a5e60c7c0a020fae7b690a
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1334,34,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                                 atol((char*)format_specific_parameter));,57818fff3b34867f604b8a6a20b87275bedcc4751e518e6e317c01f371c935d2
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1355,34,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                                 atol((char*)format_specific_parameter));,57818fff3b34867f604b8a6a20b87275bedcc4751e518e6e317c01f371c935d2
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1362,34,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                                 atol((char*)format_specific_parameter));,57818fff3b34867f604b8a6a20b87275bedcc4751e518e6e317c01f371c935d2
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1406,34,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                                 atol((char*)format_specific_parameter));,57818fff3b34867f604b8a6a20b87275bedcc4751e518e6e317c01f371c935d2
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1569,10,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    *key=atol((char*)payload_type);,a5f98e2054ebc7575ee440e1bb6c04976eff9f6080ef7da31cc72b72cfb4c40f
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1570,10,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    pt = atoi((char*)payload_type);,d83c86ea64b996d1ccc3860c47c91ac14b90e4b65ade1efc011d7f5977bc1af6
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1586,39,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"    transport_info->sample_rate[pt] = atoi(tvb_get_ephemeral_string(tvb, offset, tokenlen));",bd6e0b68c1130d227a375fd8bba4e8d81fe1ef7f264731e77559b8ca4a7df98b
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1616,17,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,          *key2=atol((char*)payload_type);,b7d5183273957a9a7124d80bf31725413b5ed6266bc7445a40f9ef72ec30872f
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1654,22,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"      media_format = atoi((char*)tvb_get_ephemeral_string(tvb, offset, tokenlen));",ea7ad0c89b7b69031a2a7cad07882a6d538457a5fda6721955bdfcef5cc4c372
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1728,28,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"        msrp_port_number = atoi((char*)tvb_get_ephemeral_string(tvb, port_offset+1, port_end_offset-port_offset-1));",b5e8b134f71ea9dec7a543b80105589e19a51dff095a792bc078f134c042bdc5
wireshark-1.4.15/epan/dissectors/packet-sip.c,783,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char call_id[MAX_CALL_ID_SIZE];,f2003a77392f775672786c4252448f22bf68eab5043a2a76220c242bbd475720
wireshark-1.4.15/epan/dissectors/packet-sip.c,1402,17,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"		cause_value = atoi(tvb_get_ephemeral_string(tvb, current_offset, length));",6fc57e7e380c0ec6c3a1e6acd05d86b85c8f9bee07826d5b6dfffbb6068dcafd
wireshark-1.4.15/epan/dissectors/packet-sip.c,1538,12,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"											atoi(tvb_get_ephemeral_string(tvb, port_offset,",612c4e68e4f57b76681c1a405a6a174fea463c4a2e365f15cb50f73d76fa4601
wireshark-1.4.15/epan/dissectors/packet-sip.c,1775,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char    cseq_method[MAX_CSEQ_METHOD_SIZE] = """";",00cfc846f897d31de7aff9fe60ef4c203179f955899596c9d79aff387ac3bda5
wireshark-1.4.15/epan/dissectors/packet-sip.c,1776,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char	call_id[MAX_CALL_ID_SIZE] = """";",3578ae30fdf19e5346d3b37a5182170fd9529187ce5c9d82645df12f1a06b31c
wireshark-1.4.15/epan/dissectors/packet-sip.c,2263,21,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,						cseq_number = atoi(value);,00fa3a718fccfbfda972a7a8d84faf32897c5421553c9ec5a91b632f2f3a1386
wireshark-1.4.15/epan/dissectors/packet-sip.c,2355,29,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,								                    atoi(value));,f84d7d2f6ec03933913427c29f77245002d998b6cca180e26fabb951c7326892
wireshark-1.4.15/epan/dissectors/packet-sip.c,2379,29,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,								                    atoi(value+cseq_no_offset));,714d5b7ec9325e8120634fd3ed7e9a653078e36fa4ed37684a937a20d70131ef
wireshark-1.4.15/epan/dissectors/packet-sip.c,2438,28,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,							                    atoi(value));,f84d7d2f6ec03933913427c29f77245002d998b6cca180e26fabb951c7326892
wireshark-1.4.15/epan/dissectors/packet-sip.c,2486,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,						content_length = atoi(value);,facaf14c1a124e8694364619c60503fa05d96f5f98e8923ada1d1d6f9f225c42
wireshark-1.4.15/epan/dissectors/packet-sip.c,2503,28,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,							                    atoi(value));,f84d7d2f6ec03933913427c29f77245002d998b6cca180e26fabb951c7326892
wireshark-1.4.15/epan/dissectors/packet-sip.c,2873,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char string[3+1];,00d9d9b077c326dd312b5cdcec870c583e2706e6ff5c271e96567e7cce4d1226
wireshark-1.4.15/epan/dissectors/packet-sip.c,2884,18,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,	response_code = atoi(string);,677f621561ce1867ae4a475df17bfaeab0ddf2546f670fd74d9ed44afa05ab83
wireshark-1.4.15/epan/dissectors/packet-slimp3.c,234,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char		lcd_str[MAX_LCD_STR_LEN + 1];,ccfe822775baafb568c45c05de71b1fa39c27658510e7f45972a75c1230bbe04
wireshark-1.4.15/epan/dissectors/packet-smb-sidsnooping.c,119,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char sid_name_str[256];,568cea86cf108d33ff3d85f7c75963047093bfc0860d6de862728200a6f02486
wireshark-1.4.15/epan/dissectors/packet-smb.c,2086,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,       char *name[MAX_DIALECTS+1];,6b352edf6ab30469f2f0a3ab1a41d596cde357ad7c486a4c7a273dcdccd98128
wireshark-1.4.15/epan/dissectors/packet-smb.c,5117,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char fname[11+1];,ae4b4cdb899f06913561017baf914df0e6063e2c9af85392d27247f3fbc0e88b
wireshark-1.4.15/epan/dissectors/packet-smb.c,5178,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char fname[13+1];,5abdd742e264c2105f630406227ad73be7fc5c370f48e2dc9b4e55291f5e2fab
wireshark-1.4.15/epan/dissectors/packet-smrse.c,159,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char *strp,tmpstr[21];",4d51df34cf88f998d11eb2c2c87ae799494e889400210cb225e53d70346da604
wireshark-1.4.15/epan/dissectors/packet-smrse.c,165,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	static char n2a[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };",818637bbcab06e83147d54c4abe52b27bfc62cfaea0163e3b107477bcefd6171
wireshark-1.4.15/epan/dissectors/packet-snmp.c,500,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label[ITEM_LABEL_LENGTH];,e13879a30490abb6bc65df00b906e235d47e93ff8d1f9ae606071684dff9b26d
wireshark-1.4.15/epan/dissectors/packet-socks.c,257,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char temp[ 256];,9d81b915b948e7569ced82c2adf32ee2f8b746697f779453a9310d958c5d4e55
wireshark-1.4.15/epan/dissectors/packet-socks.c,472,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char ipaddr[4];,72d4f1e9c7995348ec4ca0d49ee8dd7f735bbc92194ff4377128769c2e4da78e
wireshark-1.4.15/epan/dissectors/packet-spnego.c,823,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(L40 + 10, T, sizeof(T));",98425899cd1db7304b73ffa6096cf3e687fa540c664f48eb4f09880f57ced0fc
wireshark-1.4.15/epan/dissectors/packet-spnego.c,875,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char t[4];,df6adde993e73ac0588ca69e81cb19f6eab355a92d145d33dd2e260855aa74f3
wireshark-1.4.15/epan/dissectors/packet-spnego.c,877,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char digest[16];,a20b5d2452f9153c62b990a319ee4231f8a9f3ea90fb31ce544f36e2626b9797
wireshark-1.4.15/epan/dissectors/packet-spnego.c,897,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sgn_cksum, cksum, 8);",a80bca5d9f6044291958b220f9ca284aedf2b02770a0b83fd1d7877447d9039d
wireshark-1.4.15/epan/dissectors/packet-spnego.c,974,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(SND_SEQ, (unsigned char *)tvb_get_ptr(pinfo->gssapi_wrap_tvb, 8, 8), 8);",6b244042ee759a860a07ead65f2bb39854457e249c8554988bd77a8a435fc7c8
wireshark-1.4.15/epan/dissectors/packet-spnego.c,1004,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(Confounder, (unsigned char *)tvb_get_ptr(pinfo->gssapi_wrap_tvb, 24, 8), 8);",f0b1737acf9c29ca1f15f9902cc9e28d14b74ccfc3bfc0a66565e9e33a13e35f
wireshark-1.4.15/epan/dissectors/packet-spnego.c,1006,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(output_message_buffer, input_message_buffer, datalen);",e4f278915ef24fdaf3142a0925842a19d1a14c6f0e19062aa4fff6b80584f502
wireshark-1.4.15/epan/dissectors/packet-spnego.c,1009,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(Confounder,",02ceb7c0f4859f406d0b9ecafed93a6a9226968af189202343be47a83b777fb0
wireshark-1.4.15/epan/dissectors/packet-spnego.c,1012,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(output_message_buffer,",7bad9ec93eccc4649650a2194c177cc23d1dde261e80b652f4bfb4d13310fd12
wireshark-1.4.15/epan/dissectors/packet-spnego.c,1106,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(cryptocopy, original_data, length);",631074dcc68dfc0eed9e30cc91068a82784a2adb1222424713ab3a30707f82ec
wireshark-1.4.15/epan/dissectors/packet-spnego.c,1131,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	unsigned char *tmp, buf[256];",d6acf3b4c506625fba98a871f66f16386a3589ddcd69bbf43b8ebbccc8c825f1
wireshark-1.4.15/epan/dissectors/packet-spnego.c,1153,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(tmp, data, rrc);",0d8f49c541b932508aae8af04744563b632196c1d0f291d32923af212e5fd98d
wireshark-1.4.15/epan/dissectors/packet-spnego.c,1155,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy((unsigned char *)data + left, tmp, rrc);",80f707e67d494ab4d49924dbc1095c3a90af7284c917ce43bf3d8b14138d9284
wireshark-1.4.15/epan/dissectors/packet-spnego.c,1157,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(tmp, (unsigned char *)data + left, rrc);",d23a84fb556e4daa947d987859f6b600ccb0db375b5085ec0dc1e7e084ea3dab
wireshark-1.4.15/epan/dissectors/packet-spnego.c,1159,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(data, tmp, rrc);",d7e6478aad14f882fb09916d0353ba2666f6d932be107f5d573910f5824111ff
wireshark-1.4.15/epan/dissectors/packet-srvloc.c,587,36,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                            prot = atol(byte_value);,4e477d63839685e2673ca6741b09ab5b6f5bd626efba69102dfa72dca078ec0d
wireshark-1.4.15/epan/dissectors/packet-srvloc.c,596,32,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                        prot = atol(byte_value);,4e477d63839685e2673ca6741b09ab5b6f5bd626efba69102dfa72dca078ec0d
wireshark-1.4.15/epan/dissectors/packet-srvloc.c,662,28,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                    prot = atol(byte_value);,4e477d63839685e2673ca6741b09ab5b6f5bd626efba69102dfa72dca078ec0d
wireshark-1.4.15/epan/dissectors/packet-srvloc.c,671,24,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                prot = atol(byte_value);,4e477d63839685e2673ca6741b09ab5b6f5bd626efba69102dfa72dca078ec0d
wireshark-1.4.15/epan/dissectors/packet-ssh.c,842,51,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"	if ((size_str=g_strrstr(mac_name,""-"")) && ((size=atoi(size_str+1)))) {",6496f9d1cd4c0c80cc50c918bc3fff26943c470c27ce5aa3ce54d1e725faf471
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,869,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(str->data, data, len);",7637f8b00a57955fbf542c8c549b7ff8709095872723948d41a6312c6c9c13d2
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,907,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(data, gcry_md_read(*(md), algo), len);",9e2ce258842b39a8832a3309c94aec7a2f9eeebc5e80bb04c2b920f53a398c50
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,945,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(data, gcry_md_read(*(md),  algo), len);",395b396774c9d2e4ebfd743512813b4ba78a6cf79595d856816cfc2cec6a3691
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,971,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, gcry_md_read(*(md),  GCRY_MD_SHA1),",bc65d7ba7c2a01dac071e08c9e294e7fd621f2df5595bb94de7d664a9bfa82f0
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,993,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, gcry_md_read(*(md),  GCRY_MD_MD5),",0b119dc3a419d726dded1e5d483968c148cbc961f09c945f119a9253b89139f3
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1060,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(out, in, outl < inl ? outl : inl);",1109ea7bc09aa1fb18bea297fa866ee93af698c040c497f1b0522c68ee0dc327
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1263,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(dst->data, src->data, src->data_len);",96f31ab2945cf3b64af0136b3c1a34b4de103f721094004c637dbc952024ac73
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1380,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ptr,tmp,tocpy);",e5b11cb75a92cfa162aecc5f3bb12c528a904132553660f991867239af13bf09
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1417,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ptr,usage,usage_len); ptr+=usage_len;",c34fb7349f5e2c1f3bb3b5e6363760faf9872b68e1756c0665caa3e44edf903f
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1418,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ptr,rnd1->data,rnd1->data_len); ptr+=rnd1->data_len;",983d893b31186f76443dcb27308ae6d184e8bfa7937f4c574f7794f69bd6bd1e
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1419,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ptr,rnd2->data,rnd2->data_len); ptr+=rnd2->data_len;",11752d77423e0f6b6f146e91eecce40cd755887f3a88b5dd3089cd34082fc4b7
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1432,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(s1.data,secret->data,s_l);",a5eb4602a1d61b48a2adf75b1bb7a15fedd9831c9afd23b053e70073c2150742
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1433,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(s2.data,secret->data + (secret->data_len - s_l),s_l);",35b46bc9d6be70da0c1932bfc59277c52225e2ae294b2f6ef60d28d2076fb24e
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1473,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(out->data,tmp,out->data_len);",6c8707529475bc4f4089666be36b6deac60abfab2fc2583a2b243ea90c159b91
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1529,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(out->data+off,outbuf,tocpy);",d35169d67e5a9d13680474da22037122648b001f18f6b4bffaf16182e5cedb41
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1766,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(_iv_c,iv_block.data,ssl_session->cipher_suite.block);",ef994005056b5942de8396f027697d73846d2b31ab3b166908711266f684e1ef
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1767,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(_iv_s,iv_block.data+ssl_session->cipher_suite.block,",47ecaf2474cc7e9f8799be72533663e9a14c75ffada4584813c3e71a4c9eca74
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1933,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf+4,&netnum,4);",ef461fbace5b21af21e5215c711fb466ea677c896beb352129c411f10ba6167f
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1969,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, &temp, 2);",d81ce38f494eb923f16e86c1d3f8dd7d3cc781c04574da0a6f16ad446591383b
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1974,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, &temp, 2);",d81ce38f494eb923f16e86c1d3f8dd7d3cc781c04574da0a6f16ad446591383b
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,2025,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, &temp, 2);",d81ce38f494eb923f16e86c1d3f8dd7d3cc781c04574da0a6f16ad446591383b
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,2082,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, &temp, 2);",d81ce38f494eb923f16e86c1d3f8dd7d3cc781c04574da0a6f16ad446591383b
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,2086,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, &temp, 2);",d81ce38f494eb923f16e86c1d3f8dd7d3cc781c04574da0a6f16ad446591383b
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,2186,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(out_str->data,out_str->data+decoder->cipher_suite->block,worklen);",9aa9e3e47e21d53e58eb32e69829ca78d74837981fac5fe8ae77a0ddacb4e0e7
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,2191,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(out_str->data,out_str->data+decoder->cipher_suite->block,worklen);",9aa9e3e47e21d53e58eb32e69829ca78d74837981fac5fe8ae77a0ddacb4e0e7
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,2264,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char buf_keyid[32];,2a6d2bf986ebf27e7ed12f90ea88896dc69a6ed9aa6ad96868efb5482ee5fbe8
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,2446,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char buf_name[256];,a41076923bc95dc4d11f2a7017beb7e402b95db3a639d0f8f2652862a5795b47
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,2447,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char buf_email[128];,0d0d9756ce30aca638c55428bff2cf566c5fe9ae14b192a79826b724cfe73776
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,2448,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char buf_keyid[32];,2a6d2bf986ebf27e7ed12f90ea88896dc69a6ed9aa6ad96868efb5482ee5fbe8
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,2988,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(real_data, data, data_len);",1ee19fe8ff9f8550278e8dea2969b572a42ab3e82283a89acd4cf10a31d5134a
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,3030,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(rec->plain_data.data, data, data_len);",525c55f74b022c20420c29b6da0c7eefba9e7789beb5cf1cb299986d7e25a189
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,3178,29,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            service->port = atoi(port);,ba2ef1aad87504073452cd867affb82975288fb6fddcb4c11a57cf2b2e4ba321
wireshark-1.4.15/epan/dissectors/packet-synergy.c,153,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char buffer[20];,08eab8bb307ddf658e7f3a87cc52aeeaee9fb5cf755ad4008df5fdad05bad880
wireshark-1.4.15/epan/dissectors/packet-synphasor.c,139,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	      name[CHNAM_LEN + 1];,aa83665eb006d2fcf32a089b1a2f46f0c2eb54d688940a37d6940cc389ef3c2d
wireshark-1.4.15/epan/dissectors/packet-synphasor.c,146,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	name[CHNAM_LEN + 1];,bd8022a6f4e1c017c84b180dfb6b00af1efc479d5028f75ad2d535f1094be8ec
wireshark-1.4.15/epan/dissectors/packet-synphasor.c,153,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		name[CHNAM_LEN + 1]; /* holds STN		       */,c047e71e18d1b990a248244b9730ce28d6aa856c7e6695f3d983f8ac74f823ba
wireshark-1.4.15/epan/dissectors/packet-synphasor.c,673,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char   buf[20];,a505e93224af91d85e74d315e4ab8524b99553abf72659307528bb155900d83b
wireshark-1.4.15/epan/dissectors/packet-t38.c,399,8,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	      memcpy(fd_head->data+dfpos,fd_i->data,fd_i->len);",9f572296e27283e38abfded87ba6ef8f0783621ebf83470dc32376c03ff6f904
wireshark-1.4.15/epan/dissectors/packet-t38.c,1055,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&(p_t38_packet_conv->src_t38_info), &(p_t38_conv->src_t38_info), sizeof(t38_conv_info));",aaa33a37baf1984e1c3d7efaab9358a6eac8a97767b6b5741b81be535109be4d
wireshark-1.4.15/epan/dissectors/packet-t38.c,1056,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&(p_t38_packet_conv->dst_t38_info), &(p_t38_conv->dst_t38_info), sizeof(t38_conv_info));",f67a4666ee3daa117f7c7723afda7682e3ca8e6b4c143cb4de092e63a70d9737
wireshark-1.4.15/epan/dissectors/packet-tacacs.c,1137,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(mdp, session_id, 4);",882c94c37d52991fb7b90c42fd097a45166a7ab6356016493754fe5ab8143992
wireshark-1.4.15/epan/dissectors/packet-tacacs.c,1139,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(mdp, key, strlen(key));",35295c06a91fe8861190f000057666cdba1f708e0496bb43f2c31d15e1e6f795
wireshark-1.4.15/epan/dissectors/packet-tacacs.c,1158,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(mdp, hash, MD5_LEN);",bda73d9d4476572b18b8b7dce335efe3973fbd21d635ab7163dec844ad2e5c8e
wireshark-1.4.15/epan/dissectors/packet-tali.c,95,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char opcode[TALI_OPCODE_LENGTH+1]; /* TALI opcode */,43738e22820e3ba578762bea1f605610916dc547fd7978e894d343552297d2af
wireshark-1.4.15/epan/dissectors/packet-tali.c,149,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char opcode[TALI_OPCODE_LENGTH]; /* TALI opcode */,b2d31c85a9e83b34e46a570d1a63a818fa5b61c3549d5c3fc5e01df1552546fb
wireshark-1.4.15/epan/dissectors/packet-tds.c,959,32,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                if (!isprint(((char *)data)[i])) result[i]='.';,4aaf03413f803314d592ded81e35e772208c9fd9a4449a50786ff2673a658ce0
wireshark-1.4.15/epan/dissectors/packet-tds.c,960,34,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                else result[i]=((char *)data)[i];,9678850ffd4e76a8cc0b8fe569560205c66288ae903862777ddeef1c062317b0
wireshark-1.4.15/epan/dissectors/packet-telnet.c,148,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char str_model[2];,19f3bda1dba40a1249145b29da746ef8c5a39de7632b79f72bd6b440407e5472
wireshark-1.4.15/epan/dissectors/packet-telnet.c,157,15,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,      model = atoi(str_model);,91ffb480f3af97eebba6ff97580461a7e6821cb36268eb740661a6568019810b
wireshark-1.4.15/epan/dissectors/packet-telnet.c,735,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char ls_buffer[512];,0b3e5da989dcb21f6766a91b141ee153187e9df34a2b6d9cf6f3729c92168048
wireshark-1.4.15/epan/dissectors/packet-telnet.c,765,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char ms_buffer[256];,4dcdd5eee80bdedb99be22a249408202a01a43dee27a900b3c33d590265b6aaf
wireshark-1.4.15/epan/dissectors/packet-tpncp.c,579,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(hf + (hf_size - 1), hf_tpncp + idx, sizeof(hf_register_info));",55fc38481c5ee8e60a2a841d8c5866db488e6fa81c9fef50de5699fa3f4c4d51
wireshark-1.4.15/epan/dissectors/packet-tpncp.c,598,19,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        data_id = atoi(tmp);,b20232ffea9b5d96d35dc217a1093e7d6316e9298bd5638da48e1dabdea707f9
wireshark-1.4.15/epan/dissectors/packet-tpncp.c,603,33,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        tpncp_data_field_sign = atoi(tmp);,df4ba746231832af3d314325a7812e493a995c89380116de767b8503efe2cda0
wireshark-1.4.15/epan/dissectors/packet-tpncp.c,606,33,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        tpncp_data_field_size = atoi(tmp);,1cad422c6b8024756241169a96305a0b9afdfd34c41e680e86ac23957094dad3
wireshark-1.4.15/epan/dissectors/packet-tpncp.c,609,38,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        tpncp_data_field_array_dim = atoi(tmp);,f1f7d9d934e62fa26a3544008d42d8a8d23c85a1fcd50baa75b6981ab8035aba
wireshark-1.4.15/epan/dissectors/packet-tpncp.c,612,39,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        tpncp_data_field_is_ip_addr = atoi(tmp);,b996048ad97e851b0a08369b97cf96823d8c12fcd5c2fbae90f2adba1b2a3210
wireshark-1.4.15/epan/dissectors/packet-tpncp.c,670,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(hf + hf_size - 1, &hf_entr, sizeof(hf_register_info));",07053db053a821fb36af4290efd76e44dc9025c5bd91a9e76e2033e51780a3dd
wireshark-1.4.15/epan/dissectors/packet-tr.c,380,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(trn_shost_nonsr, trh->src.data, 6);",74975c426b7d46fd74445fefe43876d69f8e418d5c64c09eaaae0951fee6ebe0
wireshark-1.4.15/epan/dissectors/packet-trmac.c,244,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(errors, tvb_get_ptr(tvb, svoff+2, 6), 6);",c3523b0b131d87dadcc5fc8fe7b67ef719f14f284f23d575caa5f95c38d1bf46
wireshark-1.4.15/epan/dissectors/packet-trmac.c,258,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(errors, tvb_get_ptr(tvb, svoff+2, 6), 6);",c3523b0b131d87dadcc5fc8fe7b67ef719f14f284f23d575caa5f95c38d1bf46
wireshark-1.4.15/epan/dissectors/packet-ucp.c,809,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char         strval[BUFSIZ + 1],",740eddef64c0e9e6ae65742a94fa4d8cb4d971abff1c4b8539ed2f7ba3207d4a
wireshark-1.4.15/epan/dissectors/packet-ucp.c,883,18,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        intval = atoi(strval);,cc3c6d0b09f969d5b2a1206755ecefac864761cef1550f6c0d4d1f1a7b530e1e
wireshark-1.4.15/epan/dissectors/packet-usb-hid.c,458,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&cur_global, global, sizeof(struct usb_hid_global_state));",85232206d3b2e72017a05e949e417352ebdf4e877e6012f44fad5b3d8e995892
wireshark-1.4.15/epan/dissectors/packet-vcdu.c,248,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char readbuf[1024];,e8dafe4a08b446c6dbd856ff1c2120ce8cafa6d25ace07792d2bc8cc010db008
wireshark-1.4.15/epan/dissectors/packet-vj.c,359,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&cs->cs_ip, &buffer[0], IP_HDR_LEN);",af5a3943a4768dd7ee691da7d10eba580b542f54c3ac24b88145b1b0d8cedd2d
wireshark-1.4.15/epan/dissectors/packet-vj.c,360,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&cs->cs_tcp, &buffer[ihl], TCP_HDR_LEN);",77b6df50f53011ccf72a17b106df0da8ff6b900fd8a556315242b3953dba0e04
wireshark-1.4.15/epan/dissectors/packet-vj.c,362,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(cs->cs_ipopt, &buffer[sizeof(iphdr_type)], ihl - IP_HDR_LEN);",82b2f2bae3814901375debbc46405a95971bbdc14bb15351212c6bf6fbf1764b
wireshark-1.4.15/epan/dissectors/packet-vj.c,364,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(cs->cs_tcpopt, &buffer[ihl + sizeof(tcphdr_type)],",fafe6afdf2aa0c3bef0a1e9a31b8feb960f932e263f46c9ca42cff3477958589
wireshark-1.4.15/epan/dissectors/packet-vj.c,501,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(pbuf, data_ptr, hdr_len);",05fb23f68dbcd05f25a4af0ecfdb7a79544ba4646a79660170ddaae623dcc824
wireshark-1.4.15/epan/dissectors/packet-vj.c,503,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&tot_len, data_ptr + 2, 2);",1357d0b32b28ea85a1f20a26c1d2fad6c2707b19548d7bca855217c8da868133
wireshark-1.4.15/epan/dissectors/packet-vj.c,737,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(data_ptr, ip, IP_HDR_LEN);",1434b2ad6e3946af695c3f7a83c512b5b1331dcc3f1476f1e728c1f908de9769
wireshark-1.4.15/epan/dissectors/packet-vj.c,740,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(data_ptr, cs->cs_ipopt, (lo_nibble(ip->ihl_version) - 5) * 4);",caf17cff2a688ee005fe14c5f37bb57bd0bca7f7cd68cf559afb3b0db93b2359
wireshark-1.4.15/epan/dissectors/packet-vj.c,743,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(data_ptr, thp, TCP_HDR_LEN);",dc6af6ce6473cfa1cb456694ef8c2c263d8c89abfd6252bef60f1cb96e853bcb
wireshark-1.4.15/epan/dissectors/packet-vj.c,746,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(data_ptr, cs->cs_tcpopt, (TCP_OFFSET(thp) - 5) * 4);",00c2dca6a188b0c73e52bd897fac4e79b9a2cdd1ba76f04e21fba813f04aa3a2
wireshark-1.4.15/epan/dissectors/packet-wbxml.c,6951,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char indent_buffer[514] = "" """,a132b6d3ba83ee61c38f17dcd3d22141b57b94840541c1b2633f43a666a02fb7
wireshark-1.4.15/epan/dissectors/packet-wcp.c,577,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy( &pdata_ptr->buffer, buf_ptr->buf_cur,  len);",bdf3091e3f1fe7b45887264b200d8c73c0c89ee0c96400a2ba1020e83f281121
wireshark-1.4.15/epan/dissectors/packet-winsrepl.c,395,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char  name_str[(NETBIOS_NAME_LEN - 1)*4 + 1];,17666e57b63df392166ae37302c35fa9fee49f05162bf4d1ff6bab6e8bb74585
wireshark-1.4.15/epan/dissectors/packet-wtls.c,481,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char valStr[1024];,1cddb16498d400ac0fc190b331bc3897612bb0be9a2d4b38732df727c47bf521
wireshark-1.4.15/epan/dissectors/packet-x11.c,1693,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *,d9ec37f374002ad2a9626627effec871ff5cb9befd95e89037f58ae323f39287
wireshark-1.4.15/epan/dissectors/packet-xcsl.c,218,32,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                      result = atoi(str);,bbcdc0bb61f18db47f48a97058472915c8e19479d791eee5b0226ca56d999b47
wireshark-1.4.15/epan/dissectors/packet-yhoo.c,108,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char version[8];		/* 7 chars and trailing null */,bef30724fc6f2d0e14b13c834eac2e786eabab5c02717ca370729c89ad939c69
wireshark-1.4.15/epan/dissectors/packet-yhoo.c,109,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char len[4];		/* length - little endian */,615968d4434176e04d8699c78bfa9b04ea1c31253605428498d18ee6b4cf29a6
wireshark-1.4.15/epan/dissectors/packet-yhoo.c,110,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char service[4];	/* service - little endian */,5b412f1b1de79f89b2cf5bf1ab7c94ed4b8886f1021208bd6ef5183aecf337fc
wireshark-1.4.15/epan/dissectors/packet-yhoo.c,111,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char connection_id[4];	/* connection number - little endian */,da7566902a89d4503e0e01688ec44a9249ab8698267fc9caed8180689fedc1a7
wireshark-1.4.15/epan/dissectors/packet-yhoo.c,112,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char magic_id[4];	/* magic number used for http session */,dddd32112e7fc4483d98f790906f097439ecd6d6c925fe7117c870a233c2af1f
wireshark-1.4.15/epan/dissectors/packet-yhoo.c,113,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char unknown1[4];,7bf50a720d842ba56c90da46258740debf1d9f975ec43628a54b9d41799104ed
wireshark-1.4.15/epan/dissectors/packet-yhoo.c,114,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char msgtype[4];,90dc04fc51f2aedb105afa662efc97b735006d3a3346931cdc7b916594d05759
wireshark-1.4.15/epan/dissectors/packet-yhoo.c,115,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char nick1[36];,b5fdf5159f81b1ede1b18cd93ae32171fa144ee2f4903863e8311fb1cd9f8e92
wireshark-1.4.15/epan/dissectors/packet-yhoo.c,116,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char nick2[36];,1b85ce1bb5e60003625fa882b24d160b5dd0866eeed73bd8ec61531afd3110cb
wireshark-1.4.15/epan/dissectors/packet-yhoo.c,117,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char content[1];		/* was zero, had problems with aix xlc */",59c646b64d477e8c7bf62dd32f5f13ce989bab8db81982c141f1b769047ded8c
wireshark-1.4.15/epan/dissectors/packet-ymsg.c,212,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char ymsg[4];			/* Packet identification string (YMSG) */,e33d5ebda73502845c3eb5b14611d93a78b6aaac134c0cb14ea89f6460e10d17
wireshark-1.4.15/epan/dissectors/packet-ymsg.c,213,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	unsigned char version[2];	/* 2 bytes, little endian */",b4cfcc8fc6e0e992dc9565ca4e65e35c6159b2bfce84092baa582a26fd31f8d1
wireshark-1.4.15/epan/dissectors/packet-ymsg.c,214,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	unsigned char vendor[2];	/* 2 bytes, little endian */",1d80fc3d1dcb93c64093149d98d1f2fcc5a6c2121668242071b79a381164e092
wireshark-1.4.15/epan/dissectors/packet-ymsg.c,215,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char len[2];		/* length - little endian */,da50225072fc1f2d178148489d36726c6bef8b32a6083fe4fc89b1af88d9ac90
wireshark-1.4.15/epan/dissectors/packet-ymsg.c,216,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char service[2];	/* service - little endian */,30f605f7acc74b44a357eccd451e32b767429f4d352b5c3615c0ce9299ec9a27
wireshark-1.4.15/epan/dissectors/packet-ymsg.c,217,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	unsigned char status[4];	/* Status - online, away etc.*/",971e939d1eec057a14ddb00e6840636413182ff95302783038db144315b12c89
wireshark-1.4.15/epan/dissectors/packet-ymsg.c,218,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char session_id[4];	/* Session ID */,6da5b536c737dbdb4305ebdaa567c4f35ecf194102753be5d657330f8f97d060
wireshark-1.4.15/epan/dissectors/packet-ymsg.c,219,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char content[6];		/* 6 is the minimum size of the content */,31322d801a6fc1189f7a81c980af8eb60586210815de34990b85ee369648ae39
wireshark-1.4.15/epan/dissectors/packet-zbee-security.c,696,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(cipher_in + 1, nonce, ZBEE_SEC_CONST_NONCE_LEN);",9c59b93d0c4c2c1de151d2cf4094247532ab6905e9aaf9b8eb7d54e1b775cad4
wireshark-1.4.15/epan/dissectors/packet-zbee-security.c,723,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(decrypted_mic, c + l_m, M);",e75ec88de619dfcae0b5b259a7543d4023c37b9f2d04163a6275c1513e915e9c
wireshark-1.4.15/epan/dissectors/packet-zbee-security.c,770,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(cipher_in+sizeof(gchar), nonce, ZBEE_SEC_CONST_NONCE_LEN);",0db90656e815e8b5f113fbf163ca5ddaab30b3b59b4f30053ce04e8224e5a315
wireshark-1.4.15/epan/dissectors/packet-zrtp.c,325,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char message_type[9];,e0a2e24b3d0f509d92f24f5aa80dab0c81e9cb65d60b04a58071adbb55049706
wireshark-1.4.15/epan/dissectors/packet-zrtp.c,569,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char value[5];,ef94c94959a6098b888f54569bc85d603f8fd84ff895b79c6c99df9cc3d1180f
wireshark-1.4.15/epan/dissectors/packet-zrtp.c,645,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char value[5];,ef94c94959a6098b888f54569bc85d603f8fd84ff895b79c6c99df9cc3d1180f
wireshark-1.4.15/epan/dissectors/packet-zrtp.c,646,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char version_str[5];,8ad940136feacc9521b4ec59f7e09fc5b0ce261fe8985934066be9b9c27bd7ba
wireshark-1.4.15/epan/dtd_parse.c,2352,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(buff, input_string->str + offset,size);",5e87c2c548b950bbac16beeb121199bb279d428ac732b617001554c2a381a367
wireshark-1.4.15/epan/dtd_parse.c,2357,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(buff, input_string->str + offset,size);",5e87c2c548b950bbac16beeb121199bb279d428ac732b617001554c2a381a367
wireshark-1.4.15/epan/emem.c,186,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(&ptr, &canary[i+1], sizeof(void *));",adc95cb487e22d51a3125766d9c4a97b925eeb8930381aae7d384c3e43a533bd
wireshark-1.4.15/epan/emem.c,761,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(cptr, mem->canary, pad-1);",9b4f3ea47e0929348b811935b9f29c412b0c37e35a9a6e1cf00ac027fde43fde
wireshark-1.4.15/epan/emem.c,763,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(cptr + pad, &free_list->canary_last, sizeof(void *));",e26ff922a71e19e8a4e075f10d17eaf1a6c03a48c5a9108a69a5778b9e359eca
wireshark-1.4.15/epan/emem.c,833,8,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	dst = memcpy(ep_alloc(len+1), src, len+1);",d19dc28dafa81823538e77381fcfb53c19e1af26010ac9feca1b31089fbac9ae
wireshark-1.4.15/epan/emem.c,855,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	return memcpy(ep_alloc(len), src, len);",f88c16c935784670893be57d104b0eb56f14ff2b8536644fb24ec778eb5ecd4e
wireshark-1.4.15/epan/emem.c,986,8,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	dst = memcpy(se_alloc(len+1), src, len+1);",b67f6735582317878315ea8e06a3aa4f58ab65c4442ba77c533011acfe89909d
wireshark-1.4.15/epan/emem.c,1008,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	return memcpy(se_alloc(len), src, len);",51768435cedd982e7171b92958451a5dfc06814a5a39f5ec2ab064169a9cdbdd
wireshark-1.4.15/epan/except.c,393,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[256];,86753089edd8e96675f0102bc52bd39c8f2c94e4f63e4a6e6052dfa82d40f6a3
wireshark-1.4.15/epan/expert.c,158,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char            formatted[ITEM_LABEL_LENGTH];,4ed48fd6ce63b018ec26eda9b4c61d9fab78b4209ed54890ba4a6bb885c46e93
wireshark-1.4.15/epan/filesystem.c,273,2,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	TCHAR prog_pathname_w[_MAX_PATH+2];,ac4b694cdce3ccf08fef7f2f8a0b9e7dbf451b9dce30e64f370e0f085a89e990
wireshark-1.4.15/epan/filesystem.c,453,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(path, path_start, path_component_len);",a77376e8adbaf227af42da34f9c15e56cfc28f3198791a5a8955fbc3f9eee142
wireshark-1.4.15/epan/filesystem.c,1335,2,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	TCHAR tszPath[MAX_PATH];,e071d18c80d6e297aa6d304a3049537921bd64c437e38b822fd97414a835ab70
wireshark-1.4.15/epan/filesystem.c,1599,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char errmsg_errno[1024+1];,d3a48dd6bc93bca3e84f669e2c8877706d80f16af252aaf122e7357a1411da58
wireshark-1.4.15/epan/filesystem.c,1654,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char errmsg_errno[1024+1];,d3a48dd6bc93bca3e84f669e2c8877706d80f16af252aaf122e7357a1411da58
wireshark-1.4.15/epan/filesystem.c,1726,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char full1[MAX_PATH], full2[MAX_PATH];",f79269ec4cc95815f1248a2a4c471d4293ef99784e6af396deb634c7d97907ab
wireshark-1.4.15/epan/follow.c,74,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(stats->ip_address[i], ip_address[i], MAX_IPADDR_LEN);",712c1091d08801cea19632738a5c8776db5f6fadbea8c6052693660b65062908
wireshark-1.4.15/epan/follow.c,136,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(ip_address[0], pi->net_src.data, len);",90b745679a34a641547a756e71a64b812b757213af7a28748928be1aba4be64d
wireshark-1.4.15/epan/follow.c,137,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(ip_address[1], pi->net_dst.data, len);",99091d4cf9950da69515219bc3cd2802d9be771063ac8e632f4d137390d6f79b
wireshark-1.4.15/epan/follow.c,178,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(srcx, net_src->data, len);",d8683bc8a38ef707dcd451cf749c6cca06a43497b1d6b17ba32224982ea5e3d4
wireshark-1.4.15/epan/follow.c,179,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(dstx, net_dst->data, len);",480f8e713904038c5394803f29f53846ac462ed4b88d53bd47c3edf799dc9470
wireshark-1.4.15/epan/follow.c,194,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(src_addr[j], srcx, len);",c209440b256361dc523b727a677ed0a2a0cbef34004f4a03e0db1a860eb61f8f
wireshark-1.4.15/epan/follow.c,217,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sc.src_addr, dstx, len);",606d8527e712713e937c616355666a0f8f703de1ed79d30daf3b32573385ab36
wireshark-1.4.15/epan/follow.c,225,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(sc.src_addr, srcx, len);",034ead4a48e2d49efce153dd367177035aa138f4c15e624817a750fff27b1595
wireshark-1.4.15/epan/follow.c,290,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy( tmp_frag->data, data, data_length );",b8dd479ab73dc9ad11db534e3744d730ced9fc2935f84397a4bf4aed7a08c429
wireshark-1.4.15/epan/ftypes/ftype-bytes.c,133,4,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"			sprintf(write_cursor, ""%02x"", *c++);",aff7b8ab97a8d943f3c8303beabee19d0414b9b49b59a5981a4948f3ab7a551d
wireshark-1.4.15/epan/ftypes/ftype-bytes.c,137,4,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"			sprintf(write_cursor, "":%02x"", *c++);",23dd69e1e3a20ebe0ffdb27bd744190f85dfdfb438afbc80f5426f7b8e3aeb64
wireshark-1.4.15/epan/ftypes/ftype-double.c,98,2,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"	sprintf(buf, ""%."" STRINGIFY(FLT_DIG) ""g"", fv->value.floating);",d68de94434481fd46dca4efd0b016ae9298a0dacf3c0881014676a5a091ba7ac
wireshark-1.4.15/epan/ftypes/ftype-double.c,116,2,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"	sprintf(buf, ""%."" STRINGIFY(DBL_DIG) ""g"", fv->value.floating);",071aee411fb58dc2931d9467431721e3483bd84209731700cc3d07d23f2134fc
wireshark-1.4.15/epan/ftypes/ftype-guid.c,50,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char *p, digits[9];",932bd3917895048b9981f8b1f5f45ff607c750bf752a61d131f023a459b74524
wireshark-1.4.15/epan/ftypes/ftype-integer.c,229,2,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"	sprintf(buf, ""0x%08x"", fv->value.uinteger);",6f5cb82fb1284cf8e783e61c07ed46eb7c2b75e0f40509ac5ba492068d26152a
wireshark-1.4.15/epan/ftypes/ftype-integer.c,370,2,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"	sprintf(buf, ""%"" G_GINT64_MODIFIER ""d"", fv->value.integer64);",2d34d4af5ab17fcf4d132cb573301159ed13aa3c4a2559c998c75d28c1065f9e
wireshark-1.4.15/epan/ftypes/ftype-integer.c,382,2,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"	sprintf(buf, ""%"" G_GINT64_MODIFIER ""u"", fv->value.integer64);",474cca59989df969e174382fe54529a06fb5b8a840f6865f70d494481b02b1b4
wireshark-1.4.15/epan/ftypes/ftype-string.c,105,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char hex[3];,44af7cc082f7e60ba8155f057dd2f2ae19a109f56d233c992b0e304ae500723f
wireshark-1.4.15/epan/ftypes/ftype-string.c,121,5,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"				sprintf(hex, ""%02x"", (unsigned char) c);",04da4d545192340c5da727c31b50285cf7f4d26ffc0c02a0b824eda99feaee61
wireshark-1.4.15/epan/ftypes/ftype-string.c,174,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(fv->value.string, fv_bytes->value.bytes->data, num_bytes);",5fd8c273845abc74a352e0d35c6ea52ddf6b72f272b09d95387ae0f444e9b9c6
wireshark-1.4.15/epan/ftypes/ftype-time.c,308,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&(fv->value.time), value, sizeof(nstime_t));",f64a60c912b48524ec24f5043fe3ef782e5e88ca98dbf57012e5411fd8c421cb
wireshark-1.4.15/epan/ftypes/ftype-tvbuff.c,169,4,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"			sprintf(write_cursor, ""%02x"", *c++);",aff7b8ab97a8d943f3c8303beabee19d0414b9b49b59a5981a4948f3ab7a551d
wireshark-1.4.15/epan/ftypes/ftype-tvbuff.c,173,4,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"			sprintf(write_cursor, "":%02x"", *c++);",23dd69e1e3a20ebe0ffdb27bd744190f85dfdfb438afbc80f5426f7b8e3aeb64
wireshark-1.4.15/epan/gcp.c,139,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy((guint8*)&(m->hi_addr),hi_addr->data,4);",b1ed69b2bf917f96fbc22b4e1867304850a20f03ca3c339c46fd930a568df27e
wireshark-1.4.15/epan/gcp.c,140,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy((guint8*)&(m->lo_addr),lo_addr->data,4);",c777a6fd411e2cb9c90bced4ae8f864fbec36f757a585f677387cc9147ce7d95
wireshark-1.4.15/epan/geoip_db.c,241,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char val[VAL_STR_LEN];,40dd327cf0656a6bcc61db9d7da977094ac740641c7d7317d976df29121bff02
wireshark-1.4.15/epan/ipproto.c,289,16,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        static char buf[128];,eab9b5d81ccc4f28e750e605b0e51c583e8bc6a4fd16c6b1942afdafd41c217e
wireshark-1.4.15/epan/prefs.c,1899,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char string[N_NAME_RESOLVE_OPT+1];,966982c9843073f90375d81893fd4984a484783594a2dc3261b2b473082a0d19
wireshark-1.4.15/epan/proto.c,843,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(pushed_tree, ptvc->pushed_tree, ptvc->pushed_tree_max - SUBTREE_ONCE_ALLOCATION_NUMBER);",6ed60b1328ea2faa328b6c6a6874c1802996ac34af90673f2473f6a46004c4d0
wireshark-1.4.15/epan/proto.c,3342,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char tmpbuf[64];,12c73c8641517c5ba238de3fcbde2ba238887ea28ad435d80083ad901dbfb607
wireshark-1.4.15/epan/proto.c,6038,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char			width[5];,eef8479ff81467a15943da04d366df22813991b8cc267b98a4ccdc6ff8059422
wireshark-1.4.15/epan/proto.c,6832,2,2,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant string.,CWE-120,"	strcat(str,"" = "");",10d5987b01afe983b70d2dbdc116ca359f42224914d3262d244b5eb4b82819f2
wireshark-1.4.15/epan/proto.c,6958,2,2,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant string.,CWE-120,"	strcat(str,"" = "");",10d5987b01afe983b70d2dbdc116ca359f42224914d3262d244b5eb4b82819f2
wireshark-1.4.15/epan/proto.h,283,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char representation[ITEM_LABEL_LENGTH];,817c6786f7b5c2f745d25cf0877830d85ef426274f146562d202813b9b0b1ba5
wireshark-1.4.15/epan/range.c,335,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"   memcpy(dst, src, range_size);",9e6216b337f3ee6a8b51fa7add9305d70e6cd69ab2480e067b01c4998921ab96
wireshark-1.4.15/epan/reassemble.c,961,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"					memcpy(fd_head->data+dfpos,",bcab43600323a9a698729c145bc782e72efa8a6f6f885fe411a8d9f42b3224ca
wireshark-1.4.15/epan/reassemble.c,1250,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(fd_head->data+dfpos,fd_i->data,fd_i->len);",9f572296e27283e38abfded87ba6ef8f0783621ebf83470dc32376c03ff6f904
wireshark-1.4.15/epan/reedsolomon.c,185,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static unsigned char taltab[NN+1],tal1tab[NN+1];",c5880d97879a929967d23c9c79699bebf383006eb61d19241dc4ea657900ccea
wireshark-1.4.15/epan/sigcomp-udvm.c,136,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		string[2];,067796a248267f41f21b3f61fd633dca20e2b0bad19d17dcfdd3c8d18d975dbe
wireshark-1.4.15/epan/sigcomp-udvm.c,182,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char sha1_digest_buf[STATE_BUFFER_SIZE];,cb78cae05a2ec1f42cc571ddff1e6f3da8280ab41246686be54ac5b0782b17c6
wireshark-1.4.15/epan/sigcomp_state_hdlr.c,681,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		partial_state[STATE_BUFFER_SIZE]; /* Size is 6 - 20 */,d60ea93b98ab4d4c2f25468820a7de8d611997eea55eeeb1d3bcfe4b717d1d78
wireshark-1.4.15/epan/sigcomp_state_hdlr.c,808,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char partial_state[STATE_BUFFER_SIZE];,216a5679ac6f4017d6cb181d3a885edf005b8b0f1a765226d608bc54edf5417b
wireshark-1.4.15/epan/sigcomp_state_hdlr.c,838,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char partial_state[STATE_BUFFER_SIZE];,216a5679ac6f4017d6cb181d3a885edf005b8b0f1a765226d608bc54edf5417b
wireshark-1.4.15/epan/sna-utils.c,67,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&sna_fid_type_4_addr, addr->data, SNA_FID_TYPE_4_ADDR_LEN);",dd175080373c917eff44a716e3392c7f952c2696516709a9e3350e28dce809fa
wireshark-1.4.15/epan/strutil.c,42,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char hex[16] = { '0', '1', '2', '3', '4', '5', '6', '7',",b591a186fa56e9a4b30162c6cedd3acfaac227c471752e2ae0215780ea836236
wireshark-1.4.15/epan/strutil.c,386,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		four_digits_first_half[3];,7af789bffef94ae5ecb95b2b56fd76f2b0b1eebcdf3786c78aedb976e3b9ae2b
wireshark-1.4.15/epan/strutil.c,387,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		four_digits_second_half[3];,d49e5fc865880fe1fbceb2c32be9d62c20d53f43ec6a859d0fdb93430e041dd8
wireshark-1.4.15/epan/strutil.c,388,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		two_digits[3];,083b8d396a41ad3c9caf0d1d20838c0a1dc644732291d5f6b5ede5ee76cd0116
wireshark-1.4.15/epan/strutil.c,389,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		one_digit[2];,145d377a9826c2c9d6475f40326021e3f86f6fbca20635b6fd70976b64bf09b1
wireshark-1.4.15/epan/strutil.c,953,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char hexbuf[3];,e682c3f7deadc7eac0d3c8a488c96fb0f73c93d42ec417d639ebc1891e676590
wireshark-1.4.15/epan/to_str.c,487,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *mon_names[12] = {,992987e147907c0bfaef8c775b7201e93f906970972c895741fb2efca33ccb55
wireshark-1.4.15/epan/to_str.c,532,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"		static char *ws_tzname[2] = {NULL, NULL};",00e6d77d081f6727c40100188372f3665bf15bf62b8f3d1ea4a8acb4670c7419
wireshark-1.4.15/epan/to_str.c,966,3,2,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",Risk is low because the source is a constant string.,CWE-120,"  strcpy(p, "" = "");",fc6a36baf71815d3c6bdb88761e0b29914d970524b9a0489cc367584b4da8761
wireshark-1.4.15/epan/tvbtest.c,349,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(comp[1], small[0], 16);",38d58f9d8ab03721b58b5ac10f2a4e781e968efe043d03dc43f1dd1af59fab83
wireshark-1.4.15/epan/tvbtest.c,350,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[1][16], small[1], 16);",fe1cfcfd277e3c40d8ed14be302b06710f5fa5226ad26eeec3f8acf7b4c0e726
wireshark-1.4.15/epan/tvbtest.c,368,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(comp[3], &large[0][14], 5);",b17d13ea7e2f908799e54ca6ebaa9cde1ccf7ee61c1525a9970f3b0dd4b2164e
wireshark-1.4.15/epan/tvbtest.c,369,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[3][5], &small[1][4], 8);",bbc52b8826531f535a4f082edbe77980b644fd39c1d3d055ca6d91025272bcc4
wireshark-1.4.15/epan/tvbtest.c,379,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(comp[4], small[0], 16);",4fdfc4732a75c7c7305cd792552963291b0df75dc925d860efa56d45f686d1fd
wireshark-1.4.15/epan/tvbtest.c,380,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[4][16], subset[1], subset_length[1]);",a0fa6d1431b2ebf5dd19bf4dd532fb028529564da047d43f4ba2e8eab9b5b564
wireshark-1.4.15/epan/tvbtest.c,395,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[5][len], comp[0], comp_length[0]);",045b4f8de959c034d6ec2499df640fc512a7e1c76531b00038528573c2575c03
wireshark-1.4.15/epan/tvbtest.c,397,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[5][len], comp[1], comp_length[1]);",a29e14fbe75081e6c6d1d47493088558d55b9c84f122e22085906bcf88d297d5
wireshark-1.4.15/epan/tvbtest.c,399,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[5][len], comp[2], comp_length[2]);",3c05a6d95754460e1552f68f677201df6d6d119f73457b699e6776022a912511
wireshark-1.4.15/epan/tvbtest.c,401,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[5][len], comp[3], comp_length[3]);",cfb2d9a93a48fffa102f21f71165228dd79107ab9a01d05232cb4407e3037071
wireshark-1.4.15/epan/tvbuff.c,1063,10,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		return memcpy(target, tvb->real_data + abs_offset, abs_length);",a08157f39c42d04419b947762d62b0e26e523e36274a834fb59951ec20838774
wireshark-1.4.15/epan/tvbuff.c,1498,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&addr, ptr, sizeof addr);",e681442082b96f1db81191236d231de2aad56e847bf4efe6283babfc362c96c6
wireshark-1.4.15/epan/tvbuff.c,1509,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(addr, ptr, sizeof *addr);",a4b27ada2c6dafe8d9e9462805acf33cdc3b0b70a2b8b1ca71ccaeac1e4a969f
wireshark-1.4.15/epan/tvbuff.c,2232,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(strbuf, ptr, length);",c51210ce649aa0c2b70e30a09d0a1b81218df4448d104fd75a7f1fa1cf384ee6
wireshark-1.4.15/epan/tvbuff.c,2262,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(strbuf, ptr, length);",c51210ce649aa0c2b70e30a09d0a1b81218df4448d104fd75a7f1fa1cf384ee6
wireshark-1.4.15/epan/tvbuff.c,2291,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(strbuf, ptr, length);",c51210ce649aa0c2b70e30a09d0a1b81218df4448d104fd75a7f1fa1cf384ee6
wireshark-1.4.15/epan/uat.c,147,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(tmp, UAT_INDEX_PTR(uat,a), s);",e0cfa5fc29e320189ef6f1a6655e4d86041b2be393e3409ab92de344631dd470
wireshark-1.4.15/epan/uat.c,148,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(UAT_INDEX_PTR(uat,a), UAT_INDEX_PTR(uat,b), s);",689ee9eb0e82e3f966b4c09dbcb2d8d0a9d0551cc3693eaf8d1971f8848c3395
wireshark-1.4.15/epan/uat.c,149,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(UAT_INDEX_PTR(uat,b), tmp, s);",1ded1f116097e8dce9c5645fb63b28027af7053cbb08388c82b3ec60e4f812b6
wireshark-1.4.15/epan/uat_load.c,627,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(buf, parse_str + parse_str_pos, n); \",9f1bb0e5c8ec3d7c749742d83d857e05efda600fee8e590dc4672f9781630b88
wireshark-1.4.15/epan/value_string.c,259,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char buf[1025];,ec7dd38fe4cc5c55c7eae219f4fce90f43e04f5c0a5d7574de2df9f1cb91549d
wireshark-1.4.15/epan/value_string.c,274,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char buf[1025];,ec7dd38fe4cc5c55c7eae219f4fce90f43e04f5c0a5d7574de2df9f1cb91549d
wireshark-1.4.15/epan/wslua/init_wslua.c,191,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char buff[512];,e83dbe8f5992d72d2d96300de76c2e466b2bcb5014c3b29da980e9794c363966
wireshark-1.4.15/epan/wslua/lua_bitop.c,127,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buf[8];,794dd086f29fe8304359c335f25d99574851f607ff35b5fa940ffbc8b6b35d2c
wireshark-1.4.15/epan/wslua/wslua_dumper.c,171,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char fname_clean[256];,7e61c93dc6f717e0d0434a945c7fee6bfc32da40e0d35c7c1aadf00a4add6ff2
wireshark-1.4.15/epan/wslua/wslua_util.c,156,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char fname_clean[256];,0977e7b90d102e96240fc76c2fbca50d01ae322c02208781fa9806e45c41595e
wireshark-1.4.15/epan/wspython/wspy_register.c,135,12,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  py_reg = fopen(get_py_register_file(), ""r"");",91d441569183e5390f4d7748e4d6cec171abeca75b713345c3111c86465e6e2c
wireshark-1.4.15/file.c,525,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char         errmsg_errno[1024+1];,ccf59f5054b180bfe04ef2d767bcc5bee4e03903874ba465e7b21fdac6264e8d
wireshark-1.4.15/file.c,1439,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char              errmsg_errno[1024+1];,b3242bd0864a67062c49169bc525efa8f1346a187390ec144f2bdaaf50dc4d55
wireshark-1.4.15/file.c,1750,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char errmsg_errno[1024+1];,5c29145405fb7637e053e6d54102b521cb1525958bbe8464dea43ead2919b1eb
wireshark-1.4.15/file.c,2692,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char            bookmark_name[9+10+1];    /* ""__frameNNNNNNNNNN__\0"" */",a007e1240c85ac11ca2a1461689e20417a9c6c919b094b07eef0a58d2d941dc7
wireshark-1.4.15/file.c,2693,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char            bookmark_title[6+10+1];   /* ""Frame NNNNNNNNNN__\0"" */",7227b36ee0998a9dd7933c8a5bff984d64d35a2d151ee2aa08f21e874cfe8fbf
wireshark-1.4.15/file.c,4651,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char errmsg_errno[1024+1];,d3a48dd6bc93bca3e84f669e2c8877706d80f16af252aaf122e7357a1411da58
wireshark-1.4.15/g711.c,46,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,unsigned char _u2a[128] = {			/* u- to A-law conversions */,8fcd14a1fbaa15e25cff07d0e46ebf0a95727aa328309938b96df970d673761e
wireshark-1.4.15/g711.c,64,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,unsigned char _a2u[128] = {			/* A- to u-law conversions */,38c8f4df7ffdd73e81aae554cb8716c83518f72bee34f117a4a9ec2c64b6a84d
wireshark-1.4.15/gtk/ansi_a_stat.c,152,24,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"					MSG_NAME_COLUMN, (char *)ansi_a_bsmap_strings[i].strptr,",29165c87da6fe0b901e22be2bce1de62e2814b33642dd334d3b8cdfb24eef973
wireshark-1.4.15/gtk/ansi_a_stat.c,178,23,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"				MSG_NAME_COLUMN, (char *)ansi_a_dtap_strings[i].strptr,",9ff58c6f3afaaa15e8cbfb8ff2831d3f5587e78458e8faef0fe17a5f63b98a66
wireshark-1.4.15/gtk/bootp_stat.c,83,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char string_buff[256];,b6164991810b6591222eeaf8b2b192451be57936a3956edde583f4bc0e714754
wireshark-1.4.15/gtk/camel_counter.c,111,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-1.4.15/gtk/capture_dlg.c,540,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *time_unit_name[MAX_TIME_UNITS] = {,0626c191651955fca3db4956bec5cbf620783aa4fbf64155030943f775723072
wireshark-1.4.15/gtk/capture_dlg.c,632,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *size_unit_name[MAX_SIZE_UNITS] = {,fe033f0ad4f9606fcd58a3649d9f0697842f3bb4f4810195c79304706957251b
wireshark-1.4.15/gtk/capture_file_dlg.c,951,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char        *in_filenames[2];,13bf73ebfdd4e7b35a6f23459bc60b33fe317414a3e5fcb2d92bab753a341319
wireshark-1.4.15/gtk/capture_if_details_dlg_win32.c,98,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char      __ss_pad1[ETH_SS_PAD1SIZE];,bd93119bc149221aeee4cc944b1c136636a86ca6574d4133860fa341e78553bb
wireshark-1.4.15/gtk/capture_if_details_dlg_win32.c,104,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char      __ss_pad2[ETH_SS_PAD2SIZE];,7d95cb5b6eb6b7b0aa601b2b5b8e4af64ab245fb42e4c8ed7370c70e0f045736
wireshark-1.4.15/gtk/capture_if_details_dlg_win32.c,806,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char       values[10000];,cdd156330365df27392fc2209c4d8864527bc84570b7587ef990c5152360b5ab
wireshark-1.4.15/gtk/capture_if_details_dlg_win32.c,828,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char       values[10000];,cdd156330365df27392fc2209c4d8864527bc84570b7587ef990c5152360b5ab
wireshark-1.4.15/gtk/capture_if_details_dlg_win32.c,1160,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char           mac[6];,60d64416fcc6a2886090690c175d5439ea675ce90f7e5c2e887624b59ff69c58
wireshark-1.4.15/gtk/capture_if_details_dlg_win32.c,1196,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(ssid_buff, bssid_item->ssid.essid, bssid_item->ssid.length);",3d34152640b18e9f2f6a66e8a315ee185863693cb8cc7412b0cadf538bd7b003
wireshark-1.4.15/gtk/capture_if_details_dlg_win32.c,1372,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char       values[100];,ef0be5f3a18ae1de7bda1448c2d803f99ad350b1c6d98826dd6172160ce88a3f
wireshark-1.4.15/gtk/capture_if_details_dlg_win32.c,1631,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char   values[100];,e7441d618e7c7c1aced2bd3af542f3743c21e79be050bc591b89031e751bfb3b
wireshark-1.4.15/gtk/capture_if_details_dlg_win32.c,1768,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char   values[10000];,3038b04273cfcc1e58e34e75cccd2cd44f09d875e7ef5298ec0aa4eb7e005303
wireshark-1.4.15/gtk/capture_if_details_dlg_win32.c,1936,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char   values[100];,e7441d618e7c7c1aced2bd3af542f3743c21e79be050bc591b89031e751bfb3b
wireshark-1.4.15/gtk/conversations_table.c,283,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-1.4.15/gtk/conversations_table.c,1029,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char *entries[4];,87c3a12f96cd310b643867c0dc2023407874092df4fe35870d8d83af52d9daa3
wireshark-1.4.15/gtk/conversations_table.c,1060,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-1.4.15/gtk/conversations_table.c,1084,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"        char start_time[COL_STR_LEN], duration[COL_STR_LEN],",dfc299884a5e03e7297f6c2c57cffba8a88a005d8688a7d58e00a9f3bdc1955f
wireshark-1.4.15/gtk/conversations_table.c,1117,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char *entries[4];,87c3a12f96cd310b643867c0dc2023407874092df4fe35870d8d83af52d9daa3
wireshark-1.4.15/gtk/conversations_table.c,1328,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-1.4.15/gtk/conversations_table.c,1530,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-1.4.15/gtk/conversations_table.c,1748,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-1.4.15/gtk/conversations_table.h,65,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	const char          *default_titles[14]; /**< Column headers */,5a105dbc4e495093037442e2f89dd9efd00b7e03dac37ba195d80a82823af90c
wireshark-1.4.15/gtk/dcerpc_stat.c,402,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char vs[5];,5b1b460f6e997979510d62027205c645162574b07af17c6ff3f7555932ace07e
wireshark-1.4.15/gtk/dcerpc_stat.c,449,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[64];,2b2a1c195b37c134129d114524a76691f731dd143f4adba9672fa8049b0885ca
wireshark-1.4.15/gtk/decode_as_dlg.c,682,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char *string, *text[E_LIST_S_COLUMNS];",11ccc9eec54cdb1b5e47b5a167999d64a16998c201d44d40fb1287bd01e68c2e
wireshark-1.4.15/gtk/dfilter_expr_dlg.c,126,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char value_label_string[1024+1];   /* XXX - should be large enough */,3d177a7abfd35b5c17d5af379f530205906bbcc4404bb2b36d231207e7fd29ce
wireshark-1.4.15/gtk/dfilter_expr_dlg.c,599,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char error_msg_buf[1024];,8d0b03278b7d87e193d64fef28171cef4927d1a9bda0e99f10eb2f18f1a599ae
wireshark-1.4.15/gtk/dfilter_expr_dlg.c,1112,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char *strp, str[TAG_STRING_LEN+1];",f873d8db94986aa9efbbdeb80a2dfeda365a6b3ddf99f5ab2922b32da36fb631
wireshark-1.4.15/gtk/drag_and_drop.c,346,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(cf_names_freeme, selection_data->data, selection_data->length);",4cb8e153a405c6b0bc02e17f7ea90eebe6692ae4e92640a7a04835f784940634
wireshark-1.4.15/gtk/expert_comp_table.c,122,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,          gint int_a = atoi(str_a);,9e6cd91507f430a959edd99e0338e24dbb27c45e863a0333825c6228e10d19be
wireshark-1.4.15/gtk/expert_comp_table.c,123,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,          gint int_b = atoi(str_b);,262bc0712661176b7ded85ff05f4ea3090394e5ae48d4a63457f50c448257927
wireshark-1.4.15/gtk/expert_comp_table.c,163,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char str[512];,3dcfd1642ad7d5af2a61fff9919f0a4c7dbe2e1763a09cad8638c5650a25ddb0
wireshark-1.4.15/gtk/expert_comp_table.c,678,43,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                    cf_goto_frame(&cfile, atoi(pkt));",6fb0fcfee172031b64dabec687923cd5e2840ca6b6780fbd6d9ebffa9c73eb4a
wireshark-1.4.15/gtk/expert_comp_table.h,38,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char    *entries[2];       /**< column entries */,457eecd15292e646d5d368b693e14b5a6964ea92ff71181c5c9aef1c3c9ee3d7
wireshark-1.4.15/gtk/expert_dlg.c,156,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    const char *entries[2];   /**< column entries */,771f5f53e00360eb6ad7edb61a041472127d87c24db6cfd03b267b86dd5e2c40
wireshark-1.4.15/gtk/export_object.c,302,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,						char generic_name[256];,e096949a05c055b635d83c9105e95940e41fec0016e134c557c70a311569818c
wireshark-1.4.15/gtk/file_dlg_win32.c,147,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR  file_name[MAX_PATH] = _T("""");",cd687a3300157e98286e00ce792a0081ea7c8493d692baba461ea5e34d91afcf
wireshark-1.4.15/gtk/file_dlg_win32.c,251,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR  file_name16[MAX_PATH] = _T("""");",64e08f7f019acd306849cdb479febe3081634cd02e00062dc84771a30798d88c
wireshark-1.4.15/gtk/file_dlg_win32.c,378,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR       file_name[MAX_PATH] = _T("""");",669179d443507f7b0cf0966f8edb3452e0a510c1a41b4b9cc408aef712248624
wireshark-1.4.15/gtk/file_dlg_win32.c,381,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char       *in_filenames[2];,cc58cf56a405d33d5ba50876ea4a82f81430b7c2f43ca5ddb7c3253ef23105b7
wireshark-1.4.15/gtk/file_dlg_win32.c,505,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR             file_name[MAX_PATH] = _T("""");",3575ff073839131d6178e8e1c349159814c0013969902192cefb6dd5f262e531
wireshark-1.4.15/gtk/file_dlg_win32.c,621,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR         file_name[MAX_PATH] = _T("""");",b8b972752093e6dad137bc68c99de71bf14f4cdaab6fb92fe37d0b0ee5e6f888
wireshark-1.4.15/gtk/file_dlg_win32.c,713,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR  file_name[MAX_PATH] = _T("""");",cd687a3300157e98286e00ce792a0081ea7c8493d692baba461ea5e34d91afcf
wireshark-1.4.15/gtk/file_dlg_win32.c,778,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR  file_name[MAX_PATH] = _T("""");",cd687a3300157e98286e00ce792a0081ea7c8493d692baba461ea5e34d91afcf
wireshark-1.4.15/gtk/file_dlg_win32.c,946,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR       string_buff[PREVIEW_STR_MAX];,f95a21b8427fccdf7cff98eac9cadffaf767c6e4e08905dcf9bd263689257aa3
wireshark-1.4.15/gtk/file_dlg_win32.c,1122,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(strval, filter_text, len);",f1c44edcb006a742824b390ebd6a518ca629148d812a644f413c5ab7bd2bf8c2
wireshark-1.4.15/gtk/file_dlg_win32.c,1158,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR     sel_name[MAX_PATH];,b330fff7ff37bfbcae6ea3e763c71dc3e56e44bb93ab17379c1eeeb31fa0beb0
wireshark-1.4.15/gtk/file_dlg_win32.c,1491,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR    static_val[100];,0033fe012cddaa94c1eb742d9663f95816a10b38aa9a984a5f9098b786b4da86
wireshark-1.4.15/gtk/file_dlg_win32.c,1681,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR range_text[RANGE_TEXT_MAX];,f481d16310ee1a131cffa2d3ed252f11097d82d12fcf56bf52f20f1e35633cd4
wireshark-1.4.15/gtk/file_dlg_win32.c,1753,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR     sel_name[MAX_PATH];,b330fff7ff37bfbcae6ea3e763c71dc3e56e44bb93ab17379c1eeeb31fa0beb0
wireshark-1.4.15/gtk/file_dlg_win32.c,1891,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR         raw_msg[100];,40b26422eb867302862683cee2ad868c8dff47f76fb38a565620e27954fb6c3f
wireshark-1.4.15/gtk/follow_ssl.c,122,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(p, appl_data->plain_data.data, appl_data->plain_data.data_len);",e7d420e22578c08d08fbbcd5357bc57ddb95155b0baa0deefa812c09451757e4
wireshark-1.4.15/gtk/follow_ssl.c,232,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	    memcpy(&ipaddr, stats.ip_address[0], 16);",263c6783603ab3ddfeb4b067a0434de95e4c90c8d12d75697cbc7ea773b7684a
wireshark-1.4.15/gtk/follow_ssl.c,234,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	    memcpy(&ipaddr, stats.ip_address[0], 16);",263c6783603ab3ddfeb4b067a0434de95e4c90c8d12d75697cbc7ea773b7684a
wireshark-1.4.15/gtk/follow_ssl.c,238,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	    memcpy(&ipaddr, stats.ip_address[0], 4);",ff153d6762e08907888d7cf8c8cddd26ea40731796c6dc6fd63e572e7c068b20
wireshark-1.4.15/gtk/follow_ssl.c,240,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	    memcpy(&ipaddr, stats.ip_address[1], 4);",55e701cfc4d5f06cd6e60f105c170d9e2ef6fcd657121bed2aa084d3df96529d
wireshark-1.4.15/gtk/follow_stream.c,162,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(str, buffer, nchars);",7c2bf3effcf782de62aa523b3ff95edba74cc95976c3fae938af4c323ed8f49e
wireshark-1.4.15/gtk/follow_tcp.c,254,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&ipaddr, stats.ip_address[0], 16);",263c6783603ab3ddfeb4b067a0434de95e4c90c8d12d75697cbc7ea773b7684a
wireshark-1.4.15/gtk/follow_tcp.c,256,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&ipaddr, stats.ip_address[0], 16);",263c6783603ab3ddfeb4b067a0434de95e4c90c8d12d75697cbc7ea773b7684a
wireshark-1.4.15/gtk/follow_tcp.c,260,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&ipaddr, stats.ip_address[0], 4);",ff153d6762e08907888d7cf8c8cddd26ea40731796c6dc6fd63e572e7c068b20
wireshark-1.4.15/gtk/follow_tcp.c,262,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&ipaddr, stats.ip_address[1], 4);",55e701cfc4d5f06cd6e60f105c170d9e2ef6fcd657121bed2aa084d3df96529d
wireshark-1.4.15/gtk/follow_tcp.c,348,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char                buffer[FLT_BUF_SIZE+1]; /* +1 to fix ws bug 1043 */,5bd89c0bcbfe33c24458616970b407fcbc60c93b3d8472bb1736bbc0d0cb74f7
wireshark-1.4.15/gtk/follow_tcp.c,374,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	    memcpy(client_addr, sc.src_addr, iplen);",992ab5a084ca39d3dda41054a7e841ee96ca2a6c44f6bbab572cacf91a7c8f4e
wireshark-1.4.15/gtk/follow_udp.c,181,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&ipaddr, stats.ip_address[0], 16);",263c6783603ab3ddfeb4b067a0434de95e4c90c8d12d75697cbc7ea773b7684a
wireshark-1.4.15/gtk/follow_udp.c,183,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&ipaddr, stats.ip_address[0], 16);",263c6783603ab3ddfeb4b067a0434de95e4c90c8d12d75697cbc7ea773b7684a
wireshark-1.4.15/gtk/follow_udp.c,187,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&ipaddr, stats.ip_address[0], 4);",ff153d6762e08907888d7cf8c8cddd26ea40731796c6dc6fd63e572e7c068b20
wireshark-1.4.15/gtk/follow_udp.c,189,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&ipaddr, stats.ip_address[1], 4);",55e701cfc4d5f06cd6e60f105c170d9e2ef6fcd657121bed2aa084d3df96529d
wireshark-1.4.15/gtk/font_utils.c,310,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char appfontname[128] = ""tahoma 8"";",15286c49b20f4399398dd116d1a3dea5f98efe514642c25ec4b58f63043b3a12
wireshark-1.4.15/gtk/graph_analysis.c,269,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char src_port[8],dst_port[8];",4b33688b62414e54933ba5932349eeb250bb103bcc60c720328139e8c9055bbc
wireshark-1.4.15/gtk/graph_analysis.c,627,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[MAX_COMMENT];,19985fba7b3be9998c6c0517dff06e32e59d636ad2eff3d564b6afdb6d5f365f
wireshark-1.4.15/gtk/gsm_a_stat.c,304,24,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"					MSG_NAME_COLUMN, (char *)msg_strings[i].strptr,",a3abb4104af33b0e0d742f9b1750f365c819c5a2b85d73314ce47407d136af22
wireshark-1.4.15/gtk/gui_utils.c,1104,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(copy_data->data,data,len * sizeof(guint8));",dc670af23d81993cad4c288889a14dbc702af05ae8b86a80d9d0bd60778bf18b
wireshark-1.4.15/gtk/h225_counter.c,303,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-1.4.15/gtk/h225_ras_srt.c,208,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[3][256];,2ef6a2cafcf4066dd8649f66232b593ca7fb0e69bfff2db1c989c0abba111b9b
wireshark-1.4.15/gtk/hostlist_table.c,180,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-1.4.15/gtk/hostlist_table.c,494,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char *entries[2];,5d3e7151307aca148389213cf3abf4fd13c7a494209f764d5d82208f164da9a6
wireshark-1.4.15/gtk/hostlist_table.c,518,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-1.4.15/gtk/hostlist_table.c,554,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char *entries[2];,5d3e7151307aca148389213cf3abf4fd13c7a494209f764d5d82208f164da9a6
wireshark-1.4.15/gtk/hostlist_table.c,556,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char geoip[NUM_GEOIP_COLS][COL_STR_LEN];,e32141da63a0138d8d183dd1bf4703885b3cee0ab13450ec898fc0c3b12d2b2a
wireshark-1.4.15/gtk/hostlist_table.c,1007,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-1.4.15/gtk/hostlist_table.c,1178,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-1.4.15/gtk/hostlist_table.c,1410,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-1.4.15/gtk/hostlist_table.h,68,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	const char          *default_titles[NUM_HOSTLIST_COLS]; /**< Column headers */,3ad5d50ac849f88d2bc7b639def170168eb1f5c975a8eb0816997adaf6ee770e
wireshark-1.4.15/gtk/iax2_analysis.c,125,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *graph_descr[4] = {""Fwd Jitter"", ""Fwd Difference"", ""Rvr Jitter"", ""Rvr Difference""};",35e61a174f8e1e80ed3a5b13b58c7006c5197427644cb4e350ac0695254ceeb8
wireshark-1.4.15/gtk/iax2_analysis.c,884,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[15];,01543fee1e1b31c1b4d7bec8ece07cff26c4190db954fa6d4dcc06db1c0ddd90
wireshark-1.4.15/gtk/iax2_analysis.c,1404,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-1.4.15/gtk/iax2_analysis.c,1503,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[15];,4bf4c43cd8718cf62c94853c6fca824f4c625957af313170e7dd510f40cb6971
wireshark-1.4.15/gtk/iax2_analysis.c,1527,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[5];,699a5cb0c29492d502ce566dbbcaf5eed620d8bc45bb32f34fe463ab034adc93
wireshark-1.4.15/gtk/iax2_analysis.c,1549,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[15];,4bf4c43cd8718cf62c94853c6fca824f4c625957af313170e7dd510f40cb6971
wireshark-1.4.15/gtk/io_stat.c,85,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *plot_style_name[MAX_PLOT_STYLES] = {,67a6c96d38c50424b428b46c2bc816cc00ac81ab4a6170fb91fa5ac86cd8bfd0
wireshark-1.4.15/gtk/io_stat.c,98,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *count_type_names[MAX_COUNT_TYPES] = {""Packets/Tick"", ""Bytes/Tick"", ""Bits/Tick"", ""Advanced...""};",4a67c7673ed3f91f59ef05336dd80e62c782d30385eb1d2143159b2793022da3
wireshark-1.4.15/gtk/io_stat.c,112,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *calc_type_names[MAX_CALC_TYPES] = {""SUM(*)"", ""COUNT(*)"", ""MAX(*)"", ""MIN(*)"", ""AVG(*)"", ""LOAD(*)""};",9fc7ddc814b11b41731ffb5b518ca6440a0f49cb3e983c7d654a178838752c7e
wireshark-1.4.15/gtk/io_stat.c,703,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[45];,428a70fcff47d26e4ff69db4440d05728b7535100d421976fc30c3285788d626
wireshark-1.4.15/gtk/io_stat.c,1170,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char real_filter[262];,38e85d40af5f1f8f317848155549cb3c90cc6f4901ad3fbaf3ec03e72b759d10
wireshark-1.4.15/gtk/io_stat.c,1539,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[5];,699a5cb0c29492d502ce566dbbcaf5eed620d8bc45bb32f34fe463ab034adc93
wireshark-1.4.15/gtk/io_stat.c,1572,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[15];,4bf4c43cd8718cf62c94853c6fca824f4c625957af313170e7dd510f40cb6971
wireshark-1.4.15/gtk/io_stat.c,1600,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[15];,4bf4c43cd8718cf62c94853c6fca824f4c625957af313170e7dd510f40cb6971
wireshark-1.4.15/gtk/io_stat.c,1989,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-1.4.15/gtk/io_stat.c,2098,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char            string[15];,80bfecd8ec24a3320fb30bff8a630f8d0103b0a6f8e7e85cb588f685c0d52f19
wireshark-1.4.15/gtk/mac_lte_stat_dlg.c,671,16,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        static char buffer[MAX_FILTER_LEN];,725c4fa46319017286da8bd11e997ac8bcb0ac6ca85f07ec3d7cbd17c78de5be
wireshark-1.4.15/gtk/main.c,644,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char labelstring[256];,08e866d48c8fd17b565c62921ed9f813de9c00ea2a8f5416580ff63c0e148083
wireshark-1.4.15/gtk/megaco_stat.c,93,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[3][256];,2ef6a2cafcf4066dd8649f66232b593ca7fb0e69bfff2db1c989c0abba111b9b
wireshark-1.4.15/gtk/mgcp_stat.c,193,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[3][256];,2ef6a2cafcf4066dd8649f66232b593ca7fb0e69bfff2db1c989c0abba111b9b
wireshark-1.4.15/gtk/mtp3_stat.c,76,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char		*entries[N_COLUMN];,8b4e8427758ef595e5aff15ba9ca4fde32cdb0ef401965c84b0152dd8b7c2cd9
wireshark-1.4.15/gtk/mtp3_summary.c,224,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char		*entries[N_COLUMN];,8b4e8427758ef595e5aff15ba9ca4fde32cdb0ef401965c84b0152dd8b7c2cd9
wireshark-1.4.15/gtk/packet_win.c,124,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char Title[NewWinTitleLen] = """";",e09c4e5bd3c829e0f2a9b9ffb89abe5a8b6621aa0af263f25b078415a238d328
wireshark-1.4.15/gtk/packet_win.c,151,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&DataPtr->pseudo_header, &cfile.pseudo_header, sizeof DataPtr->pseudo_header);",7e520c595fa4c3dccbc00fe934306084c492fc154cffdd3e52c6759564ef0bf3
wireshark-1.4.15/gtk/packet_win.c,153,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(DataPtr->pd, cfile.pd, DataPtr->frame->cap_len);",2de8d912a61bbe4b1e17f7cf7cffa3f05cd7d1bd9d6ee533ff542089adbdcf97
wireshark-1.4.15/gtk/prefs_dlg.c,146,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char uint_str[10+1];,d10f912512b3d153faad3bd585a16ba7496b549a3136e9793a2379347807a6d3
wireshark-1.4.15/gtk/prefs_gui.c,151,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char recent_files_count_max_str[128] = """";",1da0e4724b1907460265c21719c0a81c6b02e633d91849b3236880fb27a35e58
wireshark-1.4.15/gtk/prefs_gui.c,154,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char recent_df_entries_max_str[128] = """";",6a1665f9a2846d0fa31dca4608201d2a3eef415ca264e4e1011a58b46a1709b7
wireshark-1.4.15/gtk/prefs_gui.c,157,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char open_file_preview_str[128] = """";",c7bf69c7382aa71e51b6ce4d7a6de5b158318d0157c6d9d6610b27a1cafd12b4
wireshark-1.4.15/gtk/prefs_gui.c,183,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char       current_val_str[128];,803b930b10821c4144de04fced35e7bfa3b4f7fdd5ba4354de1fae25d715f088
wireshark-1.4.15/gtk/prefs_layout.c,79,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[64];,465eabb0806860179ab2df61dda647bce326eb7218231f8bbb69a8f322b93fff
wireshark-1.4.15/gtk/prefs_layout.c,306,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    const char ** inline_txt [LAYOUT_QTY] = {,2cc3c349b9d0b25736164f04afbcf4e30f068055aa853b93e615b3bafddcb7bc
wireshark-1.4.15/gtk/prefs_nameres.c,94,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		concur_str[10+1];,4cb1923544a64a2921f7a5c6a35ed47fec77fd9ef31ab016a818eade9787cba8
wireshark-1.4.15/gtk/prefs_taps.c,43,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char update_interval_str[128] = """";",7b125c8bbd602c200984453e718a8d9afe1ee6678cb0ac3c92013afab44e7fe2
wireshark-1.4.15/gtk/prefs_taps.c,44,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char max_visible_str[128] = """";",e141ba740b1c47b80230e97d1ce644fc3bfc35a551cac40a47bb73d1e9758657
wireshark-1.4.15/gtk/print_win32.c,181,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[ max_buf_size];,173242de30c3659dcb28a3588d531f9fde4a7501996938c57c4fe607c10dec6a
wireshark-1.4.15/gtk/proto_hier_stats_dlg.c,381,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char       title[256];,d60e6e1965836b8ba2c1ee8bf25f03757467ecb0ac6888789f92fab975b30f4b
wireshark-1.4.15/gtk/radius_stat.c,233,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[5][256];,bc41fd583b42ed86819ab71f8ade40d809308bce65eee7c385a206d9233d5dee
wireshark-1.4.15/gtk/rlc_lte_stat_dlg.c,326,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char unknown[16];,9c78ad25c813985e71965c0fd51e2819ed2bd2ce0b284b5c92c0bd0385e76523
wireshark-1.4.15/gtk/rlc_lte_stat_dlg.c,512,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buff[32];,af70f891862e240ff12670ad2aa1f4c08dc5c2fa845455fdac4db44e421927a4
wireshark-1.4.15/gtk/rlc_lte_stat_dlg.c,865,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char buffer[MAX_FILTER_LEN];,725c4fa46319017286da8bd11e997ac8bcb0ac6ca85f07ec3d7cbd17c78de5be
wireshark-1.4.15/gtk/rlc_lte_stat_dlg.c,985,14,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        sn = atoi(sn_string);,c8f109324560ecbd639e4493a62d2b694f2efb1351c60edae92a91ed9076776e
wireshark-1.4.15/gtk/rlc_lte_stat_dlg.c,1011,14,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        sn = atoi(sn_string);,c8f109324560ecbd639e4493a62d2b694f2efb1351c60edae92a91ed9076776e
wireshark-1.4.15/gtk/rlc_lte_stat_dlg.c,1037,14,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        sn = atoi(sn_string);,c8f109324560ecbd639e4493a62d2b694f2efb1351c60edae92a91ed9076776e
wireshark-1.4.15/gtk/rpc_stat.c,381,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char vs[5];,5b1b460f6e997979510d62027205c645162574b07af17c6ff3f7555932ace07e
wireshark-1.4.15/gtk/rtp_analysis.c,127,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *graph_descr[4] = {""Fwd Jitter"", ""Fwd Difference"", ""Rvr Jitter"", ""Rvr Difference""};",35e61a174f8e1e80ed3a5b13b58c7006c5197427644cb4e350ac0695254ceeb8
wireshark-1.4.15/gtk/rtp_analysis.c,911,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char label_string[15];,01543fee1e1b31c1b4d7bec8ece07cff26c4190db954fa6d4dcc06db1c0ddd90
wireshark-1.4.15/gtk/rtp_analysis.c,1436,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-1.4.15/gtk/rtp_analysis.c,1535,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[15];,4bf4c43cd8718cf62c94853c6fca824f4c625957af313170e7dd510f40cb6971
wireshark-1.4.15/gtk/rtp_analysis.c,1559,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[5];,699a5cb0c29492d502ce566dbbcaf5eed620d8bc45bb32f34fe463ab034adc93
wireshark-1.4.15/gtk/rtp_analysis.c,1581,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char str[15];,4bf4c43cd8718cf62c94853c6fca824f4c625957af313170e7dd510f40cb6971
wireshark-1.4.15/gtk/rtp_player.c,404,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(new_rtp_packet->info, rtp_info, sizeof(struct _rtp_info));",db8492591795511242cf41e8d245a629bbbee652abeda7ffadf6435d5d8393c9
wireshark-1.4.15/gtk/rtp_player.c,409,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(new_rtp_packet->payload_data, &(rtp_info->info_data[rtp_info->info_payload_offset]), rtp_info->info_payload_len);",ffc46ac4a7071916834c12c0f44700aee645f926e5e536591368cbea876aff17
wireshark-1.4.15/gtk/rtp_player.c,1252,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[MAX_TIME_LABEL];,4cab8f7d0a4c0b340e7c6139a9ca8e5b0395e10aa1009cf40d1b6a9f5740a4ac
wireshark-1.4.15/gtk/sctp_byte_graph_dlg.c,268,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[15];,01543fee1e1b31c1b4d7bec8ece07cff26c4190db954fa6d4dcc06db1c0ddd90
wireshark-1.4.15/gtk/sctp_byte_graph_dlg.c,363,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(label_string,(gchar *)g_locale_to_utf8(label_string, -1 , NULL, NULL, NULL), 15);",c3fba9160730cd6b819baa8b4c652d6838e2807d7a47cc6e6b303408a637593d
wireshark-1.4.15/gtk/sctp_byte_graph_dlg.c,863,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[30];,12ea93508d94e61a7f6a7a30a94df15d6441a568147054f34af1bb697f73e9eb
wireshark-1.4.15/gtk/sctp_byte_graph_dlg.c,869,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(label_string,(gchar *)g_locale_to_utf8(label_string, -1 , NULL, NULL, NULL), 15);",c3fba9160730cd6b819baa8b4c652d6838e2807d7a47cc6e6b303408a637593d
wireshark-1.4.15/gtk/sctp_byte_graph_dlg.c,1012,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(label_string,(gchar *)g_locale_to_utf8(label_string, -1 , NULL, NULL, NULL), 15);",c3fba9160730cd6b819baa8b4c652d6838e2807d7a47cc6e6b303408a637593d
wireshark-1.4.15/gtk/sctp_graph_dlg.c,548,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[15];,01543fee1e1b31c1b4d7bec8ece07cff26c4190db954fa6d4dcc06db1c0ddd90
wireshark-1.4.15/gtk/sctp_graph_dlg.c,1172,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[30];,12ea93508d94e61a7f6a7a30a94df15d6441a568147054f34af1bb697f73e9eb
wireshark-1.4.15/gtk/sctp_graph_dlg.c,1180,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(label_string,(gchar *)g_locale_to_utf8(label_string, -1 , NULL, NULL, NULL), 15);",c3fba9160730cd6b819baa8b4c652d6838e2807d7a47cc6e6b303408a637593d
wireshark-1.4.15/gtk/sctp_graph_dlg.c,1347,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(label_string,(gchar *)g_locale_to_utf8(label_string, -1 , NULL, NULL, NULL), 15);",c3fba9160730cd6b819baa8b4c652d6838e2807d7a47cc6e6b303408a637593d
wireshark-1.4.15/gtk/sctp_graph_dlg.c,1565,6,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,	i = atoi(buf);,f75aa761ec8f5478382349d1bfc18628ee7294eb647e9d43a2ec9e7c054f1c00
wireshark-1.4.15/gtk/sctp_stat.c,504,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(dat, vadd->data, vadd->len);",93bd5bcac2d2d7ed97e39fc1c93ab0aeaec7924923107e366c4eb565b672cbd1
wireshark-1.4.15/gtk/sctp_stat.c,554,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[200];,78261add8075ba4797adf645a6be0634e211c850ba8d13deeb2e905cb585dbdc
wireshark-1.4.15/gtk/sctp_stat.c,590,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(addr, sctp_info->ip_src.data, tmp_info.src.len);",8aa4e43b306f362237f42d38abfebd04daf3589152a6ee768a14b5e87a2c349e
wireshark-1.4.15/gtk/sctp_stat.c,607,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(addr, sctp_info->ip_dst.data, tmp_info.dst.len);",c2e94f31a4403d08ec669adc6655d3eeb64e9ad85201044af327c8d75ec9caf0
wireshark-1.4.15/gtk/sctp_stat.c,646,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(addr,(tmp_info.src.data), tmp_info.src.len);",2bf54e448bfb3d18d370701c9ec6c0dcdc788d8e3833337b65bacb59af4c022d
wireshark-1.4.15/gtk/sctp_stat.c,651,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(addr, (tmp_info.dst.data), tmp_info.dst.len);",a68957e774eebc8d118996be95cd671aaef3e284be770d3e98a15fdc00bbaa73
wireshark-1.4.15/gtk/sctp_stat.c,716,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(addr, tmp_info.src.data, tmp_info.src.len);",c5036034bc59db9ef9bd42dc39642e267c677333b67ca362ab25b4523d3743b1
wireshark-1.4.15/gtk/sctp_stat.c,719,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(addr, tmp_info.src.data, tmp_info.src.len);",c5036034bc59db9ef9bd42dc39642e267c677333b67ca362ab25b4523d3743b1
wireshark-1.4.15/gtk/sctp_stat.c,724,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(addr, tmp_info.dst.data, tmp_info.dst.len);",aafa0d9d255527c4c9822e258e8620c61c3362bd9eaaef2ee92d4a645eab5747
wireshark-1.4.15/gtk/sctp_stat.c,727,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(addr, tmp_info.dst.data, tmp_info.dst.len);",aafa0d9d255527c4c9822e258e8620c61c3362bd9eaaef2ee92d4a645eab5747
wireshark-1.4.15/gtk/sctp_stat.c,924,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(addr,(tmp_info.src.data),tmp_info.src.len);",e9fc9c4f2bba597afc71d61f80d537e9331ed72f37a7db7a07497dba9ae89585
wireshark-1.4.15/gtk/sctp_stat.c,931,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(addr,(tmp_info.dst.data),tmp_info.dst.len);",80ca0292d2aa1fe2aad5c1b3298d9ecf2d9f1ec62eca18cee434f9cb4ff13a73
wireshark-1.4.15/gtk/sctp_stat.c,975,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(addr, tmp_info.src.data, tmp_info.src.len);",c5036034bc59db9ef9bd42dc39642e267c677333b67ca362ab25b4523d3743b1
wireshark-1.4.15/gtk/sctp_stat.c,978,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(addr, tmp_info.src.data, tmp_info.src.len);",c5036034bc59db9ef9bd42dc39642e267c677333b67ca362ab25b4523d3743b1
wireshark-1.4.15/gtk/sctp_stat.c,983,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(addr, tmp_info.dst.data, tmp_info.dst.len);",aafa0d9d255527c4c9822e258e8620c61c3362bd9eaaef2ee92d4a645eab5747
wireshark-1.4.15/gtk/sctp_stat.c,986,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(addr, tmp_info.dst.data, tmp_info.dst.len);",aafa0d9d255527c4c9822e258e8620c61c3362bd9eaaef2ee92d4a645eab5747
wireshark-1.4.15/gtk/sctp_stat.c,1018,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(addr,(tmp_info.src.data),tmp_info.src.len);",e9fc9c4f2bba597afc71d61f80d537e9331ed72f37a7db7a07497dba9ae89585
wireshark-1.4.15/gtk/sctp_stat.c,1030,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(addr,(tmp_info.dst.data),tmp_info.dst.len);",80ca0292d2aa1fe2aad5c1b3298d9ecf2d9f1ec62eca18cee434f9cb4ff13a73
wireshark-1.4.15/gtk/stock_icons.c,229,54,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        pixbuf = gdk_pixbuf_new_from_xpm_data((const char **) (pixmaps[i].xpm_data));,a0e2783b8bdeaa909978d082bc2ced012526622930b832f2ef0f688b28da204e
wireshark-1.4.15/gtk/supported_protos_dlg.c,200,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buffer[BUFF_LEN];,cfbeb93a47b4f080de30af962b6efcee24074f0e22110ef30780a436070c6faa
wireshark-1.4.15/gtk/tcp_graph.c,612,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char window_title[WINDOW_TITLE_LENGTH];,c74d751335cb8fde5a6aae1f3d6de4cd70d0a2c217ecc820cce3bb877184a384
wireshark-1.4.15/gtk/tcp_graph.c,776,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char window_title[WINDOW_TITLE_LENGTH];,c74d751335cb8fde5a6aae1f3d6de4cd70d0a2c217ecc820cce3bb877184a384
wireshark-1.4.15/gtk/tcp_graph.c,1153,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char s[32];,162efaf2affad2a2dfb657cca840e7dd16353ce48761e94cbe802d7f25fd916c
wireshark-1.4.15/gtk/tcp_graph.c,2164,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char desc[32];,f00a721f6c1adcb200659bc562dd6b63eb9ab02e69346794340d86fb67363c1e
wireshark-1.4.15/gtk/tcp_graph.c,2252,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char desc[32];,f00a721f6c1adcb200659bc562dd6b63eb9ab02e69346794340d86fb67363c1e
wireshark-1.4.15/gtk/tcp_graph.c,2414,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[32];,488f4399e706274621585d44fb01e8451d3b8c32b3c75f5b597fd3382dcc89bf
wireshark-1.4.15/gtk/tcp_graph.c,2576,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy ((void * )mg, (void * )g, sizeof (struct graph));",432a52fac661d2fe6a79fbbe285b9724b6fc4f67d13b08c2f9f82a209727d4f3
wireshark-1.4.15/gtk/tcp_graph.c,4127,6,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,	i = atoi(buf);,f75aa761ec8f5478382349d1bfc18628ee7294eb647e9d43a2ec9e7c054f1c00
wireshark-1.4.15/gtk/text_page_utils.c,114,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char line[4096+1];	/* XXX - size? */,7c917cebd093e6677cc86fbbb45aeb068f6b8a23aafe9a80b8c3301e7d977a87
wireshark-1.4.15/gtk/voip_calls.c,79,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,const char *voip_call_state_name[8]={,e39f8860461591d79e35fefa2a9989ed2305237c98aba8d62c33a45c4f28781d
wireshark-1.4.15/gtk/voip_calls.c,1860,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy((void *)(h245_add->h245_address.data), &(pi->h245_address), 4);",155be892b7e7bee2544ce4a586bebd4bf35e00673a2855ebe0beddc24ab86355
wireshark-1.4.15/gtk/voip_calls.h,46,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,extern const char *voip_call_state_name[8];,d62159e1c0f5b913fcf84d1129eb5290eb8fae47fe8bc79a89b0df4b6c56c7e0
wireshark-1.4.15/gtk/wlan_stat_dlg.c,165,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-1.4.15/gtk/wlan_stat_dlg.c,246,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy (ep->stats.ssid, si->stats.ssid, MAX_SSID_LEN);",1abae4384c9d5e7350e20bdf0ff74abe530ed0a1a87913be3ee88c90aa1c1498
wireshark-1.4.15/gtk/wlan_stat_dlg.c,469,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy (te->stats.ssid, si->stats.ssid, MAX_SSID_LEN);",8d634d9b9361a1c001e0ca0ac16d7627f1c58a8de873fa5b6309651b8c48e21e
wireshark-1.4.15/gtk/wlan_stat_dlg.c,488,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char addr[256], comment[256], percent[256];",d2ff04307d7fa1e94abe1853862050dac713b84ab763de753537b427f58dae61
wireshark-1.4.15/gtk/wlan_stat_dlg.c,551,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char bssid[256], channel[256], ssid[256], percent[256];",06882e914b975e281f6b516b20625b477ad88398c3e1682ca936f8484d56ca39
wireshark-1.4.15/gtk/wlan_stat_dlg.c,1119,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-1.4.15/gtk/wlan_stat_dlg.c,1347,21,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"      	static const char src[6] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};",b803b6a74bcf6955cf99eba8ecf8bf45712c1af2a72186a966f00fc1c6d8f531
wireshark-1.4.15/gtk/wsp_stat.c,93,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char string_buff[256];,b6164991810b6591222eeaf8b2b192451be57936a3956edde583f4bc0e714754
wireshark-1.4.15/gtk/wsp_stat.c,209,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-1.4.15/packaging/macosx/ScriptExec/main.c,129,1,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,char scriptPath[kMaxPathLength];,a80d864c4bb44e897af51f696ba5ea100a0340295dcb66861a62e7e2f0062e30
wireshark-1.4.15/packaging/macosx/ScriptExec/main.c,130,1,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,char openDocPath[kMaxPathLength];,94f8f1ddd7e844a2512c46bdce339741a8ee53b67c9906babea28b2116605ed6
wireshark-1.4.15/packaging/macosx/ScriptExec/main.c,133,1,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,char *arguments[kMaxArgumentsToScript+3];,ea3c786709b1a582908b02ae6847d8b231da8013b5bdffce8c879364f852cf43
wireshark-1.4.15/packaging/macosx/ScriptExec/main.c,134,1,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,char *fileArgs[kMaxArgumentsToScript];,d45bd6bd20909f772a55f07222d7dd0f177a15fbeceea45bbd06e1cc095ce5e2
wireshark-1.4.15/packaging/macosx/ScriptExec/main.c,510,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char path[kMaxPathLength];,187f6c8d88cd5adb656da592b1946c56b84167f98b7698c8a23cfacc288f60d7
wireshark-1.4.15/packaging/macosx/native-gtk/glibconfig.h,136,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char   pad[44];,f2e0ee1f37f71575135fe722a36ec086f6b558eefb3d7a77a76b44b2b1b6e92a
wireshark-1.4.15/packaging/macosx/native-gtk/glibconfig.h,157,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char   data[4];,b67c4a823696bd1f484614e13a3f05cb45a0b0164f46c80590f352aea4df3c5e
wireshark-1.4.15/packaging/u3/tools/sysdep.c,53,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char seed[16];,3b1be89d561853bf98227c02adc487b415bac7088ad22116e271148f37e4cf0a
wireshark-1.4.15/packaging/u3/tools/sysdep.c,57,14,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"        fp = fopen(""nodeid"", ""rb"");",c585889dd7388063efe238b32df5c54b728e099f964f94233f0414ca7892fdce
wireshark-1.4.15/packaging/u3/tools/sysdep.c,65,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&saved_node, seed, sizeof saved_node);",83b30971aa607a2a70fef2b55a42cfa2ad423135b09c1faff4c2aa70afd0e053
wireshark-1.4.15/packaging/u3/tools/sysdep.c,66,18,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"            fp = fopen(""nodeid"", ""wb"");",1a7007212be3818f00c8412b2ee4add118bfaf2682ed9087dd648ed55f93a8fd
wireshark-1.4.15/packaging/u3/tools/sysdep.c,101,22,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,void get_random_info(char seed[16]),244b6788737b3d32914fc6872cff15464c5f8c1c7e19642c4dbcf2dcdc5f1565
wireshark-1.4.15/packaging/u3/tools/sysdep.c,111,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char hostname[MAX_COMPUTERNAME_LENGTH + 1];,3f30615b9fe416aa6518460c559cbb15a5b92ac9c154d6217259322ed7ac8f09
wireshark-1.4.15/packaging/u3/tools/sysdep.c,143,22,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,void get_random_info(char seed[16]),244b6788737b3d32914fc6872cff15464c5f8c1c7e19642c4dbcf2dcdc5f1565
wireshark-1.4.15/packaging/u3/tools/sysdep.c,149,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char hostname[257];,70817e0366748d6b9292bc58b098615ec048f152e341073bb67ae0a7186ae04a
wireshark-1.4.15/packaging/u3/tools/sysdep.h,61,37,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"#define SHA1_Final(buf, md)         memcpy(buf, gcry_md_read(*(md), GCRY_MD_SHA1), gcry_md_get_algo_dlen(GCRY_MD_SHA1))",2bca6cca37f3997cd30bc11f35e1e4b3b8f87a1221d4de5a5a3337635fa3fa38
wireshark-1.4.15/packaging/u3/tools/sysdep.h,66,37,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"#define MD5Final(buf, md)           memcpy(buf, gcry_md_read(*(md), GCRY_MD_MD5), gcry_md_get_algo_dlen(GCRY_MD_MD5))",114beb81b00c4ce081046855908ae0d9697659b2168975656dc8ecea9828e05d
wireshark-1.4.15/packaging/u3/tools/sysdep.h,93,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char nodeID[6];,34641fefc6926b52f0dd054450151615818d13604f415dc4de018fea447217f6
wireshark-1.4.15/packaging/u3/tools/sysdep.h,98,22,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,void get_random_info(char seed[16]);,a1c57195ae6cbb27f45957e682e03ad3d80ab5a08d2b964cfed964bf7324757b
wireshark-1.4.15/packaging/u3/tools/uuid.c,58,54,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static void format_uuid_v3or5(uuid_t *uuid, unsigned char hash[16],",dc04a7b573cacdceddb4baa0040cde3d3954a95f8e9f67619845658738d7773e
wireshark-1.4.15/packaging/u3/tools/uuid.c,111,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&uuid->node, &node, sizeof uuid->node);",249e2c2937d340456949fa522386a9b274d45be958e10773dd87c157ae589a18
wireshark-1.4.15/packaging/u3/tools/uuid.c,132,14,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"        fp = fopen(""state"", ""rb"");",464a67a4847423da98c984fa687f4add3b4ce633d15320c7c5bab1f478e13eb6
wireshark-1.4.15/packaging/u3/tools/uuid.c,164,14,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"        fp = fopen(""state"", ""wb"");",fd2c09a470decd04d8bd427525093df688a25729f62eb029cf7a67f29ba8ff4a
wireshark-1.4.15/packaging/u3/tools/uuid.c,232,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char hash[16];,a9cf2328fec2d8e2321f59720ac6faf607171f0cb6151c9555db41ca0490075d
wireshark-1.4.15/packaging/u3/tools/uuid.c,255,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char hash[20];,03fcb826b562e435ad8f514447d8ab18875fdc671a3fd33df39bed78b24a18e5
wireshark-1.4.15/packaging/u3/tools/uuid.c,276,47,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"void format_uuid_v3or5(uuid_t *uuid, unsigned char hash[16], int v)",c4221d88985d902aadc4de357aa4af1cf88c0efeedd0b1549aaa126f77b86023
wireshark-1.4.15/packaging/u3/tools/uuid.c,279,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(uuid, hash, sizeof *uuid);",98731fe20d367513bcd2d78c5492841425045838625fc52f63f90720c7a90094
wireshark-1.4.15/packaging/u3/win32/u3util.c,327,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buffer[BUFSIZ];,80f8785bfb396254b6d4de2d4f0ba6d3c7efa89a433033442b2170ab12e6698f
wireshark-1.4.15/packaging/u3/win32/u3util.c,330,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char reg_key[BUFSIZ];,730cbcb16a14e7811a5fd05da269b0772b77970efefb730e8baf9a76ad07c25d
wireshark-1.4.15/packaging/u3/win32/u3util.c,394,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buffer[BUFSIZ+1];,e5a14e31c928ee00e785dd59055f3fe48f747888e93325c6487296060868a887
wireshark-1.4.15/packaging/u3/win32/u3util.c,424,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buffer[BUFSIZ+1];,e5a14e31c928ee00e785dd59055f3fe48f747888e93325c6487296060868a887
wireshark-1.4.15/packaging/u3/win32/u3util.c,425,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char inBuffer[FILEBUFSIZ+1];,5615e25db0c831045ae7457bab9fdb9d5a98ffc440e26ddfa751812d990dc015
wireshark-1.4.15/packaging/u3/win32/u3util.c,494,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char dir_spec[MAX_PATH+1];,a8f94bf3f7d4525799b7cfefd68373b0c9956cc63bfe6ed059621dac96c9bdb4
wireshark-1.4.15/packaging/u3/win32/u3util.c,495,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char file_name[MAX_PATH+1];,71c849461ca28ccc7242958910fdcfa5bd4bb5f3b9322e111e63ca1a10c8d851
wireshark-1.4.15/packaging/u3/win32/u3util.c,508,20,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,      pid = (DWORD)atoi(find_file_data.cFileName);,4da00e3aeb017da71ad3c2fc68f43552ea04ac21ccae2949dca2a124615678cf
wireshark-1.4.15/packaging/u3/win32/u3util.c,537,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buffer[BUFSIZ];,80f8785bfb396254b6d4de2d4f0ba6d3c7efa89a433033442b2170ab12e6698f
wireshark-1.4.15/packaging/u3/win32/u3util.c,561,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buffer[BUFSIZ+1];,e5a14e31c928ee00e785dd59055f3fe48f747888e93325c6487296060868a887
wireshark-1.4.15/packaging/u3/win32/u3util.c,616,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buffer[BUFSIZ];,80f8785bfb396254b6d4de2d4f0ba6d3c7efa89a433033442b2170ab12e6698f
wireshark-1.4.15/packaging/u3/win32/u3util.c,655,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char wireshark_path[MAX_PATH+1];,8ae4eb9f0301b98a676fe8aa2c472e2a16adda9e6c9123e1ef6033aaeaef4e97
wireshark-1.4.15/packaging/u3/win32/u3util.c,656,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char winpcap_path[MAX_PATH+1];,38d165fa3f2e93cd35ac504b00b37451adccd590ffec3e1963ac6a5686aa9582
wireshark-1.4.15/packaging/u3/win32/u3util.c,657,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char vcredist_path[MAX_PATH+1];,9b760912527c877e1db83348bc694673295c077afaafa07ca41377aa9b84824e
wireshark-1.4.15/packaging/u3/win32/u3util.c,658,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char my_captures_path[MAX_PATH+1];,74c9c685783c9708aff6a0d204a163064aabeeb0698f57f7ed70d5391c88c4b2
wireshark-1.4.15/packaging/u3/win32/u3util.c,659,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char reg_key[BUFSIZ];,730cbcb16a14e7811a5fd05da269b0772b77970efefb730e8baf9a76ad07c25d
wireshark-1.4.15/packaging/u3/win32/u3util.c,660,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buffer[BUFSIZ];,80f8785bfb396254b6d4de2d4f0ba6d3c7efa89a433033442b2170ab12e6698f
wireshark-1.4.15/packaging/u3/win32/u3util.c,821,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char reg_key[BUFSIZ];,730cbcb16a14e7811a5fd05da269b0772b77970efefb730e8baf9a76ad07c25d
wireshark-1.4.15/plugins/asn1/asn1.c,1055,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char         errstrbuf[14+1+1+11+1+1];	/* ""Unknown error (%d)\0"" */",bb978cd890e09b02a4582b32578b39af98316a2f114c7a6666499ff17cb43602
wireshark-1.4.15/plugins/asn1/packet-asn1.c,168,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char fieldname[512];		/* for constructing full names */,79e51581adfc6225fd15d76771c45832636ecaf31e1c1f904de7f7dcd1ccc02f
wireshark-1.4.15/plugins/asn1/packet-asn1.c,452,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char tagtxt[BUFLM];,ed1a91e5e5f6126b88b2793408988ad7b43c25b43b476634928c9e53c90426db
wireshark-1.4.15/plugins/asn1/packet-asn1.c,499,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char str[BUFLM];,5142dc36bd01e4efbdb94fbd4bbb3c7d6fe605115bda4c683a9366dd2fa88ea5
wireshark-1.4.15/plugins/asn1/packet-asn1.c,520,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char str[BUFLL];,fa53f3e4ac97e8127d80090570a2f0869ec7f829930261381e3f7634929c021e
wireshark-1.4.15/plugins/asn1/packet-asn1.c,550,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char str[BUFLM];,5142dc36bd01e4efbdb94fbd4bbb3c7d6fe605115bda4c683a9366dd2fa88ea5
wireshark-1.4.15/plugins/asn1/packet-asn1.c,724,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char lenstr[BUFLS];,babbd9cbfbf9abcd6efbd063dafb583c45d65d1cf4ee98ec9cd74f3c9cfceb01
wireshark-1.4.15/plugins/asn1/packet-asn1.c,725,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char tagstr[BUFLS];,9c1c694555e929959236286812df3b6c5aafdaaf6a08e166446ab05e2375e47e
wireshark-1.4.15/plugins/asn1/packet-asn1.c,726,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char headstr[BUFLL];,cce7af994b87ea36cae71fc3e7180708a7668b4d1556ba526c0cfffde3eeb33c
wireshark-1.4.15/plugins/asn1/packet-asn1.c,727,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char offstr[BUFLS];,9128811f6429bd7044f04aba6043c6c8ce61bbc9ab6decbc98909097efa7688b
wireshark-1.4.15/plugins/asn1/packet-asn1.c,956,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char tagbuf[BUFLM];,598d0179d428ea6be0b91bbf8d9a4d9ece83014504b81e3ee42ff162086c432f
wireshark-1.4.15/plugins/asn1/packet-asn1.c,957,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char lenbuf[BUFLM];,12a6162f1449774c6ecbceba70eb58800410f1d702bdb96615595ea884eabccd
wireshark-1.4.15/plugins/asn1/packet-asn1.c,958,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char nnbuf[BUFLS];,1c43d3df0e9c5b655bfe52282441fbde62167d0878e418f60b0bf19dfacaa528
wireshark-1.4.15/plugins/asn1/packet-asn1.c,1788,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char tagbuf[BUFLM];,598d0179d428ea6be0b91bbf8d9a4d9ece83014504b81e3ee42ff162086c432f
wireshark-1.4.15/plugins/asn1/packet-asn1.c,1789,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char lenbuf[BUFLM];,12a6162f1449774c6ecbceba70eb58800410f1d702bdb96615595ea884eabccd
wireshark-1.4.15/plugins/asn1/packet-asn1.c,1923,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char tagbuf[BUFLM];,598d0179d428ea6be0b91bbf8d9a4d9ece83014504b81e3ee42ff162086c432f
wireshark-1.4.15/plugins/asn1/packet-asn1.c,1924,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char lenbuf[BUFLM];,12a6162f1449774c6ecbceba70eb58800410f1d702bdb96615595ea884eabccd
wireshark-1.4.15/plugins/asn1/packet-asn1.c,2973,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char ss[128];,4a5e8db8604ffad7d10a7d886383eb2a6fe58f90fba0048e07c4bbbcba7408d0
wireshark-1.4.15/plugins/asn1/packet-asn1.c,3443,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char text[400];,351f6cad461c715eee18e6e47c492502ad7ae68a48aa0d107e59bc4d231fa170
wireshark-1.4.15/plugins/asn1/packet-asn1.c,3467,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char text[400];,351f6cad461c715eee18e6e47c492502ad7ae68a48aa0d107e59bc4d231fa170
wireshark-1.4.15/plugins/asn1/packet-asn1.c,3666,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char text[400];,351f6cad461c715eee18e6e47c492502ad7ae68a48aa0d107e59bc4d231fa170
wireshark-1.4.15/plugins/asn1/packet-asn1.c,4150,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[1024];,5065f5757ec562d76d80e513ac33668b30265995d34290fc3fe7083c178c0622
wireshark-1.4.15/plugins/asn1/packet-asn1.c,4351,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char namestr[64]; /* enough ? */,81a5831149fdf8ee281590f9afdeed7250ef080e37d8e2b53c2733a723c384ec
wireshark-1.4.15/plugins/asn1/packet-asn1.c,4352,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char posstr[40];,5ccad52bbdd1fe4243ab94e4551f00965a0510c7eaf8aea80cf670ed1b09b25b
wireshark-1.4.15/plugins/ethercat/packet-ams.c,387,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-1.4.15/plugins/ethercat/packet-ams.h,1088,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char       sName[ADS_FIXEDNAMESIZE];,a2edf3dc3d2177606d695332f8e30afbb10dd6130e2caedee0870ce5b57a77f3
wireshark-1.4.15/plugins/ethercat/packet-ecatmb.c,475,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char tmp[50];,9aa5a01117d855a7a42bf1269d1c2f81ccff979d823aba5e27e0093d1a6d36b2
wireshark-1.4.15/plugins/ethercat/packet-ecatmb.c,527,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char tmp[50];,9aa5a01117d855a7a42bf1269d1c2f81ccff979d823aba5e27e0093d1a6d36b2
wireshark-1.4.15/plugins/ethercat/packet-ecatmb.c,528,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char elm[50];,4f2c8e4eba654e8bb9b32d0920cff6e5a6d6b76347fbc7857126bd53c354c2f3
wireshark-1.4.15/plugins/ethercat/packet-ecatmb.c,590,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-1.4.15/plugins/ethercat/packet-ecatmb.c,924,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-1.4.15/plugins/ethercat/packet-ecatmb.c,1014,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-1.4.15/plugins/ethercat/packet-ecatmb.c,1195,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-1.4.15/plugins/ethercat/packet-ecatmb.c,1294,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-1.4.15/plugins/ethercat/packet-ecatmb.h,316,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char    Name[1];     /* rest of mailbox data*/,1016ae1f0a9b597c1c029303c4b230d8d615aae6ca55524d1c79fd877d2a07e5
wireshark-1.4.15/plugins/ethercat/packet-ecatmb.h,337,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char    ErrorText[1]; /* rest of mailbox data */,da28cd5fc4ba990922ce0f722f6342bce09a2293cb12b5d12771de79d7860ea5
wireshark-1.4.15/plugins/ethercat/packet-ethercat-datagram.c,447,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-1.4.15/plugins/ethercat/packet-ioraw.c,59,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-1.4.15/plugins/ethercat/packet-nv.c,100,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-1.4.15/plugins/gryphon/packet-gryphon.c,854,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char   local_data[LENGTH+1];,64b2936dd343ae83ab17e9da7e8dd6e92d793bc0f3852f4ee35e4a56719e9144
wireshark-1.4.15/plugins/gryphon/packet-gryphon.c,903,18,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static const char *mon_names[12] = {,992987e147907c0bfaef8c775b7201e93f906970972c895741fb2efca33ccb55
wireshark-1.4.15/plugins/gryphon/packet-gryphon.c,939,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char   mode[30];,b18da531d40d24cffa86a2b81468f2a3ffb7ea75070d65ed35649f2bfb26c706
wireshark-1.4.15/plugins/gryphon/packet-gryphon.c,2195,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char line[50];,d7ad709884226ac1d1aa12974e71b52799844e1aad5085df2951b8195d246077
wireshark-1.4.15/plugins/gryphon/packet-gryphon.h,457,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (dest, src, size);	    	    \",f1536632c27e90bedc5dcabcdc604274d6e992cace995d543b7da7d95334e1d1
wireshark-1.4.15/plugins/irda/packet-ircomm.c,169,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        buf[128];,be47e6c3f778c6a711524b49135ebd4868f29e8ed5e558728b48d924289816ed
wireshark-1.4.15/plugins/irda/packet-ircomm.c,221,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char    buf[128];,0f03f627eea79bdbe32a3e52aabeeca0b26c9760f2bee38a219fc77097ebc8da
wireshark-1.4.15/plugins/irda/packet-ircomm.c,253,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        buf[256];,a6614e42f2b378080c91c16e0b183bd94885734072ecdc2ab39a10b3a0c52794
wireshark-1.4.15/plugins/irda/packet-irda.c,461,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		buf[128];,601e6e0496e70905a1faeee2ca114b5f637889e6920b00c1e300bd81149cfd85
wireshark-1.4.15/plugins/irda/packet-irda.c,515,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char    buf[128];,0f03f627eea79bdbe32a3e52aabeeca0b26c9760f2bee38a219fc77097ebc8da
wireshark-1.4.15/plugins/irda/packet-irda.c,572,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                char    class_name[256];,2cd9bf3b1bf5e94af155d9a85ebf40096da5742a4343445f7d289507c5278252
wireshark-1.4.15/plugins/irda/packet-irda.c,573,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                char    attr_name[256];,95810a72247ae4949bc967aae9bd5c27e33da86e9a32ebe3b6e2d4139d0f5159
wireshark-1.4.15/plugins/irda/packet-irda.c,602,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&buf[clen], ""\"" \"""", 3);",c0e720b61cd5dcafaec0dc43575880322413fede84a1c409c74beac71dc15615
wireshark-1.4.15/plugins/irda/packet-irda.c,666,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char                buf[300];,cd70840a2748b8e8d9d3038e5d0fddd3df9bd75e120d458e5147863a5ae9d3b0
wireshark-1.4.15/plugins/irda/packet-irda.c,1258,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        buf[256];,a6614e42f2b378080c91c16e0b183bd94885734072ecdc2ab39a10b3a0c52794
wireshark-1.4.15/plugins/irda/packet-irda.c,1533,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char buf[23];,b8270f671f5161a1edc2987e83ad5cb59ec5207b2f703fe2939ad3339d738a60
wireshark-1.4.15/plugins/irda/packet-irda.c,1559,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                char    service_hints[256];,433963a38e3930f9c749789e78448dddc0f22774398a7c011c0d05305219124d
wireshark-1.4.15/plugins/irda/packet-irda.c,1649,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char    buf[256];,7d074ba766c4340ca4f42b9c1fa351e30186909a9dde928fb15032d9b741f206
wireshark-1.4.15/plugins/irda/packet-irda.c,1686,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char     addr[9];,f38ab0b9c5c2bbf44a49f54355b126a9304339f863d09b79102aaa649dd2f0d9
wireshark-1.4.15/plugins/opcua/opcua_simpletypes.c,755,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char szNum[20];,565028e2f2bcfa869c9462b1e68f9d6107fdb0d328d16bc71560f55e40f0b255
wireshark-1.4.15/plugins/profinet/packet-dcerpc-pn-io.c,2123,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&ar->aruuid, aruuid, sizeof(e_uuid_t));",ee5579ea49d10a7ae4329107bd4473675ad076cc406d3214aedd44e13c669ac0
wireshark-1.4.15/plugins/profinet/packet-dcerpc-pn-io.c,5484,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy( (void *) (&par->controllermac), mac, sizeof(par->controllermac));",9eb758cdc55fb20363a55e44517b1e661395c3591b0889db9337e8e62b6fd203
wireshark-1.4.15/plugins/profinet/packet-dcerpc-pn-io.c,5536,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy( (void *) (&par->devicemac), mac, sizeof(par->controllermac));",0870f877bcbe57420abb0f0547edef132d19ab44e1982b44b21730f3ecdfb8f8
wireshark-1.4.15/plugins/profinet/packet-dcom-cba-acco.c,456,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy( (void *) (pdev->ip), ip, 4);",2474d799b57e52ed7575b24edc56ac338b2becb836b0333ed1ce20934c370492
wireshark-1.4.15/plugins/profinet/packet-dcom-cba-acco.c,707,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy( (guint8 *) (frame->consmac), consmac, sizeof(frame->consmac));",4f482ef8e3b680d12048a7adf01b5a8ca623287519ade85f7bd02ead43d2b270
wireshark-1.4.15/plugins/profinet/packet-pn.c,166,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(pdata, data, 6);",2087d9e86351bd3c50acc4aa5860c0988efb20a8eb1f3107d2bbcb103c5a4d03
wireshark-1.4.15/plugins/sercosiii/packet-sercosiii_1v1_at.c,48,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char outbuf[200];,af34cb514c94e0e22f7d0532ef1376309baf2baf2f7c49f9557843aabdd6fd98
wireshark-1.4.15/plugins/wimax/mac_hd_type1_decoder.c,69,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char *type1_subtype_abbrv[TYPE_I_SUBTYPE_MAX] =,5563ce0a40f022ff25b11889078f5982de6c64d308fcf0c0b10b0c033019b141
wireshark-1.4.15/plugins/wimax/mac_hd_type2_decoder.c,75,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char *type2_fb_type_abbrv[TYPE_II_FB_TYPE_MAX] =,14a54b41abb882f8dd34c843e53ca3f7efe0a33f6d0c7065ac8429fc589fb3dc
wireshark-1.4.15/plugins/wimax/mac_mgmt_msg_decoder.c,114,1,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,char *mgt_msg_abbrv[MAC_MGMT_MSG_TYPE_MAX] =,5ccfa7ee81d81566fcf01ac19444a475e01e7076d2dd5fb913a5db44a14ff175
wireshark-1.4.15/plugins/wimaxasncp/wimaxasncp_dict.c,2890,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buf,read_ptr,max);",2ade04ac3769f3e6811100477b530f8d6e42c9f9549cfa8e7a6eee591ddf31d8
wireshark-1.4.15/print.c,737,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char temp_str[8];,a62cd67aaa718028008cc0ebe3dab6d49707afbcbf83e642c08fe828e2006e91
wireshark-1.4.15/print.c,1029,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char space[MAX_INDENT+1];,bf5fa95be1fb15aeb9a0dc5986486e9c8ed2a4ba480af8d60ae745cc93856de8
wireshark-1.4.15/print.c,1138,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char psbuffer[MAX_PS_LINE_LENGTH]; /* static sized buffer! */,57ebba1d145e0dd6a46b1c437deec3d83975a64f73f8b45bfa01d77c42a9b02a
wireshark-1.4.15/print.c,1153,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char psbuffer[MAX_PS_LINE_LENGTH]; /* static sized buffer! */,57ebba1d145e0dd6a46b1c437deec3d83975a64f73f8b45bfa01d77c42a9b02a
wireshark-1.4.15/print.c,1164,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char psbuffer[MAX_PS_LINE_LENGTH]; /* static sized buffer! */,57ebba1d145e0dd6a46b1c437deec3d83975a64f73f8b45bfa01d77c42a9b02a
wireshark-1.4.15/randpkt.c,514,25,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,				produce_max_bytes = atoi(optarg);,fa276127e929b6a2f787c875d4662819190d7e55ad258630d80defb2033389ee
wireshark-1.4.15/randpkt.c,523,21,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,				produce_count = atoi(optarg);,60e2e7cb3d7c1d720087705002b03243c97f6f2d49bf0e6fde3a7c6b26f9d632
wireshark-1.4.15/randpkt.c,579,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&ps_header, example->pseudo_buffer, example->pseudo_length);",a16d177cdef16fe9ac771923b67ecb43bbd3d59b8ca3c7326f95c872a27d811e
wireshark-1.4.15/randpkt.c,583,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&buffer[0], example->sample_buffer, example->sample_length);",89e9f10a24e601edca6d914a351bda944cf0b7d3c351a4ed463805154c5de73d
wireshark-1.4.15/randpkt.c,607,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(&buffer[j], ""%s"", 3);",6ff7f032dc477d5b847840a01f69fac1cef02cfbb99afff40eff3615788417fd
wireshark-1.4.15/randpkt.c,699,7,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	fd = open(RANDOM_DEV, O_RDONLY);",80af0dfd920f0f5590ae27fba0a28c37cb6301390834cc41482004742440e68d
wireshark-1.4.15/ringbuffer.c,99,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char    filenum[5+1];,7ef91a06a81d1532408843052a11a27ebb66bdf99d74ff233bb94b27379d8455
wireshark-1.4.15/ringbuffer.c,100,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char    timestr[14+1];,00acd5d453c1426accc8af6d961b1fb585d04caa133a881c3c2e5a17c659c20f
wireshark-1.4.15/tap-diameter-avp.c,253,25,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,		ds->cmd_code=(guint32)atoi(tokens[2]);,3c6be75b41565851dd70260e76f4ffc2478f7c462545a5bdbaaf2df7ab47ce96
wireshark-1.4.15/tap-iostat.c,567,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(field, p, parenp-p);",6d302aef46982d5f2ad8f59dd766d8bbded294f4313fff6b8e092f0618b86ded
wireshark-1.4.15/tap-iousers.c,79,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char name1[256],name2[256];",8e9af204068389bcd84853bed3b1f1f04fe2431f09390645cb0bc79329c61713
wireshark-1.4.15/tap-iousers.c,139,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char name1[256],name2[256], s_sport[10], s_dport[10];",0864fce9726effcb8e627ccc5647775e9cd2d1e67f777ea40217c92b291e5904
wireshark-1.4.15/tap-iousers.c,198,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char name1[256],name2[256];",8e9af204068389bcd84853bed3b1f1f04fe2431f09390645cb0bc79329c61713
wireshark-1.4.15/tap-protohierstat.c,141,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[MAXPHSLINE];,cb3ef3df6e3c7395f36f7d7e29b98aa6004335d345c4aeede53d5f540965bb65
wireshark-1.4.15/tap-rpcprogs.c,183,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[64];,2b2a1c195b37c134129d114524a76691f731dd143f4adba9672fa8049b0885ca
wireshark-1.4.15/tap-rtp-common.c,146,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&source, strinfo->src_addr.data, sourcelen);",a5eaca914526de21940b20178a967ddecc5a16864c4956ee75e000a5da453d69
wireshark-1.4.15/tempfile.c,65,1,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377)",,,CWE-377,mkstemp (template),7375c7386437a470d5d06c542149160a2cf9023a73eb5a04de16532d7195157c
wireshark-1.4.15/tempfile.c,164,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char *tf_path[3];,a6ea873ebb2e527924e2d00f2b2a169943276a19c4ddef3edf7cadb6114e615e
wireshark-1.4.15/tempfile.c,178,19,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		tf_path[idx] = (char *)g_malloc(tf_path_len[idx]);,ba159a6b09100e1a85f4e3a623b6448489e48d811aeed48e5dda2281a279b1f5
wireshark-1.4.15/tempfile.c,188,19,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"		tf_path[idx] = (char *)g_realloc(tf_path[idx], tf_path_len[idx]);",3952b1b060b62e47dd6c1520e38bf0e0e39324a6f47d8c4f5dbba5058d2a552e
wireshark-1.4.15/tempfile.c,201,7,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377)",,,CWE-377,	fd = mkstemp(tf_path[idx]);,93b623611d8b228c6f4e6df2991e6311c29cb5f466473417328d2592cf9cf6bd
wireshark-1.4.15/tempfile.c,217,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char *td_path[3];,bfde0b4b098c3795c192b647da4b391f85c44b4385a8adeaa2d60f39f1b31f58
wireshark-1.4.15/tempfile.c,229,19,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		td_path[idx] = (char *)g_malloc(td_path_len[idx]);,809c4ec93e6aed3c6aa1f2ca3f7c7ed00fd9b000f8447e51011142ca4a85bb07
wireshark-1.4.15/tempfile.c,239,19,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"		td_path[idx] = (char *)g_realloc(td_path[idx], td_path_len[idx]);",b66abf51af9cb5bc8c8df0ed24929ac9370100449355e56c97b24fdb92ef987a
wireshark-1.4.15/text2pcap.c,184,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static unsigned char packet_buf[MAX_PACKET];,1af5d5a6a0e6234330c017edf2318eeeb83a9307e48b0057ccac704b0a8dca87
wireshark-1.4.15/text2pcap.c,192,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static unsigned char packet_preamble[PACKET_PREAMBLE_MAX_LEN+1];,73c79181fc898b401671fc5cbba283799f08a453e96816bc7f1f1fe47af78100
wireshark-1.4.15/text2pcap.c,325,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char tempbuf[64];,a99c0a0ac8a0ac8ce1b9d74efa4e74089a17769d854a76cbf0f27c4fab54707b
wireshark-1.4.15/text2pcap.c,730,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char xs[PACKET_PREAMBLE_MAX_LEN];,daebefceb98690d69ef11150f1b42f6c75618faf02a4948e4e2fb155bd5c19e5
wireshark-1.4.15/tools/lemon/lemon.c,1328,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char errmsg[ERRMSGSIZE];,c4ee9fc0214179233a6a08466bd0de0e064d4363bffe08e42f9ae905e9256cc1
wireshark-1.4.15/tools/lemon/lemon.c,1329,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char prefix[PREFIXLIMIT+10];,bed661b34c477fb682bdf20437bd6cd4bf7f824cb6fb85fbedec77ee74c2ff16
wireshark-1.4.15/tools/lemon/lemon.c,1338,5,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"    sprintf(prefix,""%.*s:%d: "",PREFIXLIMIT-10,filename,lineno);",45ecbb583973789e1fdf1f825bd0cac126419fcf9e9fce570881752847023499
wireshark-1.4.15/tools/lemon/lemon.c,1340,5,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"    sprintf(prefix,""%.*s: "",PREFIXLIMIT-10,filename);",86621aaa699dd8c03f80417a9167c62fac746d9fe07f42b7a158fe73f5f220b8
wireshark-1.4.15/tools/lemon/lemon.c,1677,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char *set[LISTSIZE];,5d9ec9a874fa5812d8fd7e00af000eb85397e0ce98ceae9a84f304a876611c20
wireshark-1.4.15/tools/lemon/lemon.c,2012,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char *alias[MAXRHS];       /* Aliases for each RHS symbol (or NULL) */,895c38ffbe4415e57a62c7c91d01ee8c92db29e548638f4a053dc4ba1ddc996e
wireshark-1.4.15/tools/lemon/lemon.c,2376,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char zLine[50];,4398a1fe86d208e8b5c86434b13773bb7712ceb496ba743796d960a2763a60d5
wireshark-1.4.15/tools/lemon/lemon.c,2393,11,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"          sprintf(zLine, ""#line %d "", psp->tokenlineno);",84c08d26f5d3cca547fc725c197f7809cc7206588316eaf388ae64b4a388fd2f
wireshark-1.4.15/tools/lemon/lemon.c,2403,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(zBuf, zLine, nLine);",acae83989897ed67d30514930f89e669167a0e98525c815c9faee979c4bb2c02
wireshark-1.4.15/tools/lemon/lemon.c,2418,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(zBuf, zNew, nNew);",ecc7adf7064cc56588dff0a772ad3c8453f0b9253c0656ac2cd123ea98ac1e7a
wireshark-1.4.15/tools/lemon/lemon.c,2564,8,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  fp = fopen(ps.filename,""rb"");",eaac68fd76bc3b080bca92734031cc9a39c1f5887e93fef31eb867170c4a4fd1
wireshark-1.4.15/tools/lemon/lemon.c,2829,8,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  fp = fopen(lemp->outname,mode);",8e815fbe1790466fcf1c31b89c83a883d80bc7cbbb966077be873287d7281b3b
wireshark-1.4.15/tools/lemon/lemon.c,2988,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char buf[20];,90f9d5685b966121e5a6eae2f61e8f266d703e27ea4c7b87d2a4e8c629a5699b
wireshark-1.4.15/tools/lemon/lemon.c,2990,9,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"        sprintf(buf,""(%d)"",cfp->rp->index);",04dff41f28d9ba1c883457af2f43e09108ab00fa4ad349fa8524646b3f16d83a
wireshark-1.4.15/tools/lemon/lemon.c,3106,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char line[LINESIZE];,37958d4b0c1af121dc564a1e5408b88c87594e50e01b2816301cfee2920bf3fa
wireshark-1.4.15/tools/lemon/lemon.c,3143,6,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"	    sprintf(buf,""%.*s.lt"",(int)(cp - lemp->filename),lemp->filename);",03aaded8bc02feecb1df2e8dfad426e57251ec65b98b0f248ea01e965fa44a55
wireshark-1.4.15/tools/lemon/lemon.c,3163,8,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  in = fopen(tpltname,""rb"");",0712ecb2125e22a9d8f6705fc3f427cf88c8c3a17ba643bca295a7e0295342b1
wireshark-1.4.15/tools/lemon/lemon.c,3278,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char zInt[40];,cfeda2b74e7e71546084da52a4415f97ad234f63458d0835de95476b7c80cea7
wireshark-1.4.15/tools/lemon/lemon.c,3299,7,2,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",Risk is low because the source has a constant maximum length.,CWE-120,"      sprintf(zInt, ""%d"", p1);",8c5ac20e5b3a2167ab1b3649ec809b2a9b821b08cd16f3e0d1f2de4ab7484fc5
wireshark-1.4.15/tools/lemon/lemon.c,3322,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char used[MAXRHS];   /* True for each RHS element which is used */,b3382202d8230bb3be0f08091113918e5823200a4fdcccb158e84facd202e0b6
wireshark-1.4.15/tools/lemon/lemon.c,3623,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char line[LINESIZE];,37958d4b0c1af121dc564a1e5408b88c87594e50e01b2816301cfee2920bf3fa
wireshark-1.4.15/tools/lemon/lemon.c,4046,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char line[LINESIZE];,37958d4b0c1af121dc564a1e5408b88c87594e50e01b2816301cfee2920bf3fa
wireshark-1.4.15/tools/lemon/lemon.c,4047,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char pattern[LINESIZE];,2bf2cd30e4637c71047e8e7b4051d863af8541bf0b7427a314af76298d02500f
wireshark-1.4.15/tshark.c,3052,11,2,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant string.,CWE-120,"          strcat(line_bufp + buf_offset, "" -> "");",3731955dc988079c175794459d2a7b03510160e96eb0795520107b81b4771393
wireshark-1.4.15/tshark.c,3071,11,2,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant string.,CWE-120,"          strcat(line_bufp + buf_offset, "" -> "");",3731955dc988079c175794459d2a7b03510160e96eb0795520107b81b4771393
wireshark-1.4.15/tshark.c,3090,11,2,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant string.,CWE-120,"          strcat(line_bufp + buf_offset, "" -> "");",3731955dc988079c175794459d2a7b03510160e96eb0795520107b81b4771393
wireshark-1.4.15/tshark.c,3109,11,2,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant string.,CWE-120,"          strcat(line_bufp + buf_offset, "" <- "");",ae5509501e7d1d1f9c1ec18524f9d23ca750df97a34e9564ec741830f274f36d
wireshark-1.4.15/tshark.c,3128,11,2,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant string.,CWE-120,"          strcat(line_bufp + buf_offset, "" <- "");",ae5509501e7d1d1f9c1ec18524f9d23ca750df97a34e9564ec741830f274f36d
wireshark-1.4.15/tshark.c,3147,11,2,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant string.,CWE-120,"          strcat(line_bufp + buf_offset, "" <- "");",ae5509501e7d1d1f9c1ec18524f9d23ca750df97a34e9564ec741830f274f36d
wireshark-1.4.15/tshark.c,3267,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char        err_msg[2048+1];,180c77036407d55a4f0286a3ded5706c1d35e7eeda0da2940264fcab43bda7fb
wireshark-1.4.15/tshark.c,3396,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char errmsg_errno[1024+1];,d3a48dd6bc93bca3e84f669e2c8877706d80f16af252aaf122e7357a1411da58
wireshark-1.4.15/util.c,283,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(phostname, lastp, hostlen);",b7d010560c55ff7caab8d7a65d48901872481bbb705d6ed9ef5b661aa60e3976
wireshark-1.4.15/wiretap/airopeek9.c,167,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char str_num[12];,8548656873cc54782f2e7b36568e3582c34e46694f4ddbec9ecef49c0d3bd298
wireshark-1.4.15/wiretap/ascend.c,1228,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];,81a61aabea773ce5c14dad61d7243fe03297e8078bd2a40f976aa1d0a22f382d
wireshark-1.4.15/wiretap/ascend.c,1463,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char yymsgbuf[128];,93ae2f12b6366f758688707b840f2220226a0ffcc07b6f9c76f044046ff31b16
wireshark-1.4.15/wiretap/btsnoop.c,86,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic[sizeof btsnoop_magic];,1a755731b9986ee1fe369c5b8d8d3c430d15cc0afba007363a96633b92993857
wireshark-1.4.15/wiretap/buffer.c,93,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buffer->data + buffer->first_free, from, bytes);",c4a92719259201969fa8b72f43e204de6cbea8a2ed9f49264b27ba39e8be08fe
wireshark-1.4.15/wiretap/catapult_dct2000.c,329,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char timestamp_string[MAX_TIMESTAMP_LEN+1];,b182bf4ea83bbc8d52e247a78a7477b038aa658d8048d2214059e6ca71434974
wireshark-1.4.15/wiretap/catapult_dct2000.c,488,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char timestamp_string[MAX_TIMESTAMP_LEN+1];,b182bf4ea83bbc8d52e247a78a7477b038aa658d8048d2214059e6ca71434974
wireshark-1.4.15/wiretap/catapult_dct2000.c,755,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char c[1];,0c7f65cec122bd7d2403b64c5c9a9bea4c966c087beeb8bd289552de25f6640b
wireshark-1.4.15/wiretap/catapult_dct2000.c,830,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char port_number_string[MAX_PORT_DIGITS+1];,cbefb84b24658727590f9472b83002a0d15d7662d818e74f5bed71910137f562
wireshark-1.4.15/wiretap/catapult_dct2000.c,836,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char seconds_buff[MAX_SECONDS_CHARS+1];,51b6225c6e3370a404268f266406fdb914419b5cb9fd214f7a6e28dd0c8e80cb
wireshark-1.4.15/wiretap/catapult_dct2000.c,838,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char subsecond_decimals_buff[MAX_SUBSECOND_DECIMALS+1];,71c6eac348f65cdcb12977da70740bd9dc96d97df54ed8e49d1d47129965249e
wireshark-1.4.15/wiretap/catapult_dct2000.c,903,26,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        *context_portp = atoi(port_number_string);,65f5ccff8c22f63a422ced1883add0bca727f0d54283498c524a1775506606f4
wireshark-1.4.15/wiretap/catapult_dct2000.c,946,23,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            variant = atoi(variant_name);,c58c619a55cd0f10c206a505725f65cf02cc2aef13e5802cc5186b8ba2f18472
wireshark-1.4.15/wiretap/catapult_dct2000.c,1159,16,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    *seconds = atoi(seconds_buff);,22cd44a981225c678a77dd5ceb6cfb4f5b6bd184628dbfc3a12655e93dbb80ea
wireshark-1.4.15/wiretap/catapult_dct2000.c,1186,17,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    *useconds = atoi(subsecond_decimals_buff) * 100;,17f13ac1d5974f7baeded3711367398c1ae618d41227896f556fa02dcd33f774
wireshark-1.4.15/wiretap/catapult_dct2000.c,1406,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char hex_lookup[16] =,c5d18c66aca9d99663a0c64b75297877e7bfa62d0d7f913acf3417c0be9cc257
wireshark-1.4.15/wiretap/catapult_dct2000.c,1446,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char month[MAX_MONTH_LETTERS+1];,a3027832924349284a7185d084d4cf21a20502a53230200796f9c6dbd9a1329c
wireshark-1.4.15/wiretap/cosine.c,208,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[COSINE_LINE_LENGTH];,fb92ce20b884a989a874e179e5746bdd59f735f331179fa13d74f29258aeeab6
wireshark-1.4.15/wiretap/cosine.c,250,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	buf[COSINE_LINE_LENGTH];,f0816a6a9cdf0dab9525c1c2c8de8ae178afaedc30b058d2a5fbc845eec08e21
wireshark-1.4.15/wiretap/cosine.c,314,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	line[COSINE_LINE_LENGTH];,9a61dc03a8ed15861785c851cefe7885fb61b200b94935841d4c39b66b5da1a2
wireshark-1.4.15/wiretap/cosine.c,348,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	line[COSINE_LINE_LENGTH];,9a61dc03a8ed15861785c851cefe7885fb61b200b94935841d4c39b66b5da1a2
wireshark-1.4.15/wiretap/cosine.c,380,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char	if_name[COSINE_MAX_IF_NAME_LEN], direction[6];",ba4e5497af0432daf1ac261f8e24ce5e53a17882c8a57a7dccffd63cda59b3f3
wireshark-1.4.15/wiretap/daintree-sna.c,86,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char readLine[DAINTREE_MAX_LINE_SIZE];,d1effd227903f4e332edcc90e73424f608f101e9d0362dc8478a45d64ef4ae19
wireshark-1.4.15/wiretap/daintree-sna.c,87,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char seekLine[DAINTREE_MAX_LINE_SIZE];,20282224198e572870ce2e6e3fabb46e232dcc6d04ef1877ca64dbfb0c1bb0f0
wireshark-1.4.15/wiretap/daintree-sna.c,89,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char readData[READDATA_BUF_SIZE];,b1c9458f22f92b31c1096236cf173ec9f27b14f434310b5667704fff77491537
wireshark-1.4.15/wiretap/daintree-sna.c,90,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char seekData[SEEKDATA_BUF_SIZE];,556705a4de500176c05505003ec083982fcdaf95c6f4c1061cf4135e8dc23874
wireshark-1.4.15/wiretap/daintree-sna.c,173,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(buffer_start_ptr(wth->frame_buffer), readData, wth->phdr.caplen);",a861ba26c95da443842cc9316661e6abdd97771e585e378f453ee4c381be7058
wireshark-1.4.15/wiretap/daintree-sna.c,228,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(pd, seekData, pkt_len);",f95bb10450e1c8ba2cc8ed8ccaa110abeb83e26df9627bbe866e6010a507a2c4
wireshark-1.4.15/wiretap/dbs-etherwatch.c,149,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	buf[DBS_ETHERWATCH_LINE_LENGTH];,915f6ba26378485198dbadbf6d0c93e5cc499cdfd08e4d33a5b0f96721c90f2b
wireshark-1.4.15/wiretap/dbs-etherwatch.c,323,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	line[DBS_ETHERWATCH_LINE_LENGTH];,42aca1977db0f7751a60664fb14c3748f070465ed8d64a25a41b14e2af3bf886
wireshark-1.4.15/wiretap/dbs-etherwatch.c,328,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char mon[4];,ba2773c84d2ec1cbfa3582b03e21716e34e365da0e18471c2ed9e7316b05dad4
wireshark-1.4.15/wiretap/dct3trace.c,139,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[32];,917f6ed0ae72790ae84d5546f1fd6d51df65d8cc348e82b8bf2389e3a4b61c78
wireshark-1.4.15/wiretap/dct3trace.c,154,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buf, start, end - start);",52b7541247ec0102c0fba6df2596a3fddd46050f50d4f0a4a6349048d02aa692
wireshark-1.4.15/wiretap/dct3trace.c,156,9,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,	*val = atoi(buf);,40df9f5e75cde542830345fa068eb270fdcfbe744b3c4e73a203f9ebfc56e0a7
wireshark-1.4.15/wiretap/dct3trace.c,169,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char line1[64], line2[64];",32a52cfe7d882d65df8188ee2130a70c496b8e3bdd1627e9e0e169265ecad516
wireshark-1.4.15/wiretap/dct3trace.c,220,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char line[1024];,b5f612875fabac01cc133497ddd01cc285adb53f2fe3cc360d78c70d375503d6
wireshark-1.4.15/wiretap/dct3trace.c,346,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char buf[MAX_PACKET_LEN];,a37630d50be2540d2354b211d8b89b7a097c67f372aa2c4349526d2a4d55a718
wireshark-1.4.15/wiretap/dct3trace.c,361,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy( buffer_start_ptr(wth->frame_buffer), buf, buf_len );",0b7aaf75a707236707e21dcbee24d1ce639942b1f8f6ed673ffdf46708b3e335
wireshark-1.4.15/wiretap/dct3trace.c,375,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char buf[MAX_PACKET_LEN];,a37630d50be2540d2354b211d8b89b7a097c67f372aa2c4349526d2a4d55a718
wireshark-1.4.15/wiretap/dct3trace.c,402,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy( pd, buf, buf_len );",d87e7259eae0f0ccbd4cda209a626f5a2dcaada412ad970b5c9ca099bc15fd7f
wireshark-1.4.15/wiretap/erf.c,97,14,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    if ((n = atoi(s)) > 0 && n < 101) {,26a012f7096f9a47df8a9d7046a1b7c21b942494e989d3560ece848c8dae7a59
wireshark-1.4.15/wiretap/erf.c,394,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	    memcpy(&pseudo_header->erf.ehdr_list[i].ehdr, &erf_exhdr_sw, sizeof(erf_exhdr_sw));",346d232083a4399b5f4e52aa9ef1ca911047b9dfc85885259144a07521cad920
wireshark-1.4.15/wiretap/etherpeek.c,547,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char    protoStr[8];,9fcc434652c83e807723653eb97f8dc88d1ea867701ccbd9a4d1500883e72352
wireshark-1.4.15/wiretap/etherpeek.c,574,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(protoStr, &ep_pkt[ETHERPEEK_V56_PROTOSTR_OFFSET],",1551cc0951109c2baf8d148a72413bbac55e48c68caebcbfc4df6cc0e11f69e7
wireshark-1.4.15/wiretap/eyesdn.c,140,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	magic[EYESDN_HDR_MAGIC_SIZE];,8b935c3a267ac4534d059511c1d4a37388c76a70ae0bb87c9fc4d237af43a161
wireshark-1.4.15/wiretap/eyesdn.c,296,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		unsigned char cell[CELL_LEN];,a68370fed8cc52f973376e73e86c88ceb4fbab7db56db14fab3e7e4b02a72f08
wireshark-1.4.15/wiretap/iptrace.c,58,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char name[12];,c59b88e8c3f6b3c1d023926426c75e13acca32bad6e87a74deffd6ae3f95230a
wireshark-1.4.15/wiretap/iptrace.c,116,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,/* 12-15 */	char		if_name[4];	/* null-terminated */,8969d790a9936aea426fcab566433a4ae3417429ba5facca465ea821c2cd2a94
wireshark-1.4.15/wiretap/iptrace.c,117,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,/* 16-27 */	char		junk2[12];	/* ??? */,837a9943c440116ad069902d324b870b8c2ba53675ae0f3b777f03fcafff0d3b
wireshark-1.4.15/wiretap/iptrace.c,323,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,/* 12-15 */	char		if_name[4];	/* null-terminated */,8969d790a9936aea426fcab566433a4ae3417429ba5facca465ea821c2cd2a94
wireshark-1.4.15/wiretap/iptrace.c,324,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,/* 16-27 */	char		if_desc[12];	/* interface description. */,1c8ea17d9a8b79a09ef7c6a4e9b23bf62da330c0865d87e540601ddf4feaed16
wireshark-1.4.15/wiretap/iptrace.c,565,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	if_text[9];,069c6975e2b3e21428dec6b025c69bfa2a289e04308c2a457250cace11b535e7
wireshark-1.4.15/wiretap/iptrace.c,574,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(if_text, &header[20], 8);",9970498e5ea89829035572ed1df49f989a74b1248f3ee5138d937950eb2cddca
wireshark-1.4.15/wiretap/iseries.c,167,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char magic[ISERIES_HDR_MAGIC_LEN];,e2c58e8da1493a540b561af656b299b0de33f43018101955dad7defba2425319
wireshark-1.4.15/wiretap/iseries.c,169,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char unicodemagic[ISERIES_HDR_MAGIC_LEN] =,551c6a9039e8a416a32251cd382f7b9a94467b72ce8451fbfbd8febd6966a67d
wireshark-1.4.15/wiretap/iseries.c,266,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char buf[ISERIES_LINE_LENGTH], protocol[9], tcpformat[2];",88d0308635019b33d3cb062951d7e50e84080ae7d1062eeeaea3b81abda270e9
wireshark-1.4.15/wiretap/iseries.c,381,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buf[ISERIES_LINE_LENGTH];,8ffd92c205f2915253c22e6b89d728ce79a2400d0ab855d0117cc79d464a5f4f
wireshark-1.4.15/wiretap/iseries.c,492,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char direction[2], destmac[13], srcmac[13], type[5], ipheader[41],",ff67d70f7827ab8c35ffaea2e7f8de81c085be159e15c106298a1b514f410295
wireshark-1.4.15/wiretap/iseries.c,494,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char hex1[17], hex2[17], hex3[17], hex4[17];",1810b3ae15b59d353141595c3c096fdb508d602f525bd7cb4a107f847077cbd4
wireshark-1.4.15/wiretap/iseries.c,495,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char data[ISERIES_LINE_LENGTH * 2];,d19fe67a5460214bb9991b7db84dec34b7fc6f70647be72ff0fa480b16ba39fd
wireshark-1.4.15/wiretap/iseries.c,686,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	  memcpy (tcpdatabuf, workbuf, ISERIES_PKT_ALLOC_SIZE);",72e960c719832ae76c926c979623b73b967b4d118195a584d7e9ddfba8d78ee3
wireshark-1.4.15/wiretap/jpeg_jfif.c,130,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic_buf[3];,b12e4a0eb6e74c85bd5b0177566f7fd15fe76215e563a680c334ef76f94e2bf9
wireshark-1.4.15/wiretap/k12.c,256,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(buffer,&(junk[0x10]),4);",aa41addf64047c907cecd23c409f3537619c1bbc45aac57956ef99d3b267cb3b
wireshark-1.4.15/wiretap/k12.c,407,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buffer_start_ptr(wth->frame_buffer), buffer + K12_PACKET_FRAME, wth->phdr.caplen);",50eae48653b0f0af1aa450f57a0b52ecc0b05e243c7f1ff5343134b73d8ffd69
wireshark-1.4.15/wiretap/k12.c,411,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buffer_start_ptr(&(k12->extra_info)),",0ed0d9962df565a301058be079de233240c1653386c8b4d4454f1571134bcfd7
wireshark-1.4.15/wiretap/k12.c,435,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&(wth->pseudo_header.k12.input_info),&(src_desc->input_info),sizeof(src_desc->input_info));",c0c23139eeed828872d7cad0b15fdc9b71e5ff89b19c27b9fb398984d7ea71f8
wireshark-1.4.15/wiretap/k12.c,472,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(pd, buffer + K12_PACKET_FRAME, length);",c7c2ebe981eedaacecaa333ca93b0a888bc9869e99adbe933e8ffbc8cf19f2b1
wireshark-1.4.15/wiretap/k12.c,476,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buffer_start_ptr(&(k12->extra_info)),",0ed0d9962df565a301058be079de233240c1653386c8b4d4454f1571134bcfd7
wireshark-1.4.15/wiretap/k12.c,516,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&(pseudo_header->k12.input_info),&(src_desc->input_info),sizeof(src_desc->input_info));",78526798363c99a812aa4e0fa533354397b578e214167d9e84b430ad90f9fb13
wireshark-1.4.15/wiretap/k12.c,535,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&(wth->pseudo_header.k12.input_info),&(src_desc->input_info),sizeof(src_desc->input_info));",c0c23139eeed828872d7cad0b15fdc9b71e5ff89b19c27b9fb398984d7ea71f8
wireshark-1.4.15/wiretap/k12.c,903,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(obj.buffer + offset,",09b5339e41da77530c045f01558ecfb99b4c16b94e3efc4fee11013141399fab
wireshark-1.4.15/wiretap/k12.c,907,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(obj.buffer + offset + obj.record.name_len,",a077cec03c2e5929c67efa98049e2acb67879b2b223de8a4ec7d8922243e4339
wireshark-1.4.15/wiretap/k12.c,964,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(obj.record.frame,pd,phdr->len);",5fcb8e3e2d124d9278bf1d613cdb6c905db74aeadb2fbe67358f4825fcce86a6
wireshark-1.4.15/wiretap/k12text.c,2412,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buffer_start_ptr(wth->frame_buffer), bb, wth->phdr.caplen);",f4a4864f60edb3697942da97912f1bd2acbc28b57b08b3a3e0b06465013f432b
wireshark-1.4.15/wiretap/k12text.c,2448,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(pd, bb, length);",0d11b66258b725a9f51318ce5b5c7382dd30c7b93d2b24166623bba9b2ad5ffb
wireshark-1.4.15/wiretap/k12text.c,2491,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[196808];,322c7db6cf7983dc779ef9460ad6255673264216cfc250f5509dc855c65bfc4c
wireshark-1.4.15/wiretap/lanalyzer.c,134,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char LE_record_type[2];,be8439839714f267475cd7cbf6fb712575e552cbb0ff8fb904331b08ccf59813
wireshark-1.4.15/wiretap/lanalyzer.c,135,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char LE_record_length[2];,f13b925a70a0796101bef55331c14ebae82a9d132b7f2539b23ba1cd0f639dd4
wireshark-1.4.15/wiretap/lanalyzer.c,136,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char summary[210];,3155b2518a09f9453030dd0153e5ada8d262b6e0fc57dcfd26f8bd64a7437317
wireshark-1.4.15/wiretap/lanalyzer.c,285,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		LE_record_type[2];,66f722b2a8e7cf6ab65f46e265e95fa9825983338bb938e7b67dc0b22f0f5b22
wireshark-1.4.15/wiretap/lanalyzer.c,286,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		LE_record_length[2];,87ada8933b217812a817cd22c53e996e1bc8890105e125077535c25e2ee717f9
wireshark-1.4.15/wiretap/mpeg.c,266,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic_buf[16];,7dcca956bd8e8c5abc0fc465c976f70e1ffd7228b4a1be09a5cb5efdd5946049
wireshark-1.4.15/wiretap/netmon.c,196,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic[sizeof netmon_1_x_magic];,8000d1b3bbc8f0ba7a5e13dff962fdad59715610f85f88b28bb4d0a3766818e5
wireshark-1.4.15/wiretap/netscaler.c,723,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(buffer_start_ptr(wth->frame_buffer), fp, wth->phdr.caplen); ",c15b8eb1f5110a66dc7e6d75b0d789db07f5e382b162584822150bec65d068e7
wireshark-1.4.15/wiretap/netscaler.c,746,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(buffer_start_ptr(wth->frame_buffer), pp, wth->phdr.caplen); ",29d093b4dd2ec999468dc824d10ec219a86b52b692f5591dd768f2294697523a
wireshark-1.4.15/wiretap/netscaler.c,832,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(buffer_start_ptr(wth->frame_buffer), fp, wth->phdr.caplen);\",ad80fefa824cd5a7e3bf0174c70e5d90a06d2c6064c39bd2d3865aebdf083fe5
wireshark-1.4.15/wiretap/netscaler.c,1098,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(sig10.sig_Signature, NSPR_SIGSTR_V10, NSPR_SIGSIZE_V10);",7d8d01aef4ad08d91f79c45c004adb9fceb1baeac30ba83a52882e6f080fd3ec
wireshark-1.4.15/wiretap/netscaler.c,1116,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(sig20->sig_Signature, NSPR_SIGSTR_V20, sizeof(NSPR_SIGSTR_V20));",e0fab1f91875894439c3b11a8e3852750b5be4b20c4c43f6ebdf0b0c65f09ebd
wireshark-1.4.15/wiretap/netscaler.c,1152,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&fp10, pd, nspr_pktracefull_v10_s);",9c539b1d9da0fb07e733db365e097272616e11ee2d2363106090ec16dc91c1ce
wireshark-1.4.15/wiretap/netscaler.c,1173,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&fp20, pd, nspr_pktracefull_v20_s);",f376cd36d2c8e16412126eb0b55de0a6493dfcc21dd0a49d029789c6364437b3
wireshark-1.4.15/wiretap/netscreen.c,117,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[NETSCREEN_LINE_LENGTH];,e7bb9b97bc47862b997d62b5e739980755154ee600f53e3316df5ca302e5f1b9
wireshark-1.4.15/wiretap/netscreen.c,159,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	buf[NETSCREEN_LINE_LENGTH];,dbee1ab9f4b296702468871d41a3a82b0e2e0ce1471d7aec7e837d876aa299df
wireshark-1.4.15/wiretap/netscreen.c,223,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		line[NETSCREEN_LINE_LENGTH];,58165789b8d7ac4a053ecbcdd5574019d835ae37cf2de4fb80724e9dc14d3c9c
wireshark-1.4.15/wiretap/netscreen.c,224,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		cap_int[NETSCREEN_MAX_INT_NAME_LENGTH];,83581e8e3a43e75f578d28f71a9491b9c5bd70e8b849ca3e1c9bc673a1bc0813
wireshark-1.4.15/wiretap/netscreen.c,226,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		cap_dst[13];,7970fd5ce72e74a9dc61671a2ac365bdb0725983ca21639444cc64c7e9189526
wireshark-1.4.15/wiretap/netscreen.c,303,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		line[NETSCREEN_LINE_LENGTH];,58165789b8d7ac4a053ecbcdd5574019d835ae37cf2de4fb80724e9dc14d3c9c
wireshark-1.4.15/wiretap/netscreen.c,304,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		cap_int[NETSCREEN_MAX_INT_NAME_LENGTH];,83581e8e3a43e75f578d28f71a9491b9c5bd70e8b849ca3e1c9bc673a1bc0813
wireshark-1.4.15/wiretap/netscreen.c,306,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		cap_dst[13];,7970fd5ce72e74a9dc61671a2ac365bdb0725983ca21639444cc64c7e9189526
wireshark-1.4.15/wiretap/netscreen.c,352,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	direction[2];,d6ea1c40b3616bb1ff255a2275eada558d44c0ea90ade83d43a4c46a4d512780
wireshark-1.4.15/wiretap/netscreen.c,353,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	cap_src[13];,32f57fb7dcb66b73a1524030b058c54c243311d081dca6b64095b07c12e9da2d
wireshark-1.4.15/wiretap/network_instruments.c,498,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char comment[64];,1634b2aca8e3a5b7706a196f0dd73fa834a4c85bc4ec1d66f1aa95a0fb9a2f54
wireshark-1.4.15/wiretap/network_instruments.h,31,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	observer_version[32];,03d4884d37f901f9dcd51740724cf3c4de476f24903f0dcf3d716b51bbdcee71
wireshark-1.4.15/wiretap/netxray.c,58,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	version[8];	/* version number				*/,6cbe278fd008650f6f36b369eefdf5f8d611760b09e1a4a273343e4baf57a090
wireshark-1.4.15/wiretap/netxray.c,345,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic[sizeof netxray_magic];,c454e93c1a232200644c006e11c819c42c270f934e3fe23735bab06ec67b3e46
wireshark-1.4.15/wiretap/netxray.c,1595,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char hdr_buf[CAPTUREFILE_HEADER_SIZE - sizeof(netxray_magic)];,96faeaebe2901f2b3f73936b1168f57be6a55dcd03bbbe0a6fdbdcd4108a1ca8
wireshark-1.4.15/wiretap/netxray.c,1611,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(file_hdr.version, vers_1_1, sizeof vers_1_1);",12e1203f70ec698cc8e7863f83b06ce9e589c0197e0da60b7a0cbf73964d99be
wireshark-1.4.15/wiretap/netxray.c,1621,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(hdr_buf, &file_hdr, sizeof(file_hdr));",467e0e810d8f03d4ff2cfac479ed1884a4e76eae8608ff0d9e8caeb2ed4536e4
wireshark-1.4.15/wiretap/netxray.c,1778,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char hdr_buf[CAPTUREFILE_HEADER_SIZE - sizeof(netxray_magic)];,96faeaebe2901f2b3f73936b1168f57be6a55dcd03bbbe0a6fdbdcd4108a1ca8
wireshark-1.4.15/wiretap/netxray.c,1794,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(file_hdr.version, vers_2_001, sizeof vers_2_001);",f9f5665a499c4318f2111b90125b0c1ca2c64c40219d76cd6b10f39fcdac3b3c
wireshark-1.4.15/wiretap/netxray.c,1827,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(hdr_buf, &file_hdr, sizeof(file_hdr));",467e0e810d8f03d4ff2cfac479ed1884a4e76eae8608ff0d9e8caeb2ed4536e4
wireshark-1.4.15/wiretap/ngsniffer.c,531,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic[sizeof ngsniffer_magic];,bace9bcbd0f4b9e2888f3c6f893eb877a2fcfe052b57795c74442ce626e2797b
wireshark-1.4.15/wiretap/ngsniffer.c,532,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char record_type[2];,acd5b20d9651b104ec64d9987d1e1f1e7e7a55228589d944b70b38581752b04c
wireshark-1.4.15/wiretap/ngsniffer.c,533,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char record_length[4]; /* only the first 2 bytes are length,",8f0a9ec208928afbf871a398cc46d6ac1aaa0799d4f7dca0091244a073ecb17b
wireshark-1.4.15/wiretap/ngsniffer.c,773,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char record_type[2];,acd5b20d9651b104ec64d9987d1e1f1e7e7a55228589d944b70b38581752b04c
wireshark-1.4.15/wiretap/ngsniffer.c,774,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char record_length[4]; /* only the first 2 bytes are length,",8f0a9ec208928afbf871a398cc46d6ac1aaa0799d4f7dca0091244a073ecb17b
wireshark-1.4.15/wiretap/ngsniffer.c,778,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char buffer[256];,5ce3e1f2e4cb110480855571be75010b07c1e42a358679087c8b7cdd4ef966a9
wireshark-1.4.15/wiretap/ngsniffer.c,1317,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	record_type[2];,553f023b236ce16edbc0227763040372050aa5e93960d5996a16535f158f73b9
wireshark-1.4.15/wiretap/ngsniffer.c,1318,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	record_length[4]; /* only 1st 2 bytes are length */,ad495f9f044a0bd5e33a0a3e2c0aec0de61a38a2c0b1c776ad84bea27a5cd3cd
wireshark-1.4.15/wiretap/ngsniffer.c,2029,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char buf[6] = {REC_VERS, 0x00, 0x12, 0x00, 0x00, 0x00}; /* version record */",70f0f404e8bba6e8e21cb49bc71a3599e260785c03c0747cae4389827fcd2cf8
wireshark-1.4.15/wiretap/ngsniffer.c,2057,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[6];,64a5741057bdfe9fd83e3c17e0bde24d19900cd80eabcda408e1e93777d9dc40
wireshark-1.4.15/wiretap/ngsniffer.c,2186,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char buf[6] = {REC_EOF, 0x00, 0x00, 0x00, 0x00, 0x00};",abb0b59283625e8560ba120a006b2a9050c5267a57076f844821e9d4d6d9c205
wireshark-1.4.15/wiretap/ngsniffer.c,2348,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy( pout, pout - offset, length );",ffb0bed7091a107f53971ea1beb80b5f4d55e69d1fdce706ff18b372e4822ded
wireshark-1.4.15/wiretap/ngsniffer.c,2377,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy( pout, pout - offset, length );",ffb0bed7091a107f53971ea1beb80b5f4d55e69d1fdce706ff18b372e4822ded
wireshark-1.4.15/wiretap/ngsniffer.c,2499,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(outbuffer, &comp_stream->buf[comp_stream->nextout],",cb4cb68878b4b77fb1d1c998885c7895e5a7d7b39fbe80eff75383d3508c9627
wireshark-1.4.15/wiretap/ngsniffer.c,2520,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char file_inbuf[65536];,3b21ed9d6e489cf2235ce6055c2c9fb7eda465fde28c14d19236539ac66b2d7c
wireshark-1.4.15/wiretap/ngsniffer.c,2553,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(comp_stream->buf, file_inbuf, in_len);",c916a3b82379e6bac1b5f7f8f4cd1c8057aba1f0d19bcc0abb6d0eed7dd8b1bf
wireshark-1.4.15/wiretap/ngsniffer.c,2573,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[65536];,d5ebf5590b352744c15aca959d24b157a3fac498c519a53619c9047e5c3d7c12
wireshark-1.4.15/wiretap/pcap-common.c,1209,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&pseudo_header->erf.ehdr_list[i].ehdr, &erf_exhdr_sw, sizeof(erf_exhdr_sw));",346d232083a4399b5f4e52aa9ef1ca911047b9dfc85885259144a07521cad920
wireshark-1.4.15/wiretap/pcapng.c,724,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(&wblock->data.if_descr.if_speed, option_content, sizeof(guint64));",faa86f4cafe093dbf913101dc61c475d79947ace8b0ba1fa073640b6c2dadac0
wireshark-1.4.15/wiretap/pcapng.c,1068,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(&wblock->data.packet.pack_flags, option_content, sizeof(guint32));",887b8873d6e8fe5e662246b88721f25a0b7a377b0bbfa5bf911a9de67f27811b
wireshark-1.4.15/wiretap/pcapng.c,1299,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(&wblock->data.if_stats.isb_ifrecv, option_content, sizeof(guint64));",12b3605d3ec74caf40e4ef9928e7f75788709de6a451be974732cd3b2b2e5e38
wireshark-1.4.15/wiretap/pcapng.c,1312,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(&wblock->data.if_stats.isb_ifdrop, option_content, sizeof(guint64));",563d30ea45a7103112edb23fec4f048d2e7e63fa316475d5a890e8a2a606ff03
wireshark-1.4.15/wiretap/pppdump.c,429,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"					memcpy(pd, pkt->buf, num_written);",ddb7d7a29a84b34d9f8ae1914b9d58019be939154c0b1b7dd4868649958a8dbb
wireshark-1.4.15/wiretap/radcom.c,44,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	year[2];,f8ea829ce292339f2b9bae83b7278b3d6c1890b85bdd1f93e2b79d696ad973a5
wireshark-1.4.15/wiretap/radcom.c,47,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	sec[4];		/* seconds since midnight */,5eb52dacc06a20602eaa838281ef680773e0aee2a655a101e494caf0e294886e
wireshark-1.4.15/wiretap/radcom.c,48,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	usec[4];,23cb46ce3b774775facbbf746138b93efae78676deab797e8738eed2a7fe82d6
wireshark-1.4.15/wiretap/radcom.c,81,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	xxx[4];		/* unknown */,261246224b6fae62923088ec0e762d99026a6e3513b7606286405cfc3437f1b1
wireshark-1.4.15/wiretap/radcom.c,82,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	data_length[2];	/* packet length? */,2ee7ff1bf803435956d9290cdccc99fc29689e32d8aad0849e3a2d19f1e10b87
wireshark-1.4.15/wiretap/radcom.c,83,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	xxy[5];		/* unknown */,27423df857d34abf84121329dc3f7e11cfd5e7da11b3e0999813cb67a5826908
wireshark-1.4.15/wiretap/radcom.c,85,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	real_length[2];	/* actual length of packet */,7dfa2ec753fc0b4fc94f119a82af85008a1cd0929aebdb33951d6bf8806a12c2
wireshark-1.4.15/wiretap/radcom.c,86,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	length[2];	/* captured length of packet */,f21e72ec580d1290cddd679f9bc8f709d1526b2dd0743905c2477541888d608b
wireshark-1.4.15/wiretap/radcom.c,87,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	xxz[2];		/* unknown */,3db666318887fe15abc9eb1858e94f5e98b1bcbbbcbc66a35435bf986231a09e
wireshark-1.4.15/wiretap/radcom.c,89,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	xxw[9];		/* unknown */,4fdf5445224753ce6e0415c2416054c627d5b1b32c4238552f763fbc389685ae
wireshark-1.4.15/wiretap/radcom.c,279,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	fcs[2];,dfd2cfa50c6327db7362c9b2f2d3e754e98a4e39312cb739c42b45da759b6a12
wireshark-1.4.15/wiretap/snoop.c,182,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic[sizeof snoop_magic];,b8af9857fadd166f776d07e706189057ac614e3f4c428654d5a14d00869646b2
wireshark-1.4.15/wiretap/snoop.c,457,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	padbuf[4];,853c6cbc8cfe42e22dde945a2746dd5c5809657406fb03214587f17af06f4262
wireshark-1.4.15/wiretap/snoop.c,919,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char zeroes[4];,4af90fe06b6cea11c435c02870d0eb4855a4049b42e4c2e64785e80e2345e2e2
wireshark-1.4.15/wiretap/toshiba.c,171,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	buf[TOSHIBA_LINE_LENGTH];,a0cebde4fcbb64fa5d04f7d16bc3e3997e57068b38ae7896bbd4cfdf8af4a8fe
wireshark-1.4.15/wiretap/toshiba.c,297,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	line[TOSHIBA_LINE_LENGTH];,4d8c55bbc02c91bbbf32a5e5a43b86fb6edd919af27a0660111500bfa055f917
wireshark-1.4.15/wiretap/toshiba.c,300,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char	channel[10], direction[10];",0f0f1fbdf8bb9148f0b04ddba8f9b3e9282396a4395ca38d070a9cec1421bd2b
wireshark-1.4.15/wiretap/toshiba.c,393,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	line[TOSHIBA_LINE_LENGTH];,4d8c55bbc02c91bbbf32a5e5a43b86fb6edd919af27a0660111500bfa055f917
wireshark-1.4.15/wiretap/visual.c,80,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    RESERVED_[102];     /* MUST BE ALL ZEROS FOR FUTURE COMPATABILITY */,1ab67abc77936ac219a005d9b40f31e4c9fa6a68971934ba1d6314d9a9a79e90
wireshark-1.4.15/wiretap/visual.c,81,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    description[64];    /* File description (null terminated) */,dc9b3e5dd14e7c1f3ec63123df8e723344a31f349c7a81461fc3bb834717eb5c
wireshark-1.4.15/wiretap/visual.c,104,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    RESERVED_[6];       /* RESERVED - must be zero */,8d58f0173899610c00e87f3956ecab0185f444e9f54eef3f77556ed70660311a
wireshark-1.4.15/wiretap/visual.c,182,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char magic[sizeof visual_magic];,6311cc9c1a5f8f6f819898525dd10d656f19beb3fc73c2a58b9f59d41703ccef
wireshark-1.4.15/wiretap/vms.c,163,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buf[VMS_LINE_LENGTH];,50965a6370f6a6c13239a99f85ac9b2f54ad089dcad31dfbe4c1949353d3657f
wireshark-1.4.15/wiretap/vms.c,210,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char	buf[VMS_LINE_LENGTH];,dbfd7c6229d8909262083f70f1e2d33c1b8d8e0b45203915ac4ceb6fbf6eac60
wireshark-1.4.15/wiretap/vms.c,369,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char   line[VMS_LINE_LENGTH + 1];,c53a789aa87e996bf1295e56dcde918bc2825f359936fb04c4690ab0d01438bb
wireshark-1.4.15/wiretap/vms.c,375,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char mon[4] = {'J', 'A', 'N', 0};",be458e0a56c9882a4184e8177f920b5dbfb58b3d7c7110777335e8938d5e7f25
wireshark-1.4.15/wiretap/vms.c,432,23,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            pkt_len = atoi(p);,2bf0f5a1bda3fae3754dd567a0d95234295fd45cadfa060c0f9e52f11eccd775
wireshark-1.4.15/wiretap/vms.c,535,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char lbuf[3] = {0,0,0};",38b1e48d353999d1917499ab4241aad3021710181b477747d77d71803ef24a3a
wireshark-1.4.15/wiretap/wtap.c,578,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char errbuf[128];,93dd942b0dcded5ec2552e755f7a734251e4611e70d4f4f3a9a3366d6e26f25f
wireshark-1.4.15/wiretap/wtap.h,455,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char	user[ASCEND_MAX_STR_LEN];   /* Username, from wandsession header */",4d379437ea7d108add9829c2eba60b5b0317325d1744bfa52672111b85bebb91
wireshark-1.4.15/wiretap/wtap.h,457,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char	call_num[ASCEND_MAX_STR_LEN];   /* Called number, from WDD header */",985998a07018a5f8405d5204d3690e3ec159c118fb631756d56825e7f5bf31d6
wireshark-1.4.15/wiretap/wtap.h,517,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char if_name[COSINE_MAX_IF_NAME_LEN];  /* Encap & Logical I/F name */,d5f46663d03c742c7c489919cf0d76bdc6998429715fea7c89ac8a7f67f42aa4
wireshark-1.4.15/wsutil/file_util.c,450,7,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      TCHAR path_w[MAX_PATH];,b86e3056cd108100ca987462254e17052d8430015327b1db465b1f975790a714
wireshark-1.4.15/wsutil/file_util.h,78,18,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,#define ws_open		open,f7c1d13a73f9baf058e2d69ccf99183b1b41eb9adb560688693fda308eaeb70e
wireshark-1.4.15/wsutil/file_util.h,86,18,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,#define ws_fopen	fopen,8e63787e670a1478c1c308aa6bf49a03f342c955b650155808237afa1c7880e7
wireshark-1.4.15/wsutil/inet_ntop.c,127,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char tmp[sizeof ""255.255.255.255""];",5fcb5984254b6955b10e5fcc36c55effacbfbf6e198182b6ab309a6d606a2eac
wireshark-1.4.15/wsutil/inet_ntop.c,159,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char tmp[sizeof ""ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255""], *tp;",bb9de5b2facf62c3103581725e7425221dd07c1ae5bd9983ca54dde52c2ecf4a
wireshark-1.4.15/wsutil/inet_pton.c,162,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(dst, tmp, NS_INADDRSZ);",b78e269e4b72a57894a08df7e2d5fa3b4cbf0e49755ecbbbeefef46a573d7aa0
wireshark-1.4.15/wsutil/inet_pton.c,266,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(dst, tmp, NS_IN6ADDRSZ);",e88dd37150a278f25a990d1bb7b15da39097d3f7754cc524e4e7bb78f495fa19
wireshark-1.4.15/wsutil/unicode-utils.c,51,10,2,buffer,wchar_t,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static wchar_t *utf16buf[3];,109e8992e3848eb9f2de15d7daeea903bdfe94c9cc12da422d3eea91853ec0e4
wireshark-1.4.15/wsutil/unicode-utils.c,68,10,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120)",,,CWE-120,"  while (MultiByteToWideChar(CP_UTF8, 0, utf8str,",2cfe9af41405066efb084fd2c5ab35b7a19b75708645d3d62f80ac19e0bbd78b
wireshark-1.4.15/wsutil/unicode-utils.c,80,7,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120)",,,CWE-120,"  if (MultiByteToWideChar(CP_UTF8, 0, utf8str,",ce325ae60d69b1cca285bfceef9850dfab4a2b39357762344ac19ec38a1958d7
wireshark-1.4.15/asn1/pkcs12/packet-pkcs12-template.c,117,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    pwlen = strlen (pw);,f570563c4e6d04955b189ab1160eb3d8f44d6c01208fe6011785d72ce6d33088
wireshark-1.4.15/capture_ifinfo.c,122,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(if_parts[1]) > 0),4bfea8037d95cef8e635f48ac2feb3356fbb35db3ff08443d5c1ffde8dc3e253
wireshark-1.4.15/capture_sync.c,234,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    errlen = strlen(errbuf);,21a8c2d0b24b239d07d69702d782eea49dfa480ac1b7d6e9d987ce7f76ebe1d0
wireshark-1.4.15/capture_sync.c,494,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (capture_opts->cfilter != NULL && strlen(capture_opts->cfilter) != 0) {,254b109a164c9975bcec5ba1db89658677ab79c0143ee190f9de2c4352534a51
wireshark-1.4.15/capture_sync.c,1329,17,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","        newly = read(pipe_fd, &bytes[offset], required);",db3227b42f50dca063ad938914b0563464a254a4b68230fb0b31f79ec4402e97
wireshark-1.4.15/capture_sync.c,1396,17,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","        newly = read(pipe_fd, &bytes[offset], 1);",0b7be48a6f15332472defc1575573e23c2073a823ec65464efbc462e003e2ea7
wireshark-1.4.15/capture_sync.c,1482,17,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","        newly = read(pipe_fd, &msg[sizeof(header)], len-sizeof(header));",87228c7065a58e72a874d6deff8d5f31eeb58121c9dc7df0e9f21166d24c6c41
wireshark-1.4.15/capture_ui_utils.c,118,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	p += strlen(if_name) + 1;,dcc6ae52cb9618c13ce729f46bce31338a433d2729813a6e9d42bd6afe40d27f
wireshark-1.4.15/capture_ui_utils.c,348,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,   if_name = if_text + strlen(if_text);,b45e88e28b4454de68d5bf9d03d06be96139ab654bc340f60ceb2a9107b5b335
wireshark-1.4.15/color_filters.c,106,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	g_assert(strlen(prefs.gui_colorized_fg)==69);,ab95513d7f466c8b74f96c9e87c9a7f045832f14d8de8de2993922765f6079f6
wireshark-1.4.15/color_filters.c,107,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	g_assert(strlen(prefs.gui_colorized_bg)==69);,d88243b478b09e985e4de6628752cc10675037688a5b6e61948c3b2e07e40d33
wireshark-1.4.15/color_filters.c,501,9,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",				c = getc(f);,211755ed29eaa0cb637ebe5591aee49ae2e1cfe934b12ed00e0a7641568466d9
wireshark-1.4.15/color_filters.c,509,15,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",		while ((c = getc(f)) != EOF && isspace(c)) {,869fbd0dfceb4d47890ce0d4c07b9936ee3f598aea8293f2b251467a22f580fb
wireshark-1.4.15/color_filters.c,537,8,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			c = getc(f);,211755ed29eaa0cb637ebe5591aee49ae2e1cfe934b12ed00e0a7641568466d9
wireshark-1.4.15/color_filters.c,559,8,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			c = getc(f);,211755ed29eaa0cb637ebe5591aee49ae2e1cfe934b12ed00e0a7641568466d9
wireshark-1.4.15/disabled_protos.c,186,17,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",    while ((c = getc(ff)) != EOF && isspace(c)) {,0e7b452771bdaa53d36d3fa7e9f9a0d100ccd70d6088368af2f2c73f1674f84c
wireshark-1.4.15/disabled_protos.c,204,11,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",      c = getc(ff);,57b021ad5f6e1ebf727b2de509697b2cb37681fb30d6e4e9c49d67e0cd61650d
wireshark-1.4.15/disabled_protos.c,223,19,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",      while ((c = getc(ff)) != EOF && c != '\n' && isspace(c)),70939bcd8f194dc56fee846170de5fb5dddf99034e2922a971eaaa881a94818b
wireshark-1.4.15/disabled_protos.c,234,19,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",      while ((c = getc(ff)) != EOF && c != '\n'),1c86399ed85d08e546e42f3ee4ac2dcffaec968b9ee11301caea682d986a2a9d
wireshark-1.4.15/dumpcap.c,1324,17,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","            b = read(ld->cap_pipe_fd, ld->cap_pipe_buf+bytes_read,",61c7d576bf81e58338236a949c762d200992839302b4f4e50fc48f7b44de8d6f
wireshark-1.4.15/dumpcap.c,1516,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      if (pos && g_ascii_strncasecmp(pos, PIPE_STR, strlen(PIPE_STR)) != 0)",9d8c1491670f56b277c0d2e42d711f559c254555f51bc97586a569e06351f675
wireshark-1.4.15/dumpcap.c,1577,11,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","      b = read(fd, ((char *)&magic)+bytes_read, sizeof magic-bytes_read);",31aa66df4f0c41d4a42940aebebabb560b5d9f404b0d62dbc8d11e4536d124de
wireshark-1.4.15/dumpcap.c,1652,11,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","      b = read(fd, ((char *)hdr)+bytes_read,",d019db047e2386f40dfadbcce30b8fdc83e77221b0329198e347e08de6168901
wireshark-1.4.15/dumpcap.c,1758,9,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","    b = read(ld->cap_pipe_fd, ((char *)&ld->cap_pipe_rechdr)+ld->cap_pipe_bytes_read,",b990b5c715b788bbb38ec9b6c5dde37014ab931bf53b661ce10b7b00ae4b4a35
wireshark-1.4.15/dumpcap.c,1807,9,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","    b = read(ld->cap_pipe_fd, data+ld->cap_pipe_bytes_read,",6fcdf25a5083f6af2c25661b484525ca7dec1572a3a3a130bbbd5424dcd91306
wireshark-1.4.15/editcap.c,167,9,1,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",Risk is low because the source is a constant character.,CWE-120,"        strcpy(buf, """");",dcd8b20b223a5fc9d43a5937061fbfba22933889b31c9752869c255c96c7677b
wireshark-1.4.15/editcap.c,1375,19,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,Risk is low because the source is a constant string.,CWE-120,"                  strncpy((char*) &buf[i],  ""%s"", 2);",1d0ac690b8cdb6c469e1157467ca51c845955656dd65d5f4bec0984e7b87ba04
wireshark-1.4.15/epan/addr_resolv.c,414,15,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",  while ((c = getc(fp)) != EOF && c != '\r' && c != '\n') {,95f765fe1c66706404f0110c0dc70572ba85bfbfd9883638a52711a0ce389643
wireshark-1.4.15/epan/adler32.c,56,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  return update_adler32(1L, (const unsigned char*)buf, (int)strlen(buf));",9f0ad370fa3c831c773069bc63946d5cdfbebd9f2eb45bcac9d2b1262b81ea6f
wireshark-1.4.15/epan/column-utils.c,134,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      cinfo->col_fence[i] = (int)strlen(cinfo->col_data[i]);,5ca508fa00d213093f661390d9b0f228c52ea322ed7e0fc4c963b185c76bbe3b
wireshark-1.4.15/epan/column-utils.c,282,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      len = (int) strlen(cinfo->col_buf[i]);,266aa6b980fabff191140de9c9c191cb2341916ef1d83893c209e44ffde0d468
wireshark-1.4.15/epan/column-utils.c,310,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  sep_len = (int) strlen(separator);,b086386438eb521612108463789a22178c2307f4e0d15e26a8ed6be0b6a8d14c
wireshark-1.4.15/epan/column-utils.c,324,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      len = (int) strlen(cinfo->col_buf[i]);,266aa6b980fabff191140de9c9c191cb2341916ef1d83893c209e44ffde0d468
wireshark-1.4.15/epan/column-utils.c,379,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        cinfo->col_fence[i] += (int) strlen(cinfo->col_buf[i]);,68b9bd222be5c63e51999140ac98bd698d039f429db323a2b9231bd7acaa4ec9
wireshark-1.4.15/epan/column-utils.c,421,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        cinfo->col_fence[i] += (int) strlen(cinfo->col_buf[i]);,68b9bd222be5c63e51999140ac98bd698d039f429db323a2b9231bd7acaa4ec9
wireshark-1.4.15/epan/column-utils.c,423,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        cinfo->col_fence[i]  = (int) strlen(cinfo->col_buf[i]);,36a84e69a9de6b2e16b87fb613b23ea9ea7f3036b2e72d8827b99c817f25807d
wireshark-1.4.15/epan/column.c,457,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if(strlen(get_column_longest_string(format)) >,e93f5c1d42f6ded5f8107f9f009bf48fc9528961cf8e6839205eacd5354acd39
wireshark-1.4.15/epan/column.c,458,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,       strlen(get_column_title(col))),b5ef3454950859713be388b65b697f7989b3dc67034e0847b0321d19d9367600
wireshark-1.4.15/epan/column.c,615,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  return (gint)strlen(get_column_longest_string(format));,0365a887b2a8d7c3546fa46e7451935ec6acfb1d35ae13034e4c3aa05c304efe
wireshark-1.4.15/epan/crypt/airpdcap.c,1499,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            len=strlen(key->UserPwd.Passphrase);,74c2a3ea3850eff989691c89add4402292694a012681f26d1f9e318ab2550ea7
wireshark-1.4.15/epan/crypt/crypt-sha1.c,378,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                             strlen( msg[i] ) );,acb7a7e82b0d9f1b6b2e71ea83989dad6f97837e3c14a27365b647216761c455
wireshark-1.4.15/epan/dfilter/scanner.c,792,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( df_in )) != EOF && c != '\n'; ++n ) \,3c0db3b9fc7996abfde2bc1dcd1dbf5a555924c883ae480ff7c776a3856aca3a
wireshark-1.4.15/epan/dfilter/scanner.c,2029,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return df__scan_bytes(yystr,strlen(yystr) );",b09bc0534920d793b46ed5386915d56eed4fbde6fbf696cc1a2448c97eaee66d
wireshark-1.4.15/epan/diam_dict.c,1157,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( DiamDictin )) != EOF && c != '\n'; ++n ) \,9bb435c41185f3d15d608bae803b7eab9c5149d40a657219c7dab9ad057ab8c9
wireshark-1.4.15/epan/diam_dict.c,2715,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return DiamDict_scan_bytes(yystr,strlen(yystr) );",6f68fd458eb10f19c8342f2d0e4e3e0ad5554d14a7f076121df32f890bbc6eab
wireshark-1.4.15/epan/diam_dict.c,3045,2,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"	strncpy(write_ptr,txt,len);",8a39217b7827bf2d3403193ce0d5954bbb37b0e14db4f98904014e3f4a085189
wireshark-1.4.15/epan/diam_dict.c,3051,9,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",	size_t read;,f8993f18d54700db66e2fc1d6dbac8061552ab3c743063954c2a9d16168894c9
wireshark-1.4.15/epan/diam_dict.c,3057,13,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",	} else if (read > 0) {,2a1d5695d5819db6cc3888f7d05314370f243544c4081a352116a88c1dcc9bd0
wireshark-1.4.15/epan/diam_dict.c,3058,10,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",		return read;,fe0938d5dd649f8904dd8fd1d308ead7aebeec466f821ef897ae01c46d1550a6
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,364,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (strlen(blurb) > 0),3e8e2539f68bec2cbf4e4212da8430af5eeed9a419beccf2626731929fee8dc5
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,936,6,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",		ch=fgetc(fh);,721c0dc27444d9c3cb388d71e6aa373ebe7c3d8faaadcfc818cff5dfa77357c5
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,955,12,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",				nextch=fgetc(fh);,8e331d668453f6e6259d063b639388c8e1e502cac569499892c866555c27f912
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,965,12,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",				nextch=fgetc(fh);,8e331d668453f6e6259d063b639388c8e1e502cac569499892c866555c27f912
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2965,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		len=strlen(pfx->name);,ec7158da9fea79c29c2ac14a2e94db5598bd99c1b05a7b80bf5377a2bfe49883
wireshark-1.4.15/epan/dissectors/dcerpc/idl2wrs.c,2996,6,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",		ch=fgetc(infile);,1903f052937d73689da38729ebd958e2a002c596a6a8587814e75b3fafad67a8
wireshark-1.4.15/epan/dissectors/packet-afs.c,658,68,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		proto_tree_add_string(tree,hf_afs_fs_acl_entity, tvb,offset,(int)strlen(who), who);\",bd5f8dbf169e3c95f7a2e63601451a25ee41e519db05ac8cf47654516caea92d
wireshark-1.4.15/epan/dissectors/packet-afs.c,659,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		tmpoffset = offset + (int)strlen(who) + 1; \,ea8d75d4c781f707c855a7c78a270a6e5ec2c515679cb4559e980bff814c0cef
wireshark-1.4.15/epan/dissectors/packet-afs.c,660,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		acllen = bytes - (int)strlen(who) - 1; \,16cf384356deae013bea1a235fdee355ca40d27eb01172e94a6bb05019a40a35
wireshark-1.4.15/epan/dissectors/packet-afs.c,1720,7,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"		if (sscanf(GETSTR, ""%127s %d %n"", user, &acl, &n) != 2) {",40e0c8159b5e55ba72ce4ca99d90f8b8446d599e4f02459ae2102cdc7b78ead8
wireshark-1.4.15/epan/dissectors/packet-afs.c,1727,7,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"		if (sscanf(GETSTR, ""%127s %d %n"", user, &acl, &n) != 2) {",40e0c8159b5e55ba72ce4ca99d90f8b8446d599e4f02459ae2102cdc7b78ead8
wireshark-1.4.15/epan/dissectors/packet-artnet.c,808,57,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        ptr += g_snprintf(ptr, (gulong)(sizeof string - strlen(string)), "" "");",be7ded81522aa4acfff70f0d0231431df5c5a36609ccc4f25d094ea3727351df
wireshark-1.4.15/epan/dissectors/packet-artnet.c,815,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          ptr += g_snprintf(ptr, (gulong)(sizeof string - strlen(string)), ""FL "");",4a4f7caa2be7f4850eb12b4683b205667a14348e6333e74d47a869d2caec5732
wireshark-1.4.15/epan/dissectors/packet-artnet.c,817,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          ptr += g_snprintf(ptr, (gulong)(sizeof string - strlen(string)), chan_format[global_disp_chan_val_type], v);",97085e63ff1fabed026d67d53c2a2a3add4a2f7819db7f447c21a4d17a2528b5
wireshark-1.4.15/epan/dissectors/packet-artnet.c,820,57,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        ptr += g_snprintf(ptr, (gulong)(sizeof string - strlen(string)), chan_format[global_disp_chan_val_type], v);",97085e63ff1fabed026d67d53c2a2a3add4a2f7819db7f447c21a4d17a2528b5
wireshark-1.4.15/epan/dissectors/packet-bittorrent.c,602,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,               if (strlen(amp_messages[i].name)==typelen &&,a28509798b9b18d1a685cdde90f0e294c015d3993ac4d4a950a95ff990e02aa7
wireshark-1.4.15/epan/dissectors/packet-bittorrent.c,604,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                              amp_messages[i].name, (int)strlen(amp_messages[i].name))==0) {",1fe1db29e64e96d79a49ef692924044a2e4e8115a1812230d787573f5354c0b9
wireshark-1.4.15/epan/dissectors/packet-bittorrent.c,764,57,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"         if(tvb_memeql(tvb, offset, peer_id[i].id, (int)strlen(peer_id[i].id)) == 0) {",3b7cc9bd1f8c54ecc36097df5183e5e341c369594b418d6b7b416e1ce4f1180d
wireshark-1.4.15/epan/dissectors/packet-bittorrent.c,765,67,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            version = tvb_get_ephemeral_string(tvb, offset + (int)strlen(peer_id[i].id),",6b2b6680122c04211ed6b357507c25348303cbf0759fd5c8c6b082a79d609caf
wireshark-1.4.15/epan/dissectors/packet-bootp.c,1038,62,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    strncmp((const gchar*)*vendor_class_id_p, ""PXEClient"", strlen(""PXEClient"")) == 0) {",13e031ec097d7347d90931e5e1353b6755f8f3f4144d2854673b89643cb2d028
wireshark-1.4.15/epan/dissectors/packet-bootp.c,1048,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			   ((strncmp((const gchar*)*vendor_class_id_p, ""pktc"", strlen(""pktc"")) == 0) ||",0f6c1d6dc19d89487bb4f41f5d570d98218f325ecd8a623c35aade27dd3c4d3d
wireshark-1.4.15/epan/dissectors/packet-bootp.c,1049,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    (strncmp((const gchar*)*vendor_class_id_p, ""docsis"", strlen(""docsis"")) == 0) ||",55a6e14d05752cc618078d16d2daa7f989721593c7dc08b3f1b426f72f575e8e
wireshark-1.4.15/epan/dissectors/packet-bootp.c,1050,67,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    (strncmp((const gchar*)*vendor_class_id_p, ""OpenCable2.0"", strlen(""OpenCable2.0"")) == 0) ||",05211ce174959450955ca7620c0d0d0efae01cd722528e87639aecb4d42d93c3
wireshark-1.4.15/epan/dissectors/packet-bootp.c,1051,64,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    (strncmp((const gchar*)*vendor_class_id_p, ""CableHome"", strlen(""CableHome"")) == 0))) {",e3dffc4a30387de35d373869d9d206cd24ec13119a3c9d255c2c38f86435bc22
wireshark-1.4.15/epan/dissectors/packet-bootp.c,1159,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				      (int)strlen(PACKETCABLE_MTA_CAP10)) == 0),ccb4669c9aa9617f70bf36e48ebca0a758731f1c0767ed976b98777b0f99e92c
wireshark-1.4.15/epan/dissectors/packet-bootp.c,1162,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				      (int)strlen(PACKETCABLE_MTA_CAP15)) == 0),39daa24c4ac537d6093adb7bb0383ff0dd1adc96d244afb51c7a1e15461cbad2
wireshark-1.4.15/epan/dissectors/packet-bootp.c,1165,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				      (int)strlen(PACKETCABLE_MTA_CAP20)) == 0)),8399b58cd91ff527e2019977579b005ddf89d504c6da9bf200071d152d085937
wireshark-1.4.15/epan/dissectors/packet-bootp.c,1170,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				(int)strlen(PACKETCABLE_CM_CAP11)) == 0),c8ef1f251fa221f3f720492408ce6db081defbbe6bd656161eadb79b4df1da9a
wireshark-1.4.15/epan/dissectors/packet-bootp.c,1173,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				(int)strlen(PACKETCABLE_CM_CAP20)) == 0 )),619b36b69a35f7ae8dc2d15dea22ccdabc681b6b3b22fe38a194c0b21a4b47df
wireshark-1.4.15/epan/dissectors/packet-bootp.c,1178,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				(int)strlen(PACKETCABLE_CM_CAP30)) == 0 ),8f077d9d8e9484391c90977b963d3ece397451be815483c7d5b41f0fa05522dc
wireshark-1.4.15/epan/dissectors/packet-bthci_cmd.c,850,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		buf[strlen(buf)-1] = '\0'; /* skip last comma */,e4bc0c185fde4df06562c3342fdba1f912f1d6fcd7a950dd3c069c532d689c64
wireshark-1.4.15/epan/dissectors/packet-bthci_evt.c,654,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		buf[strlen(buf)-1] = 0; /* skip last comma */,8c84e92f01521095d9942456b2d1eaa351b0d2b03f57931617b35ccb3f99fb4e
wireshark-1.4.15/epan/dissectors/packet-catapult-dct2000.c,1077,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (strncmp(protocol_name, ""diameter"", strlen(""diameter"")) == 0) {",b1d02d49e23e7b5f5faa4712a14c870200d8c40ad2f38fbe414281e30c669478
wireshark-1.4.15/epan/dissectors/packet-catapult-dct2000.c,1110,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (strncmp(protocol_name, ""nbap_sctp"", strlen(""nbap_sctp"")) == 0) {",9ad0c1447d47651e28283a3aa0d216e1d266c82cc2eef8617ceaac0a49aaaff3
wireshark-1.4.15/epan/dissectors/packet-catapult-dct2000.c,1114,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (strncmp(protocol_name, ""gtp"", strlen(""gtp"")) == 0) {",1437a53684b0e7ef7e29f11980b60b69a81180ef646c05af204b3d3888f66920
wireshark-1.4.15/epan/dissectors/packet-catapult-dct2000.c,1126,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (strncmp(protocol_name, ""sabp"", strlen(""sabp"")) == 0) {",d7c8304f81a87da56c542076d43ad702fc874fc6aec3cbe9d37a3c8f3908bfe3
wireshark-1.4.15/epan/dissectors/packet-catapult-dct2000.c,1136,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        strncmp(protocol_name, ""s1ap"", strlen(""s1ap"")) == 0) {",868bfa7858f6dff9c1e2c5a3362ee08ed5a7dbe1c86fd39718c695a818631d96
wireshark-1.4.15/epan/dissectors/packet-catapult-dct2000.c,1157,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    guint outhdr_string_len = (guint)strlen((const gchar*)outhdr_string);,351aaa3f4f638a3097ce5f0bcd7b7dcfb586c7c2893e3281510479b9fde8e7f7
wireshark-1.4.15/epan/dissectors/packet-cdp.c,1169,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    prefix_len = (int)strlen(prefix);,1abfde39806801c68d10297b1b516c36da2dd467f30f57d25f9c1808a86132d0
wireshark-1.4.15/epan/dissectors/packet-cimd.c,314,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  size = (int)strlen(payloadText);,974e9ca2e400c6dbb483bcab8809e3f5bbc63314eda00253490b05579afbb7d3
wireshark-1.4.15/epan/dissectors/packet-cimd.c,359,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  size1 = (int)strlen(tmpBuffer);,73f9fc33fe33b3c735ea7c0a523ce042fec9e2dce7b99c77147e5548447b6ad0
wireshark-1.4.15/epan/dissectors/packet-cops.c,1057,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      strlen(type_str) ? "" ("" : """",",a39a78a90715ab2d05db88dfec35eddfdfda33d139dfe54736ac0c63fd1b8ad6
wireshark-1.4.15/epan/dissectors/packet-cops.c,1059,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      strlen(type_str) ? "")"" : """");",1e26554d57fdddd63c12243c8584e0e40e5dab92c50920a4e39fd90a65c1879b
wireshark-1.4.15/epan/dissectors/packet-cops.c,1111,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        strlen(type_str) ? "" ("" : """",",a39a78a90715ab2d05db88dfec35eddfdfda33d139dfe54736ac0c63fd1b8ad6
wireshark-1.4.15/epan/dissectors/packet-cops.c,1113,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        strlen(type_str) ? "")"" : """");",1e26554d57fdddd63c12243c8584e0e40e5dab92c50920a4e39fd90a65c1879b
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,598,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        for(i=0; i<strlen(key1->name);i++) {,c5e00206ff4c281867ddf27ce823fcf6f2e86a6cb3420b5b200c5aaaef02e0f7
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,2523,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    txt_len = strlen(dcv->private_data);,5fe552799dfe01e525151fc7dca0c6125aa2e5452f5bc1c982a36ec58916f931
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,6811,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    password_len = strlen(nt_password);,a10805bb7abbe031cdccbe9d7c952cdc01e782ba2b244cb2400266744ed1192e
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,6849,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (ntlm_pass[0] != '\0' && ( strlen(ntlm_pass) < 129 )) {,3b9d5ba8c03b9390b5ffd6a49b1b237b1eeefd9fd414e95e22e920fa9528af79
wireshark-1.4.15/epan/dissectors/packet-dcerpc-netlogon.c,6852,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        password_len = strlen(ntlm_pass);,934494fd2f1c9bba26a1e200d5f2f55d95851923b002cc584926d2613f4b9dd6
wireshark-1.4.15/epan/dissectors/packet-dcerpc-spoolss.c,1039,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	len = (int)strlen(text);,ae6ad68251d3a2141db3ebe260ed161855820525c817005a848c1fc532dc44b4
wireshark-1.4.15/epan/dissectors/packet-dcerpc-spoolss.c,6644,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		subtree, tvb, start_offset + name_offset, ((int)strlen(name) + 1) * 2,",dfa12464c1be33eca4a45d464badff71dc9819ca9ab1bd481d8e7c6060db73b6
wireshark-1.4.15/epan/dissectors/packet-dcm.c,4223,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len=(int)strlen(value);,ff789ef646e48df29e5962b4e1655500b04e418c18fefe82691a48eff465bd60
wireshark-1.4.15/epan/dissectors/packet-dcm.c,4344,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (assoc->ae_calling && strlen(assoc->ae_calling)>0 &&,b7535d8746968d6a9995259983ed76ff89a04eb96842d7e56697bd40188993ef
wireshark-1.4.15/epan/dissectors/packet-dcm.c,4345,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	assoc->ae_called  && strlen(assoc->ae_called)>0 ) {,e6d28be3c706b865e394dd9118262755e24958b336c76d2f1afc4f997b12f1f1
wireshark-1.4.15/epan/dissectors/packet-dcm.c,4353,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	pdv_curr->sop_class_uid    && strlen(pdv_curr->sop_class_uid)>0 &&,ffa1f09385725ef45172a41d9b1fcc81869a22f24f44a6c949b315af5ffa90e5
wireshark-1.4.15/epan/dissectors/packet-dcm.c,4354,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	pdv_curr->sop_instance_uid && strlen(pdv_curr->sop_instance_uid)>0) {,98eb2d1c3df4d1289b449254ba4d21c093c2f223b33bc5e83ba7494af0c2168c
wireshark-1.4.15/epan/dissectors/packet-dcm.c,4380,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (pctx && pctx->xfer_uid && strlen(pctx->xfer_uid)>0) {,7cccc203ef13386891179d79b4857a5fbb3f9adecf7debedc09741274c3f1789
wireshark-1.4.15/epan/dissectors/packet-dcm.c,5307,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    if (strlen(vals) > 50) {,efc7a9752833e43a5953756b7987f33cd25394ab912959dbb5839172a30db903
wireshark-1.4.15/epan/dissectors/packet-dns.c,944,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  name_out = format_text(name, strlen(name));",c4cbf38e631d8fd4d220f2509dbe4699ce5e00382e4dccd87268b1ca13566242
wireshark-1.4.15/epan/dissectors/packet-dns.c,1227,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    name_out = format_text(name, strlen(name));",c4cbf38e631d8fd4d220f2509dbe4699ce5e00382e4dccd87268b1ca13566242
wireshark-1.4.15/epan/dissectors/packet-dns.c,1277,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(ns_name, strlen(ns_name));",e7e81b9eb755ccea861ea58b0fd9c5e989177fec0841ea0c641eafca355b2325
wireshark-1.4.15/epan/dissectors/packet-dns.c,1295,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(cname, strlen(cname));",47869f8391f06c9ca71550af482ebc08571340aab2a86df46784a03fda9a1090
wireshark-1.4.15/epan/dissectors/packet-dns.c,1320,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(mname, strlen(mname));",70af7b34c0235d13a30255d20804113f09d00dcfea52ec47e7aceee089e0d5b0
wireshark-1.4.15/epan/dissectors/packet-dns.c,1331,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        name_out = format_text(rname, strlen(rname));",5d4ebc8095092f6153e7515db77754e824114e17e7eff3c93a65accced1058f5
wireshark-1.4.15/epan/dissectors/packet-dns.c,1370,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(pname, strlen(pname));",1ce25797d73a54565f189872a554df933a49e63581da607d6da25614d7ef3562
wireshark-1.4.15/epan/dissectors/packet-dns.c,1493,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(mx_name, strlen(mx_name));",fbd40db67906b34883f521467339c5f63f590508d34553c2ec4a1c23b9428913
wireshark-1.4.15/epan/dissectors/packet-dns.c,1595,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		format_text(signer_name, strlen(signer_name)));",7ef01fdee0fd0fef0c7e52f4cc76980dc3f435e44ba351f5971d054b236b2852
wireshark-1.4.15/epan/dissectors/packet-dns.c,1791,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				 ""Gateway: %s"", format_text(gw, strlen(gw)));",b66bceb7512e234510a59ac2beb8dbc1a170b43eb4208e53a8dfd3e287f86043
wireshark-1.4.15/epan/dissectors/packet-dns.c,1862,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(pname, strlen(pname));",1ce25797d73a54565f189872a554df933a49e63581da607d6da25614d7ef3562
wireshark-1.4.15/epan/dissectors/packet-dns.c,1900,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(dname, strlen(dname));",e48ef30e6bf32d2057db22f953295d6d8ed761cb385a613ffab17e99e62ac4ab
wireshark-1.4.15/epan/dissectors/packet-dns.c,1959,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(next_domain_name, strlen(next_domain_name));",6d256a4201f845cb07b7ad0e77e5a95186f92e0d0e7a584704d32a787bb8fd06
wireshark-1.4.15/epan/dissectors/packet-dns.c,2036,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(next_domain_name, strlen(next_domain_name));",6d256a4201f845cb07b7ad0e77e5a95186f92e0d0e7a584704d32a787bb8fd06
wireshark-1.4.15/epan/dissectors/packet-dns.c,2073,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(kx_name, strlen(kx_name));",282475f6d8fd432d996e2414418245c84be3945d66b4acb845452afac80591b7
wireshark-1.4.15/epan/dissectors/packet-dns.c,2206,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		format_text(tkey_algname, strlen(tkey_algname)));",561b808e53d4668e026fcd50bb6c226f4c04d014859004e9205b96a34c50f4a9
wireshark-1.4.15/epan/dissectors/packet-dns.c,2330,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	tsig_algname=format_text(tsig_raw_algname, strlen(tsig_raw_algname));",f8abe81cc4744ad11b144ac78b62b82fee26f43fb95be96c1f4d9f167de56d6e
wireshark-1.4.15/epan/dissectors/packet-dns.c,2520,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(dname, strlen(dname));",e48ef30e6bf32d2057db22f953295d6d8ed761cb385a613ffab17e99e62ac4ab
wireshark-1.4.15/epan/dissectors/packet-dns.c,2543,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(target, strlen(target));",5d0bd1dfbd661b108cc616a4a7067b60c213e103677f4b28b702c51a3ce53436
wireshark-1.4.15/epan/dissectors/packet-dns.c,2591,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(replacement, strlen(replacement));",834fa651176e0def90f50d0de2e117c0133b5e1b08d88e088af5f12d7fd79a9e
wireshark-1.4.15/epan/dissectors/packet-dns.c,2722,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				format_text(rend_server_dns_name, strlen(rend_server_dns_name)));",238be9ab2ac84e2f2044292b04c7004431e3a62ecbfe59cefd29669968443f59
wireshark-1.4.15/epan/dissectors/packet-dns.c,2833,110,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        proto_tree_add_text(rr_tree, tvb, cur_offset, mbox_dname_len, ""Mailbox: %s"", format_text(mbox_dname, strlen(mbox_dname)));",4317b66e03653ee933d395eb85281516e3efc0661c55383a06677c7ed8294792
wireshark-1.4.15/epan/dissectors/packet-dns.c,2836,107,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        proto_tree_add_text(rr_tree, tvb, cur_offset, txt_dname_len, ""TXT RR: %s"", format_text(txt_dname, strlen(txt_dname)));",4824206327042914182d3f070ca50692dbde9d1e07d21658084111bd2600275b
wireshark-1.4.15/epan/dissectors/packet-dns.c,2855,158,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        proto_tree_add_text(rr_tree, tvb, cur_offset + 2, host_name_len, (type == T_AFSDB) ? ""Hostname: %s"" : ""Intermediate-Host: %s"",format_text(host_name, strlen(host_name)));",513281c882432783c1690afe68622e22ad6dcb31fddb0b030928969ab2045ff3
wireshark-1.4.15/epan/dissectors/packet-dns.c,2907,115,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        proto_tree_add_text(rr_tree, tvb, cur_offset, px_map822_len, ""MAP822: %s"", format_text(px_map822_dnsname, strlen(px_map822_dnsname)));",bb4e879d75d760139ccf7dcbb37503366655826cf6d65f88ef037ad17ca425d5
wireshark-1.4.15/epan/dissectors/packet-dns.c,2910,118,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        proto_tree_add_text(rr_tree, tvb, cur_offset, px_mapx400_len, ""MAPX400: %s"", format_text(px_mapx400_dnsname, strlen(px_mapx400_dnsname)) );",aefaed6bfe196da66ff42baad81418e1cbeaef5db5767b43434ef32517fe7887
wireshark-1.4.15/epan/dissectors/packet-dns.c,2935,116,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        proto_tree_add_text(rr_tree, tvb, cur_offset, nsap_ptr_owner_len, ""Owner: %s"", format_text(nsap_ptr_owner, strlen(nsap_ptr_owner)) );",a2b4ba24a01c74f61bb5070f5974c870bcd539cba70da212d91950d10af79753
wireshark-1.4.15/epan/dissectors/packet-dns.c,2953,107,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        proto_tree_add_text(rr_tree, tvb, cur_offset, hostname_len, ""Host: %s"", format_text(hostname_str, strlen(hostname_str)));",fb321222e01b587490842aaad4cdb31bbf09d3d981f7ac21cff7e6c764119843
wireshark-1.4.15/epan/dissectors/packet-dns.c,2967,120,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        proto_tree_add_text(rr_tree, tvb, cur_offset, rmailbx_len, ""Responsible Mailbox: %s"", format_text(rmailbx_str, strlen(rmailbx_str)));",10d8201b34a67cb45c3153b9f233f45049a5ca42f4a8bb979718c1f7ccbb137c
wireshark-1.4.15/epan/dissectors/packet-dns.c,2970,114,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        proto_tree_add_text(rr_tree, tvb, cur_offset, emailbx_len, ""Error Mailbox: %s"", format_text(emailbx_str, strlen(emailbx_str)));",e25368813d5e56fbf79d0fbb997a8fe01c70452bdd913d85824228cffe6c4bc9
wireshark-1.4.15/epan/dissectors/packet-dtn.c,955,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + dest_scheme_offset)),",f966a84abdb773773c426a9d0aecd32f0895c6c6f769a2ba568f70173e5d8056
wireshark-1.4.15/epan/dissectors/packet-dtn.c,959,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + dest_ssp_offset)), "" "");",0a6875b2ca3c1b4d5966bad9513c902a05df2461a17d91c72272706ec2eb67dd
wireshark-1.4.15/epan/dissectors/packet-dtn.c,969,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + source_scheme_offset)), "" "");",e7a63fe3b4796120864b5d26c37994f6a5fc27587aa2502386ed3a9a500648dc
wireshark-1.4.15/epan/dissectors/packet-dtn.c,974,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + source_ssp_offset)), "" "");",8112d291d58d053b239148e3979a8c3bc62709a2cf800f2a930989490277970e
wireshark-1.4.15/epan/dissectors/packet-dtn.c,984,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + report_scheme_offset)), "" "");",8e800fc8c93d5f04ff00cd21d973b0646033f1d6d275f0380245e62fc9cf1bd6
wireshark-1.4.15/epan/dissectors/packet-dtn.c,989,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + report_ssp_offset)), "" "");",e1c557841a242b0a416922aa0f3990425235e8015f6a3b55752d3a011f5e2e2d
wireshark-1.4.15/epan/dissectors/packet-dtn.c,999,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + cust_scheme_offset)), "" "");",01c31c07682aca29151c0b3656a29925f79835fab191770ccc6cf9531d4dbd61
wireshark-1.4.15/epan/dissectors/packet-dtn.c,1004,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + cust_ssp_offset)), "" "");",973d072658d3e63c7c26e0bc9e6a0e05357d9ddec1466d953ae7e28ff14aebf8
wireshark-1.4.15/epan/dissectors/packet-dtn.c,1446,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + dest_scheme_offset)), FALSE);",d95dd26637390ddd08604661b5129d8273b21b40671f926b3e878d74c5746492
wireshark-1.4.15/epan/dissectors/packet-dtn.c,1450,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + dest_ssp_offset)), FALSE);",0250a6e8a84a93cee9cd258a62125fecf9cec5be3e1ad943da2a22909858522a
wireshark-1.4.15/epan/dissectors/packet-dtn.c,1458,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + source_scheme_offset)), FALSE);",7e06627a816418ac14e1d44f4ccd8a3ed80ffc2bc2b3cef9e6ebfa1054c604b1
wireshark-1.4.15/epan/dissectors/packet-dtn.c,1462,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + source_ssp_offset)), FALSE);",eec49d151b63b0493ddfdc679c53d8a2b9b77dae52c12af8fd24fb2745411222
wireshark-1.4.15/epan/dissectors/packet-dtn.c,1470,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + report_scheme_offset)), FALSE);",10e67d8f623e1ea50edd0ce1f0057530e2a0c9f23cf831301020afbcfbec5139
wireshark-1.4.15/epan/dissectors/packet-dtn.c,1473,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + report_ssp_offset)), FALSE);",8776a7e556237af67667a2d402bc085ff996ea8f2339121bdb09c4bbd4e728e0
wireshark-1.4.15/epan/dissectors/packet-dtn.c,1481,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + cust_scheme_offset)), FALSE);",ac0b2db816136d6fc12d7e3a5b64663e8eda17f5de3b86867b2298f2b077bc4a
wireshark-1.4.15/epan/dissectors/packet-dtn.c,1485,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					(gint)strlen((char *) (dict_ptr + cust_ssp_offset)), FALSE);",9d25fe12971a798b1374979f4818754406a593ca44370585f3ded57313b8648d
wireshark-1.4.15/epan/dissectors/packet-edonkey.c,2390,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ( strlen( tagname_string ) == 1 ) {,bb419f0d145d1f2c9854c6da909397fe71060253837b63967ddea3262046cbd0
wireshark-1.4.15/epan/dissectors/packet-extreme.c,432,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	        format_text(display_name, strlen(display_name)));",e8a00691bd16658fc7e75effa5389f32a044849f7a7a1ffcb1c1d5dcabdde486
wireshark-1.4.15/epan/dissectors/packet-extreme.c,623,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	        format_text(vlan_name, strlen(vlan_name)));",bfbae3aa7730ec1360d64716b044397e8ffa9d836f565513798f955bf0bd08be
wireshark-1.4.15/epan/dissectors/packet-fmp.c,505,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (strlen(msg) == 0) {,fc83eee9cb2a95b515eb462d6c462704f3f8718077cf449f391d8703c44d46af
wireshark-1.4.15/epan/dissectors/packet-giop.c,1035,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  len = (int)strlen(key->module);,e732c3fbf2fffbe8f42574f6eed2b75c4e78096486bdc4332c94e5a8fe1dfbb2
wireshark-1.4.15/epan/dissectors/packet-giop.c,1296,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return (int)strlen(line);,c8c7bc8216744ccbebbe741498634cce16280700e8840a6f237aaf4f60ca475e
wireshark-1.4.15/epan/dissectors/packet-gsm_sms.c,2749,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			len_sms = (int)strlen(utf8_text);,d7838f3ae64cc9f8dd1d36bd56c51c06e263de875f9cee0dcb16e789fa566c48
wireshark-1.4.15/epan/dissectors/packet-gssapi.c,137,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	for (i = 0; i < strlen(key); i++),2dae83d322193fb7381bcf4d7e8186320c4360984d7675b8fe77951852371842
wireshark-1.4.15/epan/dissectors/packet-hclnfsd.c,205,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,					ident_len = (int)strlen(ident);,af80bd49cb4191b2ac07016b6e3a063e7abfd20ab0fcbf139a74eb970b50bf47
wireshark-1.4.15/epan/dissectors/packet-hclnfsd.c,212,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,					password = username + strlen(username) + 1;,645da5becf4dce08d1358d380c0b065298e58da0e7b003fa5e190e9bfd574536
wireshark-1.4.15/epan/dissectors/packet-hsrp.c,410,94,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                                     (tvb_strneql(tvb, offset, ""cisco"", (int)strlen(""cisco""))) == 0 ? """" : ""Non-"",",89c5eb26dec8b801a7ad37d2d4d096af2031a0dbaca8ab467fd3765696e2c46f
wireshark-1.4.15/epan/dissectors/packet-hsrp.c,565,102,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                                             (tvb_strneql(tvb, offset, ""cisco"", (int)strlen(""cisco""))) == 0 ? """" : ""Non-"",",89c5eb26dec8b801a7ad37d2d4d096af2031a0dbaca8ab467fd3765696e2c46f
wireshark-1.4.15/epan/dissectors/packet-http.c,2115,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                if (header_len == strlen(headers[i].name) &&,62d0d8fc77f0d994db2cc978e305c742d5cdc18515d928dd34fb0b8a2738d7b6
wireshark-1.4.15/epan/dissectors/packet-http.c,2145,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		hdrlen = strlen(*header);,73796dbfa7ab8343b4cf4081e8bf39eaf54262443c0a7d6661b7029436ace45f
wireshark-1.4.15/epan/dissectors/packet-http.c,2176,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		hdrlen = strlen(*header);,73796dbfa7ab8343b4cf4081e8bf39eaf54262443c0a7d6661b7029436ace45f
wireshark-1.4.15/epan/dissectors/packet-iec104.c,1004,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			for (Ind=strlen(cause_str); Ind< 7; Ind++)   ep_strbuf_append_c(res, ' ');",db917a74b0633a5714dc9459c1e8020f1d9fd7b98e77c97e5277a3e096563994
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,790,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        SET_ADDRESS(&pinfo->dl_dst, AT_STRINGZ, (int)strlen(dst_addr)+1, dst_addr);",98ece6bb93e2e558df30fcec7589119faead551d92980e9d4b66fe72b9d774be
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,791,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        SET_ADDRESS(&pinfo->dst, AT_STRINGZ, (int)strlen(dst_addr)+1, dst_addr);",84ba4e1d7c4bbc18d9d9908f8657d4f26fd9453d8f95c2d70ee49429bca94170
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,868,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        SET_ADDRESS(&pinfo->dl_src, AT_STRINGZ, (int)strlen(src_addr)+1, src_addr);",cf947869a9538b7a9ba7d3df76c0e8e98ebd3564497c1a526e2d7f7ff0eec7a5
wireshark-1.4.15/epan/dissectors/packet-ieee802154.c,869,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        SET_ADDRESS(&pinfo->src, AT_STRINGZ, (int)strlen(src_addr)+1, src_addr);",2e3e207d805f1c1697fb738b28329fee5e082a0057eb1528a33faf43f2f19ed0
wireshark-1.4.15/epan/dissectors/packet-infiniband.c,156,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    SET_ADDRESS(&pinfo->dst, AT_STRINGZ, (int)strlen(dst_addr_str)+1, dst_addr_str);",940553b7e31de4633baede0a670f588cc9f3cb0f1f32dc24264bb00edc35599e
wireshark-1.4.15/epan/dissectors/packet-infiniband.c,172,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    SET_ADDRESS(&pinfo->src, AT_STRINGZ, (int)strlen(src_addr_str)+1, src_addr_str);",7e7cbff0abb7e679dfd270c3e718732071c3a37e44bf431548065b1d68a814a1
wireshark-1.4.15/epan/dissectors/packet-infiniband.c,203,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            SET_ADDRESS(&pinfo->src,  AT_STRINGZ, (int)strlen(src_addr_str)+1, src_addr_str);",9ff565fd82da6f2ad387bcc4d9933bfb4e12dd5cb38c4e3e0f901466465eadab
wireshark-1.4.15/epan/dissectors/packet-infiniband.c,213,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            SET_ADDRESS(&pinfo->dst,  AT_STRINGZ, (int)strlen(dst_addr_str)+1, dst_addr_str);",999f3fb76bf251fe078f134966eb6b10949b9ebdb8267b35c8a7430045e2bf85
wireshark-1.4.15/epan/dissectors/packet-infiniband.c,257,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            SET_ADDRESS(&pinfo->src,  AT_STRINGZ, (int)strlen(dst_addr_str)+1, dst_addr_str);",8bb7195e04d860e09dc2cc7e9de50342435ede7c480471f7cf37c12bcbf536af
wireshark-1.4.15/epan/dissectors/packet-infiniband.c,3128,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    SET_ADDRESS(&pinfo->dst, AT_STRINGZ, (int)strlen(dst_addr_str)+1, dst_addr_str);",940553b7e31de4633baede0a670f588cc9f3cb0f1f32dc24264bb00edc35599e
wireshark-1.4.15/epan/dissectors/packet-infiniband.c,3133,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    SET_ADDRESS(&pinfo->src, AT_STRINGZ, (int)strlen(src_addr_str)+1, src_addr_str);",7e7cbff0abb7e679dfd270c3e718732071c3a37e44bf431548065b1d68a814a1
wireshark-1.4.15/epan/dissectors/packet-infiniband.c,3147,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            SET_ADDRESS(&pinfo->src, AT_STRINGZ, (int)strlen(src_addr_str)+1, src_addr_str);",7e7cbff0abb7e679dfd270c3e718732071c3a37e44bf431548065b1d68a814a1
wireshark-1.4.15/epan/dissectors/packet-infiniband.c,3155,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            SET_ADDRESS(&pinfo->dst, AT_STRINGZ, (int)strlen(dst_addr_str)+1, dst_addr_str);",940553b7e31de4633baede0a670f588cc9f3cb0f1f32dc24264bb00edc35599e
wireshark-1.4.15/epan/dissectors/packet-infiniband.c,3183,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            SET_ADDRESS(&pinfo->dst, AT_STRINGZ, (int)strlen(dst_addr_str)+1, dst_addr_str);",940553b7e31de4633baede0a670f588cc9f3cb0f1f32dc24264bb00edc35599e
wireshark-1.4.15/epan/dissectors/packet-ip.c,672,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	      if (cat_str_len < (strlen(cat_str) + 2 + USHRT_MAX_STRLEN)) {,7525933f7503b3c696059b38636f686214cd0d605f9364f1387c2336e546c52b
wireshark-1.4.15/epan/dissectors/packet-ip.c,674,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		while (cat_str_len < (strlen(cat_str) + 2 + USHRT_MAX_STRLEN)),cb5d07da502e07fe0acd910e233c29554be6f376fa93f2e7fdc7c5b09a52b13b
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,277,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  ipv6_len = (int) strlen(ipv6_address);,a3e423fbda69964d899418d017b754a8b3ddd90e564cf1905bb53f45f71cbbf1
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,378,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if((strlen(ipv6_addr) == 1) && (ipv6_addr[0] == IPSEC_SA_WILDCARDS_ANY)),24530a8fe6f4f7cc7289f6f16b8dcb7a8f87f1bbb2f7378387b8d0d105fde618
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,389,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  suffix_len = (int) strlen(suffix);,84eb67568ffe6d6a3592409aae10fa8df3759af8a29a2434f190200a2d0910c9
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,393,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      prefix_addr = ep_strndup(ipv6_addr,strlen(ipv6_addr) - suffix_cpt);",d49c3b5523a92fa68237a2b42ec0f16a128f221b23e945904f172e7d93685c45
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,395,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      prefix_len = (int) strlen(prefix);,c20af6d4718d25f7bef054d677e742bd2498eaaaf3e7a890d20a2056e4ab6901
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,410,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return (int) strlen(ipv6_addr) - suffix_cpt;,8d540f4b6d22f8731feb8667943df201cc796ebd3c1287cd09598fbc1bdc5d39
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,446,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if((strlen(ipv4_address) == 1) && (ipv4_address[0] == IPSEC_SA_WILDCARDS_ANY)),9389e9b6e2038c9bb9600a8a76107cb95302f21c60a4db8a6a38db4edcc05ac9
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,460,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    while((done_flag == FALSE) && (j <= strlen(ipv4_address)) && (cpt < IPSEC_STRLEN_IPV4)),4999918ccae844092e605ad658670fc4289ebcf8b94b8701bc7daf19f5263a65
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,462,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if(j == strlen(ipv4_address)),abde8be77fbbfe927e98b848543bd95d2d2598e9369cf8b543310761ea99c1c8
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,465,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    if((strlen(addr_byte_string_tmp) == 1) && (addr_byte_string_tmp[0] == IPSEC_SA_WILDCARDS_ANY)),508d0215133874db66cf3693a6f34352b5424703895fe633b1f425bc71590cd5
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,478,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		for(i = 0; i < strlen(addr_byte_string); i++),959d9d67828ab2006285476fa8d440d0b422a145aeab239fd78d7642d2b2fdcc
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,490,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    if((strlen(addr_byte_string_tmp) == 1) && (addr_byte_string_tmp[0] == IPSEC_SA_WILDCARDS_ANY)),508d0215133874db66cf3693a6f34352b5424703895fe633b1f425bc71590cd5
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,503,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		for(i = 0; i < strlen(addr_byte_string); i++),959d9d67828ab2006285476fa8d440d0b422a145aeab239fd78d7642d2b2fdcc
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,563,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  while(((cpt + index_start) < strlen(sa)) && (done_flag == FALSE) && (cpt <= IPSEC_IPV6_ADDR_MAX)),bb2aa49ce5b2e03427ef9f3a92476e61e54f18af511eddf8301e7268b25a33c0
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,575,67,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	  if((cpt >= IPSEC_IPV6_ADDR_MAX - 1) && ((cpt  + index_start) < strlen(sa)) && (sa[cpt + index_start + 1] != IPSEC_SA_ADDR_LEN_SEPARATOR) && (sa[cpt + index_start + 1] != IPSEC_SA_SEPARATOR)),42d0fe21e8bd92f3f338915bcdc3a71d0fb7e0506d9b0a0bac556f3a2def0bac
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,615,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  while(((cpt + index_start) < strlen(sa)) && (done_flag == FALSE) && (cpt <= IPSEC_IPV4_ADDR_MAX)),4539bf1b28b2bde842be11af3a6687e173ff61ecb299e1c196496975b2b7a31c
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,628,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,             && ((cpt  + index_start) < strlen(sa)),f1defe49c2dc009deea53781345335d4483c3ef85723a6cc09da4a6524c7309b
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,671,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  while(((cpt + index_start) < strlen(sa)) && (cpt < IPSEC_SPI_LEN_MAX)),2f5d7525dcc57500ac2fbe62f99e78dca7f633d688f055cede9f741d81448731
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,719,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if((sa == NULL) || (strlen(&sa[index_start]) <= IPSEC_TYP_LEN) ||,87cafc332fe93bbe94a321d1bed8666fe924f803f41bc6918df3f2731282c4a5
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,779,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      while(((cpt + index_start) < strlen(sa)) && (done_flag == FALSE) && (cpt < IPSEC_ADDR_LEN_MAX)),70155e08487d70b945e08d05f46486beec3fc114d97985c4244a6fb747a1cc21
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,802,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                 && ((cpt  + index_start) < strlen(sa)),f1defe49c2dc009deea53781345335d4483c3ef85723a6cc09da4a6524c7309b
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,843,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  sa_tmp = ep_alloc(strlen(sa) + 1);,c7fea22cb6bd2490268dbf88a395128390409b2e1081b4404d23509df6cd9844
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1075,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if(strlen(addr) != strlen(filter)) return FALSE;,a3fe82bd2942cb4b5791d9cce71f32298cea7ddebb592ae6064701680a3ece3e
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1075,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if(strlen(addr) != strlen(filter)) return FALSE;,a3fe82bd2942cb4b5791d9cce71f32298cea7ddebb592ae6064701680a3ece3e
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1081,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      for(i = 0; (guint)i < strlen(addr); i++),f9699fa6479fde54ccf7b1d01c2bc7ecfd0e6131a57c6ba9a63f3371607f47aa
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1136,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if((strlen(filter) == 1) && (filter[0] == IPSEC_SA_WILDCARDS_ANY)) {,35798395920f63c2cb09d655fad6014516c12637889b110f339dda2aad2aba4b
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1140,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  else if(strlen(spi) != strlen(filter)) {,4c50a350f920fe79450eb560ba80d5e00a0da002e53e0b8c6b12bbc125484a34
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1140,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  else if(strlen(spi) != strlen(filter)) {,4c50a350f920fe79450eb560ba80d5e00a0da002e53e0b8c6b12bbc125484a34
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1173,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if((strlen(key) > 2) && (key[0] == '0') && ((key[1] == 'x') || (key[1] == 'X'))),f05578410ca06da3baefc555d2eb137c0270b149df035d32a0143cb321892d7e
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1181,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	  if(strlen(key) %2  == 1),f88503c11e79de77a319c55d4c16b4d260bf243a377756125eb69bc806864187
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1188,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	      key_len = ((guint) strlen(key) - 2) / 2 + 1;,d7ca5c93bf53affe461e3bd1850ed98fc4190be86258af6bd1b8eea08ab4ac84
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1207,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	      key_len = ((guint) strlen(key) - 2) / 2;,4ac4d539388312e9f2287a8391f8dc517eb616dada9100f4f774c9b2e06c4bbc
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1211,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	  while(i < (strlen(key) -1)),47d02b4eab0c10c12a982ff6387b57045f32d169aaaa37209f999074413116b1
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1237,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      else if((strlen(key) == 2) && (key[0] == '0') && ((key[1] == 'x') || (key[1] == 'X'))),2bf68eae90691a453ffef8ebc58eddef818361238a29921e8bc018c303e9f4a4
wireshark-1.4.15/epan/dissectors/packet-ipsec.c,1244,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	  key_len = (guint) strlen(key);,df629bac4e8acea8dc6e747c094edc6df98c1cf8ab918735d7f4b5c3198911b2
wireshark-1.4.15/epan/dissectors/packet-jxta.c,841,103,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_sig, tvb, token_offset, (gint) strlen(*current_token), FALSE);",28161e0272e83158142441eecbe722f64ef73f020352550b21e2aaad00480cc5
wireshark-1.4.15/epan/dissectors/packet-jxta.c,844,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-1.4.15/epan/dissectors/packet-jxta.c,854,108,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_destAddr, tvb, token_offset, (gint) strlen(*current_token),",9dd72b15c365fb8035bb9d6b715e7858c8d578cfd751ff5cd9bf21ae7ac71daf
wireshark-1.4.15/epan/dissectors/packet-jxta.c,858,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-1.4.15/epan/dissectors/packet-jxta.c,868,107,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_pubAddr, tvb, token_offset, (gint) strlen(*current_token), FALSE);",6236404074fd6c7454b4cdd828b4f3086473971b2c1caec1369fe7e85dda15bb
wireshark-1.4.15/epan/dissectors/packet-jxta.c,871,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-1.4.15/epan/dissectors/packet-jxta.c,881,106,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_peerid, tvb, token_offset, (gint) strlen(*current_token), FALSE);",9eb42ad0b291f2b501d9445c143f44e9f4cdc850a6ce1a27e7cf30835015c729
wireshark-1.4.15/epan/dissectors/packet-jxta.c,891,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                found_addr->len = (int) strlen(*current_token);,251b55e57098fd04408737bb43c5ba03b1a58a1715be6e89854c25374eec9a31
wireshark-1.4.15/epan/dissectors/packet-jxta.c,895,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-1.4.15/epan/dissectors/packet-jxta.c,920,112,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_noProp, tvb, token_offset, (gint) strlen(*current_token), FALSE);",e3f5bad8ca2a21a3c01211755e8ba225990dacad126443681917ab4aed1e963b
wireshark-1.4.15/epan/dissectors/packet-jxta.c,923,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                  token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-1.4.15/epan/dissectors/packet-jxta.c,927,113,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_version, tvb, token_offset, (gint) strlen(*current_token), FALSE);",f1f0895e202ef593929b32b68ad772bf8626593b2b1931a7200a295265fc060d
wireshark-1.4.15/epan/dissectors/packet-jxta.c,931,112,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_noProp, tvb, token_offset, (gint) strlen(*current_token), FALSE);",e3f5bad8ca2a21a3c01211755e8ba225990dacad126443681917ab4aed1e963b
wireshark-1.4.15/epan/dissectors/packet-jxta.c,934,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                  token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-1.4.15/epan/dissectors/packet-jxta.c,938,113,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_msgVers, tvb, token_offset, (gint) strlen(*current_token), FALSE);",5c372f8719a2651c5ba03ff513066d047d9b3bb91113f7c8a49cf38feff5955b
wireshark-1.4.15/epan/dissectors/packet-jxta.c,941,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                  token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-1.4.15/epan/dissectors/packet-jxta.c,945,113,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_version, tvb, token_offset, (gint) strlen(*current_token), FALSE);",f1f0895e202ef593929b32b68ad772bf8626593b2b1931a7200a295265fc060d
wireshark-1.4.15/epan/dissectors/packet-jxta.c,955,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        tvb, token_offset, (gint) strlen(*current_token), FALSE);",f6a6261ea4a17bedf5711d39683ee13344cc6b1bb63b8a9d89d42eaf28d2665d
wireshark-1.4.15/epan/dissectors/packet-jxta.c,960,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                  token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-1.4.15/epan/dissectors/packet-lwres.c,217,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	slen = (int)strlen(ip_to_str(addr));,2c0dc020bac2490cf8d676596d6657b3cd1c25eabe05b49edd00300195f5cff5
wireshark-1.4.15/epan/dissectors/packet-lwres.c,489,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			slen = (int)strlen((char*)ip_to_str((guint8*)addr));,c0cecb98798f7aec6d08c96b006c7df54917d95788c80db86e0d301070dbd9b5
wireshark-1.4.15/epan/dissectors/packet-mac-lte.c,849,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if ((size_t)tvb_length_remaining(tvb, offset) < (strlen(MAC_LTE_START_STRING)+3+2)) {",5f92e383ddb9ea1c3945745eef372810d2fe41c1cb9caed1525f7488a3ba4e0e
wireshark-1.4.15/epan/dissectors/packet-mac-lte.c,854,62,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (tvb_strneql(tvb, offset, MAC_LTE_START_STRING, (gint)strlen(MAC_LTE_START_STRING)) != 0) {",753b2598f0aac35408296724e80151a1d8a656fccb6f719c6f58315cf539b7b3
wireshark-1.4.15/epan/dissectors/packet-mac-lte.c,857,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    offset += (gint)strlen(MAC_LTE_START_STRING);,2e92cd047001ef44632d2fcebe0987651a20da0c22ce9e7c396d9600d1c6ef3a
wireshark-1.4.15/epan/dissectors/packet-megaco.c,282,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (header_len == strlen(megaco_messageBody_names[i].name) &&,96a52731173aeb0196ffa48951ace2407ce7861aa3747af4f8c2858bae304ace
wireshark-1.4.15/epan/dissectors/packet-megaco.c,286,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		    header_len == strlen(megaco_messageBody_names[i].compact_name) &&,e859e60169966b336488dbf56630429a31bd6dfef65c44d490c538afc7d36822
wireshark-1.4.15/epan/dissectors/packet-megaco.c,1384,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (header_len == strlen(megaco_descriptors_names[i].name) &&,50f05762482c3e734345b899157f161a98a51618ca7569a6c754ffc0cbe16759
wireshark-1.4.15/epan/dissectors/packet-megaco.c,1388,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		    header_len == strlen(megaco_descriptors_names[i].compact_name) &&,7bc1fd76707adf086db09bbeeafbcf84de50a72347221483d466ad48469c7fb2
wireshark-1.4.15/epan/dissectors/packet-megaco.c,1620,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                if (header_len == strlen(megaco_mediaParm_names[i].name) &&,afdc53fe71d10e70fe315fdfb3b0b2f3b19c4d4551550e5c7072f636a0707012
wireshark-1.4.15/epan/dissectors/packet-megaco.c,1624,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    header_len == strlen(megaco_mediaParm_names[i].compact_name) &&,f9fb0eae7a933ea9415932b4388522db6d6c5e8c525cc946de8611a119fdf42e
wireshark-1.4.15/epan/dissectors/packet-megaco.c,2315,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                if (header_len == strlen(megaco_serviceChangeParm_names[i].name) &&,4e3411503242448990ba8f6532f9e3a9c05e7bbad762118300b7cd6b0bbb5ebe
wireshark-1.4.15/epan/dissectors/packet-megaco.c,2319,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    header_len == strlen(megaco_serviceChangeParm_names[i].compact_name) &&,a16eb0c8d4be46458986cedf9b7a56062354f82c35710dc39daaec6563c0456d
wireshark-1.4.15/epan/dissectors/packet-megaco.c,3112,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                if (header_len == strlen(megaco_localParam_names[i].name) &&,774a7946a459a758790b3c8837c22f8cbdf6e98cfea54fc65f6ba752116e5fd2
wireshark-1.4.15/epan/dissectors/packet-megaco.c,3116,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    header_len == strlen(megaco_localParam_names[i].compact_name) &&,7636df36885d1a3bf29e21ec2c0e7cb9261a805e6d42615b5fd3b7bdb0f85554
wireshark-1.4.15/epan/dissectors/packet-mgcp.c,1453,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,					                             strlen(code_with_verb) ? code_with_verb : code);,49f172ffda7c1aa21fcc6b4a4b57ad9fc3cfe96ebbde01c304294785c0195548
wireshark-1.4.15/epan/dissectors/packet-mgcp.c,1875,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		tokenlen = (int)strlen(tokens[i]);,fe6ebf34925dd97fc14bf3239f4edc0ae00390c34bf3bc726e7c4cd54fc7ce45
wireshark-1.4.15/epan/dissectors/packet-mgcp.c,1989,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		tokenlen = (int)strlen(tokens[i]);,fe6ebf34925dd97fc14bf3239f4edc0ae00390c34bf3bc726e7c4cd54fc7ce45
wireshark-1.4.15/epan/dissectors/packet-mmse.c,1180,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				format_text(strval, strlen(strval)),",43b736124a01aeeb1e21e41141389580a2c52052b99ffe55039a9de0390a8732
wireshark-1.4.15/epan/dissectors/packet-mmse.c,1218,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				format_text(strval, strlen(strval)),",43b736124a01aeeb1e21e41141389580a2c52052b99ffe55039a9de0390a8732
wireshark-1.4.15/epan/dissectors/packet-mmse.c,1257,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					format_text(strval, strlen(strval)));",3009d8c72e5ac1828216f676ed746695c0b0b779e999e85bc1baf14d113101ff
wireshark-1.4.15/epan/dissectors/packet-mmse.c,1293,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    format_text(strval, strlen(strval)),",43b736124a01aeeb1e21e41141389580a2c52052b99ffe55039a9de0390a8732
wireshark-1.4.15/epan/dissectors/packet-mmse.c,1294,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    format_text(strval2, strlen(strval2)));",f2016c9dd11dc5de62bc634050e1fdb18e4dd02c10df24c1d620e1bafed6843c
wireshark-1.4.15/epan/dissectors/packet-mount.c,183,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				name=g_malloc(strlen(host)+1+len+1+200);,cca6c5a3728104bd3e02e1b5a08637d59eac955c40e6ce1ebc3ed93aa561b017
wireshark-1.4.15/epan/dissectors/packet-mount.c,185,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				memcpy(ptr, host, strlen(host));",3539d5867a86cd911c6842a9012e818942ebf1b650ca573c9fe30cadad08040c
wireshark-1.4.15/epan/dissectors/packet-mount.c,186,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				ptr+=strlen(host);,6ef19a098e9799e1cdb495cc84559d2fb87d5e9c6374cff47464c06f24978676
wireshark-1.4.15/epan/dissectors/packet-mount.c,192,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				nfs_name_snoop_add_name(civ->xid, tvb, -1, (gint)strlen(name), 0, 0, name);",0c890f121edcc3da4aadeb31766431b97ab518b2392f0a64654404fd856b83e3
wireshark-1.4.15/epan/dissectors/packet-ms-mms.c,777,22,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"    fields_matched = sscanf(transport_info, ""%*c%*c%u.%u.%u.%u%*c%3s%*c%u"",",982ede1f9b1feed17e9c4ebe6daf32ff158c8beaa6458a9ccc66e6f028950a69
wireshark-1.4.15/epan/dissectors/packet-msrp.c,52,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,#define MSRP_HDR_LEN ((gint) strlen (MSRP_HDR)),0e1f3b9475fb48eb6df4ac4b0d17147c45e9ec34ea933d16bf22b5c4dea5c33d
wireshark-1.4.15/epan/dissectors/packet-msrp.c,287,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (header_len == strlen(msrp_headers[i].name) &&,5e3629ac2e932ece61eb58e1d24c38afeb4f71e3b393fefe637380e87ae7185b
wireshark-1.4.15/epan/dissectors/packet-multipart.c,212,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	ret = g_malloc(strlen(lines) + 1);,bc391af8a6b5a47b9c41b9fdc20b12e2d850f68ec174dcd987149d045b935322
wireshark-1.4.15/epan/dissectors/packet-multipart.c,323,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if(!parameters || !*parameters || !key || strlen(key) == 0),fc6694e8306fc351bb14fa162b74656d27acc7374c9696cafb24583d2aa29e5e
wireshark-1.4.15/epan/dissectors/packet-multipart.c,327,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	keylen = (int) strlen(key);,cbe16d6ded2f6bba4050b613b64f3553e65791cccac6c0fef5efc48b1f7842d9
wireshark-1.4.15/epan/dissectors/packet-multipart.c,900,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (len == strlen(multipart_headers[i].name) &&,b749e866b1945567edb686a5251f75ba5419ac325781fbd171ce3297b36c1c55
wireshark-1.4.15/epan/dissectors/packet-multipart.c,904,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		    len == strlen(multipart_headers[i].compact_name) &&,8a0fe8979313ce893eb2545557efad890420238f2f121048d0e342434a231d67
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1286,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	gint strlen;,c2bf930910cace22776d1536ab833d3646a4b1aae52f19fe3b62b971f36a13e9
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1317,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				tvb_get_ptr(tvb, offset, strlen));",e6ad7a0014c47cbc28ac38a59566c6ed5c8774fbaeb3ed35319a4ebbc1b1b6f2
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1320,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1321,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1332,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1333,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	offset+=strlen;,7657f473e6274c9e96bde698b5744138989dbab493913a1c9d7219bbbc0963f0
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1358,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1359,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1372,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	gint	 strlen;,c3dc8cf57df6fe8ab3d5c61cf419d3f2a5f90989dba9c64620c859be169860d3
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1414,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				tvb_get_ptr(tvb,offset,strlen));",ce5cb0ac780d3d0dcf3f8949eeb2cb4f4eb85a8b2aa7ff8a7df152fd710c1903
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1417,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1418,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1430,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (tree && strlen > 1) {,9515534c2033ebf706062c06948c307b874c8d88d3636013fe1ff3756ed93f2e
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1432,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    tvb, offset, strlen, ENC_LITTLE_ENDIAN);",ff4249656815223f8705b45c93f762632273e1d4785d8298e27354bc97bd77d0
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1434,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1440,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if(strlen<0){,68b3d8bf965ee5059b8a62e2e552fdaa4b0f84907a1ee8d09258991384a6ba95
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1447,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			if (strlen > 64),23477138c73e50d3d421904903cab7945fbbc0e41dc503b18e0b19844b22109e
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1449,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			tvb_memcpy(tvb, buf, offset, strlen);",e6c003f14cfd2027bd3f1aaf9f9c0a5563c3750443953f315bb3d38d485bc31f
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1450,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			buf[strlen]= '\0';,8dd55ee6462559c00294c1f2b4cfabf642cf957589427717b94aca204fc66617
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1454,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1455,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1467,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	gint strlen;,c2bf930910cace22776d1536ab833d3646a4b1aae52f19fe3b62b971f36a13e9
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1516,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1517,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1524,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1528,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"						tvb_get_ephemeral_string(tvb, offset, strlen));",f458d5f48b1a42cd316ea4bafc483b54a9925e3941551bf805ddbe0cffdf68e7
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1530,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1537,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1538,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1562,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		proto_tree_add_text(req_tree, tvb, offset, strlen, ""Table name: %s"",",b1c9f367d02f38cff0c0a3e69cddcf29983ac8edeeb763a2c10810daeeef2787
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1563,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    tvb_get_ephemeral_string(tvb, offset, strlen));",f458d5f48b1a42cd316ea4bafc483b54a9925e3941551bf805ddbe0cffdf68e7
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1564,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1578,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1579,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1583,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1584,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1588,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1589,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1656,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (tree &&  strlen > 0) {,0c889c5a6c1e6e9d226c4a44c47ddcb021e8bbbe3794eb7a941f2aea94dad0e8
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1658,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					    tvb, offset, strlen, ENC_LITTLE_ENDIAN);",ff4249656815223f8705b45c93f762632273e1d4785d8298e27354bc97bd77d0
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1660,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1681,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (tree &&  strlen > 0) {,0c889c5a6c1e6e9d226c4a44c47ddcb021e8bbbe3794eb7a941f2aea94dad0e8
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1683,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					      strlen, ""FIXME: execute dissector incomplete"");",571e4815b55c1d7aa9373bc4ed49b434b81d423a374ff2698e7a6c158a9e0018
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1685,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1717,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        gint strlen;,c2bf930910cace22776d1536ab833d3646a4b1aae52f19fe3b62b971f36a13e9
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1764,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"						    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1765,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1836,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	gint strlen;,c2bf930910cace22776d1536ab833d3646a4b1aae52f19fe3b62b971f36a13e9
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1869,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    offset, strlen, ENC_LITTLE_ENDIAN);",574aceb9becaded81f8c2d28cd6eb54580cce2a694c3833b08746f2188b83359
wireshark-1.4.15/epan/dissectors/packet-mysql.c,1870,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		offset+= strlen;,bb9fbc0e070d0564f49e6a5946982f2c5cb35912e0d742b1d60bb54006b1a747
wireshark-1.4.15/epan/dissectors/packet-nbns.c,348,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	pname_ret += MIN(strlen(name_ret), (size_t) name_ret_len);",ab5be1c467d8c3ff6e047c5b5f7eaf8755f853e0a7378da476cd1994fbe89ad2
wireshark-1.4.15/epan/dissectors/packet-ndps.c,2626,68,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    proto_item_append_text(aitem, "": %s"", format_text(server_name, strlen(server_name)));",6576012674cda73d5ab9e559fbebc05f41921d7d912ea91b182aa0fb7f47b416
wireshark-1.4.15/epan/dissectors/packet-nfs.c,882,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		nns->name_len=(int)strlen(name);,c62bda3851449d20dd7a71e48b7b9cc22da9cc189a128ab7c0442bf4b06c905e
wireshark-1.4.15/epan/dissectors/packet-nfs.c,7793,5,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	if(strlen(protocol) == 3 && strncmp(protocol,""tcp"",3) == 0) {",e607bedfc70224182cd2950f4c803648961078bba966937156850890d921eea7
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,386,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  password_len = strlen(nt_password);,a10805bb7abbe031cdccbe9d7c952cdc01e782ba2b244cb2400266744ed1192e
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,466,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (nt_password[0] != '\0' && ( strlen(nt_password) < 129 )) {,72b09603987a790e657640eff60f955a15b86e1b6b41a5b42e655c5690f0876d
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,468,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		password_len = strlen(nt_password);,a10805bb7abbe031cdccbe9d7c952cdc01e782ba2b244cb2400266744ed1192e
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,526,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  user_len = strlen(ntlmssph->acct_name);,f5f928a13a03e9679408f0213895b2ad2d2fe6ad0bc86bbed8bda19f2e19058e
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,540,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  domain_len = strlen(ntlmssph->domain_name);,767e10f434490b2567d119ee0bbb3d55ec3d1284c2e65eb2c5c60b205c12f7c8
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,634,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    password_len = strlen(nt_password);,a10805bb7abbe031cdccbe9d7c952cdc01e782ba2b244cb2400266744ed1192e
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,742,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  md5_append(&md5state,CLIENT_SIGN_TEXT,strlen(CLIENT_SIGN_TEXT)+1);",cc7afd15ff9266004b79d60928c156d773e80ccf8f8f907a18b7a192f06a0fd5
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,746,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  md5_append(&md5state2,SERVER_SIGN_TEXT,strlen(SERVER_SIGN_TEXT)+1);",3d1e8ef3bc8376059a6c0def03323de67bbcb4f4bcf5d5eebe4560a9f47ddf98
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,784,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    md5_append(&md5state,CLIENT_SEAL_TEXT,strlen(CLIENT_SEAL_TEXT)+1);",7966530cfe49f2799f396931f945ecf20463359e36f4d0a95e9d76684c43fc76
wireshark-1.4.15/epan/dissectors/packet-ntlmssp.c,788,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    md5_append(&md5state2,SERVER_SEAL_TEXT,strlen(SERVER_SEAL_TEXT)+1);",bfcd0a70bc561bce268d09a7a44c4b63178af02311afa00dae8fccf741835c44
wireshark-1.4.15/epan/dissectors/packet-pcnfsd.c,216,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			pcnfsd_decode_obscure(ident, (int)strlen(ident));",d7adccb0492c53b8ff29462dcb6a3482fe3edb6c38090a28bd19a371516180fe
wireshark-1.4.15/epan/dissectors/packet-pcnfsd.c,221,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				tvb, offset+4, (gint)strlen(ident), ident);",d5d14df0731e5686d5c0f104045e9fcf799e164054eccd712d5b216349a8c4e7
wireshark-1.4.15/epan/dissectors/packet-pcnfsd.c,246,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			pcnfsd_decode_obscure(password, (int)strlen(password));",0dbcae3a6c5d117445057fddffd1f75b376fad1d39eedccdf697220b0211dfe1
wireshark-1.4.15/epan/dissectors/packet-pcnfsd.c,251,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				tvb, offset+4, (gint)strlen(password), password);",c8aaf87b02a07498f95132cb4cca47e75d262961c6f79663327710c913c27a98
wireshark-1.4.15/epan/dissectors/packet-pdcp-lte.c,1412,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if ((size_t)tvb_length_remaining(tvb, offset) < (strlen(PDCP_LTE_START_STRING)+3+2)) {",7e9c99d4b4cb751e0a5cca05c6a2a8d2a0c94d4bd5242c1f518af1be4f937d48
wireshark-1.4.15/epan/dissectors/packet-pdcp-lte.c,1417,63,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (tvb_strneql(tvb, offset, PDCP_LTE_START_STRING, (gint)strlen(PDCP_LTE_START_STRING)) != 0) {",42cfa0fc73ac7b44a4c7d364509d2be31fdabc814175b481e60078d5b9964e1c
wireshark-1.4.15/epan/dissectors/packet-pdcp-lte.c,1420,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    offset += (gint)strlen(PDCP_LTE_START_STRING);,484f0206c3005b8a34f48d36fb05c1dd3b1d66d9ac87dff33fe43e6bac76c229
wireshark-1.4.15/epan/dissectors/packet-pkcs12.c,209,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    pwlen = strlen (pw);,f570563c4e6d04955b189ab1160eb3d8f44d6c01208fe6011785d72ce6d33088
wireshark-1.4.15/epan/dissectors/packet-pop.c,346,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  if (strncmp(data, ""+OK"", strlen(""+OK"")) == 0)",e298aeed040bd00d429caee3de019eea426d0c1c28cc1c58176cb1808c93823e
wireshark-1.4.15/epan/dissectors/packet-pop.c,349,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  if (strncmp(data, ""-ERR"", strlen(""-ERR"")) == 0)",f48356a5beeb8808e9a36c875750edfdd1a961f0bc6fc951323067a03b54b699
wireshark-1.4.15/epan/dissectors/packet-pvfs2.c,869,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,						(int)strlen(string_buffer));,f2af9ebae284979bbe0a6206c15d39ffaaed9e5a1ae0a81376af0b06626bb60d
wireshark-1.4.15/epan/dissectors/packet-pvfs2.c,871,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				string_buffer_size = (guint16)strlen(formatted) + 12 + 1;,6e8a533f066895e6ba03e3ed57c6ff451e7472c75d54c2e94f40db2fd898f142
wireshark-1.4.15/epan/dissectors/packet-pvfs2.c,893,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,								 (int)strlen(string_buffer)));,a76a6979b4b01820a88620d4d8dc63ab69f26ec4abc75924272ebb49b930d6ae
wireshark-1.4.15/epan/dissectors/packet-quake3.c,99,57,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"#define string_starts_with(s1, s2) (strncmp((s1), (s2), strlen(s2)) == 0)",efd33cec4d17818f914199e8babdc4c4163354793e6e00f623d5679dd3696dbf
wireshark-1.4.15/epan/dissectors/packet-radius.c,476,57,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	md5_append(&md_ctx, (const guint8*)shared_secret, (int)strlen(shared_secret));",20bc7dbbe658d81f7a63393bcd60e28e80251c6df690c73e41dafb12d58e0056
wireshark-1.4.15/epan/dissectors/packet-rlc-lte.c,1681,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if ((size_t)tvb_length_remaining(tvb, offset) < (strlen(RLC_LTE_START_STRING)+1+2)) {",a00c1f81d8d076cabe005a384bfb7f496d0c1edbef55afd5091971da994ed6a0
wireshark-1.4.15/epan/dissectors/packet-rlc-lte.c,1686,62,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (tvb_strneql(tvb, offset, RLC_LTE_START_STRING, (gint)strlen(RLC_LTE_START_STRING)) != 0) {",f4b975d849720162d3bd600806bafc03f949972d846ca372ad8460d7b063ff14
wireshark-1.4.15/epan/dissectors/packet-rlc-lte.c,1689,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    offset += (gint)strlen(RLC_LTE_START_STRING);,b3d3e17c96d512b88942278bca59dfaaed3eb508e619cff2e32fa2e8c9cc809b
wireshark-1.4.15/epan/dissectors/packet-rpc.c,624,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				formatted = format_text(string_buffer, strlen(string_buffer));",232f107197c4e8607cc45341842e6088dc5f7cea596f3dbcbd91aef9644afc1f
wireshark-1.4.15/epan/dissectors/packet-rpc.c,633,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    ep_strdup(format_text(string_buffer, strlen(string_buffer)));",4e963c593f201b7ffd9547624237c09cf31493a4136f25b79c71926f3bfe2ac5
wireshark-1.4.15/epan/dissectors/packet-rtps.c,1896,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        overview_buffer+strlen(overview_buffer),",28f3f4be05a8c93ef754f3a9bc7eb178d53b369727929fedf5c9487c828e047a
wireshark-1.4.15/epan/dissectors/packet-rtps.c,1897,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_LABEL_SIZE-strlen(overview_buffer));,54da82202585c72431aa7db524f584ecfc641aa014c6839ff5148b4c5319f707
wireshark-1.4.15/epan/dissectors/packet-rtps.c,1956,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        overview_buff+strlen(overview_buff),",cbef6f85400ff196857e0e3850bb6f312f22d5e14d25783c99c5d54125897a28
wireshark-1.4.15/epan/dissectors/packet-rtps.c,1957,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(overview_buff));,74e1922d76bc02203b14be73f87594d84016048b475c81e5bd3d2e2bd7add05e
wireshark-1.4.15/epan/dissectors/packet-rtps.c,2794,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  for (i = (int) strlen(temp_buff) - 1; (i>0 && temp_buff[i] == '0'); --i) {,278f4aaf754ed81eeac183c25b951b321f4a50bcffe922349361f7a55944b5f6
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3367,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer+strlen(buffer),",186b3034d107ae27e4106b92b97a91343fb1cdff0d078c2ac7f7ade5fd6f8917
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3368,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3374,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer+strlen(buffer),",186b3034d107ae27e4106b92b97a91343fb1cdff0d078c2ac7f7ade5fd6f8917
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3375,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3381,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer+strlen(buffer),",186b3034d107ae27e4106b92b97a91343fb1cdff0d078c2ac7f7ade5fd6f8917
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3382,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3754,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer+strlen(buffer),",186b3034d107ae27e4106b92b97a91343fb1cdff0d078c2ac7f7ade5fd6f8917
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3755,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3766,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer + strlen(buffer),",11ff2171ca34aa75de60d0a543e0862d0d85aa251036d04a822390e0e5a18950
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3767,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3794,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer + strlen(buffer),",11ff2171ca34aa75de60d0a543e0862d0d85aa251036d04a822390e0e5a18950
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3795,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3805,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer + strlen(buffer),",11ff2171ca34aa75de60d0a543e0862d0d85aa251036d04a822390e0e5a18950
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3806,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3817,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer + strlen(buffer),",11ff2171ca34aa75de60d0a543e0862d0d85aa251036d04a822390e0e5a18950
wireshark-1.4.15/epan/dissectors/packet-rtps.c,3818,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps.c,4227,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          g_snprintf(buffer+strlen(buffer),",9611a5c584942589cd22721313742d4fb907dc6463336ba2dafc1ab6aa0c08dd
wireshark-1.4.15/epan/dissectors/packet-rtps.c,4228,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        MAX_PARAM_SIZE-(gulong) strlen(buffer),",9be43920648e4c95d6633105ce4e2e84a486c2a826b93a5db379e3b37981ed94
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,851,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  gint len = (gint) strlen(summaryText);,446ad485033a1714db6fc5449a6c3451addeb947e7cb8276e7de22e28b87a0c0
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,2186,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        overview_buffer+strlen(overview_buffer),",28f3f4be05a8c93ef754f3a9bc7eb178d53b369727929fedf5c9487c828e047a
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,2187,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_LABEL_SIZE-strlen(overview_buffer));,54da82202585c72431aa7db524f584ecfc641aa014c6839ff5148b4c5319f707
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,2252,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        overview_buff+strlen(overview_buff),",cbef6f85400ff196857e0e3850bb6f312f22d5e14d25783c99c5d54125897a28
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,2253,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(overview_buff));,74e1922d76bc02203b14be73f87594d84016048b475c81e5bd3d2e2bd7add05e
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,3726,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          g_snprintf(buffer+strlen(buffer), MAX_PARAM_SIZE-(gulong)strlen(buffer),",49456716965a889040493b5b351525457a4ec2091d90aac6d5c13f665e32e064
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,3726,68,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          g_snprintf(buffer+strlen(buffer), MAX_PARAM_SIZE-(gulong)strlen(buffer),",49456716965a889040493b5b351525457a4ec2091d90aac6d5c13f665e32e064
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,3755,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          g_snprintf(buffer+strlen(buffer), MAX_PARAM_SIZE-(gulong)strlen(buffer),",49456716965a889040493b5b351525457a4ec2091d90aac6d5c13f665e32e064
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,3755,68,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          g_snprintf(buffer+strlen(buffer), MAX_PARAM_SIZE-(gulong)strlen(buffer),",49456716965a889040493b5b351525457a4ec2091d90aac6d5c13f665e32e064
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4144,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer+strlen(buffer),",186b3034d107ae27e4106b92b97a91343fb1cdff0d078c2ac7f7ade5fd6f8917
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4145,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4151,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer+strlen(buffer),",186b3034d107ae27e4106b92b97a91343fb1cdff0d078c2ac7f7ade5fd6f8917
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4152,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4158,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer+strlen(buffer),",186b3034d107ae27e4106b92b97a91343fb1cdff0d078c2ac7f7ade5fd6f8917
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4159,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4561,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer+strlen(buffer),",186b3034d107ae27e4106b92b97a91343fb1cdff0d078c2ac7f7ade5fd6f8917
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4562,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4573,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer + strlen(buffer),",11ff2171ca34aa75de60d0a543e0862d0d85aa251036d04a822390e0e5a18950
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4574,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4601,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer + strlen(buffer),",11ff2171ca34aa75de60d0a543e0862d0d85aa251036d04a822390e0e5a18950
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4602,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4612,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer + strlen(buffer),",11ff2171ca34aa75de60d0a543e0862d0d85aa251036d04a822390e0e5a18950
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4613,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4624,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        buffer + strlen(buffer),",11ff2171ca34aa75de60d0a543e0862d0d85aa251036d04a822390e0e5a18950
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,4625,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        MAX_PARAM_SIZE-strlen(buffer));,50920ffde78582ef89dc6d25462fbcf651548e3609be3e6fa7ffef8b1a11f901
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,5141,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          g_snprintf(buffer+strlen(buffer),",9611a5c584942589cd22721313742d4fb907dc6463336ba2dafc1ab6aa0c08dd
wireshark-1.4.15/epan/dissectors/packet-rtps2.c,5142,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        MAX_PARAM_SIZE-(gulong)strlen(buffer),",85c3275b325fb9474bfe37643a56058f9bf45172536600fd6cc778de14a7333e
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,312,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		size_t len = strlen(rtsp_methods[ii]);,758eccc0f150a4af709827dba9ef1d87986783a680f09b710fbff43218e01f69
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,365,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	if (g_ascii_strncasecmp(tmp, rtsp_rtp, strlen(rtsp_rtp)) == 0)",c16bc035bba4880a63ba7e6232aad05456b9facd59c79e587385f6fca8fa8878
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,368,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	if (g_ascii_strncasecmp(tmp, rtsp_real_rdt, strlen(rtsp_real_rdt)) == 0 ||",09ff6f7aed49eb01dbfc3f4ffc4f3129c15b897f1b8243422946d2af197cf81d
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,369,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	    g_ascii_strncasecmp(tmp, rtsp_real_tng, strlen(rtsp_real_tng)) == 0)",7a567ecb5423a6b980e7b004ffaecb86b105a55aa8d7666dc4660328d83b4f18
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,382,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		tmp += strlen(rtsp_sps);,6a49a51b9f0184f0af97e27ee14b1390ef43891cfcc083f4e2f60f68500b611a
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,391,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		tmp += strlen(rtsp_cps);,4a78332ffeaba6ffa1f5afab313b7cca65298965f55bbed450f6c5d31520e855
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,416,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		tmp += strlen(rtsp_inter);,2fe716261f5e26fd3638c2d7772d6364c8ef42bbf5e856c3fce903b33e75263d
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,1112,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		size_t len = strlen(rtsp_methods[ii]);,758eccc0f150a4af709827dba9ef1d87986783a680f09b710fbff43218e01f69
wireshark-1.4.15/epan/dissectors/packet-rtsp.c,1136,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	                      (gint) strlen(rtsp_methods[ii]), rtsp_methods[ii]);",23f2574ddec06d27cd61854e45eec68b42813b675ddd216a09b9c99e9bfe4620
wireshark-1.4.15/epan/dissectors/packet-sap.c,233,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          if (tvb_strneql(tvb, offset, ""v="", (int)strlen(""v=""))) {",7fcc63225644cc2b4935785dd3a4f39fb1f6feb65a4e20ad721d1a7e3dd31706
wireshark-1.4.15/epan/dissectors/packet-sccp.c,1101,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      SET_ADDRESS(&pinfo->dst, AT_STRINGZ, 1+(int)strlen(gt_digits), gt_digits);",70822ac27ed90b02fd87b69669f5c636119b5132203e5f78623516d9fbfc6196
wireshark-1.4.15/epan/dissectors/packet-sccp.c,1103,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      SET_ADDRESS(&pinfo->src, AT_STRINGZ, 1+(int)strlen(gt_digits), gt_digits);",3bc248ef010c02ee89218b4772ef87872f23d7ee490be656bc4dfeb15b6db736
wireshark-1.4.15/epan/dissectors/packet-sdp.c,554,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (strlen(sdp_pi->summary_str)) g_strlcat(sdp_pi->summary_str, "" "", 50);",25d09d0c9f86eef9cb126df5d04107b86c876d246dbd008451496a5a36f65701
wireshark-1.4.15/epan/dissectors/packet-sdp.c,559,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (strlen(sdp_pi->summary_str)) g_strlcat(sdp_pi->summary_str, "" "", 50);",25d09d0c9f86eef9cb126df5d04107b86c876d246dbd008451496a5a36f65701
wireshark-1.4.15/epan/dissectors/packet-sdp.c,563,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          if (strlen(sdp_pi->summary_str)) g_strlcat(sdp_pi->summary_str, "" "", 50);",25d09d0c9f86eef9cb126df5d04107b86c876d246dbd008451496a5a36f65701
wireshark-1.4.15/epan/dissectors/packet-sdp.c,574,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      if (strlen(sdp_pi->summary_str)) g_strlcat(sdp_pi->summary_str, "" "", 50);",25d09d0c9f86eef9cb126df5d04107b86c876d246dbd008451496a5a36f65701
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1479,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (len == strlen(sdp_media_attribute_names[i].name) &&,8a23a48854d82371e0a6b2f058957783784f487d398d436c040b527b538fe8b0
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1712,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (strncmp((char*)attribute_value, msrp_res, strlen(msrp_res)) == 0){",601b5c41c3923d347a591f292a7d6e831d78be041e94f2f5dd249f587224cb3b
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1716,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      address_offset = offset + (int)strlen(msrp_res);,6df440c238391d7bc7cee947dee354de814676349ea9c108575c91addcb146f9
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1737,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (strncmp((char*)attribute_value, h324ext_h223lcparm, strlen(msrp_res)) == 0){",8b5d9ba680076d4c796fc2a8524d4c9efa6567b9d71803c865afc14eb2e1db53
wireshark-1.4.15/epan/dissectors/packet-sdp.c,1747,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      len = (gint)strlen(attribute_value);,c6a1d5b1ceda99268cf71cf6ce839654d77abc2bf8dcd053bfe819b621c18d6c
wireshark-1.4.15/epan/dissectors/packet-sip.c,744,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,#define SIP2_HDR_LEN ((gint)strlen (SIP2_HDR)),6b4d02c95017ad0e9c5a9de17641ee85a569747cb4287512e2a82cd409ddf3c1
wireshark-1.4.15/epan/dissectors/packet-sip.c,3034,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                if (meth_len == strlen(sip_methods[i]) &&,364b58350da432662344c56635be099c6f9f9cf5e5060a24ffebce8788a8fce7
wireshark-1.4.15/epan/dissectors/packet-sip.c,3063,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				header_len == strlen(sip_headers[pos].compact_name) &&,bd385ff91e5f2ecfb7881bdc155f7a6c87e270e4872fa206b319cd75241879ca
wireshark-1.4.15/epan/dissectors/packet-sita.c,150,5,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				strlen(flags_string) ? "", "" : """",",572c36abbc5a533d4dae9e8ed34ec27b5b1167a102d6bb156d7318bb6645e5da
wireshark-1.4.15/epan/dissectors/packet-slsk.c,225,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	if (strlen(con_type) != 1) return ""Unknown"";",19b3d6cf669d78b97e1b1db13d09a0a08511d042f4a7340e2f06246288d2b3f4
wireshark-1.4.15/epan/dissectors/packet-smb-sidsnooping.c,296,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	for(sum=0,i=(int)strlen(sn->sid)-1;i>=0;i--){",efcb451058a71942342af32509bdbc45645c97d81e6e9e3331473cbafe037e3e
wireshark-1.4.15/epan/dissectors/packet-smb.c,2517,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(dn, strlen(dn)));",b01b7b7fbee10b12d1cc5bc5720e064ba229a644ed2187f43aebbbf48e043fcf
wireshark-1.4.15/epan/dissectors/packet-smb.c,2661,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(an, strlen(an)));",bc334461ba1790bb2d1e653b6726ad5dcb1ce7e96bb994273efc64c9245b7417
wireshark-1.4.15/epan/dissectors/packet-smb.c,2982,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	        fn_len,	fn, ""Old File Name: %s"", format_text(fn, strlen(fn)));",e245331d1e6fdffbf105f4d1bac9c7bc51661f435a55f36dc26c7b5f914f53a0
wireshark-1.4.15/epan/dissectors/packet-smb.c,2987,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,3001,52,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		fn_len,	fn, ""New File Name: %s"", format_text(fn, strlen(fn)));",6e722dee9d6eff3515657ac479a4f186f3fffe14c409c9e5c7601d0d8808239e
wireshark-1.4.15/epan/dissectors/packet-smb.c,3006,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,3051,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		fn_len,	fn, ""Source File Name: %s"", format_text(fn, strlen(fn)));",4f4d61a5e4357d95e2a080c0a5b31f3bdb5d53fde4f973a1fe7af9f5cc8f527f
wireshark-1.4.15/epan/dissectors/packet-smb.c,3056,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,3071,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,3075,85,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		col_append_fstr(pinfo->cinfo, COL_INFO, "", Destination Name: %s"", format_text(fn, strlen(fn)));",738fe9db91b84b483374ab32ce7df67302392f0b7b860da5320f108e0cfdfd07
wireshark-1.4.15/epan/dissectors/packet-smb.c,3158,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,3697,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,3768,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,3812,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,3832,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,3890,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,3909,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,3949,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,4027,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,4428,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,5270,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,5995,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,7016,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"						format_text(dn, strlen(dn)),",11565cd2b03feb016929de43b92452c53fa8c9872e07bd224bdb0d80339fb0fa
wireshark-1.4.15/epan/dissectors/packet-smb.c,7017,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"						format_text(an, strlen(an)));",bc334461ba1790bb2d1e653b6726ad5dcb1ce7e96bb994273efc64c9245b7417
wireshark-1.4.15/epan/dissectors/packet-smb.c,7363,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(an, strlen(an)));",bc334461ba1790bb2d1e653b6726ad5dcb1ce7e96bb994273efc64c9245b7417
wireshark-1.4.15/epan/dissectors/packet-smb.c,9804,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,10459,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,10503,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,10545,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,10597,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,10624,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,10754,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,10788,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,10809,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,10823,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,11464,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		proto_item_append_text(item, "": %s"", format_text(name, strlen(name)));",057a0c523416d8f8f1c689db4299c8c91f8d970c17699b51a4f45d1f9852a2dc
wireshark-1.4.15/epan/dissectors/packet-smb.c,11848,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		proto_item_append_text(item, "": %s"", format_text(fn, strlen(fn)));",5c29ef88196756be08de690006fd1602169c94c66a38791943a967ee89151ddd
wireshark-1.4.15/epan/dissectors/packet-smb.c,13423,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,13426,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-1.4.15/epan/dissectors/packet-smb.c,13529,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,13532,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-1.4.15/epan/dissectors/packet-smb.c,13613,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,13631,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-1.4.15/epan/dissectors/packet-smb.c,13718,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,13736,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-1.4.15/epan/dissectors/packet-smb.c,13849,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,13867,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-1.4.15/epan/dissectors/packet-smb.c,13969,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,13987,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-1.4.15/epan/dissectors/packet-smb.c,14110,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,14128,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-1.4.15/epan/dissectors/packet-smb.c,14189,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-1.4.15/epan/dissectors/packet-smb.c,14207,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-1.4.15/epan/dissectors/packet-smpp.c,1866,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            SET_ADDRESS(&(pinfo->src), AT_STRINGZ, 1+(int)strlen(src_str), src_str);",5a6d62097f2f8deae362b18348f3c37bf768db5811db5b9c0924121ed60680ed
wireshark-1.4.15/epan/dissectors/packet-smpp.c,1867,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            SET_ADDRESS(&(pinfo->dst), AT_STRINGZ, 1+(int)strlen(dst_str), dst_str);",e6cf7f4f4e41c3ea1781c16d09a1289288f9053b0dd32cc037295435624ab1c5
wireshark-1.4.15/epan/dissectors/packet-ssl-utils.c,1399,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    usage_len = strlen(usage);,ad8301a932828d1c7093cc9cb6a34adbed7c53b93ed360f168b7f2647331857a
wireshark-1.4.15/epan/dissectors/packet-sua.c,1980,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      SET_ADDRESS(&pinfo->src, AT_STRINGZ, 1+(int)strlen(sua_source_gt), sua_source_gt);",d500a6a9d743cd01c71d72c0f204ddfeb9dbb3f82896cefa054d7d56b38215ea
wireshark-1.4.15/epan/dissectors/packet-sua.c,1982,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      SET_ADDRESS(&pinfo->dst, AT_STRINGZ, 1+(int)strlen(sua_destination_gt), sua_destination_gt);",48ea7846e9ec366384e680894d9e803bb31eafa5be8a35fbac3a49676342e937
wireshark-1.4.15/epan/dissectors/packet-syslog.c,201,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (msu_hex_dump && (len = strlen(msu_hex_dump))) {,735225f2e40fdbbfd6f8c46fd5a7845d06c4f202d81a9b0fc4eb25316e565f01
wireshark-1.4.15/epan/dissectors/packet-tacacs.c,1130,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	md5_len = 4 /* sizeof(session_id) */ + strlen(key),d70a213bb6373576d7055f512dfa975bc509e65da1b6c762aa7a3de9b235d207
wireshark-1.4.15/epan/dissectors/packet-tacacs.c,1139,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	memcpy(mdp, key, strlen(key));",35295c06a91fe8861190f000057666cdba1f708e0496bb43f2c31d15e1e6f795
wireshark-1.4.15/epan/dissectors/packet-tacacs.c,1140,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	mdp += strlen(key);,b81a04d1d2506da4eca14bbf29c9e453d669be28408d0f0227531153037c1022
wireshark-1.4.15/epan/dissectors/packet-tds.c,1263,92,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    proto_tree_add_text(tree, tvb, offset, msg_len, ""Error: %s"", format_text((guchar*)msg, strlen(msg)));",ce7d7ccfc1e6845ca1ae25d3669832243d274ac70a631a8cfe06ce48003da1e9
wireshark-1.4.15/epan/dissectors/packet-tds.c,1328,91,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    proto_tree_add_text(tree, tvb, offset, msg_len, ""Text: %s"", format_text((guchar*)msg, strlen(msg)));",d29122fafd2a14cb5fd82ebc906b270091012b2a5cd3d920464d119d47ab43b9
wireshark-1.4.15/epan/dissectors/packet-tivoconnect.c,119,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            length = (int)strlen(field) + 1;,eac70eb0871ac02b8a687c55fb1cae12b9dde8080a46b638030bf3e74bcd739e
wireshark-1.4.15/epan/dissectors/packet-tivoconnect.c,126,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            fieldlen=(int)strlen(field)+1;,43145ce01cd991c46c36ee64bcfdb93cd2cc667c1ba31f5aa343e8c3cc0864e0
wireshark-1.4.15/epan/dissectors/packet-xcsl.c,165,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if ( strlen(str) == 0 ) {,fa15c10e4736c83d0156b45f1c1ca71368902a2c5100a538acabd1f36e266cc7
wireshark-1.4.15/epan/dissectors/packet-xml.c,1252,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				namelen = (int)strlen(filename);,ad70dc70fd3c8f2ac615163521544189a645257f1f0112edc482631ba817d7b6
wireshark-1.4.15/epan/dissectors/packet-zbee-nwk.c,434,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    SET_ADDRESS(&pinfo->dst, AT_STRINGZ, (int)strlen(dst_addr)+1, dst_addr);",84ba4e1d7c4bbc18d9d9908f8657d4f26fd9453d8f95c2d70ee49429bca94170
wireshark-1.4.15/epan/dissectors/packet-zbee-nwk.c,435,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    SET_ADDRESS(&pinfo->net_dst, AT_STRINGZ, (int)strlen(dst_addr)+1, dst_addr);",4feb953be39efaa63c716982eb635678f0a264a7c6b77437a62fa23058d250c2
wireshark-1.4.15/epan/dissectors/packet-zbee-nwk.c,458,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    SET_ADDRESS(&pinfo->src, AT_STRINGZ, (int)strlen(src_addr)+1, src_addr);",2e3e207d805f1c1697fb738b28329fee5e082a0057eb1528a33faf43f2f19ed0
wireshark-1.4.15/epan/dissectors/packet-zbee-nwk.c,459,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    SET_ADDRESS(&pinfo->net_src, AT_STRINGZ, (int)strlen(src_addr)+1, src_addr);",25116e967e8ffc81b75c19d2a612174bbb862000bedc37a4f6c4ab9a446e61d3
wireshark-1.4.15/epan/dtd_parse.c,878,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( Dtd_Parse_in )) != EOF && c != '\n'; ++n ) \,f44d9953d38b06972c4ce6323d6c756aa69080b7fa21b154565144cbba9699b8
wireshark-1.4.15/epan/dtd_parse.c,2088,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return Dtd_Parse__scan_bytes(yystr,strlen(yystr) );",d69a4d75d8e545bedcf59253c4cadff065b252e127f753553f301a5455350f7a
wireshark-1.4.15/epan/dtd_preparse.c,778,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( Dtd_PreParse_in )) != EOF && c != '\n'; ++n ) \,2eb41622d017476ea6ab2bdc0c48638994d6056a4e9de52be8b204f77d09d3a4
wireshark-1.4.15/epan/dtd_preparse.c,1770,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return Dtd_PreParse__scan_bytes(yystr,strlen(yystr) );",403ad340f62e50ea4e8dc6c9f9564cabf687f844e6162218716c88d0d74b3bfe
wireshark-1.4.15/epan/emem.c,830,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	guint len = (guint) strlen(src);,f9a5cc6c49314f1daadd01305839a03fd2b21c0cbc4307671311f89956e35d9d
wireshark-1.4.15/epan/emem.c,907,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	str_len = (guint) strlen(splitted);,6b5de47a0b1b11701cad28d296b8bdc0e563bfc39af724a6a9c95dcaa312be18
wireshark-1.4.15/epan/emem.c,908,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	sep_len = (guint) strlen(sep);,3ee0f3cb48c32085cd522007f728831ebbc168e0657173dd4b9d823247fa85c2
wireshark-1.4.15/epan/emem.c,985,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	len = (guint) strlen(src);,6cde5fbfcacbacfe779b4d091fea13856ec77c6e6ec8db8570266eeff0d51fdb
wireshark-1.4.15/epan/emem.c,1778,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	guint32 len = (guint32) strlen(k);,38f9dd2501e546f34260ff7909e3228a0d1a6a97fe3c81827b72bc3bb8edd9c1
wireshark-1.4.15/epan/emem.c,1830,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	guint32 len = (guint) strlen(k);,4018a2e92cdd1ffb819e34bef0db765f5368e68cdf03e75111a53c2134129b62
wireshark-1.4.15/epan/emem.c,2035,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	strbuf = ep_strbuf_sized_new(next_size(0, init?strlen(init)+1:0, 0), 0);  /* +1 for NULL terminator */",512f9501b03641b6da97890450d2ae62cbffcea3b44778e7f95ae27e8d5770e8
wireshark-1.4.15/epan/filesystem.c,316,4,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"			strncpy(path, prog_pathname, progfile_dir_len);",4934a6acc25882933c911600c4535f1fc96581377282ec629f049c8d722a5c3a
wireshark-1.4.15/epan/filesystem.c,347,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		msglen = strlen(msg);,06f2261d4f67657ababb56ff53695ffb23d49a4d76995d905f09974ee88e9ed8
wireshark-1.4.15/epan/filesystem.c,449,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,					path_end = path_start + strlen(path_start);,3f3fb9022173dd3bf1a070c217a441083d92d32d18f79560ede29ce3b8f9ddde
wireshark-1.4.15/epan/filesystem.c,452,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				    + strlen(arg0) + 1);,8d76d5a7b41efb9acee5e470ca2bacf5739cb6897fc866b23e39be36bb9e48bd
wireshark-1.4.15/epan/filesystem.c,455,5,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",Risk is low because the source is a constant character.,CWE-120,"				strncat(path, ""/"", 2);",0541f208fce22dd98cba504148b2fa77fab419a9cf4ecfab37a91c76ec24e830
wireshark-1.4.15/epan/filesystem.c,456,5,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"				strncat(path, arg0, strlen(arg0) + 1);",c68f4f0f50f8f3a282ede4eec4ebd11f7b7125fe2125a24cd816ff312c6a9eb6
wireshark-1.4.15/epan/filesystem.c,456,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				strncat(path, arg0, strlen(arg0) + 1);",c68f4f0f50f8f3a282ede4eec4ebd11f7b7125fe2125a24cd816ff312c6a9eb6
wireshark-1.4.15/epan/filesystem.c,949,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (profilename && strlen(profilename) > 0 &&,8ed6da76a05cff3034de23f993862bb17e8ca5f22378be0cadc856e3425bb491
wireshark-1.4.15/epan/filesystem.c,1090,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (profilename && strlen(profilename) > 0 &&,8ed6da76a05cff3034de23f993862bb17e8ca5f22378be0cadc856e3425bb491
wireshark-1.4.15/epan/filesystem.c,1230,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		pf_dir_parent_path_len = strlen(pf_dir_parent_path);,ec347c801f4fef225044d5f78d268d315b25a6259453f74862e98226c258d9e3
wireshark-1.4.15/epan/follow.c,380,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      sc->dlen = (guint32) strlen(dummy_str);,c64fe86c20f1472ec9191f039b0f0a3d4a066732d2ba4d996e6f78d7b0b948a0
wireshark-1.4.15/epan/ftypes/ftype-bytes.c,118,2,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"	strncpy(buf,oid_str,OID_REPR_LEN(fv));",7c04f643a68e1f2970fbb49e0794f60fca87c34f65d88f8e4ace3ab2c5ccf9a0
wireshark-1.4.15/epan/ftypes/ftype-bytes.c,192,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	g_byte_array_append(bytes, (guint8 *)s, (guint)strlen(s));",c7862f143ef91f00062822c975c94859d254f93bbe4efc90b7f7edf8df8df343
wireshark-1.4.15/epan/ftypes/ftype-guid.c,53,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    n = strlen(s);,629d51c605602308d650d5cfd2293e04902ec1bf31140ac38541188f84e3d055
wireshark-1.4.15/epan/ftypes/ftype-guid.c,54,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (n != strlen(fmt)),61790d62d99225a442d7472b755d947122ad47ca392c16d5161dab6998cbdbf0
wireshark-1.4.15/epan/ftypes/ftype-guid.c,67,5,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"    strncpy(digits, p, 8); ",6020ab85d797d6623774ff0abc4707ecd62600392d5142aaa168dc0b5f005a52
wireshark-1.4.15/epan/ftypes/ftype-guid.c,71,5,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"    strncpy(digits, p, 4); ",002adea87ded20940e4db85d9cadcdda1c9394218784541bc415cd7ba1c4d921
wireshark-1.4.15/epan/ftypes/ftype-guid.c,75,5,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"    strncpy(digits, p, 4); ",002adea87ded20940e4db85d9cadcdda1c9394218784541bc415cd7ba1c4d921
wireshark-1.4.15/epan/ftypes/ftype-pcre.c,148,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	return (int)strlen(fv->value.re->string);,c164f8fea55ca399e5662985cea2036e709635bf04eb88eaf4192e2014fbbeec
wireshark-1.4.15/epan/ftypes/ftype-pcre.c,283,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	return (int)strlen(g_regex_get_pattern(fv->value.re));,f99bbb398006fad0f2e3488e5142099307400bb430ab209dcd58a19044bee6e3
wireshark-1.4.15/epan/ftypes/ftype-string.c,74,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			return (int)strlen(fv->value.string);,4b78d47986ba57e40203771dac01093aac72b707edb71dcf662e43edadbff66b
wireshark-1.4.15/epan/ftypes/ftype-string.c,188,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	return (guint)strlen(fv->value.string);,0a9d7ff996c9898974cd3dbe402eb80a05db35df21f614d2166dbc7a88361d17
wireshark-1.4.15/epan/ftypes/ftype-string.c,245,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (strlen(fv_b->value.string) == 0) {,c4beca833947ba20a4ac845990a5643dbdb59cabc7a0ad383750e7b65b80a3c1
wireshark-1.4.15/epan/ftypes/ftype-string.c,280,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			(int)strlen(str),	/* ... and its length */",e07d5b13eaf7b9056964b55a7d8ceab3f46b3c5eed5fdbc6f9bff58e5f412cf3
wireshark-1.4.15/epan/ftypes/ftype-string.c,311,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			(int)strlen(str),	/* ... and its length */",e07d5b13eaf7b9056964b55a7d8ceab3f46b3c5eed5fdbc6f9bff58e5f412cf3
wireshark-1.4.15/epan/ftypes/ftype-time.c,128,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	ndigits = (int)strlen(startp);,d79e4b9640b559a4fcb9d15418a5f5c004c8430e55e7fc6211a2171d7d586b51
wireshark-1.4.15/epan/ftypes/ftype-time.c,324,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	return (int)strlen(rep) + 2;	/* 2 for opening and closing quotes */,278af9c7c49706abcba6634153e7e7e99832fd638ce6e1b642243201bef259c8
wireshark-1.4.15/epan/ftypes/ftype-time.c,341,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	return (int)strlen(rep);,bf326508e208bdc55fd8c71236d6ac7d5af17c8ee8f7826829ba3d4a005a6f1f
wireshark-1.4.15/epan/ftypes/ftype-tvbuff.c,85,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	private_data = g_memdup(s, (guint)strlen(s));",a05cfd5fe90deb9f3c23b32cb7a2b05263806f9be73945c5d7f1b2f5e3351410
wireshark-1.4.15/epan/ftypes/ftype-tvbuff.c,87,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			(guint)strlen(s), (gint)strlen(s));",e217d9cdff09bef3e43141b488cbd6bbbf19a20df82bb34abb72a7bb7ff45410
wireshark-1.4.15/epan/ftypes/ftype-tvbuff.c,87,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			(guint)strlen(s), (gint)strlen(s));",e217d9cdff09bef3e43141b488cbd6bbbf19a20df82bb34abb72a7bb7ff45410
wireshark-1.4.15/epan/guid-utils.c,74,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			return (int) strlen(uuid_name);,9efa9b6e85ce0956579fc235273710e137a7005f6102b84c00af867da7f35f92
wireshark-1.4.15/epan/oids.c,1151,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (strlen(path) > 0 ) {,d3f40df35d49b245a2b30dd7f43464789d145360f8dcb6c7b10f35a67c7b741d
wireshark-1.4.15/epan/osi-utils.c,69,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    cur += strlen( cur );,eee02d90e145666187ef034f1314eca745fd8d9e8e40a4f862af9f9240e2b5ea
wireshark-1.4.15/epan/osi-utils.c,71,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    cur += strlen( cur );,eee02d90e145666187ef034f1314eca745fd8d9e8e40a4f862af9f9240e2b5ea
wireshark-1.4.15/epan/prefs.c,561,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		g_assert((strncmp(name, module->name, strlen(module->name)) != 0) ||",040dbb9c8c8268ad2f76fd45275ef23c58ece0ec7bfa5b845fab12d660d45d03
wireshark-1.4.15/epan/prefs.c,562,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			(((name[strlen(module->name)]) != '.') && ((name[strlen(module->name)]) != '_')));,d1ade775c4e4dbb621e86fe8f5484c3b0c392f7df0c168b19f8c99185b701fea
wireshark-1.4.15/epan/prefs.c,562,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			(((name[strlen(module->name)]) != '.') && ((name[strlen(module->name)]) != '_')));,d1ade775c4e4dbb621e86fe8f5484c3b0c392f7df0c168b19f8c99185b701fea
wireshark-1.4.15/epan/prefs.c,935,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    str_len = strlen(str);,b4129ef5cd4d9a1d2eaa90e1ffaa81272a308969eadf87d34f2854dec2d4c80d
wireshark-1.4.15/epan/prefs.c,950,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    fmt_len = strlen(quoted_str) + 4;,a6c7d0a2c6ec6bfbd95e35896e0b84ac650e6af991c5689c3bcc1f56585395d5
wireshark-1.4.15/epan/prefs.c,1508,19,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",  while ((got_c = getc(pf)) != EOF) {,307b79df01363ee5184a3183f47843a876464f700ce1dedb6ffc79d610a14de6
wireshark-1.4.15/epan/prefs.c,1725,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		len = strlen (name);,19d06c780b60be0639c83846a3dc98e0e6368838f08ed2958695778f2784fea5
wireshark-1.4.15/epan/prefs.c,1727,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			if (strlen (tok) == len && strcmp (name, tok) == 0) {",9a77973bd07a39a7f3ae53bd403110d844a5bf370dd5d0e31cd90e4da383777d
wireshark-1.4.15/epan/prefs.c,1749,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		len = strlen (fmt);,042e210b66f03afb17913723492bdf27ef191efd36ea72d4d63ddc64d514fccf
wireshark-1.4.15/epan/prefs.c,1752,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			if (strlen (tok) == len && strcmp (fmt, tok) == 0) {",41955be694d3166c040e04621cc882c239780525d8f86e8641d6d38ee5f71b82
wireshark-1.4.15/epan/prefs.c,1774,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		len = strlen (name);,19d06c780b60be0639c83846a3dc98e0e6368838f08ed2958695778f2784fea5
wireshark-1.4.15/epan/prefs.c,1776,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			if (strlen (tok) == len && strcmp (name, tok) == 0) {",9a77973bd07a39a7f3ae53bd403110d844a5bf370dd5d0e31cd90e4da383777d
wireshark-1.4.15/epan/prefs.c,2002,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  size_t cust_format_len = strlen(cust_format);,ce9b6bf46b5e367215631fcb14ec8e1f082efee22a2ae4fbf3ae6b83f595e8f2
wireshark-1.4.15/epan/prefs.c,2051,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if ((strlen(col_l_elt->data) <= cust_format_len) ||,2754608b77ce58fb0e494a1043c88c66cc3f1475881b81763ca3aec01ccc125d
wireshark-1.4.15/epan/prefs.c,2079,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if ((strlen(col_l_elt->data) > cust_format_len) &&,e69af6e0dfbad2e0821069a8e8ca900e12001f4309fbd9aae0d596043cf20cfc
wireshark-1.4.15/epan/prefs.c,3120,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if (strlen (cols_hidden->str)) {,c8ed81a2d8d94bab1530d85a568ab37befbf6996ccc82277f78b60cea3292152
wireshark-1.4.15/epan/proto.c,3579,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			g_strlcpy(result, format_text(bytes, strlen(bytes)), size);",a41af96d6e129dbbe2f622a69097021412eacea1220a0fc706e242a17f92a881
wireshark-1.4.15/epan/proto.c,3671,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		curlen = strlen(fi->rep->representation);,f0357a3c1890e8ccd38f278060cf108b16753d488d64cf02c8e5f53da007ac00
wireshark-1.4.15/epan/proto.c,3995,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	for (i = 0; i < strlen(filter_name); i++) {,8d85e379d7014231260bd5207ecec18b60ef8f104334aa7cf365df4a023dc230
wireshark-1.4.15/epan/proto.c,4834,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					 format_text(bytes, strlen(bytes)));",be55340ce87c5009928b682051bf0db0f8ef1113f76e870d9f077385e83f0917
wireshark-1.4.15/epan/proto.c,4841,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					   format_text(bytes, strlen(bytes)));",be55340ce87c5009928b682051bf0db0f8ef1113f76e870d9f077385e83f0917
wireshark-1.4.15/epan/proto.c,6126,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			else if (strlen(blurb) == 0),1dc7f66bd131f8b716f7ad846c5d98b5e29884c5bd886ad563410ef4aafe225e
wireshark-1.4.15/epan/proto.c,6322,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	abbrev_len = (int) strlen(hfinfo->abbrev);,4219943b9cab94deb2b022a51f03af8387713c970f82c186047232a7be503409
wireshark-1.4.15/epan/radius_dict.c,1180,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( Radiusin )) != EOF && c != '\n'; ++n ) \,c9d6396ba955606ecd25c9b88b024b93fe755bd1d6b20d63c9bb108cb7028eaf
wireshark-1.4.15/epan/radius_dict.c,2492,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return Radius_scan_bytes(yystr,strlen(yystr) );",55612189d2b06722876aa9261613cb6e816a29af79d5551fbe75d81f982b7d25
wireshark-1.4.15/epan/req_resp_hdrs.c,184,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,					len = (guint) strlen(header_val);,e7c70bfaa2a76faeda3d5f0a999af680e10ded3553735c01a85880d33997ee20
wireshark-1.4.15/epan/stat_cmd_args.c,92,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		if(!strncmp(sca->cmd,optstr,strlen(sca->cmd))){",fe6f67bad6919060e08013544891d6993df843a3876f0a1f82772c1f355e20b4
wireshark-1.4.15/epan/stats_tree.c,101,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	len = (guint) strlen(node->name) + indent;,9ee12894cb278f62a11094f2300ce64e89998e0dd4b6e18e644e06bd521eadc3
wireshark-1.4.15/epan/strutil.c,597,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    for (i = 0; i < strlen(reserved); i++) {,40874b86cdf1bef2cd1127fdad1b12783ac439fe51832063a954977b6a1a1038
wireshark-1.4.15/epan/strutil.c,888,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    out_string = g_malloc(strlen(string) + 1);,1fed7da15b9ca94fd05f7bf2888ccd24fccd721d8d14e6300e776d710640c1dd
wireshark-1.4.15/epan/strutil.c,900,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	gsize hlen = strlen(haystack);,0627c8b9b8bdb1c6f7631df96fb301c325bb965dc29fcadda6173f1b44ef3a5f
wireshark-1.4.15/epan/strutil.c,901,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	gsize nlen = strlen(needle);,49a0119c31963ee4fda39b068afa46f5fe4b808110f8b4f79b4dd84cbdb5ef46
wireshark-1.4.15/epan/strutil.c,1051,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	q = new_str = g_malloc (strlen(str) * 2 + 1);,8c38075e3c74e95e708eddd0040ae0175cf43468e0d00f5c0ff605a26c9f05d5
wireshark-1.4.15/epan/strutil.c,1079,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	q = new_str = g_malloc (strlen(str) + 1);,c3c5656070d934c03a7836a68eabec055200ad8eb1ebbf9182c6a20e57abd0e4
wireshark-1.4.15/epan/to_str.c,893,4,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"			strcat(str, "" "");",60fb293b6da55d904c3be8d02567e1d4f1ce5077df2ffb59598cf96e94ade441
wireshark-1.4.15/epan/to_str.c,895,3,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"		strcat(str,""."");",150bff10ae06d67d69372f1ecb89d6eaef5cab2fe78fdf78ee35ebd59bb64330
wireshark-1.4.15/epan/to_str.c,901,4,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"			strcat(str, "" "");",60fb293b6da55d904c3be8d02567e1d4f1ce5077df2ffb59598cf96e94ade441
wireshark-1.4.15/epan/to_str.c,904,4,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"			strcat(str, "" "");",60fb293b6da55d904c3be8d02567e1d4f1ce5077df2ffb59598cf96e94ade441
wireshark-1.4.15/epan/to_str.c,909,4,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"			strcat(str, ""1"");",006b14e33aea0bc78153f5ef5a6fff556badbcf3bc2862447e93ce9381fb8858
wireshark-1.4.15/epan/to_str.c,911,4,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"			strcat(str, ""0"");",212c71b6c3bbbc5fc1c61246e1a71557212852e9bb2e08088afb9643cbddd8b0
wireshark-1.4.15/epan/to_str.c,918,4,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"			strcat(str, "" "");",60fb293b6da55d904c3be8d02567e1d4f1ce5077df2ffb59598cf96e94ade441
wireshark-1.4.15/epan/to_str.c,920,3,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"		strcat(str,""."");",150bff10ae06d67d69372f1ecb89d6eaef5cab2fe78fdf78ee35ebd59bb64330
wireshark-1.4.15/epan/tvbparse.c,392,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    w->len = (int) strlen(str);,68f9806553c514c722076c6b7c95d11b36a2d952d4c1f9dfa1fca709c7d17ae6
wireshark-1.4.15/epan/tvbparse.c,431,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    w->len = (int) strlen(str);,68f9806553c514c722076c6b7c95d11b36a2d952d4c1f9dfa1fca709c7d17ae6
wireshark-1.4.15/epan/uat.h,352,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			*out_len = (unsigned)strlen((((rec_t*)rec)->field_name)); \,2fc54d83c4dd3a3b398eca8fb78c2c9fed4e88ae5b2cd2dfd1645b2c9ddd9c9b
wireshark-1.4.15/epan/uat.h,383,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		*out_len = (unsigned)strlen(*out_ptr); \,e11115f87bd62ed7654a20a2c1b1337b2c3e8a5334de185440ebafafe526a15e
wireshark-1.4.15/epan/uat.h,420,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	*out_len = (unsigned)strlen(*out_ptr); },f64d63b63898a51d76c86fb01e3299954b61e3427d54716616b8ac0a06566c5e
wireshark-1.4.15/epan/uat.h,435,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	*out_len = (unsigned)strlen(*out_ptr); },f64d63b63898a51d76c86fb01e3299954b61e3427d54716616b8ac0a06566c5e
wireshark-1.4.15/epan/uat.h,459,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	*out_len = (unsigned)strlen(default_str);\,bbba3ee6d4f07cb8cb0d16b644e4453ac8d42a8f5e10adeed6b178e2c4a6e71a
wireshark-1.4.15/epan/uat.h,463,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			*out_len = (unsigned)strlen(*out_ptr); return; } } },a4863c3becff1e10e6b68522aaaa1b718cc82859be75fff80a82eb4722883276
wireshark-1.4.15/epan/uat.h,489,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		*out_len = (unsigned)strlen(*out_ptr); \,e11115f87bd62ed7654a20a2c1b1337b2c3e8a5334de185440ebafafe526a15e
wireshark-1.4.15/epan/uat.h,509,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		*out_len = (unsigned)strlen(*out_ptr); \,e11115f87bd62ed7654a20a2c1b1337b2c3e8a5334de185440ebafafe526a15e
wireshark-1.4.15/epan/uat_load.c,622,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		guint pslen = strlen(parse_str); \,392bd5095fb600c8c70b88f7667a4c34fd640d5c9d06e57dd34ca214617613a3
wireshark-1.4.15/epan/uat_load.c,763,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( uat_load_in )) != EOF && c != '\n'; ++n ) \,07973188e44379c93da85444bb773a0519d8772a7426e7961e51b333e2c62925
wireshark-1.4.15/epan/uat_load.c,1834,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return uat_load__scan_bytes(yystr,strlen(yystr) );",58996edc360221a10eee62d40cd9b3dcfdf9acf87fa3356ff97f69fb5e072519
wireshark-1.4.15/file.c,2737,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = (int) strlen(cf->cinfo.col_data[i]);,18839c326ae46f745890ec4e684d0b5b4bfc60aa0c8faf927585c3cbe9649e10
wireshark-1.4.15/file.c,2869,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        callback_args.col_widths[i] = (gint) strlen(cf->cinfo.col_title[i]);,038785a096c655f6cad491f7625b58a93e5807a576824b203b00baf973cda337
wireshark-1.4.15/file.c,2876,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = (int) strlen(cf->cinfo.col_title[i]);,be788d25859bacb97af2a152a58651501aac7793bc56fe8d23322e8456dd83f9
wireshark-1.4.15/file.c,3424,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  mdata.string_len = strlen(string);,da108c533e2b9b03cfae15437657a598392396fa0475a6e05da8e057a1f268fc
wireshark-1.4.15/file.c,3489,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  label_len = strlen(label_ptr);,1081943a3f538f0963c614f9524f2dc805bbe32edec7cb1f32e1991acf0d906c
wireshark-1.4.15/file.c,3517,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  mdata.string_len = strlen(string);,da108c533e2b9b03cfae15437657a598392396fa0475a6e05da8e057a1f268fc
wireshark-1.4.15/file.c,3552,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      info_column_len = strlen(info_column);,88c76505700e7e550654e4b477af30bc5aed1f56f3a97de74dd04153fdf6269f
wireshark-1.4.15/fileset.c,79,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    size_t      minlen = strlen(""_00001_20050418010750"");",631a10b48686507a6ec22ef74738c62a541b5d3c86efec64172cf57e28467390
wireshark-1.4.15/fileset.c,89,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        pfx = filename + strlen(filename);,1ff4ce1f99ab2a9d64a38e13238b61425a255e807be83d87146b4701ad71b884
wireshark-1.4.15/fileset.c,95,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    baselen = strlen(filename);,8570197a33116e08927aa3535cc9cda55c623f29a97774c75dfec4b28a932a8a
wireshark-1.4.15/fileset.c,137,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    size_t       minlen = strlen(""_00001_20050418010750"");",401c9cd05c5fee50eb35295a56c3cd34f9d1ec324f7b571c7b3ae91f20c9d9f6
wireshark-1.4.15/fileset.c,150,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (!pfx1) pfx1 = dup_f1 + strlen(dup_f1);,4b79585be5ba5f81bae61975782c96efd49263ef32b64d2b4b1e2aaf6c829780
wireshark-1.4.15/fileset.c,151,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (!pfx2) pfx2 = dup_f2 + strlen(dup_f2);,53779e740bc18f5c88ae29721c791fc9420e546d9f5ec094727d8c46300b4ac9
wireshark-1.4.15/filters.c,229,17,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",    while ((c = getc(ff)) != EOF && isspace(c)) {,0e7b452771bdaa53d36d3fa7e9f9a0d100ccd70d6088368af2f2c73f1674f84c
wireshark-1.4.15/filters.c,245,6,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",	c = getc(ff);	/* skip to the end of the line */,986bef9819945e1e8d6b2c1687872b22eff8abf3d70d7214d2751cf32de77251
wireshark-1.4.15/filters.c,252,11,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",      c = getc(ff);,57b021ad5f6e1ebf727b2de509697b2cb37681fb30d6e4e9c49d67e0cd61650d
wireshark-1.4.15/filters.c,267,6,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",	c = getc(ff);,57b021ad5f6e1ebf727b2de509697b2cb37681fb30d6e4e9c49d67e0cd61650d
wireshark-1.4.15/filters.c,298,17,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",    while ((c = getc(ff)) != EOF && isspace(c)) {,0e7b452771bdaa53d36d3fa7e9f9a0d100ccd70d6088368af2f2c73f1674f84c
wireshark-1.4.15/filters.c,333,11,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",      c = getc(ff);,57b021ad5f6e1ebf727b2de509697b2cb37681fb30d6e4e9c49d67e0cd61650d
wireshark-1.4.15/gtk/capture_dlg.c,1484,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen(rh->remote_host) == 0),663562dd766593fc1c690ae780cc2c1f9186165b6408180679cdb113cce14c31
wireshark-1.4.15/gtk/capture_dlg.c,2676,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (global_capture_opts.auth_type == CAPTURE_AUTH_PWD && strlen(rh->auth_username) == 0) {,315c9370d570d4e394f9c3b4877a738f22e803861335043c29db427f784ef6dc
wireshark-1.4.15/gtk/capture_file_dlg.c,385,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if(strlen(value) != 0) {,70a1777c45f155e8f48b0aa746c2ff4defa5e082a93e5d26e4ef0e320bf43efd
wireshark-1.4.15/gtk/capture_if_details_dlg_win32.c,927,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if(strlen(value) != 0) {,70a1777c45f155e8f48b0aa746c2ff4defa5e082a93e5d26e4ef0e320bf43efd
wireshark-1.4.15/gtk/cfilter_combo_utils.c,75,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,     if (strlen(li->data)) {,c7a3e0e8180ac3c2dff7709ca5840a16ae361c0e393f0ac1a24125f689961d46
wireshark-1.4.15/gtk/conversations_table.c,309,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (filter && strlen(filter)) {,2288ea41d1f4ac8dcb848c3301b9aded13d79d81dc81a88ecbc3bd8017b14e2d
wireshark-1.4.15/gtk/dfilter_expr_dlg.c,794,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                             (gint) strlen(hfinfo->abbrev), &pos);",f9c1e6e12daa9672ed20f972ed1b84be1c9a64dc7e7d24158e8b996b4326f522
wireshark-1.4.15/gtk/dfilter_expr_dlg.c,798,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                 stripped_range_str, (gint) strlen(stripped_range_str), &pos);",917a93616c1c695bea97bddce10c4d29f6ff55ebac90041be9aed65c3736cc34
wireshark-1.4.15/gtk/dfilter_expr_dlg.c,805,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                 (gint) strlen(item_str), &pos);",7271f514f4e7f1b2b8626b79b6c3999f3a5390eecee432e0a1bdc1198cab0ab6
wireshark-1.4.15/gtk/dfilter_expr_dlg.c,841,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                 stripped_value_str, (gint) strlen(stripped_value_str), &pos);",77b66d3eae8036898d501331b5c81c4c32e7a508c5ac2ccd85dc33cef7cf51c0
wireshark-1.4.15/gtk/expert_comp_table.c,247,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-1.4.15/gtk/expert_comp_table.c,253,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-1.4.15/gtk/expert_comp_table.c,259,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-1.4.15/gtk/expert_comp_table.c,265,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-1.4.15/gtk/export_object.c,207,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ( gstr->len >= (MAXFILELEN - (strlen(gstr_tmp->str) + ext_str->len)) ),aa53dbdeb0fd1b348e4d8ab161e0b5e104837dd1c531015874eb0374f07a24c0
wireshark-1.4.15/gtk/export_object.c,208,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			gstr = g_string_truncate(gstr, MAXFILELEN - (strlen(gstr_tmp->str) + ext_str->len));",4b6ad7cd5c8dfab7a3f71b9b2df49ed8298c39946d6ba4b1c978403b0d028181
wireshark-1.4.15/gtk/export_object.c,214,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ( gstr->len >= (MAXFILELEN - strlen(gstr_tmp->str)) ),59f6b2f02652ac760f415697e925da8128a226ce08e145536a91363c55b1f3f7
wireshark-1.4.15/gtk/export_object.c,215,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			gstr = g_string_truncate(gstr, MAXFILELEN - strlen(gstr_tmp->str));",8794932716f341d4e9d9a1633bd00f89c14c48e4ac67ffb5746e85959d66fcae
wireshark-1.4.15/gtk/export_object.c,296,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			if ((strlen(save_in_path) < MAXFILELEN)) {,6c4845ec35abb3e85e0e5823ab17fcf3e7df71c0257f2c829eee621c828befe2
wireshark-1.4.15/gtk/export_object.c,300,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"							MAXFILELEN - strlen(save_in_path), count);",bd807b603c078781a98b0d89a4db7dc6817996c9c4cfcd9d7abb16d267e09be0
wireshark-1.4.15/gtk/export_object.c,309,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"							MAXFILELEN - strlen(save_in_path), count);",bd807b603c078781a98b0d89a4db7dc6817996c9c4cfcd9d7abb16d267e09be0
wireshark-1.4.15/gtk/file_dlg.c,124,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    size_t filename_len = strlen(filename);,aa3741e08ec8e33c34341ba844d4886ef7be407a68c1053eec99b07919d5e9a9
wireshark-1.4.15/gtk/file_dlg.c,231,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        len = strlen(dirname);,5af2fb201fa40a541497bb75ba9597d575b2cc63e0688e5b52bbdb66c47e6bdb
wireshark-1.4.15/gtk/file_dlg_win32.c,307,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if(file_last_dot == NULL || strlen(file_name8->str)-(file_last_dot-file_name8->str) > 5+1) {,79d2b28b57c8dbc4c146d9bcd86455c55e25dd244379feb90f73656bdc555546
wireshark-1.4.15/gtk/file_dlg_win32.c,960,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (preview_file != NULL && strlen(preview_file) > 0) {,85027de1090925df0caa5a6b7a81a7a88f78c90a5a3f53eaf3f94676f81b2340
wireshark-1.4.15/gtk/file_dlg_win32.c,1318,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        sa = g_array_append_vals(sa, str16, (guint) strlen(""All Files (*.*)""));",722e58a8041f1896120320f4fb2b16a94e5d1e164401fefee62b09474eed8f87
wireshark-1.4.15/gtk/file_dlg_win32.c,1321,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        sa = g_array_append_vals(sa, str16, (guint) strlen(""*.*""));",3cb7bd3ffcc7cfd87e402307758533a9785aa0c1f1e7d194d7c8df1a7b2312a3
wireshark-1.4.15/gtk/file_dlg_win32.c,1341,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        sa = g_array_append_vals(sa, str16, (guint) strlen(str->str));",c17f3772b8faa2ba87bdc13ce210d234bf9f61442fdb1fcf638af763014ed54d
wireshark-1.4.15/gtk/file_dlg_win32.c,1346,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        sa = g_array_append_vals(sa, str16, (guint) strlen(str->str));",c17f3772b8faa2ba87bdc13ce210d234bf9f61442fdb1fcf638af763014ed54d
wireshark-1.4.15/gtk/filter_autocomplete.c,97,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        op_len = (int) strlen(logic_ops[i]);,6f308516771b9a9b727a52e6a09d048cc90f7b259dad602631ffd86ab05d60b1
wireshark-1.4.15/gtk/filter_autocomplete.c,136,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  pch = filter_str + strlen(filter_str);,5f4a0c1d7fa89efc480c9c6598bf91a350f39b52fa6ad0a4671a19903a96a5cd
wireshark-1.4.15/gtk/filter_autocomplete.c,152,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    pch = (selected_str + strlen(pch));,8d02f4147b706159a16628872f215d679afce2dbb8cdcb72dbff84d9e09ebd30
wireshark-1.4.15/gtk/filter_autocomplete.c,155,65,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  gtk_editable_insert_text(GTK_EDITABLE(filter_te), pch, (gint) strlen(pch), &pos);",3a27e233ef592173a5a59ee8a3b44dd0da8e225b9d78f4d77cb5cc50fe683178
wireshark-1.4.15/gtk/filter_autocomplete.c,212,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  gint pos2 = pos1 + (gint) strlen(string) - str_len;,fa21067e11c54c807960d8a712593e54f3fe25fbcfd348454ef2c2b535e878ec
wireshark-1.4.15/gtk/filter_autocomplete.c,267,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  unsigned int str_len = (unsigned int) strlen(str);,0027cab29da698482952a0bd456ca7d9e62f359ffc226512c62a697d06dbb63d
wireshark-1.4.15/gtk/filter_autocomplete.c,283,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(curr_str) == str_len) {,e062dd6eb20580fd8bcfa1dd2642cc1c9fbd6a70fef6238256581bae6eff633e
wireshark-1.4.15/gtk/filter_autocomplete.c,389,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  prefix = prefix_start + strlen(prefix_start);,66c12c25b593060ff98200f3cdfb51045b03c171277da46202ad9c40fb8f6f91
wireshark-1.4.15/gtk/filter_autocomplete.c,424,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if(strlen(prefix) > 1) {,59cfaa20293285b34be5afad6f534c06abf3deee9899f02bced1a5ac1411b1ba
wireshark-1.4.15/gtk/filter_autocomplete.c,426,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      prefix[strlen(prefix)-1] = '\0';,fb139b629383775236dbd4724aa9c9070e5b5cbf399ea2b86b50b536e22e6922
wireshark-1.4.15/gtk/filter_autocomplete.c,430,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      } else if(strlen(prefix) && is_protocol_name_being_typed(filter_te, (int) strlen(prefix)+2)) {",3377a2d0bcddcc08d53167ae54759fe58f193732329f77fcf8af0e8de5081a00
wireshark-1.4.15/gtk/filter_autocomplete.c,430,81,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      } else if(strlen(prefix) && is_protocol_name_being_typed(filter_te, (int) strlen(prefix)+2)) {",3377a2d0bcddcc08d53167ae54759fe58f193732329f77fcf8af0e8de5081a00
wireshark-1.4.15/gtk/filter_autocomplete.c,442,77,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if( !strchr(name, '.') && is_protocol_name_being_typed(filter_te, (int) strlen(name)) ) {",59d2b72b7190cd8f12908a096e25667a4720b4ad8cc38aa34a0a4118a424f069
wireshark-1.4.15/gtk/filter_autocomplete.c,620,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  protocol_name_len = (unsigned int) strlen(protocol_name);,1a78a238757d5c31be89fc1d23165315f19a8b99b2eb9a90e50f4e99e0049409
wireshark-1.4.15/gtk/filter_autocomplete.c,639,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(name) == protocol_name_len) {,07caf139ee911458d0ea59fdbc21fe56f49d0c4f9e5e82cc38bab29f73297ab8
wireshark-1.4.15/gtk/filter_autocomplete.c,657,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          if (strlen(hfinfo->abbrev) == protocol_name_len) {,da402422dfc3caeef5d01f3aa85ca9016200e525cfe6b016037dad5eff30f5af
wireshark-1.4.15/gtk/filter_autocomplete.c,775,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  prefix_len = strlen(prefix);,238cc55a48e6e9ab8660001c51d2e6fe14da7990b28c9d82dfd9c0fc7239cd97
wireshark-1.4.15/gtk/filter_dlg.c,1083,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(name) == 0) {,1d1b5b684b3635a2888843536138223295fb9aa8f6ca6f2bc634eb4190c96943
wireshark-1.4.15/gtk/filter_dlg.c,1088,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(strval) == 0) {,593f031b4f6836f2819884e284a208f5d71696413fd7c51454844820eb28eb60
wireshark-1.4.15/gtk/filter_dlg.c,1164,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (strlen(name) > 0 && strlen(strval) > 0 && filt) {,7d02ba8b26fff0717243a63dd590912430b36beee861abe7d6f1c0586e2411cd
wireshark-1.4.15/gtk/filter_dlg.c,1164,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (strlen(name) > 0 && strlen(strval) > 0 && filt) {,7d02ba8b26fff0717243a63dd590912430b36beee861abe7d6f1c0586e2411cd
wireshark-1.4.15/gtk/filter_dlg.c,1343,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(strval) == 0) {,593f031b4f6836f2819884e284a208f5d71696413fd7c51454844820eb28eb60
wireshark-1.4.15/gtk/filter_utils.c,59,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-1.4.15/gtk/filter_utils.c,65,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-1.4.15/gtk/filter_utils.c,71,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-1.4.15/gtk/filter_utils.c,77,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-1.4.15/gtk/find_dlg.c,689,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	found_packet = cf_find_packet_data(&cfile, string, strlen(string),",7d0fc0219281adfa6ad7bfde85d0855aee836338a37c011fb075e650c995bc57
wireshark-1.4.15/gtk/find_dlg.c,758,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        cf_find_packet_data(&cfile, string, strlen(string), dir);",4e15ca47364e084418ae5f3f8ef1ddba3088056ba4047a6164c4e7b4e1af256b
wireshark-1.4.15/gtk/follow_ssl.c,191,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    previous_filter_len = previous_filter?(int)strlen(previous_filter):0;,0bd1e739b2becb98fdb2ba7fbd7581a5cca1193a36e6f1f7f75cab9d1b538031
wireshark-1.4.15/gtk/follow_ssl.c,192,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    filter_out_filter_len = (int)strlen(follow_filter) + previous_filter_len + 16;,9a3f1e7f3536ebb63b8c01df8c255ec18aaeaff53d429b61482201457fb667d7
wireshark-1.4.15/gtk/follow_stream.c,1056,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			if (!(*print_line_fcn_p) (hexbuf, strlen(hexbuf), is_server, arg))",d4e99a28f4d85da0349f210223fe6ed5bc72d76d9f26a7b5e4a48d65f2301991
wireshark-1.4.15/gtk/follow_stream.c,1066,52,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                if (!(*print_line_fcn_p) (initbuf, strlen(initbuf), is_server, arg))",c49e925d73cc6632a05ba7c81f3e8ab5dc8e5e10746328e836cef49651a1f862
wireshark-1.4.15/gtk/follow_stream.c,1100,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			if (!(*print_line_fcn_p) (hexbuf, strlen(hexbuf), is_server, arg))",d4e99a28f4d85da0349f210223fe6ed5bc72d76d9f26a7b5e4a48d65f2301991
wireshark-1.4.15/gtk/follow_tcp.c,180,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	filter_out_filter_len = (int)(strlen(follow_filter) + strlen(previous_filter) + 16);,db39f8967d38d8086479839f7f4a4e31ead76e56b843e16abb98474283d4dfd3
wireshark-1.4.15/gtk/follow_tcp.c,180,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	filter_out_filter_len = (int)(strlen(follow_filter) + strlen(previous_filter) + 16);,db39f8967d38d8086479839f7f4a4e31ead76e56b843e16abb98474283d4dfd3
wireshark-1.4.15/gtk/follow_tcp.c,184,5,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if(strlen(previous_filter)) {,393a7e20d41006bf1486f91e7cf63d302889c66540411ea70baaaead7f6e3208
wireshark-1.4.15/gtk/follow_udp.c,139,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	previous_filter_len = previous_filter?(int)strlen(previous_filter):0;,0bd1e739b2becb98fdb2ba7fbd7581a5cca1193a36e6f1f7f75cab9d1b538031
wireshark-1.4.15/gtk/follow_udp.c,140,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	filter_out_filter_len = (int)strlen(follow_filter) + previous_filter_len + 16;,9a3f1e7f3536ebb63b8c01df8c255ec18aaeaff53d429b61482201457fb667d7
wireshark-1.4.15/gtk/funnel_stat.c,239,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    nchars = (int) strlen(str);,27ca570b5eb0fc59b4aee2e34a8953438b17711c1030bfb4f306e632d44bbba8
wireshark-1.4.15/gtk/funnel_stat.c,272,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    nchars = (int) strlen(str);,27ca570b5eb0fc59b4aee2e34a8953438b17711c1030bfb4f306e632d44bbba8
wireshark-1.4.15/gtk/graph_analysis.c,241,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (len > strlen(text_to_insert)){,57573b56a1dad5e539a1286b87eaf391d94fb38747bc3065514b2219e4597b6c
wireshark-1.4.15/gtk/graph_analysis.c,242,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		len = strlen(text_to_insert);,47b82e594ca57c2b2a5e1f6205cfad4d815ea41bc85c8ba98ae59a7357a7ba55
wireshark-1.4.15/gtk/graph_analysis.c,690,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				if (strlen(gai->frame_label) > 48) {,414d5f5fb54ede8da5dc3715469e2efbf64f6d63ea1ac25ec80f1f3274fb9973
wireshark-1.4.15/gtk/hostlist_table.c,206,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (filter && strlen(filter)) {,2288ea41d1f4ac8dcb848c3301b9aded13d79d81dc81a88ecbc3bd8017b14e2d
wireshark-1.4.15/gtk/hostlist_table.c,584,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    g_strlcpy(geoip[j], format_text (name, strlen(name)), COL_STR_LEN);",56246180a00dc1e47d03878b6cf8532e18d1120bf1a8e81183b285b58313504f
wireshark-1.4.15/gtk/iax2_analysis.c,2169,25,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","				while ((fread_cnt = read(forw_fd, f_pd, 1)) > 0) {",52c6ee25aa8a896aa2336094d46f2cdf4987d2cbf84072b6ce2e175587865af1
wireshark-1.4.15/gtk/iax2_analysis.c,2210,21,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","				while ((rread = read(rev_fd, r_pd, 1)) > 0) {",ad54296fffa240e51aa63a8f274c201f0d3d0e96ff7bcbc5b9df1438cf14731a
wireshark-1.4.15/gtk/iax2_analysis.c,2273,15,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","						rread = read(rev_fd, r_pd, 1);",88a9378a55688163490ba39b20f08cdc6a2ce31c0ee1665f641f1f672c4dd19e
wireshark-1.4.15/gtk/iax2_analysis.c,2286,19,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","						fread_cnt = read(forw_fd, f_pd, 1);",0fead750fdee91fedcbdf6cbc0584e8ac6e2a07b7ab845a794c99c7112a741fa
wireshark-1.4.15/gtk/iax2_analysis.c,2299,19,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","						fread_cnt = read(forw_fd, f_pd, 1);",0fead750fdee91fedcbdf6cbc0584e8ac6e2a07b7ab845a794c99c7112a741fa
wireshark-1.4.15/gtk/iax2_analysis.c,2300,15,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","						rread = read(rev_fd, r_pd, 1);",88a9378a55688163490ba39b20f08cdc6a2ce31c0ee1665f641f1f672c4dd19e
wireshark-1.4.15/gtk/iax2_analysis.c,2364,19,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","		while ((rread = read(fd, pd, 1)) > 0) {",109109da7a6936aebd17997618d9f4d0eb068320db26231b172ce474d272d3d2
wireshark-1.4.15/gtk/main.c,245,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if ((!text) || (0 == strlen(text))) {,0b2343039f2f61fddc0d6daf7170e61fbe21d60520c2494f70146e2a81f6064e
wireshark-1.4.15/gtk/main.c,263,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((!cur_filter) || (0 == strlen(cur_filter))),8bedd9667998b369fe59db1638da23d2cd24fd268521452b5563bebaa14c783d
wireshark-1.4.15/gtk/main.c,270,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((!cur_filter) || (0 == strlen(cur_filter))),8bedd9667998b369fe59db1638da23d2cd24fd268521452b5563bebaa14c783d
wireshark-1.4.15/gtk/main.c,281,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((!cur_filter) || (0 == strlen(cur_filter))),8bedd9667998b369fe59db1638da23d2cd24fd268521452b5563bebaa14c783d
wireshark-1.4.15/gtk/main.c,288,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((!cur_filter) || (0 == strlen(cur_filter))),8bedd9667998b369fe59db1638da23d2cd24fd268521452b5563bebaa14c783d
wireshark-1.4.15/gtk/main.c,342,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((!filter) || (0 == strlen(filter))) {,a0cb255821321c21d3768075953b584c875fbd220940dd6acfcc292acb2e0902
wireshark-1.4.15/gtk/main.c,519,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      strlen(cfile.cinfo.col_expr.col_expr_val[column])),94194308efa3c9b579a960d0f010153344b28d47cca6b1ed68f9eb8c98bd5370
wireshark-1.4.15/gtk/main.c,599,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(cfile.cinfo.col_expr.col_expr[column]) != 0 &&,64286ef19d18baf365c2edfe41ee93fb185dfd876307c125effbacec0664012d
wireshark-1.4.15/gtk/main.c,600,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            strlen(cfile.cinfo.col_expr.col_expr_val[column]) != 0) {,7eba4d226300ad835385159e9fe2aa0204ed92c37304d2634f196fc19402b9e0
wireshark-1.4.15/gtk/main.c,829,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            length = (guint) strlen(finfo->hfinfo->blurb);,75e4b4d30d1441c4fd3aee8b31b3d30b67729e4415eefc62cf602a4868080b4f
wireshark-1.4.15/gtk/main.c,831,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            length = (guint) strlen(finfo->hfinfo->name);,3c7737a9dd784825f769eb60c67cdd999c5b16ff039348d7b66b4b024162bf18
wireshark-1.4.15/gtk/main.c,2997,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (!start_capture && strlen(global_capture_opts.cfilter) == 0) {,f99b9317fc5fb6fe78a558d47e4a0d55373fe39e507190e834572e9c75ae4431
wireshark-1.4.15/gtk/main_filter_toolbar.c,337,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (s && strlen(s) > 0 &&,2360fceb91b2bde57eeda128fe72b676525439a0f82460efabb07b0c3e5fd8f6
wireshark-1.4.15/gtk/main_filter_toolbar.c,385,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(li->data)) {,c7a3e0e8180ac3c2dff7709ca5840a16ae361c0e393f0ac1a24125f689961d46
wireshark-1.4.15/gtk/main_filter_toolbar.c,432,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (cf_status == CF_OK && strlen(s) > 0) {,f4abf493b114eabb773f80c2e78d39696bf971937984202b4c637735f06ceedc
wireshark-1.4.15/gtk/manual_addr_resolv.c,77,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen (addr) && strlen (name)) {,7f342572886ec0aca7eafe8e7354702e1ce878bc85bf24a60a462a7e263b0cf4
wireshark-1.4.15/gtk/manual_addr_resolv.c,77,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen (addr) && strlen (name)) {,7f342572886ec0aca7eafe8e7354702e1ce878bc85bf24a60a462a7e263b0cf4
wireshark-1.4.15/gtk/manual_addr_resolv.c,108,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  gtk_widget_set_sensitive (ok_bt, strlen (name) > 0 ? TRUE : FALSE);",da77ddfc55788a12da0d8dc939b852ce6e95be7400a196968258feeccb0fec6c
wireshark-1.4.15/gtk/menus.c,1555,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        menupathlen = strlen(toolspath) + 1 + (p - name);,ee9465f016a392b48df9396d9ff7117f271063db4ab9a028bb1e2b229726c0cd
wireshark-1.4.15/gtk/menus.c,1594,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    menupathlen = strlen(toolspath) + 1 + strlen(name);,505e642338042bad3ec8acc34e592eff05328773a7daf4a1f2fcbab0475c4a6f
wireshark-1.4.15/gtk/menus.c,1594,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    menupathlen = strlen(toolspath) + 1 + strlen(name);,505e642338042bad3ec8acc34e592eff05328773a7daf4a1f2fcbab0475c4a6f
wireshark-1.4.15/gtk/menus.c,3458,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            menu_item_len = strlen (menu_item_name);,e1676a08512c14b95e45c023ee4341f87a48c6280f36b6d902ad2d1691556910
wireshark-1.4.15/gtk/packet_list_store.c,716,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				record->fdata->col_text_len[col] = (guint) strlen(record->fdata->col_text[col]);,b61eb1e28cf2d0d4fc51603a7ed05c62f5127471443ec41cd3dda723a705d68b
wireshark-1.4.15/gtk/packet_list_store.c,725,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			record->fdata->col_text_len[col] = (guint) strlen(cinfo->col_data[col]);,9cfb6a77106dd62ff6ebf443b29f531429a4d5843214242653d4138fddbec0fd
wireshark-1.4.15/gtk/packet_win.c,165,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if ((strlen(Title) + strlen(TextPtr)) < NewWinTitleLen - 1) {,b350864be4b6a200ca508d732e7e1d09911d35fe783611d2ae93abac981a2f34
wireshark-1.4.15/gtk/packet_win.c,165,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if ((strlen(Title) + strlen(TextPtr)) < NewWinTitleLen - 1) {,b350864be4b6a200ca508d732e7e1d09911d35fe783611d2ae93abac981a2f34
wireshark-1.4.15/gtk/prefs_capture.c,1244,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (strlen(new_monitor_mode) > 0) {,ff8a9c4575ae1613d6abbaf50841e9222841d9f2c65a490b8521daa4c0bedb49
wireshark-1.4.15/gtk/prefs_capture.c,1311,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (strlen(new_linklayer) > 0) {,e0a3b55030b67768416351ce557e370b100c5eddde5cde3bc868043d816d677c
wireshark-1.4.15/gtk/prefs_capture.c,1355,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			if (strlen(desc) == 0){,983b89c97a788c6866e91266e68a3d303a2f8df468fe8678cbe9de9dbdde2b92
wireshark-1.4.15/gtk/prefs_capture.c,1377,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (strlen(new_descr) > 0) {,8447a12a2d178fd3e263576d33377f1d2f99b6eb368153c58c2d9ecbbebf3e94
wireshark-1.4.15/gtk/prefs_capture.c,1438,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (strlen(new_hide) > 0) {,5bd2217056d278bd1bb6384e8183543bd4c00076b95df2b0bdb8baf52727a128
wireshark-1.4.15/gtk/prefs_dlg.c,151,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  label_len = strlen(title) + 2;,bc0f57c16ad24068ad3ccd09da9cec77429f3dcba893ed93e0ac048dd38c31bb
wireshark-1.4.15/gtk/prefs_dlg.c,961,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(str_val) != 0) {,96ebd0739db31edac35d1e48ac3621a7d3013018cf5b67a455ebd7d69f0b4a2f
wireshark-1.4.15/gtk/prefs_gui.c,612,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	fileopen_dir_te_length = (gint) strlen(gtk_entry_get_text (GTK_ENTRY(fileopen_entry)));,90cecba6236f3ea3432eae0d97bb82e7389b33b14f982083b2bfb93b3dc4fecc
wireshark-1.4.15/gtk/print_win32.c,202,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	    TextOut(hdc, x_offset,y_pos, buf, (int) strlen(buf));",66bc918f6379d8a1319d216a10337dc4635fe3f6c75806ac56f34fd7bd95262f
wireshark-1.4.15/gtk/print_win32.c,218,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	    TextOut(hdc, x_offset,y_pos, buf, (int) strlen(buf));",66bc918f6379d8a1319d216a10337dc4635fe3f6c75806ac56f34fd7bd95262f
wireshark-1.4.15/gtk/print_win32.c,235,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            TextOut(hdc, x_offset, y_pos, buf, (int) strlen(buf));",91b23ac6055903313173db64a466dd8ec432c3f70ff2ec2ff1f5ceaa7b7bf0be
wireshark-1.4.15/gtk/print_win32.c,254,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	TextOut(hdc, 0,y_pos, buf, (int) strlen(buf));",a2c3d676ee2ba33bb1ab0ab46f76ca713a1b40d01f194ab1120c4e5aafe4182e
wireshark-1.4.15/gtk/profile_dlg.c,260,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (name[0] == '.' || name[strlen(name)-1] == '.') {,5f827d263a21f038f884c1efc7692ade5ffe51545771c042776fd05ad0ae4554
wireshark-1.4.15/gtk/profile_dlg.c,649,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if (strlen(name) > 0 && profile) {,9e2b7c0aa9cdedf087427f0967192da893a47c90e5168361c9d4fe2092b22fc8
wireshark-1.4.15/gtk/progress_dlg.c,100,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(item_title_dup) > 110) {,d7af5f59ebc54d767c1f17d2c4b3c4a6ea28fde3c2cc89d7e9d37ddd517cede3
wireshark-1.4.15/gtk/proto_help.c,253,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (!loc || !strlen(loc)) continue;,211c1b35e635189df68cdea1ac6d8f03ee6b98a7bf7a5c7098bf84e3915ceb7d
wireshark-1.4.15/gtk/proto_help.c,285,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				if(!value || !strlen(value)) continue;,afc99f38c3fbba52e5ff19158af75008fcd52aa0e368628bd9e8703a5635bfed
wireshark-1.4.15/gtk/proto_help.c,289,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				if (!loc || !strlen(loc)) continue;,211c1b35e635189df68cdea1ac6d8f03ee6b98a7bf7a5c7098bf84e3915ceb7d
wireshark-1.4.15/gtk/proto_hier_stats_dlg.c,83,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (filter && 0 != strlen(filter)) {,26b94b9b60c5885ef6f6ced6a30e4d86d14b23d46bc6864d406b0dce0ee158bf
wireshark-1.4.15/gtk/proto_hier_stats_dlg.c,400,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (current_filter && strlen(current_filter) != 0) {,8be638e33a2a5b3b376cdc02a11c3ef33e3768cdc0c98e577b19e329272b87a6
wireshark-1.4.15/gtk/recent.c,544,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  int cust_format_len = (int) strlen(cust_format);,99ca0e6c824f4e660c270604c80b09fdbabaa099428c07d1eadd52c9a24e6174
wireshark-1.4.15/gtk/rlc_lte_stat_dlg.c,984,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(sn_string) > 0) {,39e110c54325ce5e5b751679d0d8bd3b58330318351fd65d9045a101be1b0669
wireshark-1.4.15/gtk/rlc_lte_stat_dlg.c,1010,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(sn_string) > 0) {,39e110c54325ce5e5b751679d0d8bd3b58330318351fd65d9045a101be1b0669
wireshark-1.4.15/gtk/rlc_lte_stat_dlg.c,1036,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(sn_string) > 0) {,39e110c54325ce5e5b751679d0d8bd3b58330318351fd65d9045a101be1b0669
wireshark-1.4.15/gtk/rtp_analysis.c,2252,26,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",				while ((f_rawvalue = getc(forw_stream)) != EOF) {,3fd4b1fd13b97de7e097f2b8393cdbd5c49d858ba5c87a423d901cfb456eb133
wireshark-1.4.15/gtk/rtp_analysis.c,2293,26,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",				while ((r_rawvalue = getc(rev_stream)) != EOF) {,ef5a2a2761c27ad8fd829384fc06fa13a88fe4e07a58d647a2fca0feed0a4c96
wireshark-1.4.15/gtk/rtp_analysis.c,2356,20,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",						r_rawvalue = getc(rev_stream);,0f5313a363ed25025f8baa8acc6e018b7cfc8d8d891df84c25880af5703739f3
wireshark-1.4.15/gtk/rtp_analysis.c,2371,20,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",						f_rawvalue = getc(forw_stream);,24b3cfad12166751e05d6aeefb613bc515fc646154e1f9281bcfe1d1a59bacd1
wireshark-1.4.15/gtk/rtp_analysis.c,2386,20,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",						f_rawvalue = getc(forw_stream);,24b3cfad12166751e05d6aeefb613bc515fc646154e1f9281bcfe1d1a59bacd1
wireshark-1.4.15/gtk/rtp_analysis.c,2387,20,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",						r_rawvalue = getc(rev_stream);,0f5313a363ed25025f8baa8acc6e018b7cfc8d8d891df84c25880af5703739f3
wireshark-1.4.15/gtk/rtp_analysis.c,2451,22,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",		while ((rawvalue = getc(stream)) != EOF) {,3fb3e33cbd7c8c13a62217cca6be73c306763be1e6ce7f4a7b878629a97fc910
wireshark-1.4.15/gtk/stats_tree_stat.c,208,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			init_strlen = strlen(cfg->pr->stat_dlg->init_string);,bacf89e3c3cea16d9661d10ca68da749e5f27817ba37cb2708f6386c5a00a2b0
wireshark-1.4.15/gtk/stats_tree_stat.c,211,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				if (init_strlen == strlen(optarg)) {,dbc9b9cca11a1d1cb4e6a66f6eb01dfe388fe742316171140c8c2f279cb93a64
wireshark-1.4.15/gtk/summary_dlg.c,66,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if(strlen(value) != 0) {,70a1777c45f155e8f48b0aa746c2ff4defa5e082a93e5d26e4ef0e320bf43efd
wireshark-1.4.15/gtk/summary_dlg.c,72,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(value) == 0) {,2e0ff5dafbd9fcfeb29352df490cf67f80171fe6c6f50e9a35407c326bc9e29b
wireshark-1.4.15/gtk/summary_dlg.c,276,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    while(strlen(str_work) > FILTER_SNIP_LEN) {,de71a329a2b7c61dc0f4e8c10961194fd6ae3a651262a9c32d59009ed6e0bf4e
wireshark-1.4.15/gtk/supported_protos_dlg.c,232,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    if ((len = (int) strlen(name)) > namel),7e0dd3bfb0cf313614113c38d88ace3dc2cf8b23686ec7f356fc1e446e0b7c59
wireshark-1.4.15/gtk/supported_protos_dlg.c,234,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    if ((len = (int) strlen(short_name)) > short_namel),7ec3e0cccab70fb536b66b6b441bba499e34b96bfaa5eadd9202f39167ada310
wireshark-1.4.15/gtk/supported_protos_dlg.c,236,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    if ((len = (int) strlen(filter_name)) > filter_namel),881e9fc04d487735bc3156bd7d007f75f6e34708041750cbf8994465fd58ec0f
wireshark-1.4.15/gtk/supported_protos_dlg.c,275,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		    if ((len = (int) strlen(hfinfo->abbrev)) > maxlen),b191fd47c4ce55500af18aa95a2f973ce5163b0c632d3fa960fe7d9005ab40db
wireshark-1.4.15/gtk/supported_protos_dlg.c,277,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		    if ((len = (int) strlen(hfinfo->name)) > maxlen2),cc4dcb58469520c20c7eba4427488440f6e216ecc0bbdda71ba14b81db426387
wireshark-1.4.15/gtk/supported_protos_dlg.c,280,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			    if ((len = (int) strlen(hfinfo->blurb)) > maxlen4),c9d568e337c589a126508a6e754521b664c21cfcba21c3892cfbe35d9d2caa5a
wireshark-1.4.15/gtk/supported_protos_dlg.c,286,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    insert_text(w, dfilter_supported, (int) strlen(dfilter_supported));",8c5c5ca3786e6e45a0f7ee2ecaf9e5a71f9ebe1c10ceb61e2552bd2338b6338b
wireshark-1.4.15/gtk/text_page_utils.c,119,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      text_page_insert(page, line, (int) strlen(line));",f13a488e25fb0b84a88403fcb425f1cd71d99d4d8f192e63581e78180ee56258
wireshark-1.4.15/gtk/u3.c,128,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    pf_size = (int) strlen(u3hostexecpath) + 32;,49968b62b3207534f43a6ea6e0e014086b727d9c200ce849238a90579cd870e1
wireshark-1.4.15/gtk/u3.c,193,70,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  if((path != NULL) && (u3devicepath != NULL) && (strncmp(path, old, strlen(old)) == 0)) {",8bfc97c18da0052f56aa1d56fcfaf1bbc0953242fc8bc689431efd8bb02d7396
wireshark-1.4.15/gtk/u3.c,195,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    newpath = g_strconcat(new, path + strlen(old), NULL);",42499cc9f661bd6f604bf427e1863034237e224383d3c7f6ea6604a5bdbe3fca
wireshark-1.4.15/gtk/uat_gui.c,306,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				len = (unsigned) strlen(text);,6acad9e7bf6fe51e267dc1f95fe2b21685d85b6c44bde7156cf9d7d5e273ec80
wireshark-1.4.15/gtk/uat_gui.c,311,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				text = (void*) unhexbytes(text, (guint) strlen(text), &len, &err);",89fa910ceb757cc2653eafaf9c5b277c23c75048ed1a9909fc8a700de1628114
wireshark-1.4.15/gtk/uat_gui.c,323,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				len = (unsigned) strlen(text);,6acad9e7bf6fe51e267dc1f95fe2b21685d85b6c44bde7156cf9d7d5e273ec80
wireshark-1.4.15/gtk/voip_calls.c,1923,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				if (strlen(pi->dialedDigits)),bff4566b1769e120f616e65de4a51c7d32f8028c3739feb69a00c9b79177d813
wireshark-1.4.15/gtk/voip_calls_dlg.c,200,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	filter_length = strlen(filter_string);,d33b979353f910b40e716337e64d1963c394b32ab8533ce485f5268aa3afd650
wireshark-1.4.15/gtk/voip_calls_dlg.c,204,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (strlen(filter_string) > 0),ad6034d9de2e3b8c7ea61d0da0b321659975da0cdc771635677f2527f5daa380
wireshark-1.4.15/gtk/webbrowser.c,206,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (browser == NULL || ! strlen (browser)),74a993e95f8cfc2e38742b9f01fe79ae4688639feac2fedcf5e4d30c72d1cb2a
wireshark-1.4.15/gtk/webbrowser.c,407,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (browser == NULL || ! strlen (browser)),74a993e95f8cfc2e38742b9f01fe79ae4688639feac2fedcf5e4d30c72d1cb2a
wireshark-1.4.15/gtk/webbrowser.c,499,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if((strlen(filename) > 2) && (filename[1] == ':')),ecb1ed134729eaa59ad38a456ffcaeca30cc922b579e103c6cbaf211f1ff7199
wireshark-1.4.15/gtk/webbrowser.c,503,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if((strlen(filename) > 1) && (filename[0] == '/')),071444d77755a70bf69ba28a4d5101984f150d93f6389f78d24d060f76bbc270
wireshark-1.4.15/gtk/wlan_stat_dlg.c,188,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (filter && strlen(filter)) {,2288ea41d1f4ac8dcb848c3301b9aded13d79d81dc81a88ecbc3bd8017b14e2d
wireshark-1.4.15/packaging/macosx/ScriptExec/main.c,579,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		long length = strlen(url);,c874db67d7ffe80fadae09bb5d3c0d76cebbc1e66926d3f88fa730e8ed74d448
wireshark-1.4.15/packaging/macosx/ScriptExec/main.c,677,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    return CompileAppleScript(theScript, strlen(theScript), NULL);",5405271a158a5b462e48f04aa039001f6d4df6c5e8d58c99762e53e7f65cc281
wireshark-1.4.15/packaging/u3/tools/utest.c,84,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      uuid_create_sha1_from_name(&u, NameSpace_WS, argv[1], strlen(argv[1]));",24752cd67f05b28af29bb0b31c67e1d9aada5a6a3eefa8c6e1070825fd5a3497
wireshark-1.4.15/packaging/u3/win32/u3util.c,347,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      if(!strncmp(buffer, u3_device_serial, strlen(u3_device_serial) + 1)) {",5bbc09cdcb531ebd88bbb6e70727987518eb34d94e9f77ccddd1ae21e89f071c
wireshark-1.4.15/packaging/u3/win32/u3util.c,357,4,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",Risk is low because the source is a constant string.,CWE-120,"	  strncat(buffer, "" /qn"", 5);",4a5e20e0fe4fb69bfccfea74f6fd5db26c4515b8765a6f1c571dcf1100307f56
wireshark-1.4.15/packaging/u3/win32/u3util.c,361,2,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",Risk is low because the source is a constant character.,CWE-120,"	strncat(buffer, ""\"""", 2); /* close the quotes */",c2a170b1a2c3e9998159e88b326adc65be784fbdc8caf0cf96eef397970c7441
wireshark-1.4.15/packaging/u3/win32/u3util.c,433,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(buffer, argv[0], strlen(argv[0]) + 1);",f0a891a7f4218652f2707df01ae3fe1eaf9c739d5a3cc96e9de56f6f2fa2a2c0
wireshark-1.4.15/packaging/u3/win32/u3util.c,433,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(buffer, argv[0], strlen(argv[0]) + 1);",f0a891a7f4218652f2707df01ae3fe1eaf9c739d5a3cc96e9de56f6f2fa2a2c0
wireshark-1.4.15/packaging/u3/win32/u3util.c,439,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(buffer, ENV_FILENAME, strlen(ENV_FILENAME) + 1);",e7d28cce24281b87b965ae939ca1350177d4c55553ec175e6149fa2f3763804e
wireshark-1.4.15/packaging/u3/win32/u3util.c,439,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(buffer, ENV_FILENAME, strlen(ENV_FILENAME) + 1);",e7d28cce24281b87b965ae939ca1350177d4c55553ec175e6149fa2f3763804e
wireshark-1.4.15/packaging/u3/win32/u3util.c,471,5,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"    strncat(buffer, u3hostexecpath, strlen(u3hostexecpath) + 1);",8d5825ccc640d30a21f94c60af68e69e22d6de091013f63da853227ef41bcfd3
wireshark-1.4.15/packaging/u3/win32/u3util.c,471,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    strncat(buffer, u3hostexecpath, strlen(u3hostexecpath) + 1);",8d5825ccc640d30a21f94c60af68e69e22d6de091013f63da853227ef41bcfd3
wireshark-1.4.15/packaging/u3/win32/u3util.c,472,5,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"    strncat(buffer, WIRESHARK_EXE, strlen(WIRESHARK_EXE) + 1);",9081036417322642caf6595480ff1b09f89f14e6229ccfbae4906036d3cee314
wireshark-1.4.15/packaging/u3/win32/u3util.c,472,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    strncat(buffer, WIRESHARK_EXE, strlen(WIRESHARK_EXE) + 1);",9081036417322642caf6595480ff1b09f89f14e6229ccfbae4906036d3cee314
wireshark-1.4.15/packaging/u3/win32/u3util.c,476,7,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",Risk is low because the source is a constant character.,CWE-120,"      strncat(buffer, "" "", 2);",4fcb99c2739bbaf559d4c5a260cd496abb18d2324069f6a5315be6a022c48bdf
wireshark-1.4.15/packaging/u3/win32/u3util.c,477,7,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"      strncat(buffer, argv[i], strlen(argv[i]) + 1);",966fb5b8e797c49fb3c5811348a81b8fe3f3b9f86d5f89115ca4c225726cc886
wireshark-1.4.15/packaging/u3/win32/u3util.c,477,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      strncat(buffer, argv[i], strlen(argv[i]) + 1);",966fb5b8e797c49fb3c5811348a81b8fe3f3b9f86d5f89115ca4c225726cc886
wireshark-1.4.15/packaging/u3/win32/u3util.c,499,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"  strncpy(dir_spec, u3_host_exec_path, strlen(u3_host_exec_path) + 1);",8e546e79c7f02c809a86efe5152f973f20c4411db8758cacfa31043c82962c29
wireshark-1.4.15/packaging/u3/win32/u3util.c,499,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncpy(dir_spec, u3_host_exec_path, strlen(u3_host_exec_path) + 1);",8e546e79c7f02c809a86efe5152f973f20c4411db8758cacfa31043c82962c29
wireshark-1.4.15/packaging/u3/win32/u3util.c,500,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",Risk is low because the source is a constant string.,CWE-120,"  strncat(dir_spec, ""\\*.pid"", 7);",95535fea340b30676316c7cda3380807a632adedd1356de5d72187047175e92e
wireshark-1.4.15/packaging/u3/win32/u3util.c,513,7,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"      strncpy(file_name, u3_host_exec_path, strlen(u3_host_exec_path) + 1);",89789382b0c2160f762eaa29dbc9c3d8fdcba6b3b46900969645b870d965cd50
wireshark-1.4.15/packaging/u3/win32/u3util.c,513,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      strncpy(file_name, u3_host_exec_path, strlen(u3_host_exec_path) + 1);",89789382b0c2160f762eaa29dbc9c3d8fdcba6b3b46900969645b870d965cd50
wireshark-1.4.15/packaging/u3/win32/u3util.c,514,7,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",Risk is low because the source is a constant character.,CWE-120,"      strncat(file_name, ""\\"", 2);",9342685f97f5fb93e56207ecd3ec665e05cd5820d268fca771257741d23341a7
wireshark-1.4.15/packaging/u3/win32/u3util.c,515,7,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"      strncat(file_name, find_file_data.cFileName, strlen(find_file_data.cFileName) + 1);",b835147e7a3c41ef1da8ee828f3d8c9e469f9b48249aa5e109b9f8b39f9d28d8
wireshark-1.4.15/packaging/u3/win32/u3util.c,515,52,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      strncat(file_name, find_file_data.cFileName, strlen(find_file_data.cFileName) + 1);",b835147e7a3c41ef1da8ee828f3d8c9e469f9b48249aa5e109b9f8b39f9d28d8
wireshark-1.4.15/packaging/u3/win32/u3util.c,548,64,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      (void)RegSetValueEx(key, """", 0, REG_SZ, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",bb4f7de022004c5f1593f9efcb6e3840441cac19ee539a5f61180b563aacd0d9
wireshark-1.4.15/packaging/u3/win32/u3util.c,569,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(buffer, envval, strlen(envval) + 1);",254409b3fe7b9ff16c84a4c07ec45a085c4bba1a50c9c3da1f2155a20a9aada0
wireshark-1.4.15/packaging/u3/win32/u3util.c,569,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(buffer, envval, strlen(envval) + 1);",254409b3fe7b9ff16c84a4c07ec45a085c4bba1a50c9c3da1f2155a20a9aada0
wireshark-1.4.15/packaging/u3/win32/u3util.c,570,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(buffer, ENV_FILENAME, strlen(ENV_FILENAME) + 1);",e7d28cce24281b87b965ae939ca1350177d4c55553ec175e6149fa2f3763804e
wireshark-1.4.15/packaging/u3/win32/u3util.c,570,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(buffer, ENV_FILENAME, strlen(ENV_FILENAME) + 1);",e7d28cce24281b87b965ae939ca1350177d4c55553ec175e6149fa2f3763804e
wireshark-1.4.15/packaging/u3/win32/u3util.c,581,2,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"	strncat(buffer, *envptr, strlen(*envptr) + 1);",b1c2574ce3d76a24f86ad794fb1ce169bd72eb5dd63418580a9ed0b8b17c2a5d
wireshark-1.4.15/packaging/u3/win32/u3util.c,581,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	strncat(buffer, *envptr, strlen(*envptr) + 1);",b1c2574ce3d76a24f86ad794fb1ce169bd72eb5dd63418580a9ed0b8b17c2a5d
wireshark-1.4.15/packaging/u3/win32/u3util.c,582,2,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",Risk is low because the source is a constant character.,CWE-120,"	strncat(buffer, ""="", 2);",2f577de1c03751d79b1f2af8e1f5cf0039a8934ddcca6045244175c25a76a5c7
wireshark-1.4.15/packaging/u3/win32/u3util.c,583,2,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"	strncat(buffer, envval, strlen(envval) + 1);",254409b3fe7b9ff16c84a4c07ec45a085c4bba1a50c9c3da1f2155a20a9aada0
wireshark-1.4.15/packaging/u3/win32/u3util.c,583,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	strncat(buffer, envval, strlen(envval) + 1);",254409b3fe7b9ff16c84a4c07ec45a085c4bba1a50c9c3da1f2155a20a9aada0
wireshark-1.4.15/packaging/u3/win32/u3util.c,584,2,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",Risk is low because the source is a constant character.,CWE-120,"	strncat(buffer, ""\n"", 2);",a3fc78272d8176a82ea05f6309c77145de7343fda62656da984b8ebfd9513622
wireshark-1.4.15/packaging/u3/win32/u3util.c,586,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	buflen = strlen(buffer);,a6f2588cc7b0efb10f27441e9262cdeecd681af4a6e3bbc31f9390151a26c6c4
wireshark-1.4.15/packaging/u3/win32/u3util.c,627,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      if(!strncmp(buffer, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1))",0e27656f858b40759dc224403d8bfd32b70da3f903055434de4280b51ef6769a
wireshark-1.4.15/packaging/u3/win32/u3util.c,669,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    (void)RegSetValueEx(key, """", 0, REG_SZ, WIRESHARK_DESC, strlen(WIRESHARK_DESC) + 1);",4273ff22990a1d0033e35d6fa41f5d5bf9ee912f58d238e24ab62718e75c3db0
wireshark-1.4.15/packaging/u3/win32/u3util.c,676,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"  strncpy(wireshark_path, u3_host_exec_path, strlen(u3_host_exec_path) + 1);",dd9b3a00784fa8933e04a7854dbff51c7cd793bac3ae8d2bf15929a1aedcd863
wireshark-1.4.15/packaging/u3/win32/u3util.c,676,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncpy(wireshark_path, u3_host_exec_path, strlen(u3_host_exec_path) + 1);",dd9b3a00784fa8933e04a7854dbff51c7cd793bac3ae8d2bf15929a1aedcd863
wireshark-1.4.15/packaging/u3/win32/u3util.c,677,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(wireshark_path, U3UTIL_APPSTART, strlen(U3UTIL_APPSTART) + 1);",0828d95cede29259489b26e6b1fe23267b31d9454f76fba8b141227fb3009e69
wireshark-1.4.15/packaging/u3/win32/u3util.c,677,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(wireshark_path, U3UTIL_APPSTART, strlen(U3UTIL_APPSTART) + 1);",0828d95cede29259489b26e6b1fe23267b31d9454f76fba8b141227fb3009e69
wireshark-1.4.15/packaging/u3/win32/u3util.c,679,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"  strncpy(reg_key, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",cfe29c205be3f7317ab49b54986531dd56527f2a1f4f228cbe59d400fc3b92f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,679,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncpy(reg_key, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",cfe29c205be3f7317ab49b54986531dd56527f2a1f4f228cbe59d400fc3b92f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,680,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(reg_key, SHELL_OPEN_COMMAND, strlen(SHELL_OPEN_COMMAND) + 1);",114ba580c6b8294a72bba207162e96180ea09bbd26a8a0e29b448641e4672e9e
wireshark-1.4.15/packaging/u3/win32/u3util.c,680,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(reg_key, SHELL_OPEN_COMMAND, strlen(SHELL_OPEN_COMMAND) + 1);",114ba580c6b8294a72bba207162e96180ea09bbd26a8a0e29b448641e4672e9e
wireshark-1.4.15/packaging/u3/win32/u3util.c,685,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    (void)RegSetValueEx(key, """", 0, REG_SZ, wireshark_path, strlen(wireshark_path) + 1);",1ef59a23f91588582f7847db4f02572724e323906bd22fe1bcacb6744915d2f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,692,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"  strncpy(reg_key, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",cfe29c205be3f7317ab49b54986531dd56527f2a1f4f228cbe59d400fc3b92f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,692,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncpy(reg_key, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",cfe29c205be3f7317ab49b54986531dd56527f2a1f4f228cbe59d400fc3b92f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,693,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(reg_key, DEFAULT_ICON, strlen(DEFAULT_ICON) + 1);",f2183d2fb5b9a06c6b3b2b0f30d939d95767fe814ea89357a10e724ad48892f0
wireshark-1.4.15/packaging/u3/win32/u3util.c,693,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(reg_key, DEFAULT_ICON, strlen(DEFAULT_ICON) + 1);",f2183d2fb5b9a06c6b3b2b0f30d939d95767fe814ea89357a10e724ad48892f0
wireshark-1.4.15/packaging/u3/win32/u3util.c,696,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"  strncpy(wireshark_path, u3_host_exec_path, strlen(u3_host_exec_path) + 1);",dd9b3a00784fa8933e04a7854dbff51c7cd793bac3ae8d2bf15929a1aedcd863
wireshark-1.4.15/packaging/u3/win32/u3util.c,696,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncpy(wireshark_path, u3_host_exec_path, strlen(u3_host_exec_path) + 1);",dd9b3a00784fa8933e04a7854dbff51c7cd793bac3ae8d2bf15929a1aedcd863
wireshark-1.4.15/packaging/u3/win32/u3util.c,697,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(wireshark_path, WIRESHARK_EXE, strlen(WIRESHARK_EXE) + 1);",e84b95ac3acb931a184c107540509774115386fa88b627417643c556d424bb3a
wireshark-1.4.15/packaging/u3/win32/u3util.c,697,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(wireshark_path, WIRESHARK_EXE, strlen(WIRESHARK_EXE) + 1);",e84b95ac3acb931a184c107540509774115386fa88b627417643c556d424bb3a
wireshark-1.4.15/packaging/u3/win32/u3util.c,698,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",Risk is low because the source is a constant string.,CWE-120,"  strncat(wireshark_path, "",1"", 3);",988555ea0ebf5b44568d8f4a79b1f2eb02470095799c58a203310417269480fa
wireshark-1.4.15/packaging/u3/win32/u3util.c,704,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    (void)RegSetValueEx(key, """", 0, REG_SZ, wireshark_path, strlen(wireshark_path) + 1);",1ef59a23f91588582f7847db4f02572724e323906bd22fe1bcacb6744915d2f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,738,5,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,Risk is low because the source is a constant character.,CWE-120,"    strncpy(winpcap_path, ""\"""", 2);",9aead4e9a96d3b02677f4a3e06017beb52a518365fbc8476c0bfc26f6ebf3cfe
wireshark-1.4.15/packaging/u3/win32/u3util.c,739,5,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"    strncat(winpcap_path, u3_device_exec_path, strlen(u3_device_exec_path) + 1);",c730626f14dad5e27d8b54b8f6a8a04fa2f67e91079268570e5feff40c33594e
wireshark-1.4.15/packaging/u3/win32/u3util.c,739,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    strncat(winpcap_path, u3_device_exec_path, strlen(u3_device_exec_path) + 1);",c730626f14dad5e27d8b54b8f6a8a04fa2f67e91079268570e5feff40c33594e
wireshark-1.4.15/packaging/u3/win32/u3util.c,740,5,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"    strncat(winpcap_path, WINPCAP_PACKAGE, strlen(WINPCAP_PACKAGE) + 1);",940e9d2d55d83448105a1429c0c1ddc36bacfb731d158dfabd1c8abf9c4db5ba
wireshark-1.4.15/packaging/u3/win32/u3util.c,740,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    strncat(winpcap_path, WINPCAP_PACKAGE, strlen(WINPCAP_PACKAGE) + 1);",940e9d2d55d83448105a1429c0c1ddc36bacfb731d158dfabd1c8abf9c4db5ba
wireshark-1.4.15/packaging/u3/win32/u3util.c,741,5,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",Risk is low because the source is a constant character.,CWE-120,"    strncat(winpcap_path, ""\"""", 2);",7cfc52ad90ff64a81899ae2c6cefd0aa89857e6d9ba3982176d0dce76bfbe7a4
wireshark-1.4.15/packaging/u3/win32/u3util.c,750,82,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      (void)RegSetValueEx(key, WINPCAP_U3INSTALLED, 0, REG_SZ, u3_device_serial, strlen(u3_device_serial) + 1);",71fb43abf8eef39999fe554a0131ecdf458acc4f33c44eb4d74d409e171737d6
wireshark-1.4.15/packaging/u3/win32/u3util.c,777,5,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,Risk is low because the source is a constant character.,CWE-120,"    strncpy(vcredist_path, ""\"""", 2);",1875d503a2366059eb90268365c7d09d0d86523379ad954250f30c6652d541e4
wireshark-1.4.15/packaging/u3/win32/u3util.c,778,5,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"    strncat(vcredist_path, u3_device_exec_path, strlen(u3_device_exec_path) + 1);",d6705f2addae5f1380ec1906476b62f0715368e206d2c43c29997fcb65a983b5
wireshark-1.4.15/packaging/u3/win32/u3util.c,778,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    strncat(vcredist_path, u3_device_exec_path, strlen(u3_device_exec_path) + 1);",d6705f2addae5f1380ec1906476b62f0715368e206d2c43c29997fcb65a983b5
wireshark-1.4.15/packaging/u3/win32/u3util.c,779,5,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"    strncat(vcredist_path, VCREDIST_PACKAGE, strlen(VCREDIST_PACKAGE) + 1);",49f55901cdbbe6128c96e5ebcd5108cae6b91bf835095f770504de83c6e2f112
wireshark-1.4.15/packaging/u3/win32/u3util.c,779,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    strncat(vcredist_path, VCREDIST_PACKAGE, strlen(VCREDIST_PACKAGE) + 1);",49f55901cdbbe6128c96e5ebcd5108cae6b91bf835095f770504de83c6e2f112
wireshark-1.4.15/packaging/u3/win32/u3util.c,780,5,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",Risk is low because the source is a constant string.,CWE-120,"    strncat(vcredist_path, ""\"" /q"", 5); /* do things quietly */",2c4f38a3bc88a6b52d97adf57493514754ebfc35f89929e50021e97047d3a147
wireshark-1.4.15/packaging/u3/win32/u3util.c,788,83,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      (void)RegSetValueEx(key, VCREDIST_U3INSTALLED, 0, REG_SZ, u3_device_serial, strlen(u3_device_serial) + 1);",48cd4382b2d33ad72f1c463cb4fa34299f0f04f3e3dde22234b335eb6ca9964f
wireshark-1.4.15/packaging/u3/win32/u3util.c,797,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"  strncpy(my_captures_path, u3_device_document_path, strlen(u3_device_document_path) + 1);",7330888f83ad0ea214e2808af43d71504507064efd6a9a60bf2affee8c15465e
wireshark-1.4.15/packaging/u3/win32/u3util.c,797,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncpy(my_captures_path, u3_device_document_path, strlen(u3_device_document_path) + 1);",7330888f83ad0ea214e2808af43d71504507064efd6a9a60bf2affee8c15465e
wireshark-1.4.15/packaging/u3/win32/u3util.c,798,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(my_captures_path, MY_CAPTURES, strlen(MY_CAPTURES) + 1);",960746039375147be1a9b944c23296928eacf980cf8e0e8a3deb4deb46c6b2a2
wireshark-1.4.15/packaging/u3/win32/u3util.c,798,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(my_captures_path, MY_CAPTURES, strlen(MY_CAPTURES) + 1);",960746039375147be1a9b944c23296928eacf980cf8e0e8a3deb4deb46c6b2a2
wireshark-1.4.15/packaging/u3/win32/u3util.c,836,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"  strncpy(reg_key, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",cfe29c205be3f7317ab49b54986531dd56527f2a1f4f228cbe59d400fc3b92f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,836,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncpy(reg_key, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",cfe29c205be3f7317ab49b54986531dd56527f2a1f4f228cbe59d400fc3b92f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,837,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(reg_key, SHELL_OPEN_COMMAND, strlen(SHELL_OPEN_COMMAND) + 1);",114ba580c6b8294a72bba207162e96180ea09bbd26a8a0e29b448641e4672e9e
wireshark-1.4.15/packaging/u3/win32/u3util.c,837,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(reg_key, SHELL_OPEN_COMMAND, strlen(SHELL_OPEN_COMMAND) + 1);",114ba580c6b8294a72bba207162e96180ea09bbd26a8a0e29b448641e4672e9e
wireshark-1.4.15/packaging/u3/win32/u3util.c,842,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"  strncpy(reg_key, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",cfe29c205be3f7317ab49b54986531dd56527f2a1f4f228cbe59d400fc3b92f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,842,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncpy(reg_key, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",cfe29c205be3f7317ab49b54986531dd56527f2a1f4f228cbe59d400fc3b92f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,843,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(reg_key, SHELL_OPEN, strlen(SHELL_OPEN) + 1);",fbebba67d9414c1ddeac2ca74a88a7246e98516535acd6453d68cfaa83dbafc3
wireshark-1.4.15/packaging/u3/win32/u3util.c,843,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(reg_key, SHELL_OPEN, strlen(SHELL_OPEN) + 1);",fbebba67d9414c1ddeac2ca74a88a7246e98516535acd6453d68cfaa83dbafc3
wireshark-1.4.15/packaging/u3/win32/u3util.c,848,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"  strncpy(reg_key, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",cfe29c205be3f7317ab49b54986531dd56527f2a1f4f228cbe59d400fc3b92f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,848,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncpy(reg_key, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",cfe29c205be3f7317ab49b54986531dd56527f2a1f4f228cbe59d400fc3b92f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,849,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(reg_key, SHELL, strlen(SHELL) + 1);",6b47b37c77174579b050d1aded953863264bf6fd9bcfb06dd0c5b63574ff3337
wireshark-1.4.15/packaging/u3/win32/u3util.c,849,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(reg_key, SHELL, strlen(SHELL) + 1);",6b47b37c77174579b050d1aded953863264bf6fd9bcfb06dd0c5b63574ff3337
wireshark-1.4.15/packaging/u3/win32/u3util.c,854,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"  strncpy(reg_key, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",cfe29c205be3f7317ab49b54986531dd56527f2a1f4f228cbe59d400fc3b92f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,854,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncpy(reg_key, WIRESHARK_ASSOC, strlen(WIRESHARK_ASSOC) + 1);",cfe29c205be3f7317ab49b54986531dd56527f2a1f4f228cbe59d400fc3b92f7
wireshark-1.4.15/packaging/u3/win32/u3util.c,855,3,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)","Consider strcat_s, strlcat, snprintf, or automatically resizing strings",,CWE-120,"  strncat(reg_key, DEFAULT_ICON, strlen(DEFAULT_ICON) + 1);",f2183d2fb5b9a06c6b3b2b0f30d939d95767fe814ea89357a10e724ad48892f0
wireshark-1.4.15/packaging/u3/win32/u3util.c,855,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  strncat(reg_key, DEFAULT_ICON, strlen(DEFAULT_ICON) + 1);",f2183d2fb5b9a06c6b3b2b0f30d939d95767fe814ea89357a10e724ad48892f0
wireshark-1.4.15/pcapio.c,282,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((strlen(appname) > 0) && (strlen(appname) < G_MAXUINT16)) {,42d4558063acaba6dfaffc84486bfbfbb9c94c3ab42704444098fb78c9ad6a92
wireshark-1.4.15/pcapio.c,282,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((strlen(appname) > 0) && (strlen(appname) < G_MAXUINT16)) {,42d4558063acaba6dfaffc84486bfbfbb9c94c3ab42704444098fb78c9ad6a92
wireshark-1.4.15/pcapio.c,284,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		                      (guint16)(ADD_PADDING(strlen(appname) + 1));,d86a1803c0cacf7a4a6c714c540d86f90d59423176d98c2dda396f912bec3018
wireshark-1.4.15/pcapio.c,295,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((strlen(appname) > 0) && (strlen(appname) < G_MAXUINT16)) {,42d4558063acaba6dfaffc84486bfbfbb9c94c3ab42704444098fb78c9ad6a92
wireshark-1.4.15/pcapio.c,295,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((strlen(appname) > 0) && (strlen(appname) < G_MAXUINT16)) {,42d4558063acaba6dfaffc84486bfbfbb9c94c3ab42704444098fb78c9ad6a92
wireshark-1.4.15/pcapio.c,298,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		option.value_length = (guint16)(strlen(appname) + 1);,0ede68c90715c6bac59dd578e0e15bcbf04625e0e2ee48164051357aabea8652
wireshark-1.4.15/pcapio.c,300,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		WRITE_DATA(fp, appname, strlen(appname) + 1, *bytes_written, err);",7f1b1fbdc59bdf96dc7731045cd7aa234df1a7dfe1988a6bac27155a00bd28a1
wireshark-1.4.15/pcapio.c,301,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ((strlen(appname) + 1) % 4) {,1a65ba543ec171cbe91004cb74cad4a52ae32136fa0159f83f8ce181454d2bbe
wireshark-1.4.15/pcapio.c,302,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			WRITE_DATA(fp, &padding, 4 - (strlen(appname) + 1) % 4, *bytes_written, err);",38d5538b30b6593b150a3b916ea9aab220023fd9efcb70944d18148b2d3cbb58
wireshark-1.4.15/pcapio.c,329,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((strlen(name) > 0) && (strlen(name) < G_MAXUINT16)) {,06e95f66c8434b647ae4631c4b3c980a4974497dc2dbdb66c0edf9492c4b73fb
wireshark-1.4.15/pcapio.c,329,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((strlen(name) > 0) && (strlen(name) < G_MAXUINT16)) {,06e95f66c8434b647ae4631c4b3c980a4974497dc2dbdb66c0edf9492c4b73fb
wireshark-1.4.15/pcapio.c,331,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		                      (guint16)(ADD_PADDING(strlen(name) + 1));,a99324ab19d9840790903bb02554671dd346923fe8c1d9b235655259236c3b9e
wireshark-1.4.15/pcapio.c,333,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((strlen(filter) > 0) && (strlen(filter) < G_MAXUINT16)) {,e2aea331dd1bfeeb90ec36b2a239f966c7578f50390bbfb1b3445774041224da
wireshark-1.4.15/pcapio.c,333,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((strlen(filter) > 0) && (strlen(filter) < G_MAXUINT16)) {,e2aea331dd1bfeeb90ec36b2a239f966c7578f50390bbfb1b3445774041224da
wireshark-1.4.15/pcapio.c,335,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		                      (guint16)(ADD_PADDING(strlen(filter) + 1));,bfbc9c24a9e043b69c76a3156417ac1f13802d28c0e55d480a356d28b8097a70
wireshark-1.4.15/pcapio.c,337,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (((strlen(name) > 0) && (strlen(name) < G_MAXUINT16)) ||,4064b76e150a01efd998e36b0424f3ada26f679eaebfcd41f6b61bdd42384f56
wireshark-1.4.15/pcapio.c,337,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (((strlen(name) > 0) && (strlen(name) < G_MAXUINT16)) ||,4064b76e150a01efd998e36b0424f3ada26f679eaebfcd41f6b61bdd42384f56
wireshark-1.4.15/pcapio.c,338,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    ((strlen(filter) > 0) && (strlen(filter) < G_MAXUINT16))) {,a1df41b879c08f69365ec57c8e6184d576880d58f7893cfc5094b9f3c78020be
wireshark-1.4.15/pcapio.c,338,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    ((strlen(filter) > 0) && (strlen(filter) < G_MAXUINT16))) {,a1df41b879c08f69365ec57c8e6184d576880d58f7893cfc5094b9f3c78020be
wireshark-1.4.15/pcapio.c,349,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((strlen(name) > 0) && (strlen(name) < G_MAXUINT16)) {,06e95f66c8434b647ae4631c4b3c980a4974497dc2dbdb66c0edf9492c4b73fb
wireshark-1.4.15/pcapio.c,349,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((strlen(name) > 0) && (strlen(name) < G_MAXUINT16)) {,06e95f66c8434b647ae4631c4b3c980a4974497dc2dbdb66c0edf9492c4b73fb
wireshark-1.4.15/pcapio.c,351,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		option.value_length = (guint16)(strlen(name) + 1);,c06f4f7a02122186e7bdcdab258a9a214e8972cec887321cc5557249d3c97704
wireshark-1.4.15/pcapio.c,353,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		WRITE_DATA(fp, name, strlen(name) + 1, *bytes_written, err);",2a23d28ec5cca6948ad0690a640cd150a6a870662f8ac49a6dbb36ccad7bee2b
wireshark-1.4.15/pcapio.c,354,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ((strlen(name) + 1) % 4) {,cfb77d1afb54bbdd358102049738c28b354d2fd7b71e1307df80b56c862b24a1
wireshark-1.4.15/pcapio.c,355,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			WRITE_DATA(fp, &padding, 4 - (strlen(name) + 1) % 4 , *bytes_written, err);",7e36c28a78da2a494ecb3093139ddf5108a836f4abe0cb5c5786f3c023a58eeb
wireshark-1.4.15/pcapio.c,359,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((strlen(filter) > 0) && (strlen(filter) < G_MAXUINT16)) {,e2aea331dd1bfeeb90ec36b2a239f966c7578f50390bbfb1b3445774041224da
wireshark-1.4.15/pcapio.c,359,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((strlen(filter) > 0) && (strlen(filter) < G_MAXUINT16)) {,e2aea331dd1bfeeb90ec36b2a239f966c7578f50390bbfb1b3445774041224da
wireshark-1.4.15/pcapio.c,361,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		option.value_length = (guint16)(strlen(filter) + 1);,658af2cca25e15cf580c5c5f218e11642a6da9a89ad5aec2890e0bd23bdcfb88
wireshark-1.4.15/pcapio.c,363,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		WRITE_DATA(fp, filter, strlen(filter) + 1, *bytes_written, err);",e413a0b6a772030ba6c339da0a680165af49de47b76a7fe702319450d4db9e63
wireshark-1.4.15/pcapio.c,364,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ((strlen(filter) + 1) % 4) {,dc092b8b4481bda252c57273e066e8121c623529c73c3c90103e49a21f6c53b6
wireshark-1.4.15/pcapio.c,365,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			WRITE_DATA(fp, &padding, 4 - (strlen(filter) + 1) % 4 , *bytes_written, err);",3b34b53b025d8a75dbfab732db748c8f52e499dd4960bd4cd63f936c160e0848
wireshark-1.4.15/pcapio.c,369,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (((strlen(name) > 0) && (strlen(name) < G_MAXUINT16)) ||,4064b76e150a01efd998e36b0424f3ada26f679eaebfcd41f6b61bdd42384f56
wireshark-1.4.15/pcapio.c,369,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (((strlen(name) > 0) && (strlen(name) < G_MAXUINT16)) ||,4064b76e150a01efd998e36b0424f3ada26f679eaebfcd41f6b61bdd42384f56
wireshark-1.4.15/pcapio.c,370,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    ((strlen(filter) > 0) && (strlen(filter) < G_MAXUINT16))) {,a1df41b879c08f69365ec57c8e6184d576880d58f7893cfc5094b9f3c78020be
wireshark-1.4.15/pcapio.c,370,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    ((strlen(filter) > 0) && (strlen(filter) < G_MAXUINT16))) {,a1df41b879c08f69365ec57c8e6184d576880d58f7893cfc5094b9f3c78020be
wireshark-1.4.15/plugins/asn1/packet-asn1.c,590,4,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"			strncpy(p, endstr, 5);",032b4b4b88cbe8f7355b30c6bd2b8f471ba35e39277c27432b7f20f8e8792542
wireshark-1.4.15/plugins/asn1/packet-asn1.c,598,5,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"				strncpy(p, octets, len);",24f09969872e18704c4c02fe9e4663763d5b7646a4637b6c33e1c55253359153
wireshark-1.4.15/plugins/asn1/packet-asn1.c,603,5,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"				strncpy(str, octets, len);",499b41bfd7531576bbdacbf63c55049675de16a00ae8e41bb25a7bc040ad691b
wireshark-1.4.15/plugins/asn1/packet-asn1.c,604,5,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"				strncpy(&str[len], endstr, 5);",b3b5f078df154b10b8d57c1c79e1dd671df425cdbdad2f91cb5644fdd53bcee9
wireshark-1.4.15/plugins/asn1/packet-asn1.c,1012,5,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,Risk is low because the source is a constant string.,CWE-120,"		  strncpy(nnbuf, ""NN-"", sizeof(nnbuf));",21b5a580f408b9242fa1e117e5594a3fc82ff0bf335eb8e04e820369f75e59de
wireshark-1.4.15/plugins/asn1/packet-asn1.c,1031,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		oname = g_malloc(strlen(name) + 32);,0d105e40681ee03250347642aaa11c7305032a6ae1b0cf2cde797c58a7bbdcd2
wireshark-1.4.15/plugins/asn1/packet-asn1.c,1816,4,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,Risk is low because the source is a constant string.,CWE-120,"			strncpy(lenbuf, ""indefinite"", sizeof(lenbuf));",8639fd5b9c35ce181a8c9fefb539a1b6fe85a299ceb4759df49271172b28ace3
wireshark-1.4.15/plugins/asn1/packet-asn1.c,1942,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,Risk is low because the source is a constant string.,CWE-120,"		strncpy(lenbuf, ""indefinite"", sizeof(lenbuf));",8639fd5b9c35ce181a8c9fefb539a1b6fe85a299ceb4759df49271172b28ace3
wireshark-1.4.15/plugins/asn1/packet-asn1.c,2869,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((filename == 0) || (strlen(filename) == 0)),1d8c28024f22727531566ebe139a9e3b55ecfd9324525d047cd3f8b2322278d4
wireshark-1.4.15/plugins/asn1/packet-asn1.c,3432,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,Risk is low because the source is a constant string.,CWE-120,"		strncpy(txt, ""no info available"", 20);",599bb58c154a9f65a222018ab02f0ef982a0bf7ce4308af5834d303e9ad93654
wireshark-1.4.15/plugins/mate/mate_grammar.c,164,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		switch ( strlen(vec[i]) ) {,2effbc22177b74eba3e4cc2319492793dd248533dc9e7ea0abc04460946453dd
wireshark-1.4.15/plugins/mate/mate_parser.c,895,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( Matein )) != EOF && c != '\n'; ++n ) \,134b92e10ddc326e9612b2ce9d7ee5cd5434477d48c58b2a0f9d1b2a9018cf69
wireshark-1.4.15/plugins/mate/mate_parser.c,2164,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return Mate_scan_bytes(yystr,strlen(yystr) );",c6e5ecd7fb22e19e5021adde639eb3bccf2ae93bb05a71bfd65f9a4b96f46493
wireshark-1.4.15/plugins/mate/mate_util.c,159,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		len = strlen(s) + 1;,22d12f8bbe245a82c3444261d856ddcfae28722ed2b81fadb1c40361a6e7bf73
wireshark-1.4.15/plugins/mate/mate_util.c,180,3,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"		strncpy(orig,s,len);",b304d52fa468e05c6274605af4f52abcabe63dd3e53cc22c1420ebbb7ffdf1f6
wireshark-1.4.15/plugins/mate/mate_util.c,208,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			len = strlen(orig);,1b7f8eb5743eda0b7312787f4a76fae46d952a8cf7e42f55ceee2be958eb226f
wireshark-1.4.15/plugins/mate/mate_util.c,959,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			return strncmp(src->v,op->v,strlen(op->v)) == 0 ? src : NULL;",8ae15442ad29a41cff59638483a28a5f6f82908bb911837a34f79db5a1105daa
wireshark-1.4.15/plugins/mate/mate_util.c,989,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			ls = (guint) strlen(src->v);,f71a530972178917e6d91d8f18eb2e8158804e2f22d7f3ffbd92687049b3e899
wireshark-1.4.15/plugins/mate/mate_util.c,990,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			lo = (guint) strlen(op->v);,fba6572282d9d73a1d38aff742b252d496881dc3920e029af8bba8782ea45e3e
wireshark-1.4.15/plugins/mate/mate_util.c,1644,23,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",		while(( c = (gchar) fgetc(fp) )){,9f798d3ddacc148dcc0fe2475194a5fb46461ee548a9764f6e6b0c3333e36b2c
wireshark-1.4.15/plugins/mate/mate_util.c,1701,12,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",							c = fgetc(fp);,710d255e3176415ab293df4ef1a47adc1e6cb0c082e568253748a6f93be976d3
wireshark-1.4.15/plugins/mate/mate_util.c,1754,22,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",								value[i++] = fgetc(fp);,344ff5195f34cc317385e2fa8c0e9b57b202fe628d7e786ba7c82365d6b9875b
wireshark-1.4.15/plugins/wimaxasncp/wimaxasncp_dict.c,1094,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( WimaxasncpDictin )) != EOF && c != '\n'; ++n ) \,b50b12175a90836a1b66f54f7d3ca9fc2398700bd2e796d7f392d941865f1438
wireshark-1.4.15/plugins/wimaxasncp/wimaxasncp_dict.c,2482,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return WimaxasncpDict_scan_bytes(yystr,strlen(yystr) );",78950bd592364d1bd8df5776cd6c1437f664fe21e8006c5f19585483c190082d
wireshark-1.4.15/plugins/wimaxasncp/wimaxasncp_dict.c,2863,2,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"	strncpy(write_ptr,txt,len);",8a39217b7827bf2d3403193ce0d5954bbb37b0e14db4f98904014e3f4a085189
wireshark-1.4.15/plugins/wimaxasncp/wimaxasncp_dict.c,2869,9,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",	size_t read;,f8993f18d54700db66e2fc1d6dbac8061552ab3c743063954c2a9d16168894c9
wireshark-1.4.15/plugins/wimaxasncp/wimaxasncp_dict.c,2875,13,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",	} else if (read > 0) {,2a1d5695d5819db6cc3888f7d05314370f243544c4081a352116a88c1dcc9bd0
wireshark-1.4.15/plugins/wimaxasncp/wimaxasncp_dict.c,2876,10,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",		return read;,fe0938d5dd649f8904dd8fd1d308ead7aebeec466f821ef897ae01c46d1550a6
wireshark-1.4.15/plugins/wimaxasncp/wimaxasncp_dict.c,2904,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		int len =  strlen(system_directory) + strlen(filename),f5d3f6e76d9df0b073121aa205a71ddaf7be699d8fe0deb3f4cf63195dd0e35a
wireshark-1.4.15/plugins/wimaxasncp/wimaxasncp_dict.c,2904,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		int len =  strlen(system_directory) + strlen(filename),f5d3f6e76d9df0b073121aa205a71ddaf7be699d8fe0deb3f4cf63195dd0e35a
wireshark-1.4.15/plugins/wimaxasncp/wimaxasncp_dict.c,2905,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			+ strlen(G_DIR_SEPARATOR_S) + 1;,c6f65fff851a8b8bcabfd75e273578f527150eb88d1efd08020a229ca98b60b1
wireshark-1.4.15/print.c,399,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				chop_len = strlen(fi->hfinfo->abbrev) + 4; /* for "" == "" */",b89cb8f30f825d591d66e29556b7de80ddc443781d0473a72b7a4a737b0a7a50
wireshark-1.4.15/print.c,406,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				if (dfilter_string[strlen(dfilter_string)-1] == '""') {",586e128631449a7dcf50231de65a4ffde873b4b45babd9fd94a07df010733c81
wireshark-1.4.15/print.c,407,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,					dfilter_string[strlen(dfilter_string)-1] = '\0';,c9ea71991ef2948e1c7050373c03e594e75b0951b466acac9c988e47fd1bc19b
wireshark-1.4.15/print.c,1339,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    option_value = option + strlen(option_name) + 1;,f19f8dbd1aa165d0d98609b71fbe48e0285a8d4c11b69ba8de66cd5a2e1888de
wireshark-1.4.15/print.c,1603,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                chop_len = strlen(fi->hfinfo->abbrev) + 4; /* for "" == "" */",b89cb8f30f825d591d66e29556b7de80ddc443781d0473a72b7a4a737b0a7a50
wireshark-1.4.15/print.c,1610,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                if (dfilter_string[strlen(dfilter_string)-1] == '""') {",586e128631449a7dcf50231de65a4ffde873b4b45babd9fd94a07df010733c81
wireshark-1.4.15/print.c,1611,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    dfilter_string[strlen(dfilter_string)-1] = '\0';,c9ea71991ef2948e1c7050373c03e594e75b0951b466acac9c988e47fd1bc19b
wireshark-1.4.15/proto_hier_stats.c,115,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if(strlen(PNODE_FINFO(proto_sibling_node)->hfinfo->name) == 0 && ptree_node->next),6d23af90715e2ec5c047bf7e0077f8a1b7fda910c08d8ab62f552c7286414fac
wireshark-1.4.15/randpkt.c,710,8,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","	ret = read(fd, &randomness, sizeof randomness);",6001614af641f3886c508ce57cea434cc537e2e6cc4fbf069bd6e7d7b43c09dd
wireshark-1.4.15/rawshark.c,305,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (pos && g_ascii_strncasecmp(pos, PIPE_STR, strlen(PIPE_STR)) != 0)",9d8c1491670f56b277c0d2e42d711f559c254555f51bc97586a569e06351f675
wireshark-1.4.15/rawshark.c,378,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (strncmp(lt_arg, ""encap:"", strlen(""encap:"")) == 0) {",125f00f60a1d0e16b178b77c4a4ee4aad0382c6fda90d5417c222ca43d968abd
wireshark-1.4.15/rawshark.c,393,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (strncmp(lt_arg, ""proto:"", strlen(""proto:"")) == 0) {",a71de905eaaadab91ada96c5450414f7f3d611a39fccbb9f625d06ab703584a0
wireshark-1.4.15/rawshark.c,818,31,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","                guint bytes = read(fd, buf, bytes_left);",efd5205f2019edebc90c8cb03e9c3c1cd2b43a02c24272b0590d21c29def60e0
wireshark-1.4.15/rawshark.c,901,22,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","        bytes_read = read(fd, ptr, bytes_needed);",292d8efaee60f7debe5b2b58bdfa2177571a03a7b65f33715585a3479dc55c68
wireshark-1.4.15/rawshark.c,944,22,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","        bytes_read = read(fd, ptr, bytes_needed);",292d8efaee60f7debe5b2b58bdfa2177571a03a7b65f33715585a3479dc55c68
wireshark-1.4.15/rawshark.c,1469,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len = strlen(format);,cd730fe4e118c03e57ee9b6607ffbe829f1ee5f3eea5a36372318c262b1d95ef
wireshark-1.4.15/sync_pipe_write.c,80,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        len = (int) strlen(msg) + 1;    /* including the terminating '\0'! */,0c78b4e1a12165e89f2274761cd52306bc344b7aaca25d26f1a40ebec747e340
wireshark-1.4.15/sync_pipe_write.c,112,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    pipe_write_header(pipe_fd, SP_ERROR_MSG, (int) (strlen(error_msg) + 1 + 4 + strlen(secondary_error_msg) + 1 + 4));",95efb820e6554bb003b8386245ee59f4b1ed85975b17405a4ec913e1f7bdc6ee
wireshark-1.4.15/sync_pipe_write.c,112,81,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    pipe_write_header(pipe_fd, SP_ERROR_MSG, (int) (strlen(error_msg) + 1 + 4 + strlen(secondary_error_msg) + 1 + 4));",95efb820e6554bb003b8386245ee59f4b1ed85975b17405a4ec913e1f7bdc6ee
wireshark-1.4.15/tap-iostat.c,544,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		namelen=strlen(calc_type_table[j].func_name);,6a4e9a754a5b2b82e6f41c588a8eb6ca41346dafcd65cff50e6aaf046d6b47eb
wireshark-1.4.15/tap-rtp-common.c,429,88,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		if (g_ascii_strncasecmp(mimetype_and_clock_map[i].pt_mime_name_str,payload_type_str,(strlen(mimetype_and_clock_map[i].pt_mime_name_str))) == 0)",87e668ebecb703007435c0991a2882cadecf61d588178f4755d28cb124743b5d
wireshark-1.4.15/tap-rtp-common.c,570,78,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			if (g_ascii_strncasecmp(""telephone-event"",rtpinfo->info_payload_type_str,(strlen(""telephone-event"")))==0){",e85a55f0bcf6c147c37726955801412e471d902ea8e35b5145de208939005110
wireshark-1.4.15/tap-stats_tree.c,86,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			if (strncmp (optarg, cfg->pr->init_string, strlen(cfg->pr->init_string)) == 0){",91f62d55db609008bb8c851ce7ab4c09c2993d40243cb33ca2062580c0b7cb30
wireshark-1.4.15/tap-stats_tree.c,87,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				st = stats_tree_new(cfg,NULL,optarg+strlen(cfg->pr->init_string));",93ce9191745e15731b0f18ecb0c6a2682b13171b50f6a59ca3a4cb7a7103ebb5
wireshark-1.4.15/tempfile.c,73,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  len = strlen (template);,882acc64c51280d1cbc643c51a50c47627752a1c83c0775a7635a9f8a441fd32
wireshark-1.4.15/tempfile.c,118,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  len = strlen (template);,882acc64c51280d1cbc643c51a50c47627752a1c83c0775a7635a9f8a441fd32
wireshark-1.4.15/tempfile.c,200,14,1,access,umask,"Ensure that umask is given most restrictive possible setting (e.g., 066 or 077) (CWE-732)",,,CWE-732,	old_umask = umask(0077);,68a36b933189533e2625f6e320ded53e836f996613bffd87d4500aa945ff42db
wireshark-1.4.15/tempfile.c,202,2,1,access,umask,"Ensure that umask is given most restrictive possible setting (e.g., 066 or 077) (CWE-732)",,,CWE-732,	umask(old_umask);,43c2152b2d7376cc4c530ad579af5dfbfa062f16af3e1a81a3332fb888c582b8
wireshark-1.4.15/text2pcap-scanner.c,653,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-1.4.15/text2pcap-scanner.c,1594,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes(yystr,strlen(yystr) );",a350c57675565b8f1819ddb771ac389db95ab189c759c652155140b3999543df
wireshark-1.4.15/text2pcap.c,722,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    toklen = strlen(str);,c84b0c40b236297163ca4fa5b464301e1d880cb136eb12274becd892265dcb19
wireshark-1.4.15/text2pcap.c,774,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ( strlen(packet_preamble) > 2 ) {,4c302ad457e016706b95d902edfbba0ccd0cd36793c8541932585fc08e4d8489
wireshark-1.4.15/tools/lemon/lemon.c,1342,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  prefixsize = (int) strlen(prefix);,31838f2adc5c902572fd621e97f37e09ce06497166d333ad78a57bd43b2cffb8
wireshark-1.4.15/tools/lemon/lemon.c,1349,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  errmsgsize = (int) strlen(errmsg);,89c7265fe2c01bd22673c1929090dd5d27f7b29b47a0e2c68afb5227664e4002
wireshark-1.4.15/tools/lemon/lemon.c,1400,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		new_string = malloc( strlen(fullname) );,a0f56d0802e66e7c9c979cf2befe95859c3bca12e22f925b6f654b642c42635c
wireshark-1.4.15/tools/lemon/lemon.c,1406,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		new_string = malloc( strlen(cp) );,df64366c08a49d61e633a9c8ec28c1053d0e7eb39cb67e742478291dad35cb25
wireshark-1.4.15/tools/lemon/lemon.c,1428,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  *paz = malloc( strlen(z)+1 );,9d1c6ba410f5ea1355cccd44bdae6fbe0e61045580ed59ea9566eb39bc1e8b43
wireshark-1.4.15/tools/lemon/lemon.c,1710,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  spcnt = (int) strlen(argv[0]) + 1;,37df3a930fdfb7ffab90abfa02410b7ca72d765ccbd3054a48ee1db569acc188
wireshark-1.4.15/tools/lemon/lemon.c,1713,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    spcnt += (int) strlen(argv[i])+1;,cdc02b9c6a2be00d65b64a6f54d52b496540cfa7e10135e379daeb599a8557eb
wireshark-1.4.15/tools/lemon/lemon.c,1759,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if( strncmp(&argv[i][1],op[j].label,strlen(op[j].label))==0 ) break;",c12f018a2a675df591e3ad7cf84fc7565e4685910dc0f850d374c4c384daa066
wireshark-1.4.15/tools/lemon/lemon.c,1929,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len = (int) strlen(op[i].label) + 1;,937e27d27fee0d4e004e0a459e4fe90e2111d40cb15ffaae09371c66d391f6b7
wireshark-1.4.15/tools/lemon/lemon.c,1958,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          (int)(max-strlen(op[i].label)-9),"""",op[i].message);",8a4fa2914681ae5d8da38f83146f59595b1411a1ad7a560fdd7cbd3bcee58ec7
wireshark-1.4.15/tools/lemon/lemon.c,1963,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          (int)(max-strlen(op[i].label)-6),"""",op[i].message);",2dc718301cb6add221832bf6b3cc198b74edbf8409f4a6a47646faa19f1cdfd7
wireshark-1.4.15/tools/lemon/lemon.c,1968,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          (int)(max-strlen(op[i].label)-8),"""",op[i].message);",b7d67d8c10b22b848c1714ee10ac7695d99da232ccc98cc042bd48cf4607c1bc
wireshark-1.4.15/tools/lemon/lemon.c,2379,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        nNew = (int) strlen(zNew);,6da4e3058ae4c956d8abebc878d8dc12e4c16a7a40a9782447b3aa05c0f0127d
wireshark-1.4.15/tools/lemon/lemon.c,2385,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        nOld = (int) strlen(zOld);,9f906f41eaa4b6f908f249e8b8d9b01790ea0d537177ec2da942f5eb3e4b35d1
wireshark-1.4.15/tools/lemon/lemon.c,2394,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          nLine = (int) strlen(zLine);,0e51054ee9fd7d2ffd76c40ef9fb495c712ffa35b6646a61401d8d6e7562c03e
wireshark-1.4.15/tools/lemon/lemon.c,2395,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          n += nLine + (int) strlen(psp->filename) + nBack;,8dd57f493104a06c16d283a3de888b3ad4949b687b0a90ee11e0be512c838c28
wireshark-1.4.15/tools/lemon/lemon.c,2510,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"          if( strncmp(azDefine[k],&z[j],n)==0 && (int)strlen(azDefine[k])==n ){",05f25f6434937e83150b0b80916485323c1dcdbec01ea6235aeac0d032684658
wireshark-1.4.15/tools/lemon/lemon.c,2770,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  name = malloc( strlen(pattern) + strlen(suffix) + 5 );,3a463b00b0a0b29a4f4e88e18a521eef5a1fd0989355baf678178d1dfaebb6b9
wireshark-1.4.15/tools/lemon/lemon.c,2770,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  name = malloc( strlen(pattern) + strlen(suffix) + 5 );,3a463b00b0a0b29a4f4e88e18a521eef5a1fd0989355baf678178d1dfaebb6b9
wireshark-1.4.15/tools/lemon/lemon.c,2811,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	  lemp->outname = malloc( strlen(lemp->outdirname) + strlen(name) + 2);,b8654629bf1bbf04a0edce1383bc23b778b931196e70d10b8244ad96db17fd47
wireshark-1.4.15/tools/lemon/lemon.c,2811,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	  lemp->outname = malloc( strlen(lemp->outdirname) + strlen(name) + 2);,b8654629bf1bbf04a0edce1383bc23b778b931196e70d10b8244ad96db17fd47
wireshark-1.4.15/tools/lemon/lemon.c,2818,4,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"	  strcat(lemp->outname, ""\\"");",b0d577b1935505961b15441de4ec76d8bbbebf63fde65494307c5ad0f48ca560
wireshark-1.4.15/tools/lemon/lemon.c,2820,4,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"	  strcat(lemp->outname, ""/"");",57fae954e4f3f53188d9b42af446c0b171e529c7101338672129d4c7f72f3204
wireshark-1.4.15/tools/lemon/lemon.c,2849,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len = (int) strlen(sp->name);,b9488214ccb54e7cbf7a29d2313da1fb4605bce7e540cd222ba65b9d3a868a87
wireshark-1.4.15/tools/lemon/lemon.c,3052,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    path = (char *)malloc( strlen(argv0) + strlen(name) + 2 );,345519f555e01c2d46511a02a62868ffdbd0bdc6e83dcf301fa6b3869483617d
wireshark-1.4.15/tools/lemon/lemon.c,3052,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    path = (char *)malloc( strlen(argv0) + strlen(name) + 2 );,345519f555e01c2d46511a02a62868ffdbd0bdc6e83dcf301fa6b3869483617d
wireshark-1.4.15/tools/lemon/lemon.c,3058,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    path = (char *)malloc( strlen(pathlist)+strlen(name)+2 );,022b1cf505d5ec2be30953ec21f49a2d57041ebc0666d5941499b7b6a2a809ef
wireshark-1.4.15/tools/lemon/lemon.c,3058,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    path = (char *)malloc( strlen(pathlist)+strlen(name)+2 );,022b1cf505d5ec2be30953ec21f49a2d57041ebc0666d5941499b7b6a2a809ef
wireshark-1.4.15/tools/lemon/lemon.c,3062,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if( cp==0 ) cp = &pathlist[strlen(pathlist)];,de1ae571ec287a8c279211101e3ec2ad55d5974bdcb47c75ace43bb0f736f019
wireshark-1.4.15/tools/lemon/lemon.c,3289,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    n = (int) strlen(zText);,b5c3b0afd72f2dc71866a7efb016c96c70109c943a332fcc7915d8aeb45f3e20
wireshark-1.4.15/tools/lemon/lemon.c,3302,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      used += (int) strlen(&z[used]);,4935c43a04ac9b94235bf841858c35783ffc1afdfbf81dcafcfb7941586861a7
wireshark-1.4.15/tools/lemon/lemon.c,3455,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    maxdtlength = (int) strlen(lemp->vartype);,3af020219895ca1aed9af2d0075d1e72e78dcb437f2882a518ab9399d57974c1
wireshark-1.4.15/tools/lemon/lemon.c,3461,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len = (int) strlen(sp->datatype);,e01a30550b1f233c3ec5352a5420b97ac2b65bbdcc5d0f3a5babb7f90fecaf30
wireshark-1.4.15/tools/lemon/lemon.c,3513,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      types[hash] = (char*)malloc( strlen(stddt)+1 );,3057ba04cca03f2b5335ac3eddbb0299c22c0624859d6a6960f3f9d7b42f2bab
wireshark-1.4.15/tools/lemon/lemon.c,3691,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    i = (int) strlen(lemp->arg);,f35504f7fb3d49424f918c3d68183d68eb43b4fe5c66f6f2222c3b158745db9b
wireshark-1.4.15/tools/lemon/lemon.c,4278,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if( z==0 && (z=malloc( strlen(y)+1 ))!=0 ){,d0c88103fa22a236ad139540d2e18780039253aec8738a6e9dd579853ffe4bd6
wireshark-1.4.15/tshark.c,497,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  while ( table_name[strlen(table_name) - 1] == ' ' ),ada17a70580a1843d193de8315b88fb8ad645e1ce965dfe418b60821982f7f44
wireshark-1.4.15/tshark.c,498,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    table_name[strlen(table_name) - 1] = '\0'; /* Note: if empty string, while loop will eventually exit */",31e7d5414dbc4ef0c83356d669b4e97684ee151b3dfffa5e4a7245e57c8cea3d
wireshark-1.4.15/tshark.c,598,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  while ( dissector_str[strlen(dissector_str) - 1] == ' ' ),174f0269694a3598e965c534d1831b0498c53e4de7b5510bde7968184844c17a
wireshark-1.4.15/tshark.c,599,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    dissector_str[strlen(dissector_str) - 1] = '\0'; /* Note: if empty string, while loop will eventually exit */",1857565f2df50462b8f108f6d4c26b5583296b769461fad63e0961c507b968c0
wireshark-1.4.15/tshark.c,2969,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = strlen(cf->cinfo.col_data[i]);,c5f47e1f70f097fbf3baa32db534be7fd11d7072e70b09a1a8c33d9691416e66
wireshark-1.4.15/tshark.c,2980,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = strlen(cf->cinfo.col_data[i]);,c5f47e1f70f097fbf3baa32db534be7fd11d7072e70b09a1a8c33d9691416e66
wireshark-1.4.15/tshark.c,2996,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = strlen(cf->cinfo.col_data[i]);,c5f47e1f70f097fbf3baa32db534be7fd11d7072e70b09a1a8c33d9691416e66
wireshark-1.4.15/tshark.c,3012,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = strlen(cf->cinfo.col_data[i]);,c5f47e1f70f097fbf3baa32db534be7fd11d7072e70b09a1a8c33d9691416e66
wireshark-1.4.15/tshark.c,3020,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = strlen(cf->cinfo.col_data[i]);,c5f47e1f70f097fbf3baa32db534be7fd11d7072e70b09a1a8c33d9691416e66
wireshark-1.4.15/tshark.c,3057,11,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"          strcat(line_bufp + buf_offset, "" "");",b503c0fff3b4b57fe31eacbbd732322297e08e9879605f5408a5feca0afed059
wireshark-1.4.15/tshark.c,3076,11,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"          strcat(line_bufp + buf_offset, "" "");",b503c0fff3b4b57fe31eacbbd732322297e08e9879605f5408a5feca0afed059
wireshark-1.4.15/tshark.c,3095,11,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"          strcat(line_bufp + buf_offset, "" "");",b503c0fff3b4b57fe31eacbbd732322297e08e9879605f5408a5feca0afed059
wireshark-1.4.15/tshark.c,3114,11,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"          strcat(line_bufp + buf_offset, "" "");",b503c0fff3b4b57fe31eacbbd732322297e08e9879605f5408a5feca0afed059
wireshark-1.4.15/tshark.c,3133,11,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"          strcat(line_bufp + buf_offset, "" "");",b503c0fff3b4b57fe31eacbbd732322297e08e9879605f5408a5feca0afed059
wireshark-1.4.15/tshark.c,3152,11,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"          strcat(line_bufp + buf_offset, "" "");",b503c0fff3b4b57fe31eacbbd732322297e08e9879605f5408a5feca0afed059
wireshark-1.4.15/tshark.c,3159,9,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120),"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused)",Risk is low because the source is a constant character.,CWE-120,"        strcat(line_bufp + buf_offset, "" "");",b503c0fff3b4b57fe31eacbbd732322297e08e9879605f5408a5feca0afed059
wireshark-1.4.15/util.c,62,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		len += (int) strlen(argv[i]);,7d9e3b9bf06ce9832ce1c7e38acb8b2ad15598bd6cc3bfa4e7772f725d3bc8a3
wireshark-1.4.15/version_info.c,90,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	point = strlen(str->str);,800ddfa6c2a202ae16b08395e42c14349eb18a7da6d61a4ce405399422d2b25e
wireshark-1.4.15/wiretap/ascend.c,1112,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,#   define yystrlen strlen,f58e5af90f443fae6a8a00af8329b8deb4c6b071121abb824c921b654510f050
wireshark-1.4.15/wiretap/ascend_scanner.c,1661,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( ascendin )) != EOF && c != '\n'; ++n ) \,93d81906c03e4fa0de6daecffac8de15828af0422d642339706e5e94ce3bd41b
wireshark-1.4.15/wiretap/ascend_scanner.c,1974,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen(atcopy) > 2),1c03496b00e5c2e32ff5ae2e2a6ec1f293d7146ea832c975fe00c748e307c984
wireshark-1.4.15/wiretap/ascend_scanner.c,2937,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return ascend_scan_bytes(yystr,strlen(yystr) );",39130d9c07f998cb743c595e0aa8861dc7b475b0232a63c442c7bb8cefc85fa8
wireshark-1.4.15/wiretap/ascendtext.c,115,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      size_t len          = strlen(strptr);,a9d3325191d84b5552b2535884b821ebadecbdf9ec375b3d926621d235fabf35
wireshark-1.4.15/wiretap/catapult_dct2000.c,189,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (((size_t)firstline_length < strlen(catapult_dct2000_magic)) ||,ea6ad7a4393a466b24d88a5b1d50950fb5caef40fbcb9fc0974bd5e45b8ff48c
wireshark-1.4.15/wiretap/catapult_dct2000.c,196,50,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (memcmp(catapult_dct2000_magic, linebuff, strlen(catapult_dct2000_magic)) != 0) {",3674c012a4020585ed9aa468decddff97e8b2dd152bb8048a5aadc78e2be99df
wireshark-1.4.15/wiretap/catapult_dct2000.c,355,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                                strlen(context_name)+1 +     /* Context name */,bad92716c9e304749f20ebeb92a2dd8012595076c722201dd3dd0da94d56e120
wireshark-1.4.15/wiretap/catapult_dct2000.c,357,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                                strlen(timestamp_string)+1 + /* timestamp */,309e28d78e819341aac894d9d3692dac82fdcc7553f15e5bcc37c8efd4fdd01c
wireshark-1.4.15/wiretap/catapult_dct2000.c,358,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                                strlen(variant_name)+1 +     /* variant */,8dfa283ffc6002ed93e085cdd4427978fd1fec5841e76969d437aa494f1ab1d1
wireshark-1.4.15/wiretap/catapult_dct2000.c,359,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                                strlen(outhdr_name)+1 +      /* outhdr */,246d9634f33f346d1eca40e78cb292c9014c66e7d808249fb20906154bec6d76
wireshark-1.4.15/wiretap/catapult_dct2000.c,360,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                                strlen(protocol_name)+1 +    /* Protocol name */,580531d2d65244caf6a0f8c7bc70e5eac1419aff93fb2d910287da8f9c995c52
wireshark-1.4.15/wiretap/catapult_dct2000.c,408,68,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (((size_t)(dollar_offset - after_time_offset -1) == strlen("" l "")) &&",d61ac5f91ea000d908ceef7741d820048e034f65c2459dddc2a080b0c29a9309
wireshark-1.4.15/wiretap/catapult_dct2000.c,409,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (strncmp(linebuff+after_time_offset, "" l "", strlen("" l "")) == 0)) {",7ddce33cad33edacf903688ab2eabbfb87a570768bb6b42aa7860db9f17b563c
wireshark-1.4.15/wiretap/catapult_dct2000.c,666,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                              strlen(prefix->before_time), err)) {",1c7ae7a906c197f39ab3ee7d88134124c66397c5b2e8bdbc945a5f7be85144ea
wireshark-1.4.15/wiretap/catapult_dct2000.c,686,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (!wtap_dump_file_write(wdh, time_string, strlen(time_string), err)) {",7d1c5d0124de6100253493dee6fa29c71e61d1df096edc6258e187fe7602318c
wireshark-1.4.15/wiretap/catapult_dct2000.c,692,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        if (!wtap_dump_file_write(wdh, "" l "", strlen("" l ""), err)) {",872d0c506eed659eaf1b6e61b8c24e4590446e75f14a801c8a00b2fb807d4f4a
wireshark-1.4.15/wiretap/catapult_dct2000.c,698,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                  strlen(prefix->after_time), err)) {",167f753cc49e11252f8488d6f4798d3ee4fa816f6305d2f750aa076658df85af
wireshark-1.4.15/wiretap/catapult_dct2000.c,797,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    *length = (gint)strlen(linebuff);,dcfb0eaae6b14e8e5b341e139d3bf21c3fd213e2a19a5a053d690cc2070e1189
wireshark-1.4.15/wiretap/catapult_dct2000.c,1050,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        (strncmp(protocol_name, ""nbap_sscfuni"", strlen(""nbap_sscfuni"")) == 0)) {",f30311b6d635260ccea5cb6c67ddcbff09439af840c4644f17f1d4cdcc1ba29d
wireshark-1.4.15/wiretap/catapult_dct2000.c,1231,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    stub_offset += (int)(strlen(context_name) + 1);,add38d69729ce2c11cc355779de74bb5d4ce0dbbffbba461f900ac582f4bf685
wireshark-1.4.15/wiretap/catapult_dct2000.c,1239,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    stub_offset += (int)(strlen(timestamp_string) + 1);,78524fc64bf3098bd06c659b0d7810de7f62883612d01d5e1e595b2f4d03b8a4
wireshark-1.4.15/wiretap/catapult_dct2000.c,1243,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    stub_offset += (int)(strlen(protocol_name) + 1);,3eb77942f00cc8439a79c615db81c156912e2d4b96b4fa6f6bdce4ac6a0d80c1
wireshark-1.4.15/wiretap/catapult_dct2000.c,1247,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    stub_offset += (int)(strlen(variant_name) + 1);,228f7c43b6d3937f2d554945d72dfdf81b6050997370ff93f90c0f36741a3916
wireshark-1.4.15/wiretap/catapult_dct2000.c,1251,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    stub_offset += (int)(strlen(outhdr_name) + 1);,276956238d9bf16d67f0c418eb20eb27dac8a6c4ebf99ed40a473c0046f5648d
wireshark-1.4.15/wiretap/catapult_dct2000.c,1452,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(linebuff) > MAX_TIMESTAMP_LINE_LENGTH) {,45ed3afa4c39be45b01fd1c31b097a7fa77e37bed874b079633eae2f9131c86d
wireshark-1.4.15/wiretap/cosine.c,259,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			reclen = strlen(buf);,7f686eefc37111678b69994ea1d84a975d5e25fd0d4b5092dd972466c748e1c6
wireshark-1.4.15/wiretap/cosine.c,260,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			if (reclen < strlen(COSINE_HDR_MAGIC_STR1) ||,6304620daa407a18010836e160ed3305928bc448de19a3d816fd1e79fcf29773
wireshark-1.4.15/wiretap/cosine.c,261,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				reclen < strlen(COSINE_HDR_MAGIC_STR2)) {,599208dadbf79bbc16c487de60eda9a9d442e65ff5df07963884878cf6364a36
wireshark-1.4.15/wiretap/cosine.c,386,23,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"		num_items_scanned = sscanf(line,",de54cd4ad9e714cc86b57a80ea6f979903c3761a16472ab8d5935ef760b09125
wireshark-1.4.15/wiretap/cosine.c,400,23,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"		num_items_scanned = sscanf(line,",de54cd4ad9e714cc86b57a80ea6f979903c3761a16472ab8d5935ef760b09125
wireshark-1.4.15/wiretap/daintree-sna.c,109,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	wth->data_offset += strlen(readLine);,c255a51e7794208d43088fdd0b0f2cb7ef007cf70752b225f66c16e402b1dcf7
wireshark-1.4.15/wiretap/daintree-sna.c,120,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	wth->data_offset += strlen(readLine); ,c255a51e7794208d43088fdd0b0f2cb7ef007cf70752b225f66c16e402b1dcf7
wireshark-1.4.15/wiretap/daintree-sna.c,151,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		wth->data_offset += strlen(readLine);,c255a51e7794208d43088fdd0b0f2cb7ef007cf70752b225f66c16e402b1dcf7
wireshark-1.4.15/wiretap/dbs-etherwatch.c,159,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			reclen = strlen(buf);,7f686eefc37111678b69994ea1d84a975d5e25fd0d4b5092dd972466c748e1c6
wireshark-1.4.15/wiretap/dbs-etherwatch.c,353,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	p += strlen(DEST_MAC_PREFIX);,05703036f79fcdcefdbd3da943b9d8e5ea4ce617f74597a867915772b6df9c9c
wireshark-1.4.15/wiretap/dbs-etherwatch.c,390,5,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if(strlen(line) < LENGTH_POS) {,0c2bd9cf45286c1963a419e997685bf64ddc5c575210706b22a2a91a905b7c45
wireshark-1.4.15/wiretap/dbs-etherwatch.c,396,22,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"	num_items_scanned = sscanf(line + LENGTH_POS,",254a9cded3afed880b5dd86601a19dd7599195bcae789a212258aa88571a916b
wireshark-1.4.15/wiretap/dbs-etherwatch.c,411,3,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		strlen(ETH_II_CHECK_STR)) == 0) {,5b9caca21f08e6782c0a49b49dd766f87cbfb10a33db1e1e88bc714e73aa48c1
wireshark-1.4.15/wiretap/dbs-etherwatch.c,460,5,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				strlen(SNAP_CHECK_STR)) == 0) {,cfe5698d42b0525c988a5b141f10186a1991a760ab5d04f99beb3e5888268d04
wireshark-1.4.15/wiretap/dct3trace.c,103,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	unsigned char *end = in + strlen((char *)in);,3b317a8ee3f91717277c81f0574342387671cfb6e2962a99bd5921c73a62366f
wireshark-1.4.15/wiretap/dct3trace.c,175,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		if( strncmp(dct3trace_magic_line1, line1, strlen(dct3trace_magic_line1)) == 0 &&",b9c2b662b1e0b250a6389cf59a3c7e0bc8a5e6a212bd58f368b0379aa7067d4d
wireshark-1.4.15/wiretap/dct3trace.c,176,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			strncmp(dct3trace_magic_line2, line2, strlen(dct3trace_magic_line2)) == 0)",880d03ac996456b1d9d5c81233b66cf8abae8c0082fa0afe1a8b6c57d6a34fa9
wireshark-1.4.15/wiretap/dct3trace.c,225,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		if( memcmp(dct3trace_magic_end, line, strlen(dct3trace_magic_end)) == 0 )",66c9192550ba60bf93d648f85d82a819bd593e513a6d104b15d64ce47bc55bc5
wireshark-1.4.15/wiretap/dct3trace.c,231,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		else if( memcmp(dct3trace_magic_record_end, line, strlen(dct3trace_magic_record_end)) == 0 )",ca4ff42b1e787ea0915f8fb2329eb56358ea7a438e4c8330a297eaea40bd84c8
wireshark-1.4.15/wiretap/dct3trace.c,247,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		else if( memcmp(dct3trace_magic_record_start, line, strlen(dct3trace_magic_record_start)) == 0 )",752f9481ac7cdf2bdb1c6d4f03003ca84385eacfa5fcfc5362906cb1ff51dab1
wireshark-1.4.15/wiretap/dct3trace.c,296,65,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		else if( !have_data && memcmp(dct3trace_magic_l2_start, line, strlen(dct3trace_magic_l2_start)) == 0 )",561b642389d889f6e8ea99d316be93bb9ec29d524d31af9e58aebc6e3539d825
wireshark-1.4.15/wiretap/file_wrappers.h,49,19,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",#define file_getc fgetc,ea5d1475e57edcdfa581a5543976f3e0ee8836bbe018608c0df9c77f8ea432cb
wireshark-1.4.15/wiretap/iseries.c,288,24,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"	  num_items_scanned = sscanf (buf,",9b1ee9e9dc4204145a876d845a72ca76288504703b9353ec7c9d79af92e63001
wireshark-1.4.15/wiretap/iseries.c,300,24,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"	  num_items_scanned = sscanf (buf,",9b1ee9e9dc4204145a876d845a72ca76288504703b9353ec7c9d79af92e63001
wireshark-1.4.15/wiretap/iseries.c,405,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	      buflen = (long) strlen (buf);,8a7bb2f3ef621729c0fa77a31d1d3cdd82e555cf0eafc0bb7e16bf471522ff0a
wireshark-1.4.15/wiretap/iseries.c,529,2,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"	sscanf (data,",303e662889c278c0e6f62d73e63ed9f9aa2beeb724f29d8494c947e8d2e31e72
wireshark-1.4.15/wiretap/iseries.c,634,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	  buflen = (int) strlen (data);,d6daa647d4385874c1aacb982b60b4ccdcfba3051e187c6c4b76a29491d8983c
wireshark-1.4.15/wiretap/iseries.c,638,27,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"      num_items_scanned = sscanf (data + 22, ""IP Header  : %40s"", ipheader);",0fe5c40bcdd763bfded90521b61f0e04b35f8cefc523d2931bd22f37f1a0583a
wireshark-1.4.15/wiretap/iseries.c,645,27,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"      num_items_scanned = sscanf (data + 22, ""TCP Header : %80s"", tcpheader);",028d14a675f04f368bd4ec091fcb1552f0ae5162f43cd13c5dcdd735b7f11f3e
wireshark-1.4.15/wiretap/iseries.c,779,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      iseries_parse_hex_string (asciibuf, buf, (int) strlen (asciibuf));",5fc9da47bfea773623ab7f395723d7ac32d81b6ea9a4bf68daba7cfeeb5d931d
wireshark-1.4.15/wiretap/iseries.c,784,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      iseries_parse_hex_string (asciibuf, pd, (int) strlen (asciibuf));",16b4e300804fb2af919b8094d241ab3602bbde4660efea3d898e4eb3138f626a
wireshark-1.4.15/wiretap/k12.c,877,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    obj.record.name_len = (guint16) strlen(src_desc->input_name) + 1;,60b2afd1383bf92fec95be09351a178d6b3e60753518c22d040aea7db1194ada
wireshark-1.4.15/wiretap/k12.c,878,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    obj.record.stack_len = (guint16) strlen(src_desc->stack_file) + 1;,61a1b31f40db6a52e34976dea6e2c4e8ac31337a1cec3cc4263517025defb0a2
wireshark-1.4.15/wiretap/k12text.c,1075,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( K12Text_in )) != EOF && c != '\n'; ++n ) \,e8513664969432db76987b1a6cecff32e9db9b4d5f7928a0ef170b4e5399ae0a
wireshark-1.4.15/wiretap/k12text.c,2067,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return K12Text__scan_bytes(yystr,strlen(yystr) );",7ae32ac9183a66ba34bc8efa251559516b9668a7483ead46dbda9aac9a7b6e66
wireshark-1.4.15/wiretap/k12text.c,2527,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	wl = strlen(p);,b4bfc22b53abaae8f55de876b715296876ce87f116539763752ed02025da51fa
wireshark-1.4.15/wiretap/k12text.c,2545,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return wtap_dump_file_write(wdh, buf, strlen(buf), err);",14f28b39d689ebabb0b43041931628ff0c6bae94ac3ee3894769a2eb69cc02f8
wireshark-1.4.15/wiretap/netscreen.c,167,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			reclen = (guint) strlen(buf);,3cf261a71ced9499ee8c059d0e6790f246cb99bc4d3871e2dd76dee447ea475c
wireshark-1.4.15/wiretap/netscreen.c,168,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			if (reclen < strlen(NETSCREEN_HDR_MAGIC_STR1) ||,4513ea885fb4aef41e0714a75bc2cc16a2136d62fea8085c37b6e47e3a48ce95
wireshark-1.4.15/wiretap/netscreen.c,169,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				reclen < strlen(NETSCREEN_HDR_MAGIC_STR2)) {,298bd5251af626dc9efbead6bb292610c41b89c47211f77207eb9b08f34da5d2
wireshark-1.4.15/wiretap/netscreen.c,355,6,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"	if (sscanf(line, ""%9d.%9d: %15[a-z0-9/:.-](%1[io]) len=%9d:%12s->%12s/"",",947b1d9bbf4c6d8d7c8cbc4a2743f59fbb65ea3373fe4fea9b05b506444bd0ec
wireshark-1.4.15/wiretap/netscreen.c,402,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if(strlen(line) != 98),56186a3e1d01e7fe318ad9c937332d9ed17efd2771a56090cde4a4a428a4b6ab
wireshark-1.4.15/wiretap/network_instruments.c,528,101,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	file_header.offset_to_first_packet = (guint16) (sizeof(capture_file_header) + sizeof(tlv_header) + strlen(comment));,dec15b5814c669fd155fef3769bf49177df35592cb44640e33362ab5b6176227
wireshark-1.4.15/wiretap/network_instruments.c,536,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	comment_header.length = (guint16) (sizeof(tlv_header) + strlen(comment));,f98911801449c359d0a1789dc8fbc3c4e76934d11be0cce951dd34c189899803
wireshark-1.4.15/wiretap/network_instruments.c,540,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	if(!wtap_dump_file_write(wdh, &comment, strlen(comment), err))",35ea1f23ea21677fe8f76d1569c151bbfa706ff76b2007c6eb4df71e5d885ccc
wireshark-1.4.15/wiretap/toshiba.c,180,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			reclen = (guint) strlen(buf);,3cf261a71ced9499ee8c059d0e6790f246cb99bc4d3871e2dd76dee447ea475c
wireshark-1.4.15/wiretap/toshiba.c,317,22,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"	num_items_scanned = sscanf(line, ""%d] %d:%d:%d.%d %9s %9s"",",273d666dbe0bf1deca37907461ffeee75ad4d9acc061a74ff12a95d2468071dc
wireshark-1.4.15/wiretap/vms.c,225,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      reclen = (guint) strlen(buf);,3cf261a71ced9499ee8c059d0e6790f246cb99bc4d3871e2dd76dee447ea475c
wireshark-1.4.15/wiretap/vms.c,226,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if (reclen < strlen(VMS_HDR_MAGIC_STR1) ||,64b85a7932c05f7f41549a03c8e83dab02e6014ba076d90fe41299a9c8e83f97
wireshark-1.4.15/wiretap/vms.c,227,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	  reclen < strlen(VMS_HDR_MAGIC_STR2) || ,cabb6548b9bdb47b83640193fec5c215db28c4269dd9558a17baf83d17f9e1c5
wireshark-1.4.15/wiretap/vms.c,228,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	  reclen < strlen(VMS_HDR_MAGIC_STR3)) {,bf8d196cdb69e2f8a1ec8c4da0376c55aeb0c89af41a60555fe2f9128ae51e7c
wireshark-1.4.15/wiretap/vms.c,400,26,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"	    num_items_scanned = sscanf(p,  ",78d705a9db85965b5cf41ba4fed3ebd50adf24920be5d868e0a60eaafb5c27f1
wireshark-1.4.15/wiretap/vms.c,407,28,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"	      num_items_scanned = sscanf(p,",78d705a9db85965b5cf41ba4fed3ebd50adf24920be5d868e0a60eaafb5c27f1
wireshark-1.4.15/wsutil/file_util.c,238,13,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      len = wcslen (wfilename);,be487b3433b8190a1a4d98599da3ce50bf90692ffce2e5bbce6314186d7e0445
wireshark-1.4.15/wsutil/file_util.h,127,18,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",#define ws_read  read,7678996c4486d0a52ddd975d3a8b7289e7f565ab462a9de571f1dabe87308d69
wireshark-1.4.15/wsutil/inet_ntop.c,215,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			tp += strlen(tp);,49aa5fb00d8422097c07498fdd29f6b21cc85f409d2a2add9b04c576424cec7c
wireshark-1.4.15/wsutil/strptime.c,74,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  ({ size_t len = strlen (cs1);						      \,cced5e5ecb66afe996676ac024f5313fbdacb6cf3de2d9957c87483066e03872
wireshark-1.4.15/wsutil/strptime.c,81,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  (strncasecmp ((cs1), (s2), strlen (cs1)) ? 0 : ((s2) += strlen (cs1), 1))",f6b185f68dd464794df3205e5f734c4ee83bed7fa9569e94fb38a95739f0d7be
wireshark-1.4.15/wsutil/strptime.c,81,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  (strncasecmp ((cs1), (s2), strlen (cs1)) ? 0 : ((s2) += strlen (cs1), 1))",f6b185f68dd464794df3205e5f734c4ee83bed7fa9569e94fb38a95739f0d7be
wireshark-1.4.15/wsutil/strptime.c,116,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	      size_t len = strlen (alts);				      \,7aebe15f62d26546f84acecc1e7d65d01e264a959482af02bfd101ef77195b49
wireshark-1.4.15/wsutil/wsgetopt.c,202,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,extern size_t strlen (const char *);,ae233f61ad3d836166b42609e174dc5977092723fd3b5132aa490b019194d693
wireshark-1.4.15/wsutil/wsgetopt.c,481,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    if ((size_t)(s - nextchar) == strlen (p->name)),a5ef45ed65d5507de7db3f4618bde7fdfdcb49510613b2d42f5154269b7ed274
wireshark-1.4.15/wsutil/wsgetopt.c,505,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	  nextchar += strlen (nextchar);,54abb0678848e4278f5538536624ab7bb52279231bc27717b8f6ebaf2386cdf0
wireshark-1.4.15/wsutil/wsgetopt.c,535,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		  nextchar += strlen (nextchar);,54abb0678848e4278f5538536624ab7bb52279231bc27717b8f6ebaf2386cdf0
wireshark-1.4.15/wsutil/wsgetopt.c,548,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		  nextchar += strlen (nextchar);,54abb0678848e4278f5538536624ab7bb52279231bc27717b8f6ebaf2386cdf0
wireshark-1.4.15/wsutil/wsgetopt.c,552,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	  nextchar += strlen (nextchar);,54abb0678848e4278f5538536624ab7bb52279231bc27717b8f6ebaf2386cdf0
