File,Line,Column,Level,Category,Name,Warning,Suggestion,Note,CWEs,Context,Fingerprint
wireshark-2.2.17/wsutil/file_util.c,665,17,5,misc,SetSecurityDescriptorDacl,"Never create NULL ACLs; an attacker can set it to Everyone (Deny All Access), which would even forbid administrator access (CWE-732)",,,CWE-732,"            if (SetSecurityDescriptorDacl(sec_attributes_->lpSecurityDescriptor, TRUE, NULL, FALSE)) {",1d2f994c7ae608a12b3cfa0729d122c5c3c634bd6005b0a15cf01773ef5a7db2
wireshark-2.2.17/wsutil/file_util.c,665,17,5,misc,SetSecurityDescriptorDacl,"Never create NULL ACLs; an attacker can set it to Everyone (Deny All Access), which would even forbid administrator access (CWE-732)",,,CWE-732,"            if (SetSecurityDescriptorDacl(sec_attributes_->lpSecurityDescriptor, TRUE, NULL, FALSE)) {",1d2f994c7ae608a12b3cfa0729d122c5c3c634bd6005b0a15cf01773ef5a7db2
wireshark-2.2.17/wsutil/filesystem.c,369,14,5,race,readlink,"This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20)",Reconsider approach,,"CWE-362, CWE-20","    if ((r = readlink(""/proc/self/exe"", executable_path, PATH_MAX)) == -1)",9595580251608fbb062e1c8403c530c9233058e2e702645fe2427fb4c83d6797
wireshark-2.2.17/wsutil/filesystem.c,412,14,5,race,readlink,"This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20)",Reconsider approach,,"CWE-362, CWE-20","    if ((r = readlink(""/proc/curproc/exe"", executable_path, PATH_MAX)) == -1)",b665afaded71d1b0e3dde2d212817d3fe73f55d0fb5a2990663113c7f0eb517b
wireshark-2.2.17/wsutil/filesystem.c,426,14,5,race,readlink,"This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20)",Reconsider approach,,"CWE-362, CWE-20","    if ((r = readlink(""/proc/curproc/file"", executable_path, PATH_MAX)) == -1)",5665e88ee83ee6e4ba8a017b76fb85f88aed4647f4fe0e9c2aec1e8b13b07b67
wireshark-2.2.17/capchild/capture_sync.c,588,9,4,shell,execv,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"        execv(argv[0], argv);",bac81e398220718dfd565f6029e2ef5be7c0062f07b43ca5dccf9ab83eb2b916
wireshark-2.2.17/capchild/capture_sync.c,863,9,4,shell,execv,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"        execv(argv[0], argv);",bac81e398220718dfd565f6029e2ef5be7c0062f07b43ca5dccf9ab83eb2b916
wireshark-2.2.17/caputils/airpcap_loader.c,935,9,4,buffer,sscanf,"The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20)","Specify a limit to %s, or use a different input function","If the scanf format is influenceable by an attacker, it's exploitable.","CWE-120, CWE-20","    a = sscanf(if_info->name,AIRPCAP_DEVICE_NUMBER_EXTRACT_STRING,&n);",701317050a72078c975ef478dd1b128457fdd5151074ee973082335715af7a23
wireshark-2.2.17/dftest.c,181,2,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	vfprintf(stderr, msg_format, ap);",86136173c58c733984fb74a144954a9280a9688dd7f7e33902cc12829176cb6b
wireshark-2.2.17/dftest.c,192,2,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	fprintf(stderr, file_open_error_message(err, for_writing), filename);",e69ca8d332d0deae88e3f2bee60a43d891aec19018911a0c126cf51a8ad0ec07
wireshark-2.2.17/dumpcap.c,541,9,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/dumpcap.c,560,9,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/echld/child.c,87,2,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134)",Use a constant for the format specification,,CWE-134,"	vsnprintf(str,DBG_BUF_LEN,fmt,ap);",d0b21de7dbafa7123c84e4bef0863ddd2ede87b7bda074dcd214d1bb26c17c13
wireshark-2.2.17/epan/addr_resolv.c,2011,9,4,buffer,sscanf,"The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20)","Specify a limit to %s, or use a different input function","If the scanf format is influenceable by an attacker, it's exploitable.","CWE-120, CWE-20","    if (sscanf(cp, ""%"" G_GUINT16_FORMAT, &id) == 1) {",acc6576787e74e57442de400538de1cc555fd90a44f53ed3da9ae53ca0b83683
wireshark-2.2.17/epan/dfilter/semcheck.c,45,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,	printf x; \,cccfd200c16704b58ec3c09dfbac323ff88747a41348c882c338e7863e1b0d6e
wireshark-2.2.17/epan/diam_dict.c,3410,17,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	if (debugging) vfprintf(stderr, fmt, ap);",942c4caae03cca72f49f78ee892e9fe8a8283cfd69231cd6c1f7a6f2728515c7
wireshark-2.2.17/epan/dissectors/asn1/camel/packet-camel-template.c,328,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/epan/dissectors/asn1/ldap/packet-ldap-template.c,1698,76,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"ldap_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",b6cb81cb26407afb1843de3561c61dcdcae085f17f282931e52be89c8a139d60
wireshark-2.2.17/epan/dissectors/asn1/ldap/packet-ldap-template.c,1713,73,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"  proto_tree_add_bitmask_list_value(tree, tvb, offset, 4, access_flags, access);",8349420e1fc6a276fd3fea2744d9c102bf7ca9bf9b359fdd6eb64e71b41cbfb2
wireshark-2.2.17/epan/dissectors/asn1/snmp/packet-snmp-template.c,47,21,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,#define D(args) do {printf args; fflush(stdout); } while(0),154b9948bec589c7a3f70dd8aa743997584dc05bf0e2507eab9ef14b67569535
wireshark-2.2.17/epan/dissectors/asn1/tcap/packet-tcap-template.c,176,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,117,2,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	vfprintf (stderr, format, args);",7598b9622bd5c7f898c540d0b39d18a3af7d081811ece6b6e82a4223e97bac61
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,122,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"		vfprintf (fh, format, args);",9a40b886b7ab23bfcb2f81cf0ce2b144cc17d66894ca176987acfc9e72a5fd45
wireshark-2.2.17/epan/dissectors/packet-afp.c,2141,21,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,	static const int * access[] = {,c9803a950fd741d6ffa45c873cb6da013237b26502401b2c88a870601879c14a
wireshark-2.2.17/epan/dissectors/packet-afp.c,2157,27,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"					ett_afp_access_mode, access, ENC_BIG_ENDIAN);",e9003ea9be64a7a4673249a900fe80b70f5fd47a30e3492e75ce8e284c7b5cbd
wireshark-2.2.17/epan/dissectors/packet-camel.c,1301,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/epan/dissectors/packet-dcerpc-lsa.c,1318,85,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"lsarpc_policy_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",cf0cc23153d662f046af6629291f516da184c9f898209ad1088a178649acdae7
wireshark-2.2.17/epan/dissectors/packet-dcerpc-lsa.c,1336,72,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(tree, tvb, offset, 4, access_flags, access);",8349420e1fc6a276fd3fea2744d9c102bf7ca9bf9b359fdd6eb64e71b41cbfb2
wireshark-2.2.17/epan/dissectors/packet-dcerpc-lsa.c,1339,86,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"lsarpc_account_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",92d79c66e73a9dc1e15b2a16c1e4347a35dc07d07ea8fc4793e598f5edc64088
wireshark-2.2.17/epan/dissectors/packet-dcerpc-lsa.c,1348,72,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(tree, tvb, offset, 4, access_flags, access);",8349420e1fc6a276fd3fea2744d9c102bf7ca9bf9b359fdd6eb64e71b41cbfb2
wireshark-2.2.17/epan/dissectors/packet-dcerpc-lsa.c,1351,85,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"lsarpc_secret_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",8c1f46d2e10d5c773bdfdb497a9cb00ea802168c9dce41ea4383db0a5ebb2d18
wireshark-2.2.17/epan/dissectors/packet-dcerpc-lsa.c,1358,72,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(tree, tvb, offset, 4, access_flags, access);",8349420e1fc6a276fd3fea2744d9c102bf7ca9bf9b359fdd6eb64e71b41cbfb2
wireshark-2.2.17/epan/dissectors/packet-dcerpc-lsa.c,1361,85,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"lsarpc_domain_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",9c3ba4f05b7f64b3c3e6261afd15acd8fc3d370dc42758934e159f9e9cdc548d
wireshark-2.2.17/epan/dissectors/packet-dcerpc-lsa.c,1373,72,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(tree, tvb, offset, 4, access_flags, access);",8349420e1fc6a276fd3fea2744d9c102bf7ca9bf9b359fdd6eb64e71b41cbfb2
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,53,26,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"#define debugprintf(...) fprintf(stderr,__VA_ARGS__)",c0c43be001f27ba769816ef737467f4da3b6d65612f701a89f6b39e75dc397c2
wireshark-2.2.17/epan/dissectors/packet-dcerpc-samr.c,1988,84,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"samr_connect_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",6708f02d120a9d1a5b23c07d350ece366fd2fda35bf351e5919d56b686da3027
wireshark-2.2.17/epan/dissectors/packet-dcerpc-samr.c,1999,72,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(tree, tvb, offset, 4, access_flags, access);",8349420e1fc6a276fd3fea2744d9c102bf7ca9bf9b359fdd6eb64e71b41cbfb2
wireshark-2.2.17/epan/dissectors/packet-dcerpc-samr.c,2016,82,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"samr_alias_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",ef5f2612370a528a386b8c78a63ae2cb4738578390698b30dea30893df52940a
wireshark-2.2.17/epan/dissectors/packet-dcerpc-samr.c,2026,72,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(tree, tvb, offset, 4, access_flags, access);",8349420e1fc6a276fd3fea2744d9c102bf7ca9bf9b359fdd6eb64e71b41cbfb2
wireshark-2.2.17/epan/dissectors/packet-dcerpc-samr.c,2043,82,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"samr_group_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",f9a0b8d1a215d645084c26594778c2da3dd0ed0bc1dbea83c24010085bc69cc6
wireshark-2.2.17/epan/dissectors/packet-dcerpc-samr.c,2053,72,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(tree, tvb, offset, 4, access_flags, access);",8349420e1fc6a276fd3fea2744d9c102bf7ca9bf9b359fdd6eb64e71b41cbfb2
wireshark-2.2.17/epan/dissectors/packet-dcerpc-samr.c,2070,83,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"samr_domain_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",d060b4dbefe5858c621db39ac98baa8ea9e88e8403efb9d92c033d6e238e8a80
wireshark-2.2.17/epan/dissectors/packet-dcerpc-samr.c,2086,72,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(tree, tvb, offset, 4, access_flags, access);",8349420e1fc6a276fd3fea2744d9c102bf7ca9bf9b359fdd6eb64e71b41cbfb2
wireshark-2.2.17/epan/dissectors/packet-dcerpc-samr.c,2103,81,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"samr_user_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",0fe9ca920440c58282134550fa976a8f0e68479f1c55d5153a0869b5eeb7a5b5
wireshark-2.2.17/epan/dissectors/packet-dcerpc-samr.c,2119,72,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(tree, tvb, offset, 4, access_flags, access);",8349420e1fc6a276fd3fea2744d9c102bf7ca9bf9b359fdd6eb64e71b41cbfb2
wireshark-2.2.17/epan/dissectors/packet-dcerpc-spoolss.c,376,13,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,				guint32 access),cc0db921e462a033043de29bdb0861e0261006451bfad3737b662bd66dde9f47
wireshark-2.2.17/epan/dissectors/packet-dcerpc-spoolss.c,379,48,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		tree, hf_printer_access_use, tvb, offset, 4, access);",59c517dc7eaca61631dabb985e5d16e8bcc1a5558333e9a53a9761d0ebd08141
wireshark-2.2.17/epan/dissectors/packet-dcerpc-spoolss.c,382,50,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		tree, hf_printer_access_admin, tvb, offset, 4, access);",535dae0cdd521efef830d01af45e2679e9eda2be69f0882df8da7a9db511403d
wireshark-2.2.17/epan/dissectors/packet-dcerpc-spoolss.c,394,35,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"				    proto_tree *tree, guint32 access)",c81deb9b11f746f4fe40ba7a06b7ed8690095557c4ac27efef17f508c04e76ba
wireshark-2.2.17/epan/dissectors/packet-dcerpc-spoolss.c,397,48,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		tree, hf_server_access_enum, tvb, offset, 4, access);",9bd645cd60630d786107044d59827d846b09d19874f2535bb94fbd277e57fdd5
wireshark-2.2.17/epan/dissectors/packet-dcerpc-spoolss.c,400,49,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		tree, hf_server_access_admin, tvb, offset, 4, access);",ae6d3a70cb56de2cbb2c0f119bbe49300c25953a612f3d63dabff7b181f354cc
wireshark-2.2.17/epan/dissectors/packet-dcerpc-spoolss.c,412,34,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"			    proto_tree *tree, guint32 access)",c81deb9b11f746f4fe40ba7a06b7ed8690095557c4ac27efef17f508c04e76ba
wireshark-2.2.17/epan/dissectors/packet-dcerpc-spoolss.c,415,46,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"		tree, hf_job_access_admin, tvb, offset, 4, access);",909748156369456fb594f7155703f89a08dd74b0f2e1008a6fe88de1d3f6881c
wireshark-2.2.17/epan/dissectors/packet-dcerpc-svcctl.c,219,15,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		    guint32 access),cc0db921e462a033043de29bdb0861e0261006451bfad3737b662bd66dde9f47
wireshark-2.2.17/epan/dissectors/packet-dcerpc-svcctl.c,221,88,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_svcctl_scm_rights_modify_boot_config, tvb, offset, 4, access);",f6452e603e66e7b925c49905455a171c841b96430b286039a365c94be6e2d04f
wireshark-2.2.17/epan/dissectors/packet-dcerpc-svcctl.c,222,87,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_svcctl_scm_rights_query_lock_status, tvb, offset, 4, access);",59b7920fbd1f948e30b896a38c523b86c535b4a8f2a8ed27c9ff30b317a64b2a
wireshark-2.2.17/epan/dissectors/packet-dcerpc-svcctl.c,223,74,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_svcctl_scm_rights_lock, tvb, offset, 4, access);",47db0d3d75cfaedbb2331a808ffc9da084b7a9fcc4217a323514383430b9a933
wireshark-2.2.17/epan/dissectors/packet-dcerpc-svcctl.c,224,87,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_svcctl_scm_rights_enumerate_service, tvb, offset, 4, access);",c891b95b3a8de3641c545af7eeed603adef10e6f92d804b8c49e55fd6d9c4314
wireshark-2.2.17/epan/dissectors/packet-dcerpc-svcctl.c,225,84,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_svcctl_scm_rights_create_service, tvb, offset, 4, access);",fe683442a1d3b798ade890311e2720bfa4ab58581dd2a46f0aec8e1ee1c65721
wireshark-2.2.17/epan/dissectors/packet-dcerpc-svcctl.c,226,77,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_boolean(tree, hf_svcctl_scm_rights_connect, tvb, offset, 4, access);",8474a9d19f14851c00778c4ec1e5599329ae0b376e9112b55b2872a0e62b966d
wireshark-2.2.17/epan/dissectors/packet-dcerpc-winreg.c,567,78,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"winreg_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",cbe7eee90743433dcc42eda7f65b0a51d944837f243aa2f3a4c28c53900d6144
wireshark-2.2.17/epan/dissectors/packet-dcerpc-winreg.c,580,72,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(tree, tvb, offset, 4, access_flags, access);",8349420e1fc6a276fd3fea2744d9c102bf7ca9bf9b359fdd6eb64e71b41cbfb2
wireshark-2.2.17/epan/dissectors/packet-icep.c,51,41,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                                        fprintf(stdout, \",8d31f0de84c55d411e3022e0cfb37a97024728cf3f7d3fed1106f6cf7bea4b9e
wireshark-2.2.17/epan/dissectors/packet-icep.c,57,41,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                                        fprintf(stdout, __VA_ARGS__); \",2c462be226981aba9a2b0e04f63f0dfc70ab381de2aa206b140fb7d9c129b75d
wireshark-2.2.17/epan/dissectors/packet-ldap.c,4618,76,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"ldap_specific_rights(tvbuff_t *tvb, gint offset, proto_tree *tree, guint32 access)",b6cb81cb26407afb1843de3561c61dcdcae085f17f282931e52be89c8a139d60
wireshark-2.2.17/epan/dissectors/packet-ldap.c,4633,73,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"  proto_tree_add_bitmask_list_value(tree, tvb, offset, 4, access_flags, access);",8349420e1fc6a276fd3fea2744d9c102bf7ca9bf9b359fdd6eb64e71b41cbfb2
wireshark-2.2.17/epan/dissectors/packet-rtmpt.c,532,9,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        vprintf(fmt, args);",32aafab62bda8cf090bbce6d0efbb71f9cb7c029e79a7c784f4fef3986ec7ae4
wireshark-2.2.17/epan/dissectors/packet-snmp.c,55,21,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,#define D(args) do {printf args; fflush(stdout); } while(0),154b9948bec589c7a3f70dd8aa743997584dc05bf0e2507eab9ef14b67569535
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4929,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(ssl_debug_file, fmt, ap);",79583f54f4c2f62ac60d30d9836e4bfaca3c758b1d49b12f7eaad275339ee4dc
wireshark-2.2.17/epan/dissectors/packet-tcap.c,1452,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1692,10,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,	guint32 access;,1eed7c01a308f8dc0608da7a2e57112661495d755c0ebb36b527e163cbcd8fd6
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1741,20,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"					    hfindex, &access);",206c887dbb01eb5ededa3336ca2084940cec68feda4dd776ff91b6abc6ea0c6a
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1754,13,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,	  *perms = access;,38ef2b04254b64efbf8da24efaf258fc995da476336ec7937e60db4495c5aaaf
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1757,64,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	item = proto_tree_add_uint(tree, hfindex, tvb, offset - 4, 4, access);",d5f8927f9e0b0714ffdea64edad242c408603861c53606041ebac5648103485f
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1765,8,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,				   access & GENERIC_RIGHTS_MASK);,ed3568133fb7259455c838ad6e3e44eb84a40177d2de17a96b8f3299bbe227f7
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1767,92,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(generic_tree, tvb, offset - 4, 4, generic_access_flags, access);",30f91c71c4a1d52a0954eb90b88085a41d5f6daab98412220aaf439ba35ebc15
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1773,8,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,				   access & STANDARD_RIGHTS_MASK);,c91b82bc73ff8899ab94c388cf4617e774b0d3d3cd88d79e26f833cbe77605ac
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1775,94,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(standard_tree, tvb, offset - 4, 4, standard_access_flags, access);",81f1d6e4d3982bd4d3971aed5b08ded366a4e2b92f4fb14165812fd58807edcb
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1785,9,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,					   access & SPECIFIC_RIGHTS_MASK);,05ae8ebddcd01dd2ed671ca3c7d2db918c2ef74c4a4258d9be2a82bcac1337f9
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1789,9,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,					   access & SPECIFIC_RIGHTS_MASK);,05ae8ebddcd01dd2ed671ca3c7d2db918c2ef74c4a4258d9be2a82bcac1337f9
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1792,27,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		guint32 mapped_access = access;,ecb322376ed4d7138151ec8b70ff1035f34bfb3a2930152127bac36defe038ad
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1799,36,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"			tvb, offset - 4, specific_tree, access);",4b678be88d95c86266720806c3ea08e2adfa969f8a60e9604883ba70aa71ce7c
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1802,24,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"			map_generic_access(&access, ami->generic_mapping);",5f440365a3094e0e147dadbba1e4c8fe05e75fee507a60e8a31463db39e14377
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1805,25,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"			map_standard_access(&access, ami->standard_mapping);",646b46c934055e62eaa80196fa14c76011177841a7e6162d0264b7f4b941fb56
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1807,7,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,		if (access != mapped_access) {,a66cdbaee393ea6776f7dba87e5ca5c559dacd00e66a47cd562d0f7855e4e89e
wireshark-2.2.17/epan/dissectors/packet-windows-common.c,1816,94,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"	proto_tree_add_bitmask_list_value(specific_tree, tvb, offset - 4, 4, access_specific_flags, access);",580e804548bfa381436cb7a2673dacf89c9cb9d6163609023d8007a157d0764c
wireshark-2.2.17/epan/dissectors/packet-windows-common.h,311,34,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"				   proto_tree *tree, guint32 access);",70f0ddd8e1220ea2d70d97b03458fc264d41f8166cfd7313776934f2ce8d8acd
wireshark-2.2.17/epan/oids.c,49,53,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"#define D(level,args) do if (debuglevel >= level) { printf args; printf(""\n""); fflush(stdout); } while(0)",ce4259a6a88942f65216e0e61cbe08ee48f7cc201855a0458068f6f7d4afab93
wireshark-2.2.17/epan/print_stream.c,50,14,4,shell,popen,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"        fh = popen(dest, ""w"");",b33836834fddb03e42363fd6df285cf095e772d43792c49e3d373713b011117b
wireshark-2.2.17/epan/proto.c,1291,2,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	vprintf(format, ap);",74ef73f9ef8e838fea6452960cae92146c288c7b215c3bd217bd5aa29ec623ba
wireshark-2.2.17/epan/reassemble_test.c,1595,5,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    printf(failure?""FAILURE\n"":""SUCCESS\n"");",d1faab38e78f161aef7e334a30df235f9b390f2b51b4ed8b5a6a29f97df88652
wireshark-2.2.17/extcap/androiddump.c,115,43,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,#define verbose_print(...) { if (verbose) printf(__VA_ARGS__); },37ef0b3f292026291ea2c60e7244cc2ad8f77a4c797e95f2bd15bac1874de992
wireshark-2.2.17/extcap/androiddump.c,485,13,4,shell,execlp,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"        if (execlp(""adb"", ""adb"", ""start-server"", NULL)) {",d0473c480b8ba3867f8467eb3c3d75ad644af92bc7bc433c4499977fefec72df
wireshark-2.2.17/extcap/ciscodump.c,75,43,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,#define verbose_print(...) { if (verbose) printf(__VA_ARGS__); },37ef0b3f292026291ea2c60e7244cc2ad8f77a4c797e95f2bd15bac1874de992
wireshark-2.2.17/extcap/extcap-base.h,100,29,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"#define errmsg_print(...) { fprintf(stderr, __VA_ARGS__); fprintf(stderr, ""\n""); }",c2516f63902086e255692d8c7da651e6017a87f8bde3c73d948ce9e5f3f38a42
wireshark-2.2.17/extcap/randpktdump.c,36,43,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,#define verbose_print(...) { if (verbose) printf(__VA_ARGS__); },37ef0b3f292026291ea2c60e7244cc2ad8f77a4c797e95f2bd15bac1874de992
wireshark-2.2.17/extcap/ssh-base.c,33,43,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,#define verbose_print(...) { if (verbose) printf(__VA_ARGS__); },37ef0b3f292026291ea2c60e7244cc2ad8f77a4c797e95f2bd15bac1874de992
wireshark-2.2.17/extcap/sshdump.c,53,43,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,#define verbose_print(...) { if (verbose) printf(__VA_ARGS__); },37ef0b3f292026291ea2c60e7244cc2ad8f77a4c797e95f2bd15bac1874de992
wireshark-2.2.17/mergecap.c,98,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/mergecap.c,108,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/plugins/wimaxasncp/wimaxasncp_dict.c,3175,17,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	if (debugging) vfprintf(stderr, fmt, ap);",942c4caae03cca72f49f78ee892e9fe8a8283cfd69231cd6c1f7a6f2728515c7
wireshark-2.2.17/rawshark.c,1508,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(stderr, file_open_error_message(err, for_writing), filename);",e69ca8d332d0deae88e3f2bee60a43d891aec19018911a0c126cf51a8ad0ec07
wireshark-2.2.17/rawshark.c,1589,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, msg_format, ap);",86136173c58c733984fb74a144954a9280a9688dd7f7e33902cc12829176cb6b
wireshark-2.2.17/rawshark.c,1620,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/rawshark.c,1630,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/reordercap.c,82,21,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,#define DEBUG_PRINT printf,53dfe32b3febce71875e9ec2eef10dbe5e0613d2345b50b638e6a0c9501cd443
wireshark-2.2.17/tfshark.c,2353,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(stderr, file_open_error_message(err, for_writing), filename);",e69ca8d332d0deae88e3f2bee60a43d891aec19018911a0c126cf51a8ad0ec07
wireshark-2.2.17/tfshark.c,2365,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, msg_format, ap);",86136173c58c733984fb74a144954a9280a9688dd7f7e33902cc12829176cb6b
wireshark-2.2.17/tfshark.c,2395,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, msg_format, ap);",86136173c58c733984fb74a144954a9280a9688dd7f7e33902cc12829176cb6b
wireshark-2.2.17/tools/lemon/lemon.c,37,12,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"extern int access(const char *path, int mode);",9a70bd8a6a4b47bb8272e97452e2ab02eb3c6d1a0fa862ceb3b0692b339f670e
wireshark-2.2.17/tools/lemon/lemon.c,1460,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr,format,ap);",52cafd0a6e7e757a8994a82ba955c01a4bc730b33f420bbec25020a18baa7475
wireshark-2.2.17/tools/lemon/lemon.c,1493,5,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"    strcpy(new_string, fullname);",2413cf777b5c2eaa4f6e7e0d9103875a5d46c0e20415f934e41e6f2a14dbf50b
wireshark-2.2.17/tools/lemon/lemon.c,1500,5,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"    strcpy(new_string, cp);",0056d7df37f8320339f9d8b1190d7ad25ca71af439c24d5e1fe5acf6ff6542b7
wireshark-2.2.17/tools/lemon/lemon.c,3266,13,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"        if( access(path,modemask)==0 ) break;",42f3a31967e7f279bc896db34f04e0cb4ec69a94c0ac41bf6bc5db4554f8c260
wireshark-2.2.17/tools/lemon/lemon.c,3338,9,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"    if( access(user_templatename,004)==-1 ){",f05b1bccab31b5adb9bb94dc749d8624211071e82c82a4bca84032753a03cfb2
wireshark-2.2.17/tools/lemon/lemon.c,3360,7,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"  if( access(buf,004)==0 ){",493c4f19c32d5ef82655e1687252a057dbb4607b5951e89793a19f18217ac581
wireshark-2.2.17/tools/lemon/lemon.c,3362,13,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"  }else if( access(templatename,004)==0 ){",35adb62c9859f8b74f20de69a141d3399b59c567858df239190f8f4f103d625f
wireshark-2.2.17/tools/npl/npl.c,563,10,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"		if (f) fprintf(f, args);		\",a1ef2903b3a82c2d28ae19960fbe4dd1159932472830e5bdf2416ed3412d2fcd
wireshark-2.2.17/tshark.c,4195,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(stderr, file_open_error_message(err, for_writing), filename);",e69ca8d332d0deae88e3f2bee60a43d891aec19018911a0c126cf51a8ad0ec07
wireshark-2.2.17/tshark.c,4206,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, msg_format, ap);",86136173c58c733984fb74a144954a9280a9688dd7f7e33902cc12829176cb6b
wireshark-2.2.17/tshark.c,4236,3,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  vfprintf(stderr, msg_format, ap);",86136173c58c733984fb74a144954a9280a9688dd7f7e33902cc12829176cb6b
wireshark-2.2.17/ui/cli/tap-follow.c,358,11,4,buffer,sscanf,"The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20)","Specify a limit to %s, or use a different input function","If the scanf format is influenceable by an attacker, it's exploitable.","CWE-120, CWE-20","      if (sscanf(*opt_argp, ADDRv6_FMT, addr, &cli_follow_info->port[ii], &len) == 2)",c8850e5dcc869ee6c1386cfba73fdc27e287eaad98199cf5b609bd8fa049893a
wireshark-2.2.17/ui/cli/tap-follow.c,362,16,4,buffer,sscanf,"The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20)","Specify a limit to %s, or use a different input function","If the scanf format is influenceable by an attacker, it's exploitable.","CWE-120, CWE-20","      else if (sscanf(*opt_argp, ADDRv4_FMT, addr, &cli_follow_info->port[ii], &len) == 2)",97244af61777e172aeca76c58a2817d8918874130cdcb005f994f7dcdfab3349
wireshark-2.2.17/ui/cli/tap-httpstat.c,141,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	printf(format, data->response, data->packets);",c09342202598dc6e37639c6746f902c77f89413902914d134beab455445de4e8
wireshark-2.2.17/ui/cli/tap-httpstat.c,154,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	printf(format,  data->response_code, data->name, data->packets );",add6c0c29c2e7d11909b9544bbe72aa5973546dca280a4dc486f258716ce6288
wireshark-2.2.17/ui/cli/tap-iostat.c,818,9,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        printf(full_fmt, dur_secs_orig, dur_nsecs_orig, spaces_s);",b6a85ce4badb06684c4d43d9b207368df97050bf781179c5ff99c0eddb03e53d
wireshark-2.2.17/ui/cli/tap-iostat.c,822,9,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        printf(full_fmt, (guint32)(interval/G_GUINT64_CONSTANT(1000000)), spaces_s);",e7f169903e7468139bf1214511a24fca436609766a61316bdc5ba7c653fdc03c
wireshark-2.2.17/ui/cli/tap-iostat.c,828,9,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        printf(full_fmt, dur_secs, dur_nsecs/(int)dv, spaces_s);",869f1d0a04bdcf5be612ab783a7bc3ddb59fcfae5f0ca8c9b077e1c214cc23ec
wireshark-2.2.17/ui/cli/tap-iostat.c,833,9,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        printf(full_fmt, (guint32)(interval/G_GUINT64_CONSTANT(1000000)),",92c9190338275ea06eac49dc087a889b27e67e4a9602accabb5333e2fe8c8784
wireshark-2.2.17/ui/cli/tap-iostat.c,844,9,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        printf((j == 0 ? ""%2u: "" : ""|    %2u: ""), j+1);",a2c0eca46260aec8b9361d7e9ad30fc658df571f7fff6d2f2b8f49981aafe306
wireshark-2.2.17/ui/cli/tap-iostat.c,1101,19,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                  printf(full_fmt, (guint32)(t/G_GUINT64_CONSTANT(1000000)), ""Dur"");",bc816ca30e2118b2ec2a6a3a531fa6efe3bba1aaf4174ffa9e6d1834f956d376
wireshark-2.2.17/ui/cli/tap-iostat.c,1103,19,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                  printf(full_fmt, (guint32)(t/G_GUINT64_CONSTANT(1000000)),",500681496c49ccdfad8563ebd26d3d06f3f190c2cb75e5954a8b641cb0b19d42
wireshark-2.2.17/ui/cli/tap-iostat.c,1107,15,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"              printf(full_fmt, (guint32)(t/G_GUINT64_CONSTANT(1000000)),",500681496c49ccdfad8563ebd26d3d06f3f190c2cb75e5954a8b641cb0b19d42
wireshark-2.2.17/ui/cli/tap-iostat.c,1129,21,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                    printf(fmt, item->frames);",0ff31bbb217c95321bd132e6e41b34730bc21e79753d0eebe780b5c2c7808ae0
wireshark-2.2.17/ui/cli/tap-iostat.c,1133,21,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                    printf(fmt, item->counter);",bb9aded017b410f308d2ac463baa2d52734163b51d7d56316cbad7376d3f5fef
wireshark-2.2.17/ui/cli/tap-iostat.c,1136,21,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                    printf(fmt, item->frames, item->counter);",0817cf6c61a25bb6d8974267a4dced2b4b2947614759f10b0d4cab3c3bcc3cf9
wireshark-2.2.17/ui/cli/tap-iostat.c,1145,25,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                        printf(fmt, item->float_counter);",79d5ac0d6861c8c9b40c98fd529fea76879cf1405c5bf1271cef126f4e9d6259
wireshark-2.2.17/ui/cli/tap-iostat.c,1148,25,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                        printf(fmt, item->double_counter);",45aaf8e886bd3448ccc716acaa61ed5807fd23bb9547028c038f36a3586761fe
wireshark-2.2.17/ui/cli/tap-iostat.c,1152,25,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                        printf(fmt,",8b423e34207711a93818d386ff7069935bf5991fde7ad9d2c04d5b86f7d51c51
wireshark-2.2.17/ui/cli/tap-iostat.c,1157,25,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                        printf(fmt, item->counter);",bb9aded017b410f308d2ac463baa2d52734163b51d7d56316cbad7376d3f5fef
wireshark-2.2.17/ui/cli/tap-iostat.c,1169,25,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                        printf(fmt, item->float_counter/num);",73a7f52ab26086f671afbe27999b3494ecff8f946ea8574106e46972351317d8
wireshark-2.2.17/ui/cli/tap-iostat.c,1172,25,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                        printf(fmt, item->double_counter/num);",0faf210f5f76e1bebc2f26f793fcc70757c68ef28276745b8791d78a6df3296d
wireshark-2.2.17/ui/cli/tap-iostat.c,1176,25,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                        printf(fmt,",8b423e34207711a93818d386ff7069935bf5991fde7ad9d2c04d5b86f7d51c51
wireshark-2.2.17/ui/cli/tap-iostat.c,1181,25,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                        printf(fmt, item->counter / (guint64)num);",0fb2e5790e3217614265475381455a4851412760c7dbc8f3194149b96214af40
wireshark-2.2.17/ui/cli/tap-iostat.c,1191,29,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                            printf(fmt,",8b423e34207711a93818d386ff7069935bf5991fde7ad9d2c04d5b86f7d51c51
wireshark-2.2.17/ui/cli/tap-iostat.c,1195,29,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                            printf(fmt,",8b423e34207711a93818d386ff7069935bf5991fde7ad9d2c04d5b86f7d51c51
wireshark-2.2.17/ui/cli/tap-iostat.c,1211,17,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"                printf(fmt, (guint64)0, (guint64)0);",0aaaaefd4e3f92883c61312834b3d39d598f524b08bf4826a28175297403b1f0
wireshark-2.2.17/ui/cli/tap-rtspstat.c,93,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	printf( format, data->response, data->packets);",5c1db3ad01a8cc6896674ee1b826c63923b04636c21d797f3f4cb356f4a47356
wireshark-2.2.17/ui/cli/tap-rtspstat.c,106,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	printf(format,  data->response_code, data->name, data->packets );",add6c0c29c2e7d11909b9544bbe72aa5973546dca280a4dc486f258716ce6288
wireshark-2.2.17/ui/cli/tap-simple_stattable.c,79,6,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"					printf(fmt_string, field_data->value.uint_value);",b0952feb607ce797b773af745d2659246757144fc78d9b51335fdb6cde621a64
wireshark-2.2.17/ui/cli/tap-simple_stattable.c,82,6,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"					printf(fmt_string, field_data->value.int_value);",281e72f9c32d1bd3b67aa2146d0b65262ae0d949dbb3d783239043cc9301a250
wireshark-2.2.17/ui/cli/tap-simple_stattable.c,85,6,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"					printf(fmt_string, field_data->value.string_value);",b0517822dfc33ef5002a438645c9e6ac13510d93a6921f835ed59ca5a7887548
wireshark-2.2.17/ui/cli/tap-simple_stattable.c,88,6,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"					printf(fmt_string, field_data->value.float_value);",226d390d43efbaecc106cb688a9ed2ff5d25f71925b7da1ec207d587b7f5bf9a
wireshark-2.2.17/ui/cli/tap-simple_stattable.c,91,6,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"					printf(fmt_string, field_data->value.enum_value);",68c210dc73e0f8c1211cb4492a4bd25df1cffadcb76d67c3c6db160785dbec4b
wireshark-2.2.17/ui/cli/tap-sipstat.c,186,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	printf( format, data->response, data->packets);",5c1db3ad01a8cc6896674ee1b826c63923b04636c21d797f3f4cb356f4a47356
wireshark-2.2.17/ui/cli/tap-sipstat.c,198,2,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"	printf(format,  data->response_code, data->name, data->packets );",add6c0c29c2e7d11909b9544bbe72aa5973546dca280a4dc486f258716ce6288
wireshark-2.2.17/ui/cli/tap-wspstat.c,71,3,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"		printf(format, *key, data->packets , data->name);",02323319443745184ed35039da2f5139718941448cc10b1f0d085789b0e9989c
wireshark-2.2.17/ui/decode_as_utils.c,294,9,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        fprintf (da_file,",e21432f50d4b2c798d245b0d95e9efca66dcd5fe0aa17564480cb924f4a0b0cd
wireshark-2.2.17/ui/decode_as_utils.c,304,9,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        fprintf (da_file,",e21432f50d4b2c798d245b0d95e9efca66dcd5fe0aa17564480cb924f4a0b0cd
wireshark-2.2.17/ui/gtk/main.c,1157,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/ui/gtk/main.c,1173,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/ui/gtk/main_filter_toolbar.c,379,13,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"            fprintf (rf, RECENT_KEY_DISPLAY_FILTER "": %s\n"", filter_str);",abf15d351dc1516647c703e4d9ea8888b8639da97ace09b83da9b16360a858e5
wireshark-2.2.17/ui/gtk/main_menubar.c,4049,13,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"            fprintf (rf, RECENT_KEY_CAPTURE_FILE "": %s\n"", cf_name);",6ccb94179f447844ac785c66d92e64b71d739f39835a732afac25e9717256fb5
wireshark-2.2.17/ui/gtk/webbrowser.c,158,22,4,shell,ShellExecute,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"  return ((intptr_t) ShellExecute (HWND_DESKTOP, _T(""open""), utf_8to16(url), NULL, NULL, SW_SHOWNORMAL) > 32);",df7b8d925dced0fa12ab3aa3a4ce4bdcaa7fc29c9c19566278c76d0702d696ae
wireshark-2.2.17/ui/gtk/webbrowser.c,288,20,4,shell,ShellExecute,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"  ret = (intptr_t) ShellExecute (HWND_DESKTOP, _T(""explore""), utf_8to16(xpath), NULL, NULL, SW_SHOWNORMAL);",90b24449b9e60607e15fcd25064b7ffeb61e70d19737a7074549368f9cb03179
wireshark-2.2.17/ui/language.c,127,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, LANGUAGE_PREF_LANGUAGE "": %s\n"", language ? language : USE_SYSTEM_LANGUAGE);",2e7d4b3371840c1fa252d065c4f2ec67fa1e72e0ec3180ab9f9aac4cfad1d039
wireshark-2.2.17/ui/qt/bluetooth_att_server_attributes_dialog.cpp,225,12,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"    handle.sprintf(""0x%04x"", tap_handles->handle);",68d63915b005e7bd7e93ceda7e06c61b4696a3865dff2bc03079ce17091dc293
wireshark-2.2.17/ui/qt/bluetooth_device_dialog.cpp,350,17,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        bd_addr.sprintf(""%02x:%02x:%02x:%02x:%02x:%02x"", tap_device->bd_addr[0], tap_device->bd_addr[1], tap_device->bd_addr[2], tap_device->bd_addr[3], tap_device->bd_addr[4], tap_device->bd_addr[5]);",8cfdcacb8ab05f3bc02ab0bb3715bc40c69011eb8c447201123217d740197779
wireshark-2.2.17/ui/qt/bluetooth_device_dialog.cpp,357,17,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        bd_addr.sprintf(""%02x:%02x:%02x:%02x:%02x:%02x"", tap_device->bd_addr[0], tap_device->bd_addr[1], tap_device->bd_addr[2], tap_device->bd_addr[3], tap_device->bd_addr[4], tap_device->bd_addr[5]);",8cfdcacb8ab05f3bc02ab0bb3715bc40c69011eb8c447201123217d740197779
wireshark-2.2.17/ui/qt/bluetooth_device_dialog.cpp,437,29,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        field = QString("""").sprintf(""%u"", tap_device->data.local_version.hci_revision);",de21042885bb9929a84792fd3b7f7793746e9a28177d8b45f1d6beb1b4b1fb51
wireshark-2.2.17/ui/qt/bluetooth_device_dialog.cpp,455,29,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        field = QString("""").sprintf(""%u"", tap_device->data.local_version.lmp_subversion);",0dfd418518b5f1cca13f347fb076a7a787f068c61c830cd2e30502f7629cdd30
wireshark-2.2.17/ui/qt/bluetooth_device_dialog.cpp,475,29,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        field = QString("""").sprintf(""%u"", tap_device->data.remote_version.lmp_subversion);",f72c0e2935e5d93a046b60bb5fbc58d83e9c01ede774c7e9756136af461ea211
wireshark-2.2.17/ui/qt/bluetooth_device_dialog.cpp,489,29,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        field = QString("""").sprintf(""0x%04x"", tap_device->data.voice_setting);",70a2fdd76aaf18d871f7becf2f62ca2f05f1043e8e60e8f8ebe743ab3b73c00e
wireshark-2.2.17/ui/qt/bluetooth_device_dialog.cpp,497,29,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        field = QString("""").sprintf(""0x%06x"", tap_device->data.class_of_device);",6810825ae25878db7b130ca9103cb987fc710bf32a6ccd1bc9681efe9eaa8d4a
wireshark-2.2.17/ui/qt/bluetooth_devices_dialog.cpp,247,17,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        bd_addr.sprintf(""%02x:%02x:%02x:%02x:%02x:%02x"", tap_device->bd_addr[0], tap_device->bd_addr[1], tap_device->bd_addr[2], tap_device->bd_addr[3], tap_device->bd_addr[4], tap_device->bd_addr[5]);",8cfdcacb8ab05f3bc02ab0bb3715bc40c69011eb8c447201123217d740197779
wireshark-2.2.17/ui/qt/bluetooth_devices_dialog.cpp,314,65,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        item->setText(column_number_hci_revision,   QString("""").sprintf(""%u"", tap_device->data.local_version.hci_revision));",a4a30f0809aaf6a9700aa5d11953cba542f947586b1e8d5dc5b42c95ec37632d
wireshark-2.2.17/ui/qt/bluetooth_devices_dialog.cpp,316,65,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        item->setText(column_number_lmp_subversion, QString("""").sprintf(""%u"", tap_device->data.local_version.lmp_subversion));",43b707920fce23bb6da4e05dfcd69dd426b2d4a85e6f74f0a8cd9cc1c43c264c
wireshark-2.2.17/ui/qt/bluetooth_devices_dialog.cpp,321,65,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        item->setText(column_number_lmp_subversion, QString("""").sprintf(""%u"", tap_device->data.remote_version.lmp_subversion));",109dda7abc5bc80ba1716c2eb567aa8c490dd48169f99a3e6bbc5353596853ff
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,375,85,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            if (main_item->child(i_item)->text(column_number_opcode) == QString("""").sprintf(""0x%04X"", tap_hci->ogf << 10 | tap_hci->ocf)) {",fd613b1629bf98b8a3e9fd11e80e73f869bb6a21447cfc3c0167add0e8c891a8
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,391,58,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            item->setText(column_number_ogf, QString("""").sprintf(""0x%02X"", tap_hci->ogf));",e23b0cd780589268d76fa7196c9496053fb3f5ac18c0ed964895c3890c6ea9e9
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,392,58,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            item->setText(column_number_ocf, QString("""").sprintf(""0x%04X"", tap_hci->ocf));",ad4d3903b5d42c3703508f27e5d605f57cbd6b41ab6d49549f5f9e51ce79ef34
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,393,61,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            item->setText(column_number_opcode, QString("""").sprintf(""0x%04X"", tap_hci->ogf << 10 | tap_hci->ocf));",16cf9642dae35acd2f9b9d47893e0e268c1b70db115d8b95b549fab687ff11d7
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,415,60,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        frame_item->setText(column_number_ogf, QString("""").sprintf(""0x%02X"", tap_hci->ogf));",f2827598986609b0f4d9d55ca2bc89e1cd1b2463c6eaed221bf41ae6ba17abee
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,416,60,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        frame_item->setText(column_number_ocf, QString("""").sprintf(""0x%04X"", tap_hci->ocf));",31e6198df655d8cd35347072944ed66292d213cee531d53ce73e6a0d1fd72e70
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,417,63,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        frame_item->setText(column_number_opcode, QString("""").sprintf(""0x%04X"", tap_hci->ogf << 10 | tap_hci->ocf));",14d2f5c4ebf6fcebaca20c01d6d5da1113b298f456fb5122e37c0ca4c20cc348
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,419,66,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            frame_item->setText(column_number_event, QString("""").sprintf(""0x%02X"", tap_hci->event));",856b7896dc0e47e9570c439bb07eac86e200c05b90a1cd885c671df3c39fe560
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,434,84,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            if (main_item->child(i_item)->text(column_number_event) == QString("""").sprintf(""0x%02X"", tap_hci->event)) {",e7b07e9bce63ee2227587314b2dbf0876bbdec4d17fa08ee1ed9f93324b7c4b5
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,450,60,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            item->setText(column_number_event, QString("""").sprintf(""0x%02X"", tap_hci->event));",9f6281c837f3505b4b154342625af7a51d7c9a020cc36c7e34f56ef742d7bd0f
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,465,62,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        frame_item->setText(column_number_event, QString("""").sprintf(""0x%02X"", tap_hci->event));",856b7896dc0e47e9570c439bb07eac86e200c05b90a1cd885c671df3c39fe560
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,479,85,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            if (main_item->child(i_item)->text(column_number_status) == QString("""").sprintf(""0x%02X"", tap_hci->status)) {",037d540db81c927ec17d411fe392729126f733dda87771bfda76157773cbc6f1
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,491,61,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            item->setText(column_number_status, QString("""").sprintf(""0x%02X"", tap_hci->status));",5e9527328b936598d2c1ed1d6fe575f2066db19910765d248afea3c06e2fa543
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,502,63,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        frame_item->setText(column_number_status, QString("""").sprintf(""0x%02X"", tap_hci->status));",50c9483bb751247028d236360d4754ea1abd2e04b04dbb54f280ec58b8642966
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,516,85,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            if (main_item->child(i_item)->text(column_number_status) == QString("""").sprintf(""%u"", tap_hci->status)) {",cffbfadfcccbf4eb7b4deab8ba0ebb8836ea599db8be358287b22173dae5ffe2
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,525,61,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            item->setText(column_number_status, QString("""").sprintf(""%u"", tap_hci->status));",6be7d4203f9781d9784976cd59fbc5e2815836f17235647366d1c128d8aa32ce
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,536,63,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        frame_item->setText(column_number_status, QString("""").sprintf(""%u"", tap_hci->status));",53b8f304305b15248931f0ec0a2c6e4a6b1f344361347ee9fbf1a1aea6aabbdb
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,550,85,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            if (main_item->child(i_item)->text(column_number_reason) == QString("""").sprintf(""0x%02X"", tap_hci->reason)) {",c24092b3ffca8dd94f56a0f376b213663bc0fb35770cb30f870949c2230ceec8
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,562,61,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            item->setText(column_number_reason, QString("""").sprintf(""0x%02X"", tap_hci->reason));",589a617478c4376646918fb3a511a57434a7fc4c410e014fbb7687838d107fe1
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,573,63,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        frame_item->setText(column_number_reason, QString("""").sprintf(""0x%02X"", tap_hci->reason));",bac6298acaa16ab6614a814732750a2e7208a26da593c1376fe335d878b9b020
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,587,93,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            if (main_item->child(i_item)->text(column_number_hardware_error) == QString("""").sprintf(""0x%02X"", tap_hci->hardware_error)) {",b36bb5d24f598572e2bfcb23fed1c72d0e8c74e8275e59c0ee6852e70121fc48
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,595,59,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            item->setText(column_number_name, QString("""").sprintf(""Hardware error 0x%02X"", tap_hci->hardware_error));",5d501846fe32829c739b4739026ce86411ba1f7f3e00a24deed677c89bc7ca7f
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,596,69,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            item->setText(column_number_hardware_error, QString("""").sprintf(""0x%02X"", tap_hci->hardware_error));",a5c046778f107a4b399a67a1a8b09fd609778640b55d115eb0f5b310075788d8
wireshark-2.2.17/ui/qt/bluetooth_hci_summary_dialog.cpp,607,71,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        frame_item->setText(column_number_hardware_error, QString("""").sprintf(""0x%02X"", tap_hci->hardware_error));",84790fdabba6ccaba3f4db26f31b5a56d0ab6837f04586a32073c5e083338a39
wireshark-2.2.17/ui/qt/capture_file_dialog.cpp,855,42,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,        preview_first_.setText(QString().sprintf(,6e5b1b14a5fb3cbff9abd9673b47919467f73350273521832b702b364e0e4a45
wireshark-2.2.17/ui/qt/capture_file_dialog.cpp,873,44,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        preview_elapsed_.setText(QString().sprintf(""%02u days %02u:%02u:%02u"",",0b052f2759ce7d62f29bc8f21362aa934ba71eb27e9e530f3ab676bd00aeca72
wireshark-2.2.17/ui/qt/capture_file_dialog.cpp,876,44,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        preview_elapsed_.setText(QString().sprintf(""%02u:%02u:%02u"",",92af54c079ac5996635f7ac2a39f3af7b6b193e17de6ef518b901fa45f0b0afd
wireshark-2.2.17/ui/qt/capture_filter_combo.cpp,101,13,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"            fprintf(rf, RECENT_KEY_DISPLAY_FILTER "": %s\n"", filter.constData());",0766af06b6bb1cbd392abf1748baa0bade99634d0be238b198af018c8444e6ec
wireshark-2.2.17/ui/qt/display_filter_combo.cpp,99,13,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"            fprintf(rf, RECENT_KEY_DISPLAY_FILTER "": %s\n"", filter.constData());",0766af06b6bb1cbd392abf1748baa0bade99634d0be238b198af018c8444e6ec
wireshark-2.2.17/ui/qt/lte_mac_statistics_dialog.cpp,115,46,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"            setText(col_type_+n, QString("""").sprintf(""%u"", lcids[n]));",9666d46e6bd36c54d83e5ff04c5d30b2007ee1c3ddd05aab0fc2b0c9ec36e09c
wireshark-2.2.17/ui/qt/main_status_bar.cpp,79,14,4,format,vsprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"    push_msg.vsprintf(msg_format, ap);",1c652d6fcc76755c8e46b7faeda8bb299bb07f7d8aa8896817d1c378d70bdcfd
wireshark-2.2.17/ui/qt/main_window.cpp,2182,39,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,            QString locale = QLocale::system().name();,0e3342cad2de0a00287777f632d3be620e02d18a73dfb4bf70435085a0e39980
wireshark-2.2.17/ui/qt/main_window_slots.cpp,910,33,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        QString msg = QString().sprintf(""%s<live capture in progress>"", interface_names->str);",7405957553794abb55eee5c25831a4cd85cdaddc27c1e584af6a49896ea13aea
wireshark-2.2.17/ui/qt/main_window_slots.cpp,911,36,4,format,sprintf,Potential format string problem (CWE-134),Make format string constant,,CWE-134,"        QString msgtip = QString().sprintf(""to file: %s"", (capture_opts->save_file) ? capture_opts->save_file : """");",c5f5b7c46df56ca8aea81974ce1ad757c1a12ddd9c2c54120b5e06e825c44311
wireshark-2.2.17/ui/qt/supported_protocols_dialog.cpp,75,31,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,    QLocale locale = QLocale::system();,c25d1431385421603f779df7796a1815da1a9dcea474bb96489095fe0a4ee0db
wireshark-2.2.17/ui/qt/wireshark_application.cpp,189,13,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"            fprintf (rf, RECENT_KEY_CAPTURE_FILE "": %s\n"", cf_name.toUtf8().constData());",34b890a26e6864cd27dbc519e611707caac98afc531ce945ce6a6315ac1fd215
wireshark-2.2.17/ui/qt/wireshark_application.cpp,1199,35,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,        localeLanguage = QLocale::system().name();,ff373795cbd892b35adacecd5a5edc9c631c434bc913b4a637bca55a38f85794
wireshark-2.2.17/ui/recent.c,149,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY ""%s.x: %d\n"", geom->key, geom->x);",d0465a5ad801d0c58d9a27aa6a1d186374ad281516bc9d2864b09a3295ed4038
wireshark-2.2.17/ui/recent.c,150,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY ""%s.y: %d\n"", geom->key, geom->y);",6ac4758deeb11d505e7968ff8e471594925c93fb836449dcf41693db70c39832
wireshark-2.2.17/ui/recent.c,151,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY ""%s.width: %d\n"", geom->key,",4e9a7706a202360875428e2c0a708e0fa13566a1fcdb3b70df9241255bb68d83
wireshark-2.2.17/ui/recent.c,153,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY ""%s.height: %d\n"", geom->key,",f8e60ed2494a64b1bed11959b5a7d9e33bc08d5bc6a220f9668efc5f615ee6d1
wireshark-2.2.17/ui/recent.c,157,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY ""%s.maximized: %s\n"", geom->key,",6ffb6c79972e36ccaf3254be2548750d24eaac119871c37729d8185f1c836f15
wireshark-2.2.17/ui/recent.c,426,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf (rf, RECENT_KEY_REMOTE_HOST "": %s,%s,%d\n"", ri->remote_host, ri->remote_port, ri->auth_type);",b1c6c3f3d2ea0e2102c4639aa02f0fe821ca698c184178a90345293af1aa3590
wireshark-2.2.17/ui/recent.c,525,9,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        fprintf (rf, RECENT_KEY_CAPTURE_FILTER "": %s\n"", (char *)li->data);",54d772e2606e73a6fb7adffc8b2468f702351d6f63c47c72f190c532ee920d76
wireshark-2.2.17/ui/recent.c,527,9,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        fprintf (rf, RECENT_KEY_CAPTURE_FILTER "".%s: %s\n"", ifname, (char *)li->data);",e89be37dc788ca500f78577999caf4be0d4038e22b570b5f74f71a05c1e92082
wireshark-2.2.17/ui/recent.c,657,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_X "": %d\n"", recent.gui_geometry_main_x);",246696fac19d2349744476eba8dab391be24ac982cb34d0cbb0cf1466a89e656
wireshark-2.2.17/ui/recent.c,658,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_Y "": %d\n"", recent.gui_geometry_main_y);",19bae5006af09d0c16bc69da6bebf6516cb69e273f6e8db440e2429726dfd8fe
wireshark-2.2.17/ui/recent.c,659,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GTK_GEOMETRY_MAIN_X "": %d\n"", recent.gui_gtk_geometry_main_x);",b3fe2952853db974b3f27d0ccbe777165c09cd4a9571c46286fb770e14072644
wireshark-2.2.17/ui/recent.c,660,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GTK_GEOMETRY_MAIN_Y "": %d\n"", recent.gui_gtk_geometry_main_y);",bd161f96e8880c42b60f075415ac21d1221a3d0c2217ada1395a3e29a5c870c7
wireshark-2.2.17/ui/recent.c,661,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_WIDTH "": %d\n"",",1ebd18abd5e18dadc97b4ef80177184c471b6a411d4758f4eb87a464f5a5cc09
wireshark-2.2.17/ui/recent.c,663,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_HEIGHT "": %d\n"",",5339a413b42a8e33383f199813e7b74f180835542a3bcb2ed8df61f75a7ac1e0
wireshark-2.2.17/ui/recent.c,673,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY_STATUS_PANE_LEFT "": %d\n"",",471e830f0123c48adc385843203986a2ec647492c2bdeef6d624089711678ec1
wireshark-2.2.17/ui/recent.c,679,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY_STATUS_PANE_RIGHT "": %d\n"",",03831d9b49869f5332882701c9d7c442bfc840521599b9bfc7549f42b5c1d63b
wireshark-2.2.17/ui/recent.c,684,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_LAST_USED_PROFILE "": %s\n"", get_profile_name());",0a3994299327eadfea2f57e77051cb0d2e17340f54c663e4dd630710606b5bb2
wireshark-2.2.17/ui/recent.c,688,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_GEOMETRY_WLAN_STATS_PANE "": %d\n"",",4e496dde5d15049b76e1cb8f7fddd6628b96231634418c7ae9633cf09db56764
wireshark-2.2.17/ui/recent.c,704,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_CUSTOM_COLORS "": %s\n"", string_list);",00685493bb658e9655add811781fc04b3101a919986d6aef7b2c6c9abcd2c601
wireshark-2.2.17/ui/recent.c,813,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_ZOOM_LEVEL "": %d\n"",",88f4fb19eb360e1582853b0b51cad7daece5025530c7a9ef28109ea0a1004b24
wireshark-2.2.17/ui/recent.c,818,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_BYTES_VIEW "": %d\n"",",ad21f55aa4edd18c81c9a593a85408fffe0843472c7102ae6200d27b7606560d
wireshark-2.2.17/ui/recent.c,824,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_UPPER_PANE "": %d\n"",",0442809ed8a9af95f46655c2ca3a699e6027bba02d14b3935ec6b1185d8e3380
wireshark-2.2.17/ui/recent.c,830,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_GEOMETRY_MAIN_LOWER_PANE "": %d\n"",",db445b419a4398b207998beb4a07f00a2e74256deac10220b80a63b111faf1ee
wireshark-2.2.17/ui/recent.c,841,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_CONVERSATION_TABS "": %s\n"", string_list);",cf26f0a3f6eb6f5001fe7d82e24970af2473162511afd4069486ff584baa7ec0
wireshark-2.2.17/ui/recent.c,847,3,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"  fprintf(rf, RECENT_GUI_ENDPOINT_TABS "": %s\n"", string_list);",f9042c9d176eb522e76f6e3b1caf13361e1c76fcf378af433ff5c0d2b8e6f358
wireshark-2.2.17/ui/recent.c,856,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(rf, RECENT_GUI_FILEOPEN_REMEMBERED_DIR "": %s\n"", get_last_open_dir());",a65d89677cced2cc208005cde84b95b0eb2fde24b6e6ffb02fa14ce3448aa791
wireshark-2.2.17/ui/tap-sequence-analysis.c,548,9,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        fprintf(of, CONV_TIME_HEADER);",d854817c52b21713dfde3654b3a27af80412cb4b7b9eb3e6c56b6d97162c7162
wireshark-2.2.17/ui/tap-sequence-analysis.c,553,9,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"        fprintf(of, TIME_HEADER);",d9841ec9eef29e02e91bb502370ba2f1dac36170e8b0f0c4c2bceb0ec3120e84
wireshark-2.2.17/wireshark-qt.cpp,163,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/wireshark-qt.cpp,180,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e
wireshark-2.2.17/wiretap/ascend.c,836,21,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,#  define YYFPRINTF fprintf,3081513f6d5b8478741bf9545c0ef772dc8cde67f802ca2075b6bc345156c38c
wireshark-2.2.17/wiretap/k12.c,66,5,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    vfprintf(dbg_out, fmt, ap);",9ff284965e7641566b6b6e764acebd75e7a0fccb5c9d9324b6e5417b1cae41bf
wireshark-2.2.17/wsutil/filesystem.c,640,21,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)","Set up the correct permissions (e.g., using setuid()) and try to open the file directly",,CWE-362/CWE-367!,"                if (access(path, X_OK) == 0) {",a7e473c4e82be0e300941a3e6ff636e4cb2eaac4d3265dd191b0adc12631b484
wireshark-2.2.17/wsutil/ws_printf.h,61,5,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134)",Use a constant for the format specification,,CWE-134,"    vsnprintf(buffer, size_of_buffer, format, argptr);",9b288810c1a845ddb850c5b6e5e74d67df3f784b20bdad8ef2d3da9266798406
wireshark-2.2.17/capinfos.c,1485,17,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt_long(argc, argv, ""abcdehiklmoqrstuvxyzABCEF"" FILE_HASH_OPT ""ILMNQRST"", long_options, NULL)) !=-1) {",a833a2f6747c144df1964bd12f564e4324998f99a5ae05297004ab065a2e6ede
wireshark-2.2.17/captype.c,155,17,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt_long(argc, argv, ""hv"", long_options, NULL)) !=-1) {",e8d2ae07fffe9a7b158cc5f724a7937534c93a1169fe01cd896d2d334b1a6c60
wireshark-2.2.17/caputils/capture_win_ifnames.c,243,17,3,misc,LoadLibrary,"Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20)","Use LoadLibraryEx with one of the search flags, or call SetSearchPathMode to use a safe search path, or pass a full path to the library",,"CWE-829, CWE-20","    hIPHlpApi = LoadLibrary(TEXT(""iphlpapi.dll""));",00b710185ac18eb84940f39dec924c7aa40b17cb972fd56c59973a98c476c31c
wireshark-2.2.17/dumpcap.c,4099,19,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","    while ((opt = getopt_long(argc, argv, OPTSTRING, long_options, NULL)) != -1) {",6a2a198bf614a4f8ab178e1bba9c6180fdabb9ed4a5fb2cf258ca134af2c46ec
wireshark-2.2.17/editcap.c,1038,19,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","    while ((opt = getopt_long(argc, argv, ""a:A:B:c:C:dD:E:F:hi:I:Lo:rs:S:t:T:vVw:"", long_options, NULL)) != -1) {",8f0f89a1f0ab7df67d3e99a2a6aea63646b71408bf79d030f35fb315a056918e
wireshark-2.2.17/editcap.c,1182,13,3,random,srand,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,            srand( (unsigned int) (time(NULL) + ws_getpid()) );,8dbe7065b333d8ac7dbfc73c0ee49a7be3350eb7d30983b3980bce7872c7f437
wireshark-2.2.17/epan/capture_dissectors.c,96,17,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","            if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/dissectors/packet-diameter.c,1864,29,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	gboolean do_debug_parser = getenv(""WIRESHARK_DEBUG_DIAM_DICT_PARSER"") ? TRUE : FALSE;",ae4ba498005ef67ca1a47aa9ca40899cea77b8f7b301f81380ed8a19727b88b7
wireshark-2.2.17/epan/dissectors/packet-diameter.c,1865,26,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	gboolean do_dump_dict = getenv(""WIRESHARK_DUMP_DIAM_DICT"") ? TRUE : FALSE;",2da76190374c24a11be5291b1369b55dfae9a560c866e85662048797fd469de9
wireshark-2.2.17/epan/dissectors/packet-rpc.c,568,9,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","				if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/dissectors/packet-rpc.c,583,9,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","				if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/dissectors/packet-smb.h,339,26,3,random,setstate,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"    int offset, gboolean setstate);",5ea724681be020d59f68800c846ff56cea292c3e024f3c6374f861f8a753e165
wireshark-2.2.17/epan/epan.c,153,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/expert.c,193,45,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	if((guint)eiindex >= gpa_expertinfo.len && getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG""))   \",01667c0f9fdf86fb44307ac484c2dad283ab09c192d15032169a8e948d45df35
wireshark-2.2.17/epan/oids.c,94,21,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		char* debug_env = getenv(""WIRESHARK_DEBUG_MIBS"");",374bfa0e819bcb86cd0c59c5a835914e686a0c137fac245ec5bf9c818ab5f93e
wireshark-2.2.17/epan/packet.c,927,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/packet.c,936,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/packet.c,1300,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/packet.c,1309,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/packet.c,1557,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/packet.c,1604,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/packet.c,1613,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/packet.c,1760,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/packet.c,1778,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/packet.c,1822,9,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","				if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/packet.c,2275,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/packet.c,2294,8,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","			if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL)",bad7e78acb153a40d9ad27595e1fff5311943c7cb2edf7a96b111884756229be
wireshark-2.2.17/epan/proto.c,125,7,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","		if (getenv(""WIRESHARK_ABORT_ON_TOO_MANY_ITEMS"") != NULL) \",0d7740159c01e4dfe1d3f756b10eaedd81b5a9cab78ef6b9327830b6ddcb631d
wireshark-2.2.17/epan/proto.c,346,41,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	if((guint)hfindex >= gpa_hfinfo.len && getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG""))	\",a21ad20540c4c5fa9e9b2c2c8c086b0a12ebc89c07437d0807c1dd51c4df0f46
wireshark-2.2.17/epan/proto.c,1338,6,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	if (getenv(""WIRESHARK_ABORT_ON_DISSECTOR_BUG"") != NULL) {",ac6bf2d09d1748b5fe50ca37e295e101508561c85c6bff3c9c1b8c24608ace3d
wireshark-2.2.17/epan/wmem/wmem_core.c,191,20,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    override_env = getenv(""WIRESHARK_DEBUG_WMEM_OVERRIDE"");",81df99f7a1d137fd8de02f9e7fc83ab3d3052cbc613acec5b386986b6a1543be
wireshark-2.2.17/epan/wmem/wmem_map.c,39,9,3,random,g_random_int,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,    x = g_random_int();,5dc1209355425fcea912ed86598289660335ed40b3154f840f832735ddb3a9f9
wireshark-2.2.17/epan/wmem/wmem_map.c,43,16,3,random,g_random_int,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,    preseed  = g_random_int();,165c954b9fd35dde52254a667cf8ce75688448d9e347f00579f27cd3aad39502
wireshark-2.2.17/epan/wmem/wmem_map.c,44,16,3,random,g_random_int,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,    postseed = g_random_int();,2b80d65a47712032e591f20422b1ae6d40d08f6ebb315a67196170e054fa123c
wireshark-2.2.17/epan/wmem/wmem_test.c,91,11,3,random,g_random_int_range,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"    len = g_random_int_range(minlen, maxlen);",08c3d344eed11d1fb1f8add4a915239f1b00379e1dd1c4c3abf27db46e14aa16
wireshark-2.2.17/epan/wmem/wmem_test.c,99,26,3,random,g_random_int_range,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"        str[i] = (gchar) g_random_int_range(32, 126);",67d82103efcd2d65f9c2b57395422532cc37c0b9b608a91cc373e9e1a3bb6a56
wireshark-2.2.17/epan/wmem/wmem_test.c,1110,17,3,random,g_random_int_range,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"    key_count = g_random_int_range(1, WMEM_TREE_MAX_KEY_COUNT);",c70a6a78d97ff87f49dfac762938a50f6ed40a3f2680e4b062f00aba03b2ad93
wireshark-2.2.17/epan/wmem/wmem_test.c,1112,26,3,random,g_random_int_range,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"        keys[j].length = g_random_int_range(1, WMEM_TREE_MAX_KEY_LEN);",a9e6c81545c5f5e62c1c30136efedc9deaf5cdc25a4c6946a6e9df2056de3f7b
wireshark-2.2.17/extcap/androiddump.c,2649,22,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","    while ((result = getopt_long(argc, argv, """", longopts, &option_idx)) != -1) {",8a09b79d927d547e786557d830afab886b56fcd223ba67e0642659ee445e3c7b
wireshark-2.2.17/extcap/ciscodump.c,602,19,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","	while ((result = getopt_long(argc, argv, "":"", longopts, &option_idx)) != -1) {",909ffa61363baf30dd8805a28132e23acba2dc200440dcc629e0e706dfd9b64c
wireshark-2.2.17/extcap/randpktdump.c,191,19,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","	while ((result = getopt_long(argc, argv, "":"", longopts, &option_idx)) != -1) {",909ffa61363baf30dd8805a28132e23acba2dc200440dcc629e0e706dfd9b64c
wireshark-2.2.17/extcap/sshdump.c,390,19,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","	while ((result = getopt_long(argc, argv, "":"", longopts, &option_idx)) != -1) {",909ffa61363baf30dd8805a28132e23acba2dc200440dcc629e0e706dfd9b64c
wireshark-2.2.17/extcap_spawn.c,157,9,3,shell,CreateProcess,This causes a new process to execute and is difficult to use safely (CWE-78),"Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run",,CWE-78,"    if (CreateProcess(NULL, wcommandline, NULL, NULL, TRUE, CREATE_NEW_CONSOLE, NULL, NULL, &info, &processInfo))",8e63cb359a60da9cc596a5352f3daec9799ce8dc4cfa9dfd4d561bf0631c75c9
wireshark-2.2.17/extcap_spawn.c,157,9,3,shell,CreateProcess,This causes a new process to execute and is difficult to use safely (CWE-78),"Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run",,CWE-78,"    if (CreateProcess(NULL, wcommandline, NULL, NULL, TRUE, CREATE_NEW_CONSOLE, NULL, NULL, &info, &processInfo))",8e63cb359a60da9cc596a5352f3daec9799ce8dc4cfa9dfd4d561bf0631c75c9
wireshark-2.2.17/extcap_spawn.c,269,9,3,shell,CreateProcess,This causes a new process to execute and is difficult to use safely (CWE-78),"Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run",,CWE-78,"    if (CreateProcess(NULL, wcommandline, NULL, NULL, TRUE, CREATE_NEW_CONSOLE, NULL, NULL, &info, &processInfo))",8e63cb359a60da9cc596a5352f3daec9799ce8dc4cfa9dfd4d561bf0631c75c9
wireshark-2.2.17/extcap_spawn.c,269,9,3,shell,CreateProcess,This causes a new process to execute and is difficult to use safely (CWE-78),"Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run",,CWE-78,"    if (CreateProcess(NULL, wcommandline, NULL, NULL, TRUE, CREATE_NEW_CONSOLE, NULL, NULL, &info, &processInfo))",8e63cb359a60da9cc596a5352f3daec9799ce8dc4cfa9dfd4d561bf0631c75c9
wireshark-2.2.17/mergecap.c,324,17,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt_long(argc, argv, ""aF:hI:s:vVw:"", long_options, NULL)) != -1) {",769b933d9f50707d850598367f349b741bbccf74ca2737337af07251b415c58f
wireshark-2.2.17/plugins/wimaxasncp/packet-wimaxasncp.c,3240,20,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    debug_parser = getenv(""WIRESHARK_DEBUG_WIMAXASNCP_DICT_PARSER"") != NULL;",112045e3777acb2635d0f526d3060dbcd60464dd04ab9af7779434bd4f28fa2a
wireshark-2.2.17/plugins/wimaxasncp/packet-wimaxasncp.c,3241,20,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    dump_dict    = getenv(""WIRESHARK_DUMP_WIMAXASNCP_DICT"") != NULL;",e8c411daabbd185ebd3b1fe3df88980771bef613b8f7b1225f19aa7f06f2a1e1
wireshark-2.2.17/randpkt.c,154,16,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","	while ((opt = getopt_long(argc, argv, ""b:c:ht:r"", long_options, NULL)) != -1) {",a12cec9c50c095f0eef47a209f69914dbc299d84d778299c0993848c7e7fe2df
wireshark-2.2.17/randpkt_core/randpkt_core.c,573,17,3,random,g_rand_int_range,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"			len_random = g_rand_int_range(pkt_rand, 0, example->produce_max_bytes + 1);",0b7e657c7745553b828f409651dccc58eca433c6674d6652f0fb94855994f35a
wireshark-2.2.17/randpkt_core/randpkt_core.c,593,30,3,random,g_rand_int_range,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"			((guint8*)ps_header)[j] = g_rand_int_range(pkt_rand, 0, 0x100);",387a477455a9d6e24d9e68e565ea98e582a2612f7def5e4bdb35ead8fd0f11fb
wireshark-2.2.17/randpkt_core/randpkt_core.c,598,21,3,random,g_rand_double,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,			if ((int) (100.0*g_rand_double(pkt_rand)) < 3 && j < (len_random - 3)) {,8af695123ecea304d92a6580606d3bffbd0cd1b52acba41b666e6203cef764f0
wireshark-2.2.17/randpkt_core/randpkt_core.c,602,17,3,random,g_rand_int_range,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"				buffer[j] = g_rand_int_range(pkt_rand, 0, 0x100);",752b902687cab1f0b55871c6ada84a1330e661a63cd3d1bc7ff3b1f2d70f0324
wireshark-2.2.17/randpkt_core/randpkt_core.c,733,19,3,random,g_random_int_range,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"		return examples[g_random_int_range(0, num_entries)].produceable_type;",fc30adb71396ea747d17f946def7da9137c23a7a42f295008052962cc27baff8
wireshark-2.2.17/rawshark.c,599,19,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","    while ((opt = getopt_long(argc, argv, optstring, long_options, NULL)) != -1) {",3088a5ab76c53d8cff5bb5ca6b63ae56951baaa487a76336ebda7e6332acd4ee
wireshark-2.2.17/reordercap.c,245,19,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","    while ((opt = getopt_long(argc, argv, ""hnv"", long_options, NULL)) != -1) {",96e3501e48b2f3a86c8b1b9e70d6923080d8b9ed1b35469594e7ff47503467d0
wireshark-2.2.17/text2pcap.c,1477,17,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","    while ((c = getopt_long(argc, argv, ""aDdhqe:i:l:m:no:u:s:S:t:T:v4:6:"", long_options, NULL)) != -1) {",b481d616553b8bc656ce137d10e7b24e3a1e22b175a285b09bacff8b5f024ec8
wireshark-2.2.17/tfshark.c,441,17,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt_long(argc, argv, optstring, long_options, NULL)) != -1) {",3088a5ab76c53d8cff5bb5ca6b63ae56951baaa487a76336ebda7e6332acd4ee
wireshark-2.2.17/tfshark.c,684,17,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt_long(argc, argv, optstring, long_options, NULL)) != -1) {",3088a5ab76c53d8cff5bb5ca6b63ae56951baaa487a76336ebda7e6332acd4ee
wireshark-2.2.17/tools/lemon/lemon.c,3248,16,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    pathlist = getenv(""PATH"");",e6e81267a16d2d526aa73d425aff6938cf7e94b19a969ce76ed5f5ac98caab33
wireshark-2.2.17/tshark.c,706,17,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt_long(argc, argv, optstring, long_options, NULL)) != -1) {",3088a5ab76c53d8cff5bb5ca6b63ae56951baaa487a76336ebda7e6332acd4ee
wireshark-2.2.17/tshark.c,994,17,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  while ((opt = getopt_long(argc, argv, optstring, long_options, NULL)) != -1) {",3088a5ab76c53d8cff5bb5ca6b63ae56951baaa487a76336ebda7e6332acd4ee
wireshark-2.2.17/ui/commandline.c,253,19,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","    while ((opt = getopt_long(argc, argv, optstring, long_options, NULL)) != -1) {",3088a5ab76c53d8cff5bb5ca6b63ae56951baaa487a76336ebda7e6332acd4ee
wireshark-2.2.17/ui/commandline.c,394,46,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    global_commandline_info.quit_after_cap = getenv(""WIRESHARK_QUIT_AFTER_CAPTURE"") ? TRUE : FALSE;",91e49eaf6067a09e5e4e4cdd677c0314490b384594f837b952e5328fed0f03de
wireshark-2.2.17/ui/commandline.c,400,19,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","    while ((opt = getopt_long(argc, argv, optstring, long_options, NULL)) != -1) {",3088a5ab76c53d8cff5bb5ca6b63ae56951baaa487a76336ebda7e6332acd4ee
wireshark-2.2.17/ui/gtk/about_dlg.c,424,36,3,buffer,g_get_tmp_dir,"This function is synonymous with 'getenv(""TMP"")';it returns untrustable input if the environment can beset by an attacker.  It can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  about_folders_row(table, ""Temp"", g_get_tmp_dir(),",2bcbb23bed0701a38f6c0bd7f39da14d5b2b953f9ad034da5daf1feadd8efa6d
wireshark-2.2.17/ui/gtk/packet_list_store.c,247,23,3,random,g_random_int,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,	packet_list->stamp = g_random_int();,d8c4222dca3a23962467c58fecab3079f851a2d5a59a3c2d16627e6508e4c7a5
wireshark-2.2.17/ui/gtk/packet_list_store.c,587,23,3,random,g_random_int,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,	packet_list->stamp = g_random_int();,d8c4222dca3a23962467c58fecab3079f851a2d5a59a3c2d16627e6508e4c7a5
wireshark-2.2.17/ui/gtk/prefs_font_color.c,204,33,3,random,g_rand_int_range,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"                  font_pangrams[g_rand_int_range(rand_state, 0, NUM_FONT_PANGRAMS)]);",df4ef718e6f6105c8d93b171954a82ca29802a6bfaffda44a1999e5124b37399
wireshark-2.2.17/ui/gtk/prefs_font_color.c,210,3,3,random,srand,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,  srand((unsigned int) time(NULL));,ec66f29d4f1e97c7247d4069568495dedfe34053a3f833c7373f3b602302b79f
wireshark-2.2.17/ui/gtk/proto_help.c,158,61,3,buffer,g_get_tmp_dir,"This function is synonymous with 'getenv(""TMP"")';it returns untrustable input if the environment can beset by an attacker.  It can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","	ph_log_path = g_strdup_printf(""%s"" G_DIR_SEPARATOR_S ""%s"", g_get_tmp_dir(), PH_FILE_LOG);",9c9b8679086a9fe37a84da759d5c423fb2c2c61b2bcf97d679c944e607a2bc5f
wireshark-2.2.17/ui/gtk/proto_hier_tree_model.c,418,17,3,random,g_random_int,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,	model->stamp = g_random_int();,c0cb64f7c01750e68b24008a54fe1ef245bbb7cd800d1cb5a6e932d32e11adec
wireshark-2.2.17/ui/gtk/proto_tree_model.c,394,17,3,random,g_random_int,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,	model->stamp = g_random_int();,c0cb64f7c01750e68b24008a54fe1ef245bbb7cd800d1cb5a6e932d32e11adec
wireshark-2.2.17/ui/qt/about_dialog.cpp,217,42,3,buffer,g_get_tmp_dir,"This function is synonymous with 'getenv(""TMP"")';it returns untrustable input if the environment can beset by an attacker.  It can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    message += about_folders_row(""Temp"", g_get_tmp_dir(), ""untitled capture files"");",a26bb93a8882e4da05beecaa3aefb5aeed54a6d785dff6095b7ab47af83bfc3b
wireshark-2.2.17/ui/qt/font_color_preferences_frame.cpp,71,46,3,random,g_rand_int_range,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327),Use a more secure technique for acquiring random values,,CWE-327,"    QString pangram = QString(font_pangrams_[g_rand_int_range(rand_state, 0, num_font_pangrams_)]) + "" 0123456789"";",3ec6620d52edde83a91a2415a9eb2e47f77a0e2d413a282205b0f95bb8feb4db
wireshark-2.2.17/ui/util.c,167,16,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    if ((env = getenv(""SSH_CONNECTION"")) != NULL) {",2936158f60e96b71088b8c967849bdc5cdc37d6e67514f14743e1b2f254482e3
wireshark-2.2.17/ui/util.c,179,23,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    } else if ((env = getenv(""SSH_CLIENT"")) != NULL) {",303079faac8d9a09b2be8e589c1f5a004d76471cae2fcf8da00272847842bcad
wireshark-2.2.17/ui/util.c,188,23,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    } else if ((env = getenv(""REMOTEHOST"")) != NULL) {",24e9bc6552079f14ec0376f6f5f70f0ffae8e60540b5973f54b6aa3bea2f35fd
wireshark-2.2.17/ui/util.c,198,23,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    } else if ((env = getenv(""DISPLAY"")) != NULL) {",ea4824ac5d2f53c21000d26fa228f8efb7c6b6a35f4ab8af866bf3953daec58e
wireshark-2.2.17/wiretap/erf.c,239,12,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  if ((s = getenv(""ERF_RECORDS_TO_CHECK"")) != NULL) {",537740063c27b8a600326fa686801297af3ce8b25e7c264371c2504952d60b37
wireshark-2.2.17/wiretap/ipfix.c,194,14,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    if ((s = getenv(""IPFIX_RECORDS_TO_CHECK"")) != NULL) {",711a73b5fced87d7f8d5e9d9efa8d731bbdc7d11e1403c94b16b01806b3f7a94
wireshark-2.2.17/wiretap/k12.c,839,24,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    gchar* env_level = getenv(""K12_DEBUG_LEVEL"");",765d005a3253353ab0c38ff595ace88e81355ac99964a1c346267e1de2cc3aff
wireshark-2.2.17/wiretap/k12.c,840,16,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","    env_file = getenv(""K12_DEBUG_FILENAME"");",6df407d6f410e90fe761daac9fcd83ae897e4c04ba0188c70fd3f0968ab67e75
wireshark-2.2.17/wsutil/getopt_long.c,159,9,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",#ifndef getenv,8c9e3118c8e5147bed8ff6fa85e22049792909eb20679c2cf462f115d88af734
wireshark-2.2.17/wsutil/getopt_long.c,160,14,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",extern char *getenv ();,d960903c642ceef72ac54037333a93db4fb6cb086e35605b1df86aaa1cd1e0a6
wireshark-2.2.17/wsutil/getopt_long.c,297,46,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  d->__posixly_correct = posixly_correct | !!getenv (""POSIXLY_CORRECT"");",cd89a54cbe8a7a7d0b07e99a6a09153217b662c012ba78481ca622ade1f0f18e
wireshark-2.2.17/wsutil/getopt_long.c,1202,1,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","getopt (int argc, char *const *argv, const char *optstring)",fff75e2911c302fa0ea945804b571c70fd23caf4ae89c1e5204691870f8f0761
wireshark-2.2.17/wsutil/getopt_long.c,1213,1,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","getopt_long (int argc, char *const *argv, const char *options,",ee546c0ce536bfd4a475cace8b12c000554fd7adc467bac063f4cd37fd426a33
wireshark-2.2.17/wsutil/getopt_long.c,1249,11,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","      c = getopt (argc, argv, ""abc:d:0123456789"");",fe4e2556472e09b8b6f473fc5e3453a89c234987ae88eb387bcce7039f523728
wireshark-2.2.17/wsutil/tempfile.c,145,55,3,buffer,g_get_tmp_dir,"This function is synonymous with 'getenv(""TMP"")';it returns untrustable input if the environment can beset by an attacker.  It can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20","  return g_strdup_printf(""%s"" G_DIR_SEPARATOR_S ""%s"", g_get_tmp_dir(), filename);",5e5ead46af3256bb2535857cc056ad63ca5a200dcb65910f04f2e5ee78316aab
wireshark-2.2.17/wsutil/tempfile.c,201,13,3,buffer,g_get_tmp_dir,"This function is synonymous with 'getenv(""TMP"")';it returns untrustable input if the environment can beset by an attacker.  It can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",  tmp_dir = g_get_tmp_dir();,54e553b4bd52aaa13bb48f4b9c90bf8be536b45a730d8d4c502f2e9072e87aa7
wireshark-2.2.17/wsutil/tempfile.c,264,13,3,buffer,g_get_tmp_dir,"This function is synonymous with 'getenv(""TMP"")';it returns untrustable input if the environment can beset by an attacker.  It can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)",Check environment variables carefully before using them,,"CWE-807, CWE-20",  tmp_dir = g_get_tmp_dir();,54e553b4bd52aaa13bb48f4b9c90bf8be536b45a730d8d4c502f2e9072e87aa7
wireshark-2.2.17/wsutil/wsgetopt.h,144,19,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","WS_DLL_PUBLIC int getopt (int ___argc, char *const *___argv, const char *__shortopts)",dffc8132e8bd157033af96d32e3300671d9d32759eb183644a8b5668b76d59e5
wireshark-2.2.17/wsutil/wsgetopt.h,153,30,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","  extern int __REDIRECT_NTH (getopt, (int ___argc, char *const *___argv,",7bfebd8e3dc6a496ba78a234b7d439570394c0e7d29174b7d964d910a1b9d289
wireshark-2.2.17/wsutil/wsgetopt.h,159,12,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20",#   define getopt __posix_getopt,188945465ddb6abc654a427e9e7459c3155473e74b7cb5765aef5803a3ce4b6c
wireshark-2.2.17/wsutil/wsgetopt.h,163,19,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","WS_DLL_PUBLIC int getopt (int ___argc, char *const *___argv,",ad3c6ba4601220e0e48952f7290f3e04657aefab5cbe6c945ca0ab7ebc63f89f
wireshark-2.2.17/wsutil/wsgetopt.h,168,19,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","WS_DLL_PUBLIC int getopt_long (int ___argc, char *const *___argv,",afa2a3eab14eacc366fc9d310afa6f454b9ffacb392c8f385cc9886c3ad6b8a0
wireshark-2.2.17/capchild/capture_ifinfo.c,69,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(temp_addr->addr.ip6_addr, if_addr->addr.ip6_addr, sizeof(if_addr->addr));",83d11734ec43a0a6a095ca9ffd3d91efd2367c40b3bdaf1cca9f7fb2f2f9590e
wireshark-2.2.17/capchild/capture_ifinfo.c,352,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(temp_addr->addr.ip6_addr, if_addr->addr.ip6_addr, sizeof(if_addr->addr));",83d11734ec43a0a6a095ca9ffd3d91efd2367c40b3bdaf1cca9f7fb2f2f9590e
wireshark-2.2.17/capchild/capture_sync.c,202,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char ssnap[ARGV_NUMBER_LEN];,407abde66ea744a3f56ebca8ab46e13ee97a7635188d403ebcb947d4c9b978ec
wireshark-2.2.17/capchild/capture_sync.c,203,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char scount[ARGV_NUMBER_LEN];,92e09af035ade6f970ac42d8807a65eab510dd29ca93d9a0bff16c3e63554010
wireshark-2.2.17/capchild/capture_sync.c,204,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sfilesize[ARGV_NUMBER_LEN];,b7c5937cb30738e197ce194592e207acab8300964a66cf3891b2b2bb91aca7f7
wireshark-2.2.17/capchild/capture_sync.c,205,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sfile_duration[ARGV_NUMBER_LEN];,de00177704f9a5c9f66bf6df6005149751d7db3bc2f9ef39ce87dfbc8cb27972
wireshark-2.2.17/capchild/capture_sync.c,206,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sring_num_files[ARGV_NUMBER_LEN];,2c92235fa3ffacd137b72fc8803d0d02f3c65b739c7bd53163582b2bf4f5c4cc
wireshark-2.2.17/capchild/capture_sync.c,207,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sautostop_files[ARGV_NUMBER_LEN];,4a365cef35ca039ea19a5010305b0afb6a70a9b826737d1f03a9815d8b3dce85
wireshark-2.2.17/capchild/capture_sync.c,208,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sautostop_filesize[ARGV_NUMBER_LEN];,c0e3c4dca9bbdd83fdb99927ed3093d00ac3476e5ab997dd88b63d6a635e39ca
wireshark-2.2.17/capchild/capture_sync.c,209,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sautostop_duration[ARGV_NUMBER_LEN];,08690949154d5fa024525472f1b6075e2dee71b6dec7ab546742e4c2ea40db0d
wireshark-2.2.17/capchild/capture_sync.c,211,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char sauth[256];,9d83173787b72ef2b0208473a380b1c13b242505511b6a46090b4fcc3fae9bd4
wireshark-2.2.17/capchild/capture_sync.c,214,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char ssampling[ARGV_NUMBER_LEN];,b8ed26fd0dbbd2a46f7ca2197023cda26215095bcd71cc27f4450efba79b9f69
wireshark-2.2.17/capchild/capture_sync.c,218,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buffer_size[ARGV_NUMBER_LEN];,ce212d76ce67b562cacaa9f9659c58f736d38b1a44e9ce049cd3cd3c10c4da3f
wireshark-2.2.17/capchild/capture_sync.c,232,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char control_id[ARGV_NUMBER_LEN];,5492e90d33ad58a52691732e10f3dd52a25da0628fc81089c35e5ca6fa76e744
wireshark-2.2.17/capchild/capture_sync.c,235,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char errmsg[1024+1];,7d55b2d577c5b2e87c25a2e908b6e1d0f90019984d54c9188054dcc69a4b89b8
wireshark-2.2.17/capchild/capture_sync.c,686,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char errmsg[1024+1];,7d55b2d577c5b2e87c25a2e908b6e1d0f90019984d54c9188054dcc69a4b89b8
wireshark-2.2.17/capchild/capture_sync.c,1643,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(msg, header, sizeof(header));",65fd6725114301c6f3008e32696b6fc79a3c5da088baac66dab5ea58a69ab141
wireshark-2.2.17/capchild/capture_sync.c,1682,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buffer[SP_MAX_MSG_LEN+1] = {0};,bdab8f620a707e1fd2e46cf8a0265383087ecf92dd1577151fdf54a46829fe03
wireshark-2.2.17/capchild/capture_sync.c,1771,20,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        npackets = atoi(buffer);,e61de08860b37b40964b484787b7a181f35642ad00c8db0b2b063776a85f6e7a
wireshark-2.2.17/capchild/capture_sync.c,1941,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char sigmsg_buf[6+1+3+1];,17c9ad634849d0865950471e38e889da1e744068dfeea65652d04e4508f6d819
wireshark-2.2.17/capture_info.c,62,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char errmsg_errno[1024+1];,d3a48dd6bc93bca3e84f669e2c8877706d80f16af252aaf122e7357a1411da58
wireshark-2.2.17/caputils/airpcap_loader.c,823,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char errbuf[AIRPCAP_ERRBUF_SIZE];,dafa9c1ce915d418f698ffcd6dfda5893be099e0be755ad253d2faeff006d112
wireshark-2.2.17/caputils/capture-pcap-util-int.h,52,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char (*open_err_str)[PCAP_ERRBUF_SIZE]);,ac2efc7c7086e13afb481811111340de202ef07aaae115f2ce398444d8cd357e
wireshark-2.2.17/caputils/capture-pcap-util-int.h,58,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char (*open_err_str)[PCAP_ERRBUF_SIZE]);,ac2efc7c7086e13afb481811111340de202ef07aaae115f2ce398444d8cd357e
wireshark-2.2.17/caputils/capture-pcap-util-int.h,63,18,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    int timeout, char (*open_err_str)[PCAP_ERRBUF_SIZE]);",8e31cdad7d5fe00edb80f46e2b9428a476adb3ab18e507ba01cb8feabc8200e0
wireshark-2.2.17/caputils/capture-pcap-util-unix.c,82,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char source[PCAP_BUF_SIZE];,b32d78f662ad1974991887d3703b75a852e71e6b861a25854c9eadb4bfbdedd3
wireshark-2.2.17/caputils/capture-pcap-util-unix.c,83,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-2.2.17/caputils/capture-pcap-util-unix.c,142,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-2.2.17/caputils/capture-pcap-util-unix.c,438,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char (*open_err_str)[PCAP_ERRBUF_SIZE]),87052058276087ea323952fff3895c4a896a2b74a669812348cc84d547ee56c5
wireshark-2.2.17/caputils/capture-pcap-util.c,433,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy((void *)&if_addr->addr.ip6_addr,",e95ba4f2e07e08a406d8628c25f3e8d21a0a40546dca12ecc919391d6a3d2277
wireshark-2.2.17/caputils/capture-pcap-util.c,470,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char errbuf[PCAP_ERRBUF_SIZE*4];,5b34b986e1d9694c66f02748399032efa4b4c765dedc4861f3f71a38abb1085e
wireshark-2.2.17/caputils/capture-pcap-util.c,507,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-2.2.17/caputils/capture-pcap-util.c,1004,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-2.2.17/caputils/capture-pcap-util.c,1093,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char (*open_err_str)[PCAP_ERRBUF_SIZE]),87052058276087ea323952fff3895c4a896a2b74a669812348cc84d547ee56c5
wireshark-2.2.17/caputils/capture-pcap-util.c,1171,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-2.2.17/caputils/capture-pcap-util.c,1201,18,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    int timeout, char (*open_err_str)[PCAP_ERRBUF_SIZE])",e385825359fb17600c20be8b5b9309cea8d9618631c23d801aeb70204f7bf2fd
wireshark-2.2.17/caputils/capture-pcap-util.c,1239,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-2.2.17/caputils/capture-pcap-util.c,1299,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char (*open_err_str)[PCAP_ERRBUF_SIZE]),87052058276087ea323952fff3895c4a896a2b74a669812348cc84d547ee56c5
wireshark-2.2.17/caputils/capture-pcap-util.h,73,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char (*open_err_str)[PCAP_ERRBUF_SIZE]);,ac2efc7c7086e13afb481811111340de202ef07aaae115f2ce398444d8cd357e
wireshark-2.2.17/caputils/capture-wpcap.c,539,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char ebuf[15 + 10 + 1];,4b11dc6c24563f2bd12483ae07e550ae1a008415fe61dfbf5f5304dc37f95288
wireshark-2.2.17/caputils/capture-wpcap.c,775,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char source[PCAP_BUF_SIZE];,b32d78f662ad1974991887d3703b75a852e71e6b861a25854c9eadb4bfbdedd3
wireshark-2.2.17/caputils/capture-wpcap.c,776,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-2.2.17/caputils/capture-wpcap.c,809,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char ascii_name[MAX_WIN_IF_NAME_LEN + 1];,f568d8a40e2063a81426eace26b88dd06f377ff9705ed4e6b26afb723c7b5d14
wireshark-2.2.17/caputils/capture-wpcap.c,810,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char ascii_desc[MAX_WIN_IF_NAME_LEN + 1];,4c894824152a7d589cf3e3167aa1e3f3f73f05807b3749be35ca74835bc22f76
wireshark-2.2.17/caputils/capture-wpcap.c,812,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char errbuf[PCAP_ERRBUF_SIZE];,857876a2e1317e75db38b171455bee83f1ca36aae1dd70f8b7f64c46eccef2bb
wireshark-2.2.17/caputils/capture-wpcap.c,1007,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char (*open_err_str)[PCAP_ERRBUF_SIZE]),87052058276087ea323952fff3895c4a896a2b74a669812348cc84d547ee56c5
wireshark-2.2.17/caputils/capture_wpcap_packet.c,79,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char      __ss_pad1[ETH_SS_PAD1SIZE];,bd93119bc149221aeee4cc944b1c136636a86ca6574d4133860fa341e78553bb
wireshark-2.2.17/caputils/capture_wpcap_packet.c,85,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char      __ss_pad2[ETH_SS_PAD2SIZE];,7d95cb5b6eb6b7b0aa601b2b5b8e4af64ab245fb42e4c8ed7370c70e0f045736
wireshark-2.2.17/caputils/capture_wpcap_packet.c,250,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(OidData->Data, value, *length);",e94285130f14ac94512b8902ba469181b8fe6fc40c3c465bd485cabddff23e16
wireshark-2.2.17/caputils/capture_wpcap_packet.c,257,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(value, OidData->Data, OidData->Length);",e206a66e6a33625b17639fe2610fda2e9f5217a11c09da2bbf3ec715a86bfe2f
wireshark-2.2.17/caputils/iface_monitor.c,252,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char msg[NET_EVENT_DATA_SIZE];,63035be3ab2502b6a4dd22f087000afb3deff367be304f4e156d65641902e11a
wireshark-2.2.17/caputils/iface_monitor.c,257,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char ifr_name[IFNAMSIZ];,1b4722fc708d59a516043d0b56db7898795160e1f903b0d7e4ec5e7898aa374c
wireshark-2.2.17/caputils/ws80211_utils.c,468,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char name1[IFNAMSIZ];,66f436a09e489a4215b0a59f25aa890b0bcfa4c89531181211ded481ef9aacdd
wireshark-2.2.17/caputils/ws80211_utils.c,641,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char line[200];,cacd7d46856bf38b81461a7ca84743fe974c702c23dccb84516bd71f01b230a4
wireshark-2.2.17/caputils/ws80211_utils.c,1187,3,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		TCHAR airpcap_dir_utf16[MAX_PATH];,cffa5f6b822e3000479f1c6f83e3b4373b9055d338611b36ded99666b28c100d
wireshark-2.2.17/dumpcap.c,703,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char errmsg[MSG_MAX_LENGTH+1];,208ac92f850f77612543e179dbf34a79076e6094c6c53051da7b0f2a81fee966
wireshark-2.2.17/dumpcap.c,704,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char secondary_errmsg[MSG_MAX_LENGTH+1];,88004add3e2dcb544a98f0e06d869bc1704de116fda40a551556c63232a4ef94
wireshark-2.2.17/dumpcap.c,801,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        addr_str[ADDRSTRLEN];,6e67c4d35264fa441a76b8c076d942cea2fd5f5c94cf6139e846a86a6fc50c96
wireshark-2.2.17/dumpcap.c,919,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        errbuf[PCAP_ERRBUF_SIZE];,6119771016988c0bd86840fb6b1c8553f1de217acb2672a47ab0401d9455006a
wireshark-2.2.17/dumpcap.c,1345,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[16];,f8bd72609fcf9e1123e74ed2ab5aa38f49593871255165d3086feea1a0957480
wireshark-2.2.17/dumpcap.c,2980,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char         errmsg[MSG_MAX_LENGTH+1];,29cb624dec517133c44c99fb4d5334fd6f3abf667bca5b24405a068bd3fc78a4
wireshark-2.2.17/dumpcap.c,3016,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char              errmsg[MSG_MAX_LENGTH+1];,48409c85a4ca5e8e97d1182d202ba77c5c1ede546147ad72467fb61b9fcfac79
wireshark-2.2.17/dumpcap.c,3017,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char              secondary_errmsg[MSG_MAX_LENGTH+1];,7b0b68a3d04521c6fc02a9ded9bb41ebb98a13670745db1bc5c420e5e5433d8e
wireshark-2.2.17/dumpcap.c,3652,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(queue_element->pd, pd, phdr->caplen);",886a11b4b718a955d21caac171a04147af74d5fe3deff90ecaa6b4bbd896f802
wireshark-2.2.17/dumpcap.c,3699,16,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        freq = atoi(options[0]);,3e40f7f9b90bd365ce59505857a2526040285d1eb9f24ecee61ec4b777f7260a
wireshark-2.2.17/dumpcap.c,3710,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        center_freq1 = atoi(options[2]);,7baa05a32a7f2e8ec31ebd8802515f10b8c963222c2d28eae0610b8545aa2166
wireshark-2.2.17/dumpcap.c,3713,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        center_freq2 = atoi(options[3]);,7fe8a3d585639ed0a422699e52abd3715dc2c95e52e2d35a2750aab51af8bae4
wireshark-2.2.17/dumpcap.c,4589,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char tmp[SP_DECISIZE+1+1];,85d136960303ec7b3ce8c09d966ad71251106c83a1a621f798f96b2b7b20c738
wireshark-2.2.17/dumpcap.c,4642,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char tmp[MSG_MAX_LENGTH+1+6];,2861f4ce8f0db881f16af8bb671ce7491028115d2696c034671794682c0bed55
wireshark-2.2.17/dumpcap.c,4684,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char tmp[SP_DECISIZE+1+1];,85d136960303ec7b3ce8c09d966ad71251106c83a1a621f798f96b2b7b20c738
wireshark-2.2.17/echld/child.c,82,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[DBG_BUF_LEN];,1848447621e8f2bbd954448ede01d8056dab5033a592360552aaa43c09732c9a
wireshark-2.2.17/echld/common.c,35,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[1024];,751cb5b44538b25ecf5a8d80f10459d00b86862b6604d6323f2884e9eb974bba
wireshark-2.2.17/echld/dispatcher.c,208,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        addr_str[ADDRSTRLEN];,6e67c4d35264fa441a76b8c076d942cea2fd5f5c94cf6139e846a86a6fc50c96
wireshark-2.2.17/echld/parent.c,81,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[1024];,751cb5b44538b25ecf5a8d80f10459d00b86862b6604d6323f2884e9eb974bba
wireshark-2.2.17/echld/parent.c,114,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[1024];,751cb5b44538b25ecf5a8d80f10459d00b86862b6604d6323f2884e9eb974bba
wireshark-2.2.17/editcap.c,1205,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            secs_per_block = atoi(optarg);,d110fdbd71666b75689176f4558c9ffcea2e09f65b02110a0f327dfef971b142
wireshark-2.2.17/editcap.c,1214,29,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            ignored_bytes = atoi(optarg);,ed88e7f8ad3b98334c97c4c6e4cf53d81b92e1630e123ffdaf0e470c59b6303c
wireshark-2.2.17/epan/addr_resolv.c,170,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char              hexaddr[6*3];,55ddbf27ebfc2c99d47e838a5eb7186123861e2193d6dd1e3956a666def73cbc
wireshark-2.2.17/epan/addr_resolv.c,171,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char              resolved_name[MAXNAMELEN];,e22fdcef457fb05779b435b1a8028ee8c84adcd754fdb55a3de4763eadf6c337
wireshark-2.2.17/epan/addr_resolv.c,177,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char              hexaddr[3*3];,e20ed26c55c43a4e7a46fddd5a3d2d1e9fc1cace3cfc4d62ec02cbbeec8b4340
wireshark-2.2.17/epan/addr_resolv.c,178,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char              resolved_name[MAXNAMELEN];,e22fdcef457fb05779b435b1a8028ee8c84adcd754fdb55a3de4763eadf6c337
wireshark-2.2.17/epan/addr_resolv.c,185,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char              name[MAXNAMELEN];,9f949de7f5895f37665c801eb832d17ff9251807257e51c1f5e0e595150222d7
wireshark-2.2.17/epan/addr_resolv.c,192,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char              name[MAXNAMELEN];,9f949de7f5895f37665c801eb832d17ff9251807257e51c1f5e0e595150222d7
wireshark-2.2.17/epan/addr_resolv.c,199,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char              name[MAXVLANNAMELEN];,cda9d910faf20b6a0e9000cf454eb948ec3eb6ae84bf23cdf04b70e06cfc59e4
wireshark-2.2.17/epan/addr_resolv.c,213,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char             name[MAXNAMELEN];,65c83432d0ea957a715589ffa5b812f9a5f051c46d9bbf005af351cbfde5a8cf
wireshark-2.2.17/epan/addr_resolv.c,219,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char               name[MAXNAMELEN];,fee8da99f326074c171624cbae3673e63fcb25c959c43e3eaced4ef6fdd92a27
wireshark-2.2.17/epan/addr_resolv.c,981,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(tp->addr, addr->bytes, sizeof tp->addr);",026acab3d875137e8d18dd1671f453e59171df948ec62065da0b642ed0e38783
wireshark-2.2.17/epan/addr_resolv.c,1004,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(addr_key, addr, 16);",6489b1c563ef11f0b0dd38cad26a2cd05f52e178cbd44b4163a35c1e5d7adad7
wireshark-2.2.17/epan/addr_resolv.c,1316,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(manuf_value->addr, addr, 3);",c5b6e2789c4e2bbd4cabba77141e6ce137d50e6cebd321c74df1fec7dcc6fd02
wireshark-2.2.17/epan/addr_resolv.c,1362,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(wka_key, addr, 6);",819f64d815820a15fc0f6dc6441775f5e973e2e948df28147c834a3fe57ae9ea
wireshark-2.2.17/epan/addr_resolv.c,2241,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&(resolved_ipv6_entry->ip6_addr), &host_addr.ip6_addr, 16);",2e463a8b6b66bdab0d50d60a52e70b14d9456300a24ea93955ea7e21485c6690
wireshark-2.2.17/epan/addr_resolv.c,2348,23,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        mask_length = atoi(cp2);,44cc19e7f1a6c3e09b705733388b9474a971d05cc247e91c517e9f65fa6e9e2a
wireshark-2.2.17/epan/addr_resolv.c,2735,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(addr_key, addrp, 16);",72683b35a84f63fe801f0e1f36d02d73215037bd7cf1918c1a8ad038c2fa0ae2
wireshark-2.2.17/epan/addr_resolv.c,3209,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ahp->addrp, hp->h_addr, hp->h_length);",449680e43089d13420cbd560f0cc4868347a291086f0f3160e9dec976ec59ccb
wireshark-2.2.17/epan/address_types.c,236,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&ip4_addr, addr->data, sizeof ip4_addr);",d1cd04842ae8df9932ef9ba1cb225f756c5fc206e134641f31cf1b00ea922edd
wireshark-2.2.17/epan/address_types.c,275,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&ip6_addr.bytes, addr->data, sizeof ip6_addr.bytes);",c99a97173ee5e26eb3f9affa1bbae3976631bcae7b23b04a50349bb885cdc053
wireshark-2.2.17/epan/address_types.c,379,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy (oui, &addrp[2], 6);",8643f4f13580a4924fd58be8d43979c045a48171add54f25c32297feae6130d1
wireshark-2.2.17/epan/address_types.c,450,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy((void *)&lid_number, addr->data, sizeof lid_number);",8cb2bf0716a37ddbd3b524bb1cb5246899ab19d3925dc74394089286cfbc2310
wireshark-2.2.17/epan/address_types.c,740,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(buf, addr->data, copy_len);",6791a43afcd8b8792026017dd91eaf425c9b74674cf4cd84dcfc463ca6aeea22
wireshark-2.2.17/epan/app_mem_usage.c,90,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[128];,a7e6ef4b73cb0cf74f88a6a9d4e04522c79ea9387f8f272e9d0ac542fa7168aa
wireshark-2.2.17/epan/app_mem_usage.c,101,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char path[64];,2a40c2a7f226802b3e474c903809316f0eef0734e7a803bf498df84d2f9da6ca
wireshark-2.2.17/epan/column-utils.c,433,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buf[16];,f8bd72609fcf9e1123e74ed2ab5aa38f49593871255165d3086feea1a0957480
wireshark-2.2.17/epan/column-utils.c,455,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char buf_src[32], buf_dst[32];",8d6cccbcbe97ed904cacc83393f89f578129bfede81c374a158fce1a1f21b140
wireshark-2.2.17/epan/column-utils.c,547,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char        orig_buf[COL_BUF_MAX_LEN];,a53b8e9902a8cfc744198cfc5dfcd28fb885710376f1a833b08e5240c1267c6e
wireshark-2.2.17/epan/column-utils.c,590,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char        orig_buf[COL_BUF_MAX_LEN];,a53b8e9902a8cfc744198cfc5dfcd28fb885710376f1a833b08e5240c1267c6e
wireshark-2.2.17/epan/crypt/airpdcap.c,370,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(tmp_sa, sa, sizeof(AIRPDCAP_SEC_ASSOCIATION));",9fe3c92c527e7b6e69f312d21dab2f114a821a6439f5994e0472a0e650d7284e
wireshark-2.2.17/epan/crypt/airpdcap.c,394,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(new_key, pEAPKey->key_iv, 16);",4e33741b8e00ac643e7f1d07adffee02b1512ff4523d8f011ef710763103cddf
wireshark-2.2.17/epan/crypt/airpdcap.c,395,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(new_key+16, decryption_key, 16);",5dc3758e68f3c65de22508cadb1a789e192e661b72db3ba2c00a77551b69953f
wireshark-2.2.17/epan/crypt/airpdcap.c,459,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(szEncryptedKey, decrypted_data+key_index+8, key_length);",6fd77c46a42c3ac83d15bb03cad72c5f37fc457a7bc0ac8ba65e44d487c8a447
wireshark-2.2.17/epan/crypt/airpdcap.c,491,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sa->wpa.ptk+32, szEncryptedKey, key_len);",ddc02fae8ceb228b3b30f546400f627e04be930068a1c9562a46fa1f8c6e1e4e
wireshark-2.2.17/epan/crypt/airpdcap.c,644,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(id.sta, broadcast_mac, AIRPDCAP_MAC_LEN);",7bb0e2cb77537c7138e2c49135a38d4e57d47678fede7cbea0200adc784103f9
wireshark-2.2.17/epan/crypt/airpdcap.c,656,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id.sta, addr, AIRPDCAP_MAC_LEN);",cbecef8bdaaf1828ff6fd834a102a766692175bdeadb8c99ae442390d0960f16
wireshark-2.2.17/epan/crypt/airpdcap.c,747,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id.sta, initiator, AIRPDCAP_MAC_LEN);",593f475b371f335d5f52b6c8fc93931965e72fe83a91377cd8262205db999f44
wireshark-2.2.17/epan/crypt/airpdcap.c,748,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id.bssid, responder, AIRPDCAP_MAC_LEN);",2f110a3beb365885a4aca7a3285641ab848817c21ca0e1005bbd2d4abde42bd5
wireshark-2.2.17/epan/crypt/airpdcap.c,750,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id.sta, responder, AIRPDCAP_MAC_LEN);",449f2284b05215d8abeb6e4132c1f66fe6696c6206aa7e9378fbf728f5cbad19
wireshark-2.2.17/epan/crypt/airpdcap.c,751,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id.bssid, initiator, AIRPDCAP_MAC_LEN);",bd68527513c8950959a3472945ff15421bb9310800bb26ab53843e7ed3d771f0
wireshark-2.2.17/epan/crypt/airpdcap.c,766,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(tmp_sa, sa, sizeof(AIRPDCAP_SEC_ASSOCIATION));",9fe3c92c527e7b6e69f312d21dab2f114a821a6439f5994e0472a0e650d7284e
wireshark-2.2.17/epan/crypt/airpdcap.c,875,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(decrypt_data, data, *decrypt_len);",c70512c7f8b3e69fcf020f4e97872485635e62fbffa84cae8cc7beb8f712dc89
wireshark-2.2.17/epan/crypt/airpdcap.c,899,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(id.sta, broadcast_mac, AIRPDCAP_MAC_LEN);",7bb0e2cb77537c7138e2c49135a38d4e57d47678fede7cbea0200adc784103f9
wireshark-2.2.17/epan/crypt/airpdcap.c,968,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&ctx->keys[success], &keys[i], sizeof(keys[i]));",ff5c6630bd36daed3258ab8aba3d65fe8a2974b3d6f887c7c43ba5368fde8ce9
wireshark-2.2.17/epan/crypt/airpdcap.c,1066,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ctx->pkt_ssid, pkt_ssid, pkt_ssid_len);",3c754551079ff81600cb0d5e2dd475d997167cf6de822981cbe4868f5b0af8f8
wireshark-2.2.17/epan/crypt/airpdcap.c,1163,8,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"       memcpy(try_data, decrypt_data, *decrypt_len);",0533fb830e72d8b73a3e3cfc500d9a6ccaad7458c43892ae5ab62e604d758e3c
wireshark-2.2.17/epan/crypt/airpdcap.c,1227,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(decrypt_data, try_data, *decrypt_len);",b72906546b374d53d0b2fc3d567d67948af698fc4fd5bc79aab91087f1644ac2
wireshark-2.2.17/epan/crypt/airpdcap.c,1240,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(key, sa->key, sizeof(AIRPDCAP_KEY_ITEM));",645cab6485ddd8bef52d5d29fd76ba4de49e98025fc2a842289d6040829cea36
wireshark-2.2.17/epan/crypt/airpdcap.c,1243,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(key->KeyData.Wpa.Ptk, sa->wpa.ptk, AIRPDCAP_WPA_PTK_LEN); /* copy the PTK to the key structure for future use by wireshark */",1d84c7d3a7ffe2067b1947ef7c686575d3140b21f3ba9f11bba608e734b50240
wireshark-2.2.17/epan/crypt/airpdcap.c,1296,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(try_data, decrypt_data, *decrypt_len);",0533fb830e72d8b73a3e3cfc500d9a6ccaad7458c43892ae5ab62e604d758e3c
wireshark-2.2.17/epan/crypt/airpdcap.c,1299,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(wep_key, try_data+mac_header_len, AIRPDCAP_WEP_IVLEN);",d02ec29e4f8304e7fa85a3da1f51b519024d57396ee5fca2b459d3ce99a8a33d
wireshark-2.2.17/epan/crypt/airpdcap.c,1301,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(wep_key+AIRPDCAP_WEP_IVLEN, tmp_key->KeyData.Wep.WepKey, keylen);",eceb0ed8d8f3a0c0b86ff8d191ce764772d5c96a38904c3d0b1e2563da6f96e4
wireshark-2.2.17/epan/crypt/airpdcap.c,1309,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(decrypt_data, try_data, *decrypt_len);",b72906546b374d53d0b2fc3d567d67948af698fc4fd5bc79aab91087f1644ac2
wireshark-2.2.17/epan/crypt/airpdcap.c,1318,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(key, sa->key, sizeof(AIRPDCAP_KEY_ITEM));",645cab6485ddd8bef52d5d29fd76ba4de49e98025fc2a842289d6040829cea36
wireshark-2.2.17/epan/crypt/airpdcap.c,1414,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(tmp_sa, sa, sizeof(AIRPDCAP_SEC_ASSOCIATION));",9fe3c92c527e7b6e69f312d21dab2f114a821a6439f5994e0472a0e650d7284e
wireshark-2.2.17/epan/crypt/airpdcap.c,1424,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(sa->wpa.nonce, data+offset+12, 32);",b89a11568ba37e86df7dc96d17e73895e013c7bf74e5478d708ea358a82c060f
wireshark-2.2.17/epan/crypt/airpdcap.c,1482,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(&pkt_key.UserPwd.Ssid, ctx->pkt_ssid, ctx->pkt_ssid_len);",3d53e83736ed6ef9f7c606b09b73bc2575ea70b96c3d9cd9e77e3693db6479ad
wireshark-2.2.17/epan/crypt/airpdcap.c,1504,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(eapol, &data[offset-5], (eapol_len<AIRPDCAP_EAPOL_MAX_LEN?eapol_len:AIRPDCAP_EAPOL_MAX_LEN));",5529278b574550e73b32dc2e8a9a3f137ac8daa6c7615b2ac948418f7e71f5c2
wireshark-2.2.17/epan/crypt/airpdcap.c,1585,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id.sta, broadcast_mac, AIRPDCAP_MAC_LEN);",7bb0e2cb77537c7138e2c49135a38d4e57d47678fede7cbea0200adc784103f9
wireshark-2.2.17/epan/crypt/airpdcap.c,1586,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id.bssid, sa->saId.bssid, AIRPDCAP_MAC_LEN);",b3f0239b6e25ce8c5f7c72fd83235fa1c83c5e1fd8d683c1cafe8fb8b9b26057
wireshark-2.2.17/epan/crypt/airpdcap.c,1610,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(mic, eapol+AIRPDCAP_WPA_MICKEY_OFFSET+4, AIRPDCAP_WPA_MICKEY_LEN);",d765d735c5655756e5a91bdb624fb8f88e095ae2f8e0813fcb0b0f7914a8b1e3
wireshark-2.2.17/epan/crypt/airpdcap.c,1753,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&(ctx->sa[ctx->index].saId), id, sizeof(AIRPDCAP_SEC_ASSOCIATION_ID));",b63670a6f8766f9f93b1f8a8abcb9b3e01be42fee2343fae96f89110da8bd5bd
wireshark-2.2.17/epan/crypt/airpdcap.c,1783,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id->sta, frame->addr1, AIRPDCAP_MAC_LEN);",362398e5703e35231312bae51e68fe243f78bd7c43b24439b85ae3697d812498
wireshark-2.2.17/epan/crypt/airpdcap.c,1784,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id->bssid, frame->addr2, AIRPDCAP_MAC_LEN);",67ad58059fb2df5949bc207892fbb296b2ec8948e8d5cf02cdee1c16947f7114
wireshark-2.2.17/epan/crypt/airpdcap.c,1786,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id->sta, frame->addr2, AIRPDCAP_MAC_LEN);",8e158e5387bd6803ed9b2082c6c7dc1058b99e58c62fb8b4fe5e5559a85bd79d
wireshark-2.2.17/epan/crypt/airpdcap.c,1787,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id->bssid, frame->addr1, AIRPDCAP_MAC_LEN);",af3bdf62524e02147c03e28a7c42a031f0861f1cc0a6eea0519efddf52f93cab
wireshark-2.2.17/epan/crypt/airpdcap.c,1794,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id->bssid, addr, AIRPDCAP_MAC_LEN);",c3e368001a721ea304e3c91068850a772582ccc75b999bb30cd487a7fed31da0
wireshark-2.2.17/epan/crypt/airpdcap.c,1800,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(id->sta, addr, AIRPDCAP_MAC_LEN);",fab0230ca7a70a79047f8ff0f3f76564c0be50e49f96f8ee14b37fed85dc5e8b
wireshark-2.2.17/epan/crypt/airpdcap.c,1894,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(R, ""Pairwise key expansion"", offset);",aba3decddb5acf9a1ba1cdb1b689161cdbe67df660326aba6e01806abcdc39a1
wireshark-2.2.17/epan/crypt/airpdcap.c,1899,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset, sa->saId.sta, AIRPDCAP_MAC_LEN);",82e2700d52349bbff5dc9164781d417ff620bbf1a64ccd4fc5b5c40cc89fed84
wireshark-2.2.17/epan/crypt/airpdcap.c,1900,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset+AIRPDCAP_MAC_LEN, sa->saId.bssid, AIRPDCAP_MAC_LEN);",42c80d866d77c25dc7fc66453701d65ed36c0437b5b599a2ef0a83d1456010dc
wireshark-2.2.17/epan/crypt/airpdcap.c,1904,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset, sa->saId.bssid, AIRPDCAP_MAC_LEN);",42bc1faf2f6b393aeba261f4b2270a7f0017896c295238eab57e4534e14f85f8
wireshark-2.2.17/epan/crypt/airpdcap.c,1905,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset+AIRPDCAP_MAC_LEN, sa->saId.sta, AIRPDCAP_MAC_LEN);",cdf018c9a856cb9466c17af3bd34ef23a18fe8367d27fc5c18621fb699131641
wireshark-2.2.17/epan/crypt/airpdcap.c,1913,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset, snonce, 32);",ed1fbc36988d7e35c963dd1c31767e1eb31dedbee1691355f0af03d4484b9f88
wireshark-2.2.17/epan/crypt/airpdcap.c,1914,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset + 32, sa->wpa.nonce, 32);",816eba67584dfaf7162d21f56c22c4cb05bea9ac969abb33952c6d1264563cb8
wireshark-2.2.17/epan/crypt/airpdcap.c,1918,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset, sa->wpa.nonce, 32);",77978292bfe4369c45613962bf065b2a4a025c4627922bc3648922e825c054c8
wireshark-2.2.17/epan/crypt/airpdcap.c,1919,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(R + offset + 32, snonce, 32);",db3baa48651cac01224b1c8562c802f21eed45973f1f8f03529cb0521c2aee70
wireshark-2.2.17/epan/crypt/airpdcap.c,1929,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ptk, output, x/8);",c215877cd18c0e70d7b5c8e915a6d83641b6527d89ee38a7810c56f74dbdcb67
wireshark-2.2.17/epan/crypt/airpdcap.c,1957,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(digest, ssid, ssidLength);",6d7a25c80229ebd5e190d3d194e9dce1ee960e3381d4112620444808aeba6a12
wireshark-2.2.17/epan/crypt/airpdcap.c,1965,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(output, digest1, SHA1_DIGEST_LEN);",129849e51f7b8e790b86f364543fbb91bd8e3f3c305194aa1cccd780bc8c404d
wireshark-2.2.17/epan/crypt/airpdcap.c,1970,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(digest1, digest, SHA1_DIGEST_LEN);",d98d3c8d3eb497e15f9d1478b560b29345d9cb19273ed95ac7c429cc29616f6a
wireshark-2.2.17/epan/crypt/airpdcap.c,2000,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(output, m_output, AIRPDCAP_WPA_PSK_LEN);",8a5b86c38bd6ad572680585d52b97f579f163e59c3e8425fdcdc65637fc8f00d
wireshark-2.2.17/epan/crypt/airpdcap.c,2308,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(AIRPDCAP_GET_TK(sa->wpa.ptk), &key_input[16], 16);",cc7206978fd7fb2afcf76390b834c4ab265647789a33d58ff86a8a9a4502c6ce
wireshark-2.2.17/epan/crypt/airpdcap.c,2309,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sa->wpa.nonce, snonce, AIRPDCAP_WPA_NONCE_LEN);",17b7c64018bd5e259abe61c7db75e0af94e7325b1036adde71f6c2a71c299684
wireshark-2.2.17/epan/crypt/airpdcap_ccmp.c,86,40,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"#define AIRPDCAP_ADDR_COPY(dst,src)    memcpy(dst,src,AIRPDCAP_MAC_LEN)",c9d645cb738e22db990b16861d638cc36310a8b7ac2d0742ff2ba77985380907
wireshark-2.2.17/epan/crypt/airpdcap_ccmp.c,154,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(aad + 4, &wh->addr1[0], 3 * AIRPDCAP_MAC_LEN);",3212c735cc34574b757195d43c3156efb9fab3b2566067f3a5185d2a8ddee569
wireshark-2.2.17/epan/crypt/airpdcap_ccmp.c,243,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(mic, m+len-AIRPDCAP_CCMP_TRAILER, AIRPDCAP_CCMP_TRAILER);",7bfb68505199bc74766d810ad4080adb76d94170dc959be00a505ddc08e20e3a
wireshark-2.2.17/epan/crypt/airpdcap_rijndael.c,58,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(a, cipher_text, 8);",6c373c21cf9e835454ca7845af143f3dfb31ff923154f2ee93818e304c505aca
wireshark-2.2.17/epan/crypt/airpdcap_rijndael.c,60,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(r, cipher_text+8, cipher_len - 8);",e6ff998794875e766a319ef7907fa9e8bddb70ad8d4b3f2c03b9b0d1a4850117
wireshark-2.2.17/epan/crypt/airpdcap_rijndael.c,71,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(b, a, 8);",05bcd4b514871be58ba886f98cd1e0edc955de275afc915d923531845ce887d3
wireshark-2.2.17/epan/crypt/airpdcap_rijndael.c,74,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(b+8, r, 8);",355fa33f5541ed1e62a65d5a2e9a7450f9c0d36c5dbbc2e605a9a2e4dd1b9cf7
wireshark-2.2.17/epan/crypt/airpdcap_rijndael.c,78,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(a,b,8);",6a04e62e97e05c622c07ac8a07a893e1a5022082ab48cce073f719647437a904
wireshark-2.2.17/epan/crypt/airpdcap_rijndael.c,79,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(r, b+8, 8);",a690da7618f4b50a17d742b3c617a6b96291571b328d0e9775741a791d16567c
wireshark-2.2.17/epan/diam_dict.c,3476,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buf,statep->read_ptr,max);",010f922e301f83a2f661029668613a4205ee888f46308c2bf144070fc1c3af11
wireshark-2.2.17/epan/dissectors/asn1/c1222/packet-c1222-template.c,321,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&(fieldname[2]), c1222_baseoid, c1222_baseoid_len); \",7414f2252ee8f5c0a5cddbf9425675704239bdd23cfeb1d8fd2ed1408ba08474
wireshark-2.2.17/epan/dissectors/asn1/c1222/packet-c1222-template.c,773,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&buff[*offset], *(t->element), len);",c1b9bdddfe2e89977116f3f0a0ceaf6a1051a41186775199809825b7fa249b5a
wireshark-2.2.17/epan/dissectors/asn1/c1222/packet-c1222-template.c,799,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(keybuff, c1222_uat_data[i].key, EAX_SIZEOF_KEY);",18913b034680cbaf67abf814e90d8d38a9aa8bee61e05e8cae48365545ad0a2a
wireshark-2.2.17/epan/dissectors/asn1/c1222/packet-c1222-template.c,1428,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(c1222_baseoid, temp, c1222_baseoid_len);",a2b71d73f1c82acd6b51855072a45845cdb8bde527ccaf4d7d79d1426d306d05
wireshark-2.2.17/epan/dissectors/asn1/camel/packet-camel-template.c,1082,47,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                application_context_version = atoi(version_ptr+1);,ad0fb1034ce2a867246eed5716c8d15072cdb333912029ed03309efe60d1c2fe
wireshark-2.2.17/epan/dissectors/asn1/cms/packet-cms-template.c,77,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"unsigned char digest_buf[MAX(SHA1_DIGEST_LEN, MD5_BUFFER_SIZE)];",920a1e22ee2238a57ad1df09d77ccb3d432c0d55d3cb447c534398e8d06523da
wireshark-2.2.17/epan/dissectors/asn1/gsm_map/packet-gsm_map-template.c,2103,41,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,          application_context_version = atoi(version_ptr+1);,ad0fb1034ce2a867246eed5716c8d15072cdb333912029ed03309efe60d1c2fe
wireshark-2.2.17/epan/dissectors/asn1/h248/packet-h248-template.c,202,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy((guint8*)&(m->hi_addr),hi_addr->data,4);",b1ed69b2bf917f96fbc22b4e1867304850a20f03ca3c339c46fd930a568df27e
wireshark-2.2.17/epan/dissectors/asn1/h248/packet-h248-template.c,203,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy((guint8*)&(m->lo_addr),lo_addr->data,4);",c777a6fd411e2cb9c90bced4ae8f864fbec36f757a585f677387cc9147ce7d95
wireshark-2.2.17/epan/dissectors/asn1/kerberos/packet-kerberos-template.c,594,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char    origin[KRB_MAX_ORIG_LEN+1];,17c0f56f80e2819955a6f6a6b01da9aa85dd2453ed90a443be4df47c6e2419d7
wireshark-2.2.17/epan/dissectors/asn1/kerberos/packet-kerberos-template.c,639,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char buf[SERVICE_KEY_SIZE];,34592e6dfe0c40ae57831ad1427907a2b39531612af97f0284aa8cb3c6f45f19
wireshark-2.2.17/epan/dissectors/asn1/kerberos/packet-kerberos-template.h,79,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char 			key_origin[KRB_MAX_ORIG_LEN+1];,df26f8ff5e94e3807df48de816ea615e52c075b5a04d9cd05f1f066d4543c528
wireshark-2.2.17/epan/dissectors/asn1/ldap/packet-ldap-template.c,1416,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-2.2.17/epan/dissectors/asn1/pkcs12/packet-pkcs12-template.c,99,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char hash[20], buf_b[64], buf_i[128], *p;",b33066e1fc6f33e4b6d02ad049f00fe3c9fe85386923616bae7a8a054d05a467
wireshark-2.2.17/epan/dissectors/asn1/pkcs12/packet-pkcs12-template.c,153,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy (hash, gcry_md_read (md, 0), 20);",33f4c6611527d9becf1d579d46bb61863f346bd68914c6080ca02969ae9cba8b
wireshark-2.2.17/epan/dissectors/asn1/snmp/packet-snmp-template.c,528,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label[ITEM_LABEL_LENGTH];,e13879a30490abb6bc65df00b906e235d47e93ff8d1f9ae606071684dff9b26d
wireshark-2.2.17/epan/dissectors/asn1/spnego/packet-spnego-template.c,347,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(L40 + 10, T, sizeof(T));",98425899cd1db7304b73ffa6096cf3e687fa540c664f48eb4f09880f57ced0fc
wireshark-2.2.17/epan/dissectors/asn1/spnego/packet-spnego-template.c,421,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sgn_cksum, cksum, 8);",a80bca5d9f6044291958b220f9ca284aedf2b02770a0b83fd1d7877447d9039d
wireshark-2.2.17/epan/dissectors/asn1/spnego/packet-spnego-template.c,526,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(output_message_buffer, input_message_buffer, datalen);",e4f278915ef24fdaf3142a0925842a19d1a14c6f0e19062aa4fff6b80584f502
wireshark-2.2.17/epan/dissectors/asn1/spnego/packet-spnego-template.c,530,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(output_message_buffer,",7bad9ec93eccc4649650a2194c177cc23d1dde261e80b652f4bfb4d13310fd12
wireshark-2.2.17/epan/dissectors/asn1/spnego/packet-spnego-template.c,609,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(cryptocopy, original_data, length);",631074dcc68dfc0eed9e30cc91068a82784a2adb1222424713ab3a30707f82ec
wireshark-2.2.17/epan/dissectors/asn1/spnego/packet-spnego-template.c,656,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(tmp, data, rrc);",0d8f49c541b932508aae8af04744563b632196c1d0f291d32923af212e5fd98d
wireshark-2.2.17/epan/dissectors/asn1/spnego/packet-spnego-template.c,658,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(data + left, tmp, rrc);",7a38317233ea69bb4aafa81622336946ea12b1e0f39fca4b3e166f922abb9284
wireshark-2.2.17/epan/dissectors/asn1/spnego/packet-spnego-template.c,660,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(tmp, data + left, rrc);",3efbe69978dbe67a2c9c04c8c51ba4d488e515bf1048d8a7eaacc9db8120d2ef
wireshark-2.2.17/epan/dissectors/asn1/spnego/packet-spnego-template.c,662,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(data, tmp, rrc);",d7e6478aad14f882fb09916d0353ba2666f6d932be107f5d573910f5824111ff
wireshark-2.2.17/epan/dissectors/asn1/t38/packet-t38-template.c,482,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&(p_t38_packet_conv->src_t38_info), &(p_t38_conv->src_t38_info), sizeof(t38_conv_info));",aaa33a37baf1984e1c3d7efaab9358a6eac8a97767b6b5741b81be535109be4d
wireshark-2.2.17/epan/dissectors/asn1/t38/packet-t38-template.c,483,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&(p_t38_packet_conv->dst_t38_info), &(p_t38_conv->dst_t38_info), sizeof(t38_conv_info));",f67a4666ee3daa117f7c7723afda7682e3ca8e6b4c143cb4de092e63a70d9737
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,107,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char hf_status[BASE_BUFFER_SIZE];,a3707b855701dc81ae08ca181418d6623061d94d7a5b8eae4b29c085cd977867
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,109,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char line[4 * BASE_BUFFER_SIZE];,a34137ccfc21570d4bc2264de4bc42ab5b4ce36ef686a706532f782d37b3cdb6
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,828,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char filter_name[BASE_BUFFER_SIZE];,4da4b0d374f08d2b23a7ea0936af68e0a7ede336f29d763677bb16453093db72
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,971,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char qs[4 * BASE_BUFFER_SIZE];,417d296c5f1acd8deea02a1bf918045b72084d105c6031441e13afb72fe3087b
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,974,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char token[4 * BASE_BUFFER_SIZE];,37985d4883d3fd92cd6b43dc5debf7138abc1ec1f35239821a19dd126eec4e7f
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,1102,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char dissectorname[DISSECTORNAME_MAXLEN];,abcc78426608ba65833931b518d909fe2635252ef7c1d633e70ed08de927ec26
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,1482,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char dissectorname[DISSECTORNAME_MAXLEN];,abcc78426608ba65833931b518d909fe2635252ef7c1d633e70ed08de927ec26
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,1483,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char tmpstr[BASE_BUFFER_SIZE], *ptmpstr;",3b96fe81a3523628406a2c12c52a5e605f9137c494b7f8a5497be9139bdd8738
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,1487,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char hf_index[BASE_BUFFER_SIZE];,ab20a721161c344021184e8d1a9162d7264cb00175d8405896c1f295d00c5a76
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,1673,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char fss[BASE_BUFFER_SIZE];,13035e3bf3f2d68a6b5e9108711bdbcd2dd1921107184747ac9840a56457c997
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,1678,21,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			fixed_array_size=atoi(ti->str);,9edd98bee1584ef207416cc98a95bdf8e0c44e6954db3e2685383aefdc3f683e
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,1707,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char filter_name[BASE_BUFFER_SIZE];,4da4b0d374f08d2b23a7ea0936af68e0a7ede336f29d763677bb16453093db72
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,1950,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char dissectorname[BASE_BUFFER_SIZE], hf_bitname[BASE_BUFFER_SIZE];",3320d2ebf4891dc376a506bb2d5f65ce4bce6e2c212fb88fa9baf945a5121b2e
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,2097,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"			char filter_name[BASE_BUFFER_SIZE], base_name[BASE_BUFFER_SIZE], tfs_name[BASE_BUFFER_SIZE];",162539825ef262ab22810c49a1a48a367771a19d48c1653d9a9b7af239b7128b
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,2199,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char dissectorname[BASE_BUFFER_SIZE];,ad258f700c2e094f557fa0e73a080d162873bef7ef8d05a150205eeb68970954
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,2201,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char tmpstr[BASE_BUFFER_SIZE], *ptmpstr;",3b96fe81a3523628406a2c12c52a5e605f9137c494b7f8a5497be9139bdd8738
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,2205,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char hf_index[BASE_BUFFER_SIZE];,ab20a721161c344021184e8d1a9162d7264cb00175d8405896c1f295d00c5a76
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,2415,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char filter_name[BASE_BUFFER_SIZE];,4da4b0d374f08d2b23a7ea0936af68e0a7ede336f29d763677bb16453093db72
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,2558,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char tmpstr[BASE_BUFFER_SIZE], *ptmpstr;",3b96fe81a3523628406a2c12c52a5e605f9137c494b7f8a5497be9139bdd8738
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,2561,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char hf_index[BASE_BUFFER_SIZE];,ab20a721161c344021184e8d1a9162d7264cb00175d8405896c1f295d00c5a76
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,2656,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char filter_name[BASE_BUFFER_SIZE];,4da4b0d374f08d2b23a7ea0936af68e0a7ede336f29d763677bb16453093db72
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,2824,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char dissectorname[BASE_BUFFER_SIZE], valsstring[BASE_BUFFER_SIZE], hfvalsstring[BASE_BUFFER_SIZE];",2b685d253fa174c81792657c3b265434202c329fd61560659cb8671042b3b125
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,3074,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char tmpstr[BASE_BUFFER_SIZE], *strptr;",2a09048af28839ceef97ff09ac080c2d0779dd003d7d56b0109bd7aaddc750a4
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,3121,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char cnfline[4 * BASE_BUFFER_SIZE];,5c1bdd450e767a6ae54b880657daad89e03aaa68e6523c249db7dd1d3f4e8e99
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,3160,14,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			alignment=atoi(al);,d25f5dd6c1006dc0d0bbe22f6ab3d0da6daa42e1bca78dc7b6d8ec69cbeeb15e
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,3208,19,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			union_tag_size=atoi(union_tag);,5584fcdcf1dd7835a2fb37cd156b3141f4accf0386e048596f8b127f3f49e121
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,3236,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char idlfile[BASE_BUFFER_SIZE];,6c5b05b882c61155aeb52ed4f12d8aede25ff6e316e95ae01d8c524c2f0b844f
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,3237,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char tmplfile[BASE_BUFFER_SIZE];,68e0fe3317c384fde25f7fdedfc9a58cca33c26f3887c6460177b779258652cf
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,3238,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char prefix_str[BASE_BUFFER_SIZE];,447d72c7c0c9faaa7f33b37d96fc4d78f98f904ae76d826413c2829ca10ee526
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,528,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(dst, src, bits>>3);",80d02c102d0a0c980372c9b00d09bcd5a64ec7427cfd2c55382839ab5b330739
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,753,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ifcid, pinfo->dl_src.data, LOWPAN_IFC_ID_LEN);",25668d96687610b415ee46bc6d7918a1c426c16bc356d7ac0c3a0295ece93d8a
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,800,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ifcid, pinfo->dl_dst.data, LOWPAN_IFC_ID_LEN);",58e3059d7d685cac5ba23f656d2d04cdff378fa794cd29ddbab956454f595176
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,857,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buffer, ipv6, IPv6_HDR_SIZE);",9163e27842797e37005834c568260f6e05776a158d79494c7002cd123e71c903
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,862,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(cursor, LOWPAN_NHDR_DATA(nhdr), nhdr->length);",8bc55ee96fb77bcd78307a8905bc99753b2c5ab7921b59027efcd9c08ff5455a
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,1198,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ipv6.ip6_src.bytes, lowpan_llprefix, sizeof(lowpan_llprefix));",05247e291468b520edd5617172cf0ad6eedba10a1f8ede8112a1f371029e8d32
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,1206,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&ipv6.ip6_src.bytes[sizeof(ipv6.ip6_src) - LOWPAN_IFC_ID_LEN], siid, LOWPAN_IFC_ID_LEN);",6c9ad5667b74d28038ac6e7eeffef84bfd41b103e77a43c7bdaa225fec348c75
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,1229,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ipv6.ip6_dst.bytes, lowpan_llprefix, sizeof(lowpan_llprefix));",b3f33f5ce241b4b270ff80336696ec2603540a8dc74d4c6b82abf2068ab6c4a9
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,1237,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&ipv6.ip6_dst.bytes[sizeof(ipv6.ip6_dst) - LOWPAN_IFC_ID_LEN], diid, LOWPAN_IFC_ID_LEN);",35db466a7e737563df408baf9fae3b9a7b7db2648f349d091b16aa5e20c4406f
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,1368,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(LOWPAN_NHDR_DATA(nhdr_list), &udp, sizeof(struct udp_hdr));",db326c0368ec49aec0edef5eb6a01b04967af21168af8d84e15517dcae71017e
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,1615,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&ipv6.ip6_src.bytes[sizeof(ipv6.ip6_src) - LOWPAN_IFC_ID_LEN], siid, LOWPAN_IFC_ID_LEN);",6c9ad5667b74d28038ac6e7eeffef84bfd41b103e77a43c7bdaa225fec348c75
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,1715,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&ipv6.ip6_dst.bytes[4], &dctx->prefix, 8);",c230a3c768f4d3283beaeb1eb2ca5233fddb14e7d10d4670fd38d27dd177aeab
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,1741,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&ipv6.ip6_dst.bytes[sizeof(ipv6.ip6_dst) - LOWPAN_IFC_ID_LEN], diid, LOWPAN_IFC_ID_LEN);",35db466a7e737563df408baf9fae3b9a7b7db2648f349d091b16aa5e20c4406f
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,1958,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(LOWPAN_NHDR_DATA(nhdr), &ipv6_ext, ext_hlen);",2810a52d80df80b7d02de7f9b9d7b6ef9d473c995861fd9f9e115354a549a65a
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,2138,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&cksum_phdr.src, pinfo->src.data, sizeof(struct e_in6_addr));",009bb7b9123dd83346c2348d1b7135bc88558864c381a41305d5442b1134802b
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,2139,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&cksum_phdr.dst, pinfo->dst.data, sizeof(struct e_in6_addr));",19e874fd92ded6a3856719714c9deae326f18927659aa9567389bc2d2b715cdd
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,2162,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(LOWPAN_NHDR_DATA(nhdr), &udp, sizeof(struct udp_hdr));",69b641b5ef3737646fb50faabf317fe3202d398f254b9b8448343f457a9f9028
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,2290,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(siid, ifcid, LOWPAN_IFC_ID_LEN);",97ee71917cd0000bb74f729ec16ae837edc087567f108595537b1de96b0c6f8c
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,2331,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(diid, ifcid, LOWPAN_IFC_ID_LEN);",c503e337fdbd438bcf9452c1decd6f664a13f76713286f9678f0ef10e7e0bbf1
wireshark-2.2.17/epan/dissectors/packet-6lowpan.c,2920,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&lowpan_context_local.prefix, lowpan_llprefix, sizeof(lowpan_llprefix));",e61ac52489477f192f0fbe4b0e713af2f10d4ccee0d2e832289dc4b8d705fa69
wireshark-2.2.17/epan/dissectors/packet-adb_service.c,447,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(buffer, fragment->data, i_char);",38c732beb01906168e0507f0cdeb6e7320e34c29546c311efd969aa85aef7b60
wireshark-2.2.17/epan/dissectors/packet-aeron.c,1936,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy((void *) (buf + ofs), (void *) cur_frag->data, (size_t) cur_frag->data_length);",fa27cfa9202ae2c090eedbe87a9f73e8f23425580256bbb398f9f2f6482d13c9
wireshark-2.2.17/epan/dissectors/packet-afs.c,736,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char tmp[10]; \,ab14bd4896fb6a98787fbd197fb604c940941afb1da7fc1efb80aff4b1abf38b
wireshark-2.2.17/epan/dissectors/packet-afs.c,1462,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char user[128] = ""[Unknown]""; /* Be sure to adjust sscanf()s below if length is changed... */",541001c33b7cd478874ee0a33f02c5101dedf3fe150e57c52ad6afeff2dcbd87
wireshark-2.2.17/epan/dissectors/packet-agentx.c,346,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str_oid[2048];,d9ce4d503972bca71b87ba686945638e79abf840bf00a66a128051840c40e972
wireshark-2.2.17/epan/dissectors/packet-ajp13.c,682,12,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,      cl = atoi(hval);,3e143f4e551a8064fafb9eada0454bb5e8d7b114320e3144943e2a8111c1e1c5
wireshark-2.2.17/epan/dissectors/packet-ansi_637.c,350,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char ansi_637_bigbuf[1024];,b0a37023fa6663bd5316d2dd7c0c9de02633ea35efdafc950944cd1f9c2b6a77
wireshark-2.2.17/epan/dissectors/packet-ansi_683.c,215,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char dtmf_digits[16] = {'?','1','2','3','4','5','6','7','8','9','0','?','?','?','?','?'};",6b13f60c0d010333ca2c4831f19fa2bb1462dfb0c99f8ddcdaa25899fcfb62e4
wireshark-2.2.17/epan/dissectors/packet-ansi_683.c,749,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        str[17];,8c64e7cdf1ab9689a1e0da04e330c5e7f10c31999fa937fe7ac416fecf59de88
wireshark-2.2.17/epan/dissectors/packet-aprs.c,533,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char    latitude[7] = { '?', '?', '?', '?', '.', '?', '?' };",3ce8184aec72793826669350c1fd5b6d107b726b9a464e02a5f448e01d320d00
wireshark-2.2.17/epan/dissectors/packet-arp.c,679,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(persistent_key, &result_key, sizeof(duplicate_result_key));",6ce8bdb2d07689bbf94ad8e929f44fa8204291ba2899aaf129ea7b51742e7679
wireshark-2.2.17/epan/dissectors/packet-arp.c,682,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(result, value, sizeof(address_hash_value));",f8fbaa82c84890ad5af686cf2f7d7f21ec031c00426b9006ec3e1dde215e3e80
wireshark-2.2.17/epan/dissectors/packet-arp.c,692,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(value->mac, mac, 6);",529689746e9fff9b11149fe92f8db4a618ba3d8372891ef5cae1e9d1f685cc61
wireshark-2.2.17/epan/dissectors/packet-atalk.c,733,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(request_key.src, (!aspinfo.reply)?pinfo->src.data:pinfo->dst.data, 4);",e65463aca5ef056bbf6a61f506324414b10cc5b7072e73c6db45db1357e3b528
wireshark-2.2.17/epan/dissectors/packet-atalk.c,981,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(request_key.src, (!aspinfo->reply)?pinfo->src.data:pinfo->dst.data, 4);",2a57ac27c40c281c16fa90a10994d1469874675466b17bb7fb4a1f80ce611c6f
wireshark-2.2.17/epan/dissectors/packet-atalk.c,1166,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&atalk, addr->data, sizeof atalk);",2c23e44ea85e4e9cab455f5c2000143b3ca63824fd33f35bf360aadd2bedf0bf
wireshark-2.2.17/epan/dissectors/packet-babel.c,110,23,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const unsigned char v4prefix[16] =,454a88077a0b8844d76ef1c171e5a7f2f48ae2beb2d191d61bba8c82a65d5c08
wireshark-2.2.17/epan/dissectors/packet-babel.c,153,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char prefix[16];,bc9fa654a08ba1b0a868e16422ce7033f2de5043d56a9c71499b9890e4756b57
wireshark-2.2.17/epan/dissectors/packet-babel.c,172,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(prefix, v4prefix, 12);",7b619fcb3743ebe848d087cb658ae748054edd24e6cc4814ad5618e2a59884bc
wireshark-2.2.17/epan/dissectors/packet-babel.c,175,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(prefix, dp, 12 + omitted);",bd4bfaf1a0be734871eb8358b2a79a73bc64ee947bb0623b0460ff6321284ca6
wireshark-2.2.17/epan/dissectors/packet-babel.c,185,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(prefix, dp, omitted);",f8f261ad9db450a9257f377b07bb0db7c846dc0d4c4354374bfa17b5881f4b29
wireshark-2.2.17/epan/dissectors/packet-babel.c,201,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(p_r, prefix, 16);",1e9ec56c42c907b4a5cfb4bffff0db56c856966b9721b034d77d876ae4242154
wireshark-2.2.17/epan/dissectors/packet-babel.c,216,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    unsigned char  v4_prefix[16] = {0}, v6_prefix[16] = {0};",3d24b9036dc7f2ce040e76badefa6fe47fd6e027df0a7d4862d6ab7618a7088f
wireshark-2.2.17/epan/dissectors/packet-babel.c,303,26,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                unsigned char  addr_str[16];,231fb5ff3c5b807bf03bbfbd151769c7a529a880126a250241351b89f3db9400
wireshark-2.2.17/epan/dissectors/packet-babel.c,325,26,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                unsigned char  nh[16];,314e438341211beff7d97427a7b66c326858a978d43d18de64980fdab62c446e
wireshark-2.2.17/epan/dissectors/packet-babel.c,341,26,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                unsigned char  p[16];,7f55aa81e0bd4363d4f55dd3e09a02026094dd63e1219bf32c9fb3e2f4a8c3d9
wireshark-2.2.17/epan/dissectors/packet-babel.c,353,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(v4_prefix, p, 16);",3c6483f0ed311a340546d7191d6703a6a6e411a1c71589ab2c78161469d8ae12
wireshark-2.2.17/epan/dissectors/packet-babel.c,355,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(v6_prefix, p, 16);",2a434b9bdeac8529c48db24b3d942544745d3f42b7c8aa033128292ad7bdc5c5
wireshark-2.2.17/epan/dissectors/packet-babel.c,382,26,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                unsigned char  p[16];,7f55aa81e0bd4363d4f55dd3e09a02026094dd63e1219bf32c9fb3e2f4a8c3d9
wireshark-2.2.17/epan/dissectors/packet-babel.c,402,26,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                unsigned char  p[16];,7f55aa81e0bd4363d4f55dd3e09a02026094dd63e1219bf32c9fb3e2f4a8c3d9
wireshark-2.2.17/epan/dissectors/packet-bacapp.c,6764,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    ar[256];,1a00325ba9c808155c75436b714316762a2b377c78c83775d5ec08adaa2ec8ab
wireshark-2.2.17/epan/dissectors/packet-ber.c,3052,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        str_arr[256];,991ba11ffd0f7cda3b9c616c673d39d88d3d29964a655579e6896abd04eaf326
wireshark-2.2.17/epan/dissectors/packet-ber.c,3616,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char          str[35];,bb622307a7afc2f82748306fa9bae162ea253070e034a25dd7a27195f2e2a250
wireshark-2.2.17/epan/dissectors/packet-ber.c,3620,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char          first_delim[2];,372a340e29fc34690de94d996f51a78e0ba077f19d80a9473695ecf44ee7d5ed
wireshark-2.2.17/epan/dissectors/packet-ber.c,3622,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char          second_delim[2];,1f41d4d35afd02868453f0c127ac13b0fea50a3604b7d7694a0392c43b0b2982
wireshark-2.2.17/epan/dissectors/packet-ber.c,3805,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char          outstr[33];,6205bfea89d216e344c0310aefed19388fda7badca982e9eab961cee058c28c9
wireshark-2.2.17/epan/dissectors/packet-bittorrent.c,167,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char        id[5];     /* string length must be <= 4 to allow space for NUL termination byte */,d4badf6704ba8c1926944c63c4ddcb49394bc7ad81f67aa65cfe7ba8a0c4a6cb
wireshark-2.2.17/epan/dissectors/packet-bluetooth.c,1676,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(tap_device->bd_addr, bd_addr, 6);",206b98a5739de61b8d88c8b714ffa3d1a1f590e9a9e3551faf724d6d2e13ed4e
wireshark-2.2.17/epan/dissectors/packet-bluetooth.c,1684,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(bdaddr, bd_addr, 6);",2648df15da3c46679cf5903a5cc42b6061028a7614cf20af7c775d8f857d0048
wireshark-2.2.17/epan/dissectors/packet-bootp.c,733,52,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static void rfc3825_lci_to_fixpoint(const unsigned char lci[16], struct rfc3825_location_fixpoint_t *fixpoint);",7701186d36bd260e56e9b6219ab066eba5ae05dcd84c1f9a935a0951686f1395
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2573,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char tmpChar[BOOTP_MAX_NO_CHAR];,cd9a76c910ec1eff8c9027bd5b78ed9607dec9e28dd61f3ed28de77b4b5ca949
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2620,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char tmpChar[BOOTP_MAX_NO_CHAR];,cd9a76c910ec1eff8c9027bd5b78ed9607dec9e28dd61f3ed28de77b4b5ca949
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2773,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			unsigned char lci[16];,1f91f918f07d7f9eadac3c5e958c6e3b3adb6b4b0aa776862c4413d5e1448b11
wireshark-2.2.17/epan/dissectors/packet-bootp.c,3365,80,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"		proto_tree_add_int(tree, hf_bootp_option242_avaya_l2qvlan, tvb, optoff, len, atoi(field +8));",53cda8b00aa5d357691c526edd99fd0307e77398fb8aea499316e3adad40ab01
wireshark-2.2.17/epan/dissectors/packet-bootp.c,3389,81,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"		proto_tree_add_int(tree, hf_bootp_option242_avaya_vlantest, tvb, optoff, len, atoi(field + 9));",836589c7f763c3c928597d06e822581fe0ab27293260c7c036a22ad5be763d0d
wireshark-2.2.17/epan/dissectors/packet-bootp.c,3398,40,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"rfc3825_lci_to_fixpoint(const unsigned char lci[16], struct rfc3825_location_fixpoint_t *fixpoint)",d8623a909e64cbc2e664e0b17ff5d095f3409e64c3636bde1ea4262acb61464c
wireshark-2.2.17/epan/dissectors/packet-bt-dht.c,108,9,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"  len = atoi(tvb_get_string_enc(wmem_packet_scope(), tvb, start, offset-start, ENC_ASCII));",61a79f7c8bf6a0cd073c6cfd8ad0891386a7de3bcd62d7e77da0cd1016e6013b
wireshark-2.2.17/epan/dissectors/packet-btatt.c,9315,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(data + fragment_data->offset, fragment_data->data, fragment_data->length);",091666d7302f91f99ad18dd8e1e4a2b0bc53bb478de6046b28b5cafb87c3766f
wireshark-2.2.17/epan/dissectors/packet-btavctp.c,390,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(reassembled + i_length,",2889f5984f62bc80fc951530c4f1e351840d0beb72259b4981db697008e3417e
wireshark-2.2.17/epan/dissectors/packet-btavrcp.c,1214,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(reassembled + i_length,",2889f5984f62bc80fc951530c4f1e351840d0beb72259b4981db697008e3417e
wireshark-2.2.17/epan/dissectors/packet-bthci_acl.c,331,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(localhost_bdaddr, localhost_bdaddr_entry->bd_addr, 6);",6a7bb861109ea0a97757caba915bb47c501a881b6359445b3987dfc7c17f2271
wireshark-2.2.17/epan/dissectors/packet-bthci_acl.c,334,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(localhost_bdaddr, unknown_bd_addr, 6);",910c497e2cd92b99bfd0a61fe7f3766637c1063016c25ae8e03b1d2059332d92
wireshark-2.2.17/epan/dissectors/packet-bthci_cmd.c,5570,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(tap_device->bd_addr, bd_addr, 6);",206b98a5739de61b8d88c8b714ffa3d1a1f590e9a9e3551faf724d6d2e13ed4e
wireshark-2.2.17/epan/dissectors/packet-bthci_evt.c,923,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(remote_bdaddr->bd_addr, bd_addr, 6);",14473553791b92e86997bc2d9fe254ba123bd43788dfec8018f978bfd49f8710
wireshark-2.2.17/epan/dissectors/packet-bthci_evt.c,1261,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(tap_device->bd_addr, bd_addr, 6);",206b98a5739de61b8d88c8b714ffa3d1a1f590e9a9e3551faf724d6d2e13ed4e
wireshark-2.2.17/epan/dissectors/packet-bthci_evt.c,1333,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(tap_device->bd_addr, remote_bdaddr->bd_addr, 6);",c6aa9e19d562c9582facaf842889b782243721f8ac5677540353d5b1539c838c
wireshark-2.2.17/epan/dissectors/packet-bthci_evt.c,2010,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(remote_bdaddr->bd_addr, bd_addr, 6);",14473553791b92e86997bc2d9fe254ba123bd43788dfec8018f978bfd49f8710
wireshark-2.2.17/epan/dissectors/packet-bthci_evt.c,2522,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(localhost_bdaddr_entry->bd_addr, bd_addr, 6);",bec3c8773b8c7436cb2d7b377b379903ed5c64ef5fd20837f0d414272cdb372a
wireshark-2.2.17/epan/dissectors/packet-bthci_evt.c,2537,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(tap_device->bd_addr, bd_addr, 6);",206b98a5739de61b8d88c8b714ffa3d1a1f590e9a9e3551faf724d6d2e13ed4e
wireshark-2.2.17/epan/dissectors/packet-bthci_evt.c,3961,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(remote_bdaddr->bd_addr, bd_addr, 6);",14473553791b92e86997bc2d9fe254ba123bd43788dfec8018f978bfd49f8710
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,240,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(localhost_bdaddr, localhost_bdaddr_entry->bd_addr, 6);",6a7bb861109ea0a97757caba915bb47c501a881b6359445b3987dfc7c17f2271
wireshark-2.2.17/epan/dissectors/packet-bthci_vendor.c,488,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(localhost_bdaddr_entry->bd_addr, bd_addr, 6);",bec3c8773b8c7436cb2d7b377b379903ed5c64ef5fd20837f0d414272cdb372a
wireshark-2.2.17/epan/dissectors/packet-bthfp.c,488,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(val, parameter_stream, parameter_length);",69fbbfdc62a3f70270a09291eba6fb6fccf5fad2259a9e293f5f4e7a1d1ea162
wireshark-2.2.17/epan/dissectors/packet-bthfp.c,2187,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(at_data + i_data_offset, i_fragment->data, i_fragment->reassemble_end_offset);",de0883809e64f57365e29c5a3694e0565d26fb2681625220383e5f97864d2eb2
wireshark-2.2.17/epan/dissectors/packet-bthfp.c,2194,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(at_data + i_data_offset, i_fragment->data, i_fragment->length);",94330386afa74ab91c22224f4e2e4d7a1b720baa5d4d96c574a6d6d761a41361
wireshark-2.2.17/epan/dissectors/packet-bthfp.c,2200,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(at_data + i_data_offset, i_fragment->data + i_fragment->reassemble_start_offset,",d673b653235cef98f464d91128047fde62daa3a7e13c5c9298d0ac69af67bc45
wireshark-2.2.17/epan/dissectors/packet-bthfp.c,2204,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(at_data + i_data_offset, i_fragment->data, i_fragment->length);",94330386afa74ab91c22224f4e2e4d7a1b720baa5d4d96c574a6d6d761a41361
wireshark-2.2.17/epan/dissectors/packet-bthsp.c,149,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(val, parameter_stream, parameter_length);",69fbbfdc62a3f70270a09291eba6fb6fccf5fad2259a9e293f5f4e7a1d1ea162
wireshark-2.2.17/epan/dissectors/packet-bthsp.c,955,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(at_data + i_data_offset, i_fragment->data, i_fragment->reassemble_end_offset);",de0883809e64f57365e29c5a3694e0565d26fb2681625220383e5f97864d2eb2
wireshark-2.2.17/epan/dissectors/packet-bthsp.c,962,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(at_data + i_data_offset, i_fragment->data, i_fragment->length);",94330386afa74ab91c22224f4e2e4d7a1b720baa5d4d96c574a6d6d761a41361
wireshark-2.2.17/epan/dissectors/packet-bthsp.c,968,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(at_data + i_data_offset, i_fragment->data + i_fragment->reassemble_start_offset,",d673b653235cef98f464d91128047fde62daa3a7e13c5c9298d0ac69af67bc45
wireshark-2.2.17/epan/dissectors/packet-bthsp.c,972,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(at_data + i_data_offset, i_fragment->data, i_fragment->length);",94330386afa74ab91c22224f4e2e4d7a1b720baa5d4d96c574a6d6d761a41361
wireshark-2.2.17/epan/dissectors/packet-btle.c,653,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(connection_address->master_bd_addr, src_bd_addr, 6);",df9978dc955a247d5294432edcc4b689e3efa9c90c4a606e9bcc5fda17f042b7
wireshark-2.2.17/epan/dissectors/packet-btle.c,654,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(connection_address->slave_bd_addr,  dst_bd_addr, 6);",871ad51ce065228053bc2306f93b4ba1ebe541af0f71592375d6088c55a5c387
wireshark-2.2.17/epan/dissectors/packet-btsdp.c,1545,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(&continuation_state[1], tid_request->continuation_state, tid_request->continuation_state_length);",93495d79e04d5fec6d85df6f26787159d4163f6e1813e170fe6c8cab55172fa1
wireshark-2.2.17/epan/dissectors/packet-btsdp.c,1592,29,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                            memcpy(tid_request->data, continuation_state_data->data, continuation_state_data->data_length);",b129101a84b3ab7fe015450905d6f2decfaea5de2a9c4fdb83a5ada11dc99c3c
wireshark-2.2.17/epan/dissectors/packet-btsdp.c,1702,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(&continuation_state[1], tid_request->continuation_state, tid_request->continuation_state_length);",93495d79e04d5fec6d85df6f26787159d4163f6e1813e170fe6c8cab55172fa1
wireshark-2.2.17/epan/dissectors/packet-btsdp.c,1738,29,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                            memcpy(tid_request->data, continuation_state_data->data, continuation_state_data->data_length);",b129101a84b3ab7fe015450905d6f2decfaea5de2a9c4fdb83a5ada11dc99c3c
wireshark-2.2.17/epan/dissectors/packet-btsdp.c,1755,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&continuation_state[1], continuation_state_buffer, continuation_state_length);",64b3a62c44e395200fc2c0d728d16ce7e08dc659694e676a42dfe35b94da5f3f
wireshark-2.2.17/epan/dissectors/packet-c1222.c,372,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&(fieldname[2]), c1222_baseoid, c1222_baseoid_len); \",7414f2252ee8f5c0a5cddbf9425675704239bdd23cfeb1d8fd2ed1408ba08474
wireshark-2.2.17/epan/dissectors/packet-c1222.c,824,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&buff[*offset], *(t->element), len);",c1b9bdddfe2e89977116f3f0a0ceaf6a1051a41186775199809825b7fa249b5a
wireshark-2.2.17/epan/dissectors/packet-c1222.c,850,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(keybuff, c1222_uat_data[i].key, EAX_SIZEOF_KEY);",18913b034680cbaf67abf814e90d8d38a9aa8bee61e05e8cae48365545ad0a2a
wireshark-2.2.17/epan/dissectors/packet-c1222.c,2068,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(c1222_baseoid, temp, c1222_baseoid_len);",a2b71d73f1c82acd6b51855072a45845cdb8bde527ccaf4d7d79d1426d306d05
wireshark-2.2.17/epan/dissectors/packet-camel.c,3227,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char camel_time[CAMEL_DATE_AND_TIME_LEN];,8b8cb726223f4de18bf64e8559502b337ac3955cc6ce0f218d6fe0a1d33aa29e
wireshark-2.2.17/epan/dissectors/packet-camel.c,3228,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char c[CAMEL_DATE_AND_TIME_LEN]; /*temporary container*/,4f76e7580285e6d48724eb36ce742b65e13e2b026ab46eca923e3cb9d888a2e8
wireshark-2.2.17/epan/dissectors/packet-camel.c,8043,47,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                application_context_version = atoi(version_ptr+1);,ad0fb1034ce2a867246eed5716c8d15072cdb333912029ed03309efe60d1c2fe
wireshark-2.2.17/epan/dissectors/packet-catapult-dct2000.c,2209,57,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"        attach_fp_info(pinfo, direction, protocol_name, atoi(variant_string));",d425b55ea3520ee786d246843d456e698c29da2991a17e92c765820d6e81c725
wireshark-2.2.17/epan/dissectors/packet-catapult-dct2000.c,2791,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                char dotted_protocol_name[64+128];,c398609762a1765d853dafc3b4f87df7d0ce912dbe75edb8dd838932172f97cd
wireshark-2.2.17/epan/dissectors/packet-ceph.c,1628,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[ITEM_LABEL_LENGTH];,6f1836ccefb486f2b21e9544374f1cc8b2a0885e0ab564c69ffbccfa21dc106f
wireshark-2.2.17/epan/dissectors/packet-cip.c,4864,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char date_str[20];,d58737731f346f506efbc9f6dc333a237ba13f2c2e181635001d565c8d5d17a9
wireshark-2.2.17/epan/dissectors/packet-cip.c,5721,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&req_data, preq_info->ciaData, sizeof(cip_simple_request_info_t));",3cd8a21b1896babc4b55b145ea1e1211fc55fc47dd6f3a9c2fbf47d29d195d26
wireshark-2.2.17/epan/dissectors/packet-cip.c,6922,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&req_data, preq_info->ciaData, sizeof(cip_simple_request_info_t));",3cd8a21b1896babc4b55b145ea1e1211fc55fc47dd6f3a9c2fbf47d29d195d26
wireshark-2.2.17/epan/dissectors/packet-cip.c,7251,10,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"         memcpy(&path_info, preq_info->ciaData, sizeof(cip_simple_request_info_t));",3b9a3e105906e9eaa0956245f7061725f8672429ac817ad1db52497e72ea4781
wireshark-2.2.17/epan/dissectors/packet-cipsafety.c,507,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&req_data, preq_info->ciaData, sizeof(cip_simple_request_info_t));",3cd8a21b1896babc4b55b145ea1e1211fc55fc47dd6f3a9c2fbf47d29d195d26
wireshark-2.2.17/epan/dissectors/packet-cipsafety.c,1161,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&req_data, preq_info->ciaData, sizeof(cip_simple_request_info_t));",3cd8a21b1896babc4b55b145ea1e1211fc55fc47dd6f3a9c2fbf47d29d195d26
wireshark-2.2.17/epan/dissectors/packet-clnp.c,216,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char            flag_string[6+1];,5f966565b28ab5b31be06ef696f1b8dc606b38daca756debf758e9181627063c
wireshark-2.2.17/epan/dissectors/packet-cms.c,272,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"unsigned char digest_buf[MAX(SHA1_DIGEST_LEN, MD5_BUFFER_SIZE)];",920a1e22ee2238a57ad1df09d77ccb3d432c0d55d3cb447c534398e8d06523da
wireshark-2.2.17/epan/dissectors/packet-coap.c,561,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	    strbuf[56];,20897f774c89b29427b27fc8c36a4b818fc3ec68e36129bb800e0fd56dbe66d1
wireshark-2.2.17/epan/dissectors/packet-coap.c,998,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char	    str_payload[80];,7ed38e6e7786595364ff5b72fbd233e5baeb73888565a24985ab85a627bc70d3
wireshark-2.2.17/epan/dissectors/packet-cops.c,3082,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char info[50];,40e2994c265dc5d4525ec0a561e29bb134dd4dec2137bd70bc677d98da36630b
wireshark-2.2.17/epan/dissectors/packet-cops.c,3468,6,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,     char info[50];,40e2994c265dc5d4525ec0a561e29bb134dd4dec2137bd70bc677d98da36630b
wireshark-2.2.17/epan/dissectors/packet-corosync-totemnet.c,261,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char  keys[48];,00959b7f2b20e52e8f70ad1db57660d1b6510ff9c06943bf8aa0c65e4d7ba6cf
wireshark-2.2.17/epan/dissectors/packet-corosync-totemnet.c,267,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char  digest_comparison[SHA1_DIGEST_LEN];,1e09af465449e43053cb1056034c5c72b20864c85fcf8bf2c7ee3087de64c807
wireshark-2.2.17/epan/dissectors/packet-cpfi.c,92,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char src_str[20];,1f4cf8505703d0b364f3bbe21f1eff3335002f23bbe69ebfcfc86d26ddb2a779
wireshark-2.2.17/epan/dissectors/packet-cpfi.c,93,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char dst_str[20];,b0dcd85841a3f2c831d14091d2368f0695404dea78d2734a130bb6b81524a010
wireshark-2.2.17/epan/dissectors/packet-dcc.h,252,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char	string[80*22];,ac13de6f5e6beba2dd767e6987aee4e8ae9826c242d82923f8e57b1db682aed2
wireshark-2.2.17/epan/dissectors/packet-dcc.h,276,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,typedef char DCC_BRAND[64];,9c3bfd596a73b0463cca5568709b2a12cf9f029618d91a572eb71ee29f78b4a9
wireshark-2.2.17/epan/dissectors/packet-dcc.h,340,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char	msg[DCC_ERROR_MSG_LEN];,4941c572cb82b7293ae78b6de7fbd6620da47349d7b3e3716fff1c677ff9eb0e
wireshark-2.2.17/epan/dissectors/packet-dcc.h,379,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    msg[DCC_FLOD_MAX_RESP];,ceec562ba9ae6c8ebff3faa5222e7ed19d7eb00dccac3c0f6888e6e130e2cb5f
wireshark-2.2.17/epan/dissectors/packet-dcc.h,385,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char	    str[DCC_FLOD_MAX_RESP];,17909a334aff7ab285553c9f51ba3dae79afec39a53053969be7fb621207422b
wireshark-2.2.17/epan/dissectors/packet-dcc.h,401,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char	str[DCC_FLOD_VERSION_STR_LEN];,bd0ddd0a8d750cfb46131afca8baa88fbd0b1b664584c7e6ccad4f56d7e1a28f
wireshark-2.2.17/epan/dissectors/packet-dcc.h,408,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char	pad[256-sizeof(DCC_FLOD_VERSION_BODY)-sizeof(DCC_SIGNATURE)];,72577c99d07343230375db33d793894e406d2ba17f0d226d11ca5edb60fc0ee8
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,2445,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(tab,&vars->client_challenge,8);",d20db64c3fece8cce0206359925d04ec46305de029c2273218c9fb9fce0895a5
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,6572,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char ntlm_pass_unicode[258];,5d0d6006253a2157917991bbd9638b172f70c2bcafa2440070a1262259cd0d2f
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,6602,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(pass_list[0].md4,&(ntlm_pass_hash.md4),sizeof(md4_pass));",049b40c65692479acf29995a983416f1f0b3d94dde3511c03ec7b2962df61bd4
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,6608,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(pass_list[i].md4,ek->keyvalue,16);",7a9018659ea2797d2cc7060e3d9d7e47a2cc2eadce26855dd0989d588cee72b3
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,6716,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&vars->session_key,session_key,16);",ecf6ef325706022fa0f3e023c41a1662e291110a76ecef80e8ccc44521b92061
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,7449,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,7458,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,7467,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-2.2.17/epan/dissectors/packet-dcerpc.c,1204,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&d->auth_fns, fns, sizeof(dcerpc_auth_subdissector_fns));",c2f8043fcb125c4f0442c2fcad49568694323995aeff8479075cd13a1690d1ca
wireshark-2.2.17/epan/dissectors/packet-dcom.c,1829,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"						memcpy(ip, &curr_ip, sizeof(curr_ip));",267589574a792f35dd5c64d30ededa09d79212b8c1e061020ee663c5cc187f5b
wireshark-2.2.17/epan/dissectors/packet-dcp-etsi.c,235,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(output+index_out, deinterleaved+index_coded, rsk);",b08879a316bae516e68ac11b51edb6c04da56b1e4a9ed149337c1c7236a11a47
wireshark-2.2.17/epan/dissectors/packet-dcp-etsi.c,237,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(output+index_out+PFT_RS_N_MAX, deinterleaved+index_coded, PFT_RS_P);",2f336f72d25d487212f79fc1b9b6cfdc8b6ba2040e60c86aa0b6b3b0ced847a0
wireshark-2.2.17/epan/dissectors/packet-dhcpv6.c,816,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char   domain[256];,0e3f720e2f6e06870967f237c9dcde116075c5fde5b834905caa6459e077ae1c
wireshark-2.2.17/epan/dissectors/packet-distcc.c,129,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char argv[256];,80cf4aa79f4082414e0b5d7f2e91e19ec98e80c08ea30266ba676ebbc3dfe286
wireshark-2.2.17/epan/dissectors/packet-distcc.c,156,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char argv[256];,80cf4aa79f4082414e0b5d7f2e91e19ec98e80c08ea30266ba676ebbc3dfe286
wireshark-2.2.17/epan/dissectors/packet-distcc.c,185,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char argv[256];,80cf4aa79f4082414e0b5d7f2e91e19ec98e80c08ea30266ba676ebbc3dfe286
wireshark-2.2.17/epan/dissectors/packet-distcc.c,260,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[13];,38f2f38beb3462a3f74a6c85cd169399d2babb1f13dfd9cf7d3faf9512475e7d
wireshark-2.2.17/epan/dissectors/packet-dnp.c,3311,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(tmp_ptr, chk_ptr + data_offset, chk_size - data_offset);",07b6e880e558d2b34ad85f6b3747fa92bd2000f5cdd2db1300aeb6c7156ba251
wireshark-2.2.17/epan/dissectors/packet-dns.c,1367,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char buf[10+1+3+1 + 2+1+3+1 + 2+1+3+1+3+1 + 1 + 1];,3cf44e848d45656b58fd7370508bb9dba64d10f93ae6af670cf9a4c77fc39a97
wireshark-2.2.17/epan/dissectors/packet-dof.c,1570,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(alias_ptr, &key, sizeof(oap_1_alias_key));",0753410fc3ac58ec3be7904af83c60fc9da37a183aebf4d3af4d7ead69e51d0b
wireshark-2.2.17/epan/dissectors/packet-dof.c,3671,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(EP_COPY_ADDRESS_data, (from)->data, (from)->len); \",81284c2c348584c56980b4f61695cac7bba48d8dd587bd88222166c1c450652c
wireshark-2.2.17/epan/dissectors/packet-dof.c,4120,29,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                            memcpy(newObjID->oid, buffer, computedSize);",7618310c07f1ed239a9f7b27a043b4aba3f4aa30373eb9101a8e42e3a7954a0d
wireshark-2.2.17/epan/dissectors/packet-dof.c,5026,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(key, &lookup_key, sizeof(node_key_to_sid_id_key));",30fa5913063b99acdac31a65797a9a504cfbedb878768e003e83851ea16e1739
wireshark-2.2.17/epan/dissectors/packet-dof.c,5065,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(key, &lookup_key, sizeof(node_key_to_sid_id_key));",30fa5913063b99acdac31a65797a9a504cfbedb878768e003e83851ea16e1739
wireshark-2.2.17/epan/dissectors/packet-dof.c,5115,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(lookup_key + 1, sid, length);",1de514a9bb124f785908205d0929a1d272df804766fc81ef4c043ef731b6e7f4
wireshark-2.2.17/epan/dissectors/packet-dof.c,5160,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(key, lookup_key, length + 1);",5e4611d8144ff26be9924dec844eb6456f50faa4acb713a1c0b44abf857ede8c
wireshark-2.2.17/epan/dissectors/packet-dof.c,5207,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(lookup_key + 1, sid, length);",1de514a9bb124f785908205d0929a1d272df804766fc81ef4c043ef731b6e7f4
wireshark-2.2.17/epan/dissectors/packet-dof.c,5220,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(key, lookup_key, length + 1);",5e4611d8144ff26be9924dec844eb6456f50faa4acb713a1c0b44abf857ede8c
wireshark-2.2.17/epan/dissectors/packet-dof.c,5252,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ptct, ct, sizeof(ct));",23ed42e824af770a272704ad9e6f1cefaf4b517065b723a5ede9d6bb4330af1a
wireshark-2.2.17/epan/dissectors/packet-dof.c,5268,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ptct, ct, sizeof(ct));",23ed42e824af770a272704ad9e6f1cefaf4b517065b723a5ede9d6bb4330af1a
wireshark-2.2.17/epan/dissectors/packet-dof.c,5285,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(mac + 1, nonce, 11);",3dc6a00e947729f8538127a1011e8a2e4c809f140a89728e497488ca4bc67db5
wireshark-2.2.17/epan/dissectors/packet-dof.c,5320,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char ctr[16];,63afc4023e0e84be13babfa1e487a3caad0d18d727a5a5078cf8064c329630c7
wireshark-2.2.17/epan/dissectors/packet-dof.c,5321,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char encrypted_ctr[16];,1f2d3ffaaabc970b1aff7583ddd9d4600b8f94f4bd4e70bb4a61625782c400c4
wireshark-2.2.17/epan/dissectors/packet-dof.c,5322,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char mac[16];,c766ba724489298ee0686d4b6207e1dcc17bd0e571f3a4cd3714e047647941a9
wireshark-2.2.17/epan/dissectors/packet-dof.c,5323,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char computed_mac[16];,1f7410a327f02ca25c1b8b8e4bb5ba6904d5679fcf38263b14263d1350f9641f
wireshark-2.2.17/epan/dissectors/packet-dof.c,5354,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ctr + 1, nonce, 11);",3d10a23f513107458939c7dcdf89eb253c272d57f7dfda61105cbcb5365ed4de
wireshark-2.2.17/epan/dissectors/packet-dof.c,5368,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(encrypted_ctr, ctr, 16);",b9ecd49b9bb94e407a71377999d99825276920ac91869b54a3c554c2f4644ad2
wireshark-2.2.17/epan/dissectors/packet-dof.c,5375,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(mac, data + i, session->mac_len);",d248398296c486ab6934f7bae3800b35b4b3fc9e6919c966c8e8fb3583855744
wireshark-2.2.17/epan/dissectors/packet-dof.c,5381,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(encrypted_ctr, ctr, 16);",b9ecd49b9bb94e407a71377999d99825276920ac91869b54a3c554c2f4644ad2
wireshark-2.2.17/epan/dissectors/packet-dof.c,8008,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(cache, buf, e_len - session->mac_len);",27b695680479f3e8f83aa5692c9c9cd2ee158e810ba1d17997775afb7823a65a
wireshark-2.2.17/epan/dissectors/packet-dof.c,8305,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char str[20];,ff0af8360414b94e3bdeb1a6989ed6cd9a498563a5342fa6838eb29f598e40e1
wireshark-2.2.17/epan/dissectors/packet-dof.c,8958,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(sgmp_data->domain, domain_buf, domain_length);",dca76d25d722f8a9630429e39c9435fa077cd85381fd30cdda62dd673f63daaf
wireshark-2.2.17/epan/dissectors/packet-dof.c,8962,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(sgmp_data->group, identity_buf, identity_length);",fe4817a65c2c5e3aff22f6932e94128aa9e8a3bca803772da2952194b8158767
wireshark-2.2.17/epan/dissectors/packet-dof.c,9123,33,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                                memcpy(discovered_kek, key, 32);",85addb44544187f961badb8041ad26f742eeba7486af2866267ec1c3bf8c5faf
wireshark-2.2.17/epan/dissectors/packet-dof.c,9567,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(key->session_key, ticket + 32, 32);",067997d78d3b95d2312c1096320665d052826fe23f53513d8c63d1d30975e98a
wireshark-2.2.17/epan/dissectors/packet-dof.c,9732,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(session_key, identity_key_list->session_key, 32);",6e6ca12e38605de5d8cfbe7415be92791f3166abbcebe82cdd0929a556435637
wireshark-2.2.17/epan/dissectors/packet-dof.c,9969,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(trp_pkt_data->domain, domain_buf, domain_length);",f204b458cad7d2258b2d04b199b6adf2936e8c8788780dfcedd60a44c8726e72
wireshark-2.2.17/epan/dissectors/packet-dof.c,9973,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(trp_pkt_data->identity, identity_buf, identity_length);",5ead4b26bc77a8eb0677e39b480e0578000605b1d88f366161bbac7c53d942f9
wireshark-2.2.17/epan/dissectors/packet-dof.c,10205,29,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                            memcpy(auth->kek, kek, 32);",7508c8f8e7176a68015bdfad2b1d00fba3cf5260aff6d76d70d009fd56b4d827
wireshark-2.2.17/epan/dissectors/packet-dof.c,10209,29,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                            memcpy(auth->mode, mode, mode_length);",309f8a706481409f8fb79092ad9eb0153fe772acb0c22d558425cbf20d52ad24
wireshark-2.2.17/epan/dissectors/packet-dof.c,10281,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(trp_pkt_data->domain, domain_buf, domain_length);",f204b458cad7d2258b2d04b199b6adf2936e8c8788780dfcedd60a44c8726e72
wireshark-2.2.17/epan/dissectors/packet-dof.c,10285,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(trp_pkt_data->identity, identity_buf, identity_length);",5ead4b26bc77a8eb0677e39b480e0578000605b1d88f366161bbac7c53d942f9
wireshark-2.2.17/epan/dissectors/packet-dof.c,10374,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(trp_pk_data->domain, domain_buf, domain_length);",8b62ddc0ccd4ea3b31bf6091815ae3543b3f0f05006165cb26a056757d39482a
wireshark-2.2.17/epan/dissectors/packet-dof.c,10378,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(trp_pk_data->identity, identity_buf, identity_length);",a139f6d6c25a264e8db618bd49257b817bdcb472259cc12e854d3dac60f7f6cf
wireshark-2.2.17/epan/dissectors/packet-dpnss.c,1115,27,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"            sup_str_num = atoi(tvb_format_text(tvb, offset, sup_inf_str_len));",90fbb7b627214d08f2e086ef0d15f48a199c2498abc61623fcb56156f159e886
wireshark-2.2.17/epan/dissectors/packet-dtls.c,253,58,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"        wmem_stack_push(key_list_stack, GUINT_TO_POINTER(atoi(d->port)));",a93e3aa27ffa11feeef3bc63549a62bf1ade96a6f64a96c043fbc2a123ae29dd
wireshark-2.2.17/epan/dissectors/packet-dvbci.c,2372,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char input[3];,d89e52c9084ce8d9c89be99cf5327b03970918f6e623b75e1c757f0127654dbe
wireshark-2.2.17/epan/dissectors/packet-e212.c,3253,11,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"    mcc = atoi(tvb_get_string_enc(wmem_packet_scope(), tvb, offset, 3, ENC_UTF_8));",fca680a73633695612895b23a0130629cf287a98f129e514e41ce1a4e853eff9
wireshark-2.2.17/epan/dissectors/packet-e212.c,3254,11,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"    mnc = atoi(tvb_get_string_enc(wmem_packet_scope(), tvb, offset + 3, 2, ENC_UTF_8));",cab1e57ed95bc47d6f6387ca0321429b8ec2fd1de4254195695a2182ab59d7b6
wireshark-2.2.17/epan/dissectors/packet-e212.c,3259,19,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"            mnc = atoi(tvb_get_string_enc(wmem_packet_scope(), tvb, offset + 3, 3, ENC_UTF_8));",1e0e1057e3e583581f93e02ef4a56bb801c20aaec065dc2f7000db42e24125c7
wireshark-2.2.17/epan/dissectors/packet-edonkey.c,2665,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                char binarray[129];,cfd3e28210170a92c339be0d73392641136a42e0aff87fd5ba08bd6639a15e87
wireshark-2.2.17/epan/dissectors/packet-elasticsearch.c,58,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char string[9];,9cebdca92ecee5b60492bf9b937c40b7b40f110d8dee1b008f59aba6c2ed449f
wireshark-2.2.17/epan/dissectors/packet-erf.c,2281,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char        pi_label[ITEM_LABEL_LENGTH+1];,380cb69d6812b6fb1621ad2a8ee48f711977eb9e3d0e1aa15257283b3ccac3ed
wireshark-2.2.17/epan/dissectors/packet-etch.c,289,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char line[256];,d4ef8d9e5a45bf5bb3aa0abd645810a1b6f8267dbfaeaf94fb697aeeae43bb07
wireshark-2.2.17/epan/dissectors/packet-fcoib.c,111,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *gPREF_ID[2]   = {NULL};,62cbe0eb64b9f31c078bcc824cb76d08245df89d971fb93688fcad43bfd8830f
wireshark-2.2.17/epan/dissectors/packet-fix.c,197,12,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    size = atoi(value) +tag->ctrla_offset - base_offset +1;,d5dfd23d4a916bf2f8dccd7be88b488f70412cd3a2512b8cdd77c02609ee95ca
wireshark-2.2.17/epan/dissectors/packet-fix.c,288,21,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        tag_value = atoi(tag_str);,5740dcf03734212c0a8095f1ab9e6388584cee919325ce82ea3a5afea8bae36d
wireshark-2.2.17/epan/dissectors/packet-fix.c,331,58,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                            ""%s (%s)"", value, val_to_str(atoi(value), (const value_string *)fix_fields[i].table, ""unknown %d""));",72e199b5c8519759a677058d373f685f35f22b89f701809cb7f9c08e5caf0817
wireshark-2.2.17/epan/dissectors/packet-fix.c,352,31,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                    sum_ok = (atoi(value) == sum);,41c9171259552010e2ebdbe5862c6af0940f3fa9d72dc7d76775d9913c85cfb7
wireshark-2.2.17/epan/dissectors/packet-fmp.c,378,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    msg[MAX_MSG_SIZE];,311d46b1f48904980eecab32d6f2deff31cb99277928fe657c18499b9dd1f24e
wireshark-2.2.17/epan/dissectors/packet-ftp.c,378,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            *eprt_af = atoi(af_str);,df3e740e0e48e6a9673a0ac9e80d18fe35dad9df1cf222b2ee431548e7729935
wireshark-2.2.17/epan/dissectors/packet-ftp.c,405,25,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            *ftp_port = atoi(pt_str);,b7b72bf76f4f8ba8996553682134ea15c6856a3f6d790a5caf08911067ae6db9
wireshark-2.2.17/epan/dissectors/packet-ftp.c,496,21,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        *ftp_port = atoi(p);,778f3007f31260c719d981bc61ac9ea2dd1caebee2f01099de3e26d9daf42963
wireshark-2.2.17/epan/dissectors/packet-ftp.c,826,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&addr, ftp_ip_address.data, 4);",116725b18b1e8d9fd869bc2319c244ded3832a2539d26ebd88b8ab00e5048b57
wireshark-2.2.17/epan/dissectors/packet-giop.c,2071,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(print_string, in, len);        /* and make a copy of input data */",776a0f9638f9226fab9b06894bc9d9c192fbe566571cbb9d12acfa2fe34c530f
wireshark-2.2.17/epan/dissectors/packet-gsm_map.c,22449,41,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,          application_context_version = atoi(version_ptr+1);,ad0fb1034ce2a867246eed5716c8d15072cdb333912029ed03309efe60d1c2fe
wireshark-2.2.17/epan/dissectors/packet-gsm_rlcmac.h,341,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char TMSI[TMSI_LEN];,395b13bab3fc8b860af531d474e79990e66a621b266bbcf935fd768aef3a34cb
wireshark-2.2.17/epan/dissectors/packet-gsm_rlcmac.h,342,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char IMEI[IMEI_LEN - 2];,c9db6d60084470ec4d4d52ada5e47d862cdca155ff45a34646d70f9eea8d40be
wireshark-2.2.17/epan/dissectors/packet-gsm_rlcmac.h,343,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char IMSI[IMEI_LEN - 2];,78462dab49b0ee5c4387ec9cc926efe9e9308661fd6155faf072ab55b4905d4e
wireshark-2.2.17/epan/dissectors/packet-gsm_rlcmac.h,344,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char IMEISV[IMEISV_LEN - 2];,7f9223f5988f3b4542caa55233787f4317bbdddf20615587fd82e0abcb3cf4ef
wireshark-2.2.17/epan/dissectors/packet-h225.c,3250,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char codec_str[50];,acf6e2300867cfe19bb169a488a8c37419444c89ddebf149fa646380a871c9e1
wireshark-2.2.17/epan/dissectors/packet-h225.c,3264,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char temp[50];,5d96f87fcb14cc23d7effbf0348ab9ffccc3460a776a086b345934286b518fcf
wireshark-2.2.17/epan/dissectors/packet-h225.c,4302,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char temp[50];,5d96f87fcb14cc23d7effbf0348ab9ffccc3460a776a086b345934286b518fcf
wireshark-2.2.17/epan/dissectors/packet-h225.c,4360,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char temp[50];,5d96f87fcb14cc23d7effbf0348ab9ffccc3460a776a086b345934286b518fcf
wireshark-2.2.17/epan/dissectors/packet-h225.c,4409,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char temp[50];,5d96f87fcb14cc23d7effbf0348ab9ffccc3460a776a086b345934286b518fcf
wireshark-2.2.17/epan/dissectors/packet-h225.c,4456,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char temp[50];,5d96f87fcb14cc23d7effbf0348ab9ffccc3460a776a086b345934286b518fcf
wireshark-2.2.17/epan/dissectors/packet-h225.c,4816,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char temp[50];,5d96f87fcb14cc23d7effbf0348ab9ffccc3460a776a086b345934286b518fcf
wireshark-2.2.17/epan/dissectors/packet-h248.c,677,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy((guint8*)&(m->hi_addr),hi_addr->data,4);",b1ed69b2bf917f96fbc22b4e1867304850a20f03ca3c339c46fd930a568df27e
wireshark-2.2.17/epan/dissectors/packet-h248.c,678,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy((guint8*)&(m->lo_addr),lo_addr->data,4);",c777a6fd411e2cb9c90bced4ae8f864fbec36f757a585f677387cc9147ce7d95
wireshark-2.2.17/epan/dissectors/packet-h248_annex_c.c,865,90,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"					ti = proto_tree_add_uint(tree, hf_h248_sdp_media_port, param_tvb, offset, tokenlen, atoi(port_str));",9821164249a15f513281a28c8c98e1e9b4d873e5f7192b9bbfa58950da86c7b3
wireshark-2.2.17/epan/dissectors/packet-http.c,1721,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(response_code_chars, line, 3);",df85a61f568b8e80fe49804a74d8ee63f6519b1c3614476adf01b334039d8726
wireshark-2.2.17/epan/dissectors/packet-http.c,2622,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(value, &line[value_offset - offset], value_len);",aba7d039785359d18d091dcbbd828bb41c14a8daa9a4772bad21707649557679
wireshark-2.2.17/epan/dissectors/packet-http2.c,782,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&http2_header_pstr[4], nv.name, nv.namelen);",d07a1d1f4f8d0bcfb77dfc9c75034d7fd4a6f3e6bc6ffc510082544a01b19162
wireshark-2.2.17/epan/dissectors/packet-http2.c,786,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&http2_header_pstr[4 + nv.namelen + 4], nv.value, nv.valuelen);",3a96d9df52b60a507cff1e1f76cefbe80e0bace4933dc3462561692b701669b7
wireshark-2.2.17/epan/dissectors/packet-iax2.c,681,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(new_key->address_data, address_p->data, new_key->addr.len);",cfc532882e4df48929ad7eca6b23fffbc5221d8138ef2a3166c92d4c286bfd2a
wireshark-2.2.17/epan/dissectors/packet-iax2.c,1392,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&addr, ie_data->peer_address.data, 4);",c6b566b79d6ae85acca243115719ee9c85daa72583e9790fb77a3d9d182c320f
wireshark-2.2.17/epan/dissectors/packet-ieee80211.c,13252,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(wlan_stats.ssid, ssid, MIN(ssid_len, MAX_SSID_LEN));",38a05d8910b74b0918ec104594bc47bdd78148dcaf5072968c8888868b79e08a
wireshark-2.2.17/epan/dissectors/packet-ieee80211.c,13754,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char          print_buff[SHORT_STR];,166f17ac2dd91452c07497ee82f6133834fdbf239de1a2c6ca6d9ff0c118b75f
wireshark-2.2.17/epan/dissectors/packet-ieee80211.c,16440,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char             out_buff[SHORT_STR];,6d3b3dfa3e65c46eabe75c0a7c79433ea72be128f444d5789dada2060abd14b4
wireshark-2.2.17/epan/dissectors/packet-ieee80211.c,17707,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(key.bssid, whdr->bssid.data, 6);",472d60902da0b766b14c43c575f6c71a0c85287943ffe5e6904725ddcb8e30aa
wireshark-2.2.17/epan/dissectors/packet-ieee80211.c,17708,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(key.src, whdr->src.data, 6);",6d5dacd71ed4c7b182e4f5ce1ba2a1b9e007ab74150696470b89d28ed62f734e
wireshark-2.2.17/epan/dissectors/packet-ieee80211.c,18710,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(key.KeyData.Wep.WepKey, bytes->data, bytes->len);",02e699941b98d30c2dcde152569518b7e7fa4fc7926b1813e424beb0d079966d
wireshark-2.2.17/epan/dissectors/packet-ieee80211.c,18727,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(key.UserPwd.Ssid, dk->ssid->data, dk->ssid->len);",d2edda4e8630ff32256fdab20238538232f450ed8647e86604db34a655901196
wireshark-2.2.17/epan/dissectors/packet-ieee80211.c,18743,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(key.KeyData.Wpa.Psk, bytes->data, bytes->len);",2609c7e7df54caea7706f9ab5f916e4f11ecf3c7d73063f16748fe549593e694
wireshark-2.2.17/epan/dissectors/packet-ieee80211.c,27137,18,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  const unsigned char bssid_broadcast_data[6] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};",fafeb950ae0011410c572f62e61c06634bd906ce4a36297fbfd93b2e71675972
wireshark-2.2.17/epan/dissectors/packet-ieee802154.c,2475,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char       key[16];,36a3cefea823918ce2cdb6619676777f5598ee9509e53777ca83412692711dcc
wireshark-2.2.17/epan/dissectors/packet-ieee802154.c,2476,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char       tmp[16];,6d57f5674432b1f75ad2ce9dbbd31e422e6787f37d45fb1712bedf52492dfb00
wireshark-2.2.17/epan/dissectors/packet-ieee802154.c,2477,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char       rx_mic[16];,e5dfded277c2423017a9dd8392e361a859dfe0f1220ebed34cf5df843d3883a3
wireshark-2.2.17/epan/dissectors/packet-ieee802154.c,2556,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(key, ieee802154_key, IEEE802154_CIPHER_SIZE);",91f95292346301e17188ffa47aa0b67f0cef821c2a93be9a96dbd2ab72fde908
wireshark-2.2.17/epan/dissectors/packet-ieee802154.c,2607,18,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        unsigned char           dec_mic[16];,8c5f71a5a5b63fb4b917f0c81716ae94b337897bc097141dadace3a71cd81f3a
wireshark-2.2.17/epan/dissectors/packet-ieee802154.c,2758,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char    block[16];,e3ccc4cfe448210dd6eb646e7b139b9aa713e03ae70e2f78ce44514f834d785a
wireshark-2.2.17/epan/dissectors/packet-ieee802154.c,2820,15,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        else {memcpy(block, a, a_len); memset(block+a_len, 0, sizeof(block)-a_len);}",7d52ebfc88f666e2ccdfe5d1741e3eabfff7b319dca99d4b0d3597cc67e37b4d
wireshark-2.2.17/epan/dissectors/packet-ieee802154.c,2835,15,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        else {memcpy(block, m, m_len); memset(block+m_len, 0, sizeof(block)-m_len);}",c9d64da4cdb1da2990aae394082abc16b3db641982e728ca7934d2234289d1f2
wireshark-2.2.17/epan/dissectors/packet-ieee802154.c,3686,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ieee802154_key, bytes->data, IEEE802154_CIPHER_SIZE);",9c05a9a31e26ae586f257c8d3cf712a3db9bf901e3a9fe5c3000995d9924692a
wireshark-2.2.17/epan/dissectors/packet-igmp.c,761,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[20];,90f9d5685b966121e5a6eae2f61e8f266d703e27ea4c7b87d2a4e8c629a5699b
wireshark-2.2.17/epan/dissectors/packet-infiniband.c,125,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char data[232];,f6521d22b8e02866b3b759cb3d3a0afa2b73f91244b50f496e99da8da02ac069
wireshark-2.2.17/epan/dissectors/packet-infiniband.c,3005,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&(connection->req_gid), local_gid, GID_SIZE);",2e4e5808e62a0711f7be168401e63a26d6d2b477ed3a3d8701047ce7e2ee6daf
wireshark-2.2.17/epan/dissectors/packet-infiniband.c,3006,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&(connection->resp_gid), remote_gid, GID_SIZE);",739b8b8458c80ae6555c3d0389e3915932c32e52c4282599d8eb24b5967a75e9
wireshark-2.2.17/epan/dissectors/packet-infiniband_sdp.c,96,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *gPREF_ID[2]  = {NULL};,1b8da71ad0d93c01680a99a9ea3251871964d292e7e2ad6e4286e86e957f667f
wireshark-2.2.17/epan/dissectors/packet-ip.c,2244,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&addr, iph->ip_src.data, 4);",84415ca5d90df7b605d51e9ce0ede83d1d78a2ce5525558e3a89cf8b6a945418
wireshark-2.2.17/epan/dissectors/packet-ip.c,2310,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&addr, iph->ip_dst.data, 4);",47d4c0e4168841c826e28592ed41f082d67bb682549088dfa0614b9a51fc54b6
wireshark-2.2.17/epan/dissectors/packet-ipdc.c,735,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char tmp_tag_text[IPDC_STR_LEN + 1];,976ccc630bfc03d649071343872c97f26d05d49227a2ecd4460d6556295e9fd8
wireshark-2.2.17/epan/dissectors/packet-ipmi-picmg.c,888,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[32];,917f6ed0ae72790ae84d5546f1fd6d51df65d8cc348e82b8bf2389e3a4b61c78
wireshark-2.2.17/epan/dissectors/packet-ipmi-picmg.c,990,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[32];,917f6ed0ae72790ae84d5546f1fd6d51df65d8cc348e82b8bf2389e3a4b61c78
wireshark-2.2.17/epan/dissectors/packet-ipmi-trace.c,315,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char str[257];,894bc086330b49d14bb54e8fbeb11e922878a96b1a6edb2df1e8a7dde9fd5982
wireshark-2.2.17/epan/dissectors/packet-ipmi.c,503,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&data->curr_frame->ts, &pinfo->abs_ts, sizeof(nstime_t));",d2edd6ee87748cc576a6fd8e34eed848fa32717dc2fc81df8ae6069cd5c2f4c2
wireshark-2.2.17/epan/dissectors/packet-ipmi.c,555,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char str[ITEM_LABEL_LENGTH];,4dbcecf5ae0ae8411fa153f3ad98edcd3f6e46e45565688df569c3a92fda1cae
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,584,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char suffix[IPSEC_STRLEN_IPV6 + 1];,aabc74385ba9096edec481000a2715ec298d6896a0d1e3de52da3063451b5364
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,657,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(ipv6_suffix,suffix,j + 1);",34936a44906e5bb13ada962ea212fd7aa67a56ff45efefff5f6e5cf59722d5e6
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,677,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char suffix[IPSEC_STRLEN_IPV6 + 1];,aabc74385ba9096edec481000a2715ec298d6896a0d1e3de52da3063451b5364
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,678,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char prefix[IPSEC_STRLEN_IPV6 + 1];,8a1083e870bee514ab5d32a7f7f23aeee767046f9a1501284b28aafeffddf16d
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,707,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(ipv6_addr_expanded,prefix,prefix_len);",592606d78ace30e9f5c415e657da18bf05533e94b2c0a8d9d372a252f8c4e006
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,716,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(ipv6_addr_expanded + IPSEC_STRLEN_IPV6 - suffix_len, suffix,suffix_len + 1);",c6eac58c5d5561447630f5bf5c4a9ce57037ad5ee6acb103f90d935cebf0254a
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,742,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char addr_byte_string_tmp[4];,551416a8c0eaac470526592701dd49f8e30c11964ede2814573f06b5a6d5b4eb
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,743,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char addr_byte_string[4];,3dacbb9fcf0d7f594cb4f0aa75144b61fd0e35aae012084063df81ea0ec4ef1b
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,869,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char filter_string_tmp[3];,a75f6cf39809b8e615d872831e32804483d89a55b2d6fcd9ebeb56d2b6fc71b3
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,870,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char addr_string_tmp[3];,27ebe3bc32309ef784bc56a2cda5af8194e1dd636c9c95141727ac3eeb363583
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,1288,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char ctr_block[16];,d4adaf3cb8603993d3acac49d60aa26f6a2f921ce06def6c9a5e3b114bc09144
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,1542,28,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                  unsigned char authenticator_data_computed_car[3];,7cbb6c49c046497e58083807ac83fde727864145e73b37356419e2a3213cf10b
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,1930,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(ctr_block, esp_crypt_key + esp_crypt_key_len - 4, 4);",ee58439fcc986e7510abc6769c9fd82587607b0e9fc67a1de5032fdb31b6cde7
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,1931,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(ctr_block + 4, decrypted_data, 8);",42c7fb9f1c181c476b06589c26003d8c33fc861421e583b0bc050c2e7acab3b1
wireshark-2.2.17/epan/dissectors/packet-ipv6.c,962,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&rpl_fulladdr, ip6_dst_addr, IPv6_ADDR_SIZE);",6911e9a8bf4a81ab2fe621a7c1034bf9239dfe793bd3aa5f3f36e7a3715da18f
wireshark-2.2.17/epan/dissectors/packet-isakmp.c,1831,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(iv, gcry_md_read(md_ctx, md_algo), iv_len);",26d737543e9ee69e855ca76fc7f499a4a4bdd17299a81a47e312c7e60a060c5e
wireshark-2.2.17/epan/dissectors/packet-isakmp.c,1887,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(iv, buf + buf_len - cipher_blklen, cipher_blklen);",b96a4e18f5a5bbeb7956725def207267908f6e9a68be870471d50f1200f9021e
wireshark-2.2.17/epan/dissectors/packet-isakmp.c,2957,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(ic_key, i_cookie, COOKIE_SIZE);",4871501d01c73dc753eedf185df0022c65764d789970cbf82939eccf6c40c206
wireshark-2.2.17/epan/dissectors/packet-isakmp.c,5146,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(decr_data, encr_data, decr_data_len);",a7973ba134905b8832d37326b1c726de7d888eb6d7dbeea763979f6197802598
wireshark-2.2.17/epan/dissectors/packet-isakmp.c,5352,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ic_key, ikev1_uat_data[i].icookie, COOKIE_SIZE);",108d4157c7a5a6a8de4b8fbfcb76d06abe56a543bb0c7991d496af479166bf89
wireshark-2.2.17/epan/dissectors/packet-isakmp.c,5355,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(decr->secret, ikev1_uat_data[i].key, ikev1_uat_data[i].key_len);",94416e6f2888dd2be67bd8b7b4186886c52efefdeb4af1bd7c273610bf6b1cf3
wireshark-2.2.17/epan/dissectors/packet-iscsi.c,572,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                port = atoi(p);,33c7a9889f596c1bba9f67df18b9c341e25e0ddac77e820a829e889c5cb0c40d
wireshark-2.2.17/epan/dissectors/packet-iser.c,92,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *gPREF_ID[2]  = {NULL};,1b8da71ad0d93c01680a99a9ea3251871964d292e7e2ad6e4286e86e957f667f
wireshark-2.2.17/epan/dissectors/packet-iso8583.c,640,15,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        len = atoi(sizestr);,08e3a1896156c23f131363a6229e1adc539580ed8104a5a7071d11cbde7b20b1
wireshark-2.2.17/epan/dissectors/packet-iso8583.c,1049,16,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static const char *hf_data_blurb[128] = {,4dc4e99f1ad2de3d99d5dd0a54ab28544f0c1cd1ad82dec5ef09698505b116c6
wireshark-2.2.17/epan/dissectors/packet-isup.c,5379,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char    NI_digits[5] = """";",7fb88588588958d793150dcbe61f1262cc57b675de92ae2a3636528b4daf4099
wireshark-2.2.17/epan/dissectors/packet-isup.c,6027,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char        NI_digits[5] = """";",88667967fdd722923dc0e83112fef6099e58586d261d9fa8b9ccd4f4f30abd87
wireshark-2.2.17/epan/dissectors/packet-jxta.c,248,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, addr->data, copy_len );",2c1eff9ec69a55799788df5d8fe5dbb7e9769a908c0441d59bd6eb1d8948b7a0
wireshark-2.2.17/epan/dissectors/packet-kdp.c,230,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char ack_string[BUFFER_SIZE];,7bbfc01a9f57bfe59c7a43eaa3df70b349bdd83bfda453f5cd5ca57bbbb4f406
wireshark-2.2.17/epan/dissectors/packet-kdp.c,231,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char seq_num_string[BUFFER_SIZE];,793aeb3b3a3ff0ec55499e43d33311387115e0990888e6ac14e82ca1a15efc5b
wireshark-2.2.17/epan/dissectors/packet-kdp.c,232,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char src_flowid_string[BUFFER_SIZE];,6d6d506052e5b7cab98604e62d8bc967cd0e1f272d80d7792ea89ac0c3322ce8
wireshark-2.2.17/epan/dissectors/packet-kerberos.c,853,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char    origin[KRB_MAX_ORIG_LEN+1];,17c0f56f80e2819955a6f6a6b01da9aa85dd2453ed90a443be4df47c6e2419d7
wireshark-2.2.17/epan/dissectors/packet-kerberos.c,898,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char buf[SERVICE_KEY_SIZE];,34592e6dfe0c40ae57831ad1427907a2b39531612af97f0284aa8cb3c6f45f19
wireshark-2.2.17/epan/dissectors/packet-kerberos.c,2751,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char netbios_name[(NETBIOS_NAME_LEN - 1)*4 + 1];,c18da943fffa180c7a84f023ca4219ee54a39ec929806f5e9c470189c324f089
wireshark-2.2.17/epan/dissectors/packet-kerberos.h,87,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char 			key_origin[KRB_MAX_ORIG_LEN+1];,df26f8ff5e94e3807df48de816ea615e52c075b5a04d9cd05f1f066d4543c528
wireshark-2.2.17/epan/dissectors/packet-kismet.c,235,16,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"						t.secs = atoi(format_text (line, tokenlen));",7cf6ad8051a25a629c11496b9082e441ed3cd482aa0057beef9db4f7ba29b5b7
wireshark-2.2.17/epan/dissectors/packet-l2tp.c,2877,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(l2tp_conv->tunnel, &tmp_tunnel, sizeof(l2tpv3_tunnel_t));",1ff3e47795cd187698e873a410949ab4c66f5792203c3d8db8d5e2cf66512ce0
wireshark-2.2.17/epan/dissectors/packet-lapd.c,169,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char            data[MAX_LAPD_PACKET_LEN];,a0b799219c8a7f3afa018505d0d255ae24d8797b8eb05c6dd0caa2b3e45f481d
wireshark-2.2.17/epan/dissectors/packet-lapd.c,188,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(ptr->data, data, ptr->data_len);",924005395a7a3ba68f8aa6b496c238ff146c310ea81b08a9b6be477825efe131
wireshark-2.2.17/epan/dissectors/packet-lapd.c,251,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(data, prev_byte_state->data, prev_byte_state->data_len);",8bfe41e34a7be8e58449cd8586b3cd2e7e1bd21e91b43c64a58a37fef1dec871
wireshark-2.2.17/epan/dissectors/packet-lapd.c,280,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(data, prev_byte_state->data, prev_byte_state->data_len);",8bfe41e34a7be8e58449cd8586b3cd2e7e1bd21e91b43c64a58a37fef1dec871
wireshark-2.2.17/epan/dissectors/packet-lbm.h,268,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char topic[256];,306bba4ec9707014ef94f6e3cb1280353c94d0a2c3b718e890351b4338271de7
wireshark-2.2.17/epan/dissectors/packet-lbm.h,269,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char source[256];,dc498086f8bb44e63f0efb72feec266d1985b6a85794b1b40cfcd5d1657b1070
wireshark-2.2.17/epan/dissectors/packet-lbm.h,276,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char topic[256];,306bba4ec9707014ef94f6e3cb1280353c94d0a2c3b718e890351b4338271de7
wireshark-2.2.17/epan/dissectors/packet-lbm.h,284,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char pattern[256];,d7ae347e966883b8901ac4f5c5e911a9314f64398bf4a865779f5781ffa83ee0
wireshark-2.2.17/epan/dissectors/packet-lbm.h,296,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char queue[256];,926e543235d0a849f52e019ff33286dfaf6e4a16c8d47e57338f7176462397f7
wireshark-2.2.17/epan/dissectors/packet-lbm.h,297,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char topic[256];,306bba4ec9707014ef94f6e3cb1280353c94d0a2c3b718e890351b4338271de7
wireshark-2.2.17/epan/dissectors/packet-lbm.h,304,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char queue[256];,926e543235d0a849f52e019ff33286dfaf6e4a16c8d47e57338f7176462397f7
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,161,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *) &val, (const void *) stream->ctxinst_1, sizeof(guint32));",5c56ee60de6bfc440315e5dc2f1d32e7859591e977e8407d55f672f9bcca11ef
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,163,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *) &val, (const void *) (stream->ctxinst_1 + sizeof(guint32)), sizeof(guint32));",5bab91410f54c26c58e5f1e88343a5fa97ef92a6bb5a2a06147d66b5179c7729
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,165,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *) &val, (const void *) stream->ctxinst_2, sizeof(guint32));",147e201663cdc3a5d1364ecb72a3d0c154332fcb5fbb4ab18abdf385d5a00bd8
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,167,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *) &val, (const void *) (stream->ctxinst_2 + sizeof(guint32)), sizeof(guint32));",29b106b485fe094dc5e55b44d1880713fdbe18f2b27a455f09923302b5c9a118
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,181,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy((void *)ctxinst, (const void *)stream->ctxinst_1, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",9aed6bf3e982ec8d3d5acf0737149c9591a2adedf4be00d25ff278da7961452b
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,182,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy((void *)stream->ctxinst_1, (const void *)stream->ctxinst_2, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",3146d7095d39c7e133f2f21e3526ebe26ca96ce1c2fd2d7849ecb8cfe97408f6
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,183,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy((void *)stream->ctxinst_2, (const void *)ctxinst, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",1d1337bafdc745e5ecffbf33efb36f1dc83d45db791435316a89df62a9c67b52
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,195,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *)key.ctxinst_1, (const void *)instance1, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",0a10b97b5a7e7fdec0f046e70ae4a44b20756565ff31a0590a8e310b66c9f4bf
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,196,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *)key.ctxinst_2, (const void *)instance2, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",9c08692c1f80fdcc24b380bf8f206bb2197ea3525ddd56ced0779498141ce771
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,215,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *)entry->ctxinst_1, (const void *)instance1, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",6d541b275c232a99a61d05b7aebc84bc9cfa9a9a912c708471ff10f7d358cb1e
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,216,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *)entry->ctxinst_2, (const void *)instance2, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",8f8484d7a76e6ef103dc1a42c8ffe576505a2576f8e05305d906c5457e4afbaf
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,239,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *) &val, (const void *) substream->src_addr.data, sizeof(guint32));",40ff6a495cbdfdffa987216ce12e5c30f90ee3be8422964207c278d1711ad93a
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,242,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *) &val, (const void *) substream->dst_addr.data, sizeof(guint32));",16dd359815508474a688f233b221cc4e412157a4356db1c195fd47c83368068f
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,332,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *) &val, (const void *) (stream->addr_1.data), sizeof(guint32));",7e7371c7f9ad712903752dd09119e44bd2635e1bbd17e5ffcf51e017444dd0a4
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,335,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *) &val, (const void *) (stream->addr_2.data), sizeof(guint32));",c96155d2c483b0a3cbea63c1ecda90fc865881a1ceab892c055de8b1b32c9a4c
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,448,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *) &val, (const void *) substream->src_addr.data, sizeof(guint32));",40ff6a495cbdfdffa987216ce12e5c30f90ee3be8422964207c278d1711ad93a
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,451,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *) &val, (const void *) substream->dst_addr.data, sizeof(guint32));",16dd359815508474a688f233b221cc4e412157a4356db1c195fd47c83368068f
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,864,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char srcidx[8];,03fb29170f29ef3b77861c5627bf27424b327ab0fa3a9c7ced9e6e39a941163a
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,2420,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char patidx[8];,33992b627f554768c6622cd19f75bdefa1e306a584672a7b08f3c0bf3840bebf
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,6119,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void *) &val, (const void *) message->addr.data, sizeof(guint32));",75e95d69dafd18f277a076059f5922a1a0c257c809c3a7853102f1d8ce9e2b24
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,10472,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy((void *)ptr->endpoint_a.stream_info.ctxinst.ctxinst, (const void *)info->endpoint_a.stream_info.ctxinst.ctxinst, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",28083055432baa9dc95606a5a167860d54c660cb20c02cce943bb9381d4867b7
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,10481,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy((void *)ptr->endpoint_b.stream_info.ctxinst.ctxinst, (const void *)info->endpoint_b.stream_info.ctxinst.ctxinst, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",88b81342973360882632e0dcea1b5cac80b785ad38b5db4e29e4430f36d89ee5
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,11174,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy((void *) stream_tap_info->endpoint_a.stream_info.ctxinst.ctxinst, (const void *)stream_info.ctxinst, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",915bf67d39e501d5b98f67b16a35775c1bac4ea3c5d6de5760e819d34f25d6ae
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,11176,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy((void *) stream_tap_info->endpoint_b.stream_info.ctxinst.ctxinst, (const void *)ctxinstd_info.ctxinst, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",de94104a2c10a8eb872336978df7f860810f9f28e63376e71e442deb6f20b0fe
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,11182,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy((void *)uim_stream_info.endpoint_a.stream_info.ctxinst.ctxinst, (const void *)stream_info.ctxinst, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",86c1b31dac867a8fddb4d28110a9cdb0f5ed1742d946fb2685a12e5ba11a0c71
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,11184,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy((void *)uim_stream_info.endpoint_b.stream_info.ctxinst.ctxinst, (const void *)ctxinstd_info.ctxinst, LBM_CONTEXT_INSTANCE_BLOCK_SZ);",dc3dd349e5fdf91b683af98dc3aa39d2e3edb04bc83246f8a2156faf272e11c5
wireshark-2.2.17/epan/dissectors/packet-lbmc.c,11374,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(buf + cur->fragment_start, cur->data, cur->fragment_len);",50247066c0fced9ef27d6b9864f52438f0462d2e758b134e05c6a85511defec9
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,222,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&val, transport->source_address.data, sizeof(guint32));",61497ba350aaf936e1b1537c63fb073e23348c29a700db8b9815428aa96a9911
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5059,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(tqr_tap->topic, tqr->topic, tqr_tap->topic_length);",e4c26459207a388b488b5827e31a68fa46a2b775e0816beb6813658343a84be1
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5074,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(tir_tap->topic, tir->topic, tir_tap->topic_length);",6236500f4bb7206b978d984bd887cbfb0c75ed2fcf86290562310652a6537764
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5075,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(tir_tap->source, tir->source_string, tir_tap->source_length);",70a33d4d89b0c585db27271e379bd2149c0375b894617f33e0379d699c465d47
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5089,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(wctqr_tap->pattern, wctqr->pattern, wctqr_tap->pattern_length);",e6e82e6e397a7942fe65ec5106c3364b2cb341c50fda18a12da9d9abd34afd3c
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5105,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(qqr_tap->queue, qqr->queue, qqr_tap->queue_length);",08b2f4d22265ab7a32fb6467e66f4edc54a1f60080444efd6be6f021442fc23d
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5120,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(qir_tap->queue, qir->queue, qir_tap->queue_length);",68e8cb3ad03d5bf6f425392661c29bea6bbdcfb3a24f1f65571e2d1ca298d09c
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5121,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(qir_tap->topic, qir->topic, qir_tap->topic_length);",d80f1823449ad62d2b701e8725aa91292aa3eefc6d9e7611c5df18194e49e5cb
wireshark-2.2.17/epan/dissectors/packet-ldap.c,4336,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-2.2.17/epan/dissectors/packet-ldss.c,591,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"					memcpy(transfer_info->file->digest, digest_bytes->data, digest_bytes->len);",47e1822ccde2b598f95e4f6627511040b65f9bf20b7d5777d912613c329ae472
wireshark-2.2.17/epan/dissectors/packet-lwm.c,934,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(lwmes_key, bytes->data, IEEE802154_CIPHER_SIZE);",e7afb78568e0b850302916c4c18b915f990b1abc1c58e49c6b31f36442dc19d7
wireshark-2.2.17/epan/dissectors/packet-mac-lte.c,2549,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char info_buffer[MAX_INFO_BUFFER];,a50c8ed6ed33fbc50e3ea86696137d0239db0f0bb8d7cacd0197bd41478e47c1
wireshark-2.2.17/epan/dissectors/packet-mbim.c,791,18,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    wmem_tree_t *open;,6ff26c194d4ec84ca49052a3bde5032772bca51d75fcb56f8c9872ec84442b45
wireshark-2.2.17/epan/dissectors/packet-mbim.c,2410,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    const char *pin_list[10] = { ""PIN 1"", ""PIN 2"", ""Device SIM PIN"", ""Device First SIM PIN"", ""Network PIN"",",4132396dfa86377d72b4fb77b2942f8fa9d0aadf9500c1caf005308cde57fdbb
wireshark-2.2.17/epan/dissectors/packet-mbim.c,4436,39,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"        wmem_tree_insert32(mbim_conv->open, pinfo->num, GUINT_TO_POINTER(mbim_conv->open_count));",3886c75a0617cdf84dc36e554433e97c2a37c751993f0e6c7fa577025cab0a72
wireshark-2.2.17/epan/dissectors/packet-mbim.c,4461,51,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"                    wmem_tree_insert32(mbim_conv->open, pinfo->num, GUINT_TO_POINTER(mbim_conv->open_count));",3886c75a0617cdf84dc36e554433e97c2a37c751993f0e6c7fa577025cab0a72
wireshark-2.2.17/epan/dissectors/packet-mbim.c,4507,80,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"                open_count = GPOINTER_TO_UINT(wmem_tree_lookup32_le(mbim_conv->open, pinfo->num));",b4e1236662f20485c749bb467ed227064268b50f18cc7e998da9d13a0d0c3dd5
wireshark-2.2.17/epan/dissectors/packet-mbim.c,5173,76,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"            open_count = GPOINTER_TO_UINT(wmem_tree_lookup32_le(mbim_conv->open, pinfo->num));",b4e1236662f20485c749bb467ed227064268b50f18cc7e998da9d13a0d0c3dd5
wireshark-2.2.17/epan/dissectors/packet-mbim.c,5229,84,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"                    open_count = GPOINTER_TO_UINT(wmem_tree_lookup32_le(mbim_conv->open, pinfo->num));",b4e1236662f20485c749bb467ed227064268b50f18cc7e998da9d13a0d0c3dd5
wireshark-2.2.17/epan/dissectors/packet-mbim.c,6212,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(uuid_key, uuid_ext->uuid, 4*sizeof(guint32));",ebe74248dddc51fa790977fdbccdd66a3b19c8641f612131e4b05a21077f42b4
wireshark-2.2.17/epan/dissectors/packet-mbtcp.c,896,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(&modfloat, &modflt_comb, 4);",446c265e3a728264481a97a7f47c76b0acb920bc2d99d79deb034fd2fcd2ff59
wireshark-2.2.17/epan/dissectors/packet-megaco.c,2450,22,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            reason = atoi(ServiceChangeReason_str);,8c595bc0f4b7a6d697f8613c4e25b0d0b9a6d026181438c44b1394f640aeb6d5
wireshark-2.2.17/epan/dissectors/packet-megaco.c,2908,18,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    error_code = atoi(error);,4897058ce84b9d8b29eabce3787e90ad687a9e85400e201e77e79103d1b63812
wireshark-2.2.17/epan/dissectors/packet-memcache.c,1094,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy (response_chars, first_colon + 1, tokenlen);",0864e63c88ff2346e7b018fa18183a839743d43ead9e089de314fe952ca56a26
wireshark-2.2.17/epan/dissectors/packet-memcache.c,1108,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-2.2.17/epan/dissectors/packet-memcache.c,1217,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-2.2.17/epan/dissectors/packet-memcache.c,1231,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-2.2.17/epan/dissectors/packet-memcache.c,1247,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-2.2.17/epan/dissectors/packet-memcache.c,1410,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-2.2.17/epan/dissectors/packet-memcache.c,1424,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-2.2.17/epan/dissectors/packet-memcache.c,1438,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-2.2.17/epan/dissectors/packet-memcache.c,1453,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-2.2.17/epan/dissectors/packet-memcache.c,1547,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-2.2.17/epan/dissectors/packet-memcache.c,1618,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy (response_chars, line, tokenlen);",724a2536b6740c7b489e2cc81f32dc53c950023442bb821251ffd7117f3b8dc2
wireshark-2.2.17/epan/dissectors/packet-mgcp.c,1106,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char code_with_verb[64] = """";  /* To fit ""<4-letter-code> (<longest-verb>)"" */",929154f61b2bddad1b16855b78c9fe272ca1dc5fcb7fcfef0997bd93b989b86b
wireshark-2.2.17/epan/dissectors/packet-mgcp.c,1160,16,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,					rspcode = atoi(code);,d62c3f734379ae0104723966c92a139c57f64d9c9b9ec0b2a3d6def749f83e8d
wireshark-2.2.17/epan/dissectors/packet-mgcp.h,38,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char code[5];,833bba9d59e16180f401928f9d7b568baeae98af84e22c88995b9be7ee3f2c24
wireshark-2.2.17/epan/dissectors/packet-mgcp.h,55,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char code[5];,833bba9d59e16180f401928f9d7b568baeae98af84e22c88995b9be7ee3f2c24
wireshark-2.2.17/epan/dissectors/packet-mip6.c,3953,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char            name_str[7+1+1+2+2+1+1]; /* ""Unknown (0x%02x)"" */",c383f69ca6cd98e7b2033b532317a28f8ac081737f5e151155c93472a2cac556
wireshark-2.2.17/epan/dissectors/packet-mount.c,101,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char group_name_list[MAX_GROUP_NAME_LIST];,5e9cca62439dd1fcf1cd02cc22c5343c4de467efa19721ae066eaee1a73c11e1
wireshark-2.2.17/epan/dissectors/packet-mpls.c,82,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char PW_ACH[50] = ""PW Associated Channel Header"";",86f5e11ccd24a413ce872a9dc7a9fa6b7075955c127cbe0d47b343d21071d98b
wireshark-2.2.17/epan/dissectors/packet-mq-pcf.c,164,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    strPrm[256];,296a1d245a4003ed2b636e17a1a4e9f410cf5c889631ac08c2c03c17382248ae
wireshark-2.2.17/epan/dissectors/packet-mq-pcf.c,560,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char        sTmp[256];,9832e61fb79e39fe5a5b3549fa535f1ca47dbefb976a5bef86e8c890fe80ce0b
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,512,16,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    pdu_size = atoi(field2);,887a7cf0c2eef16e2b58dce4e40778a41eae8efa167e23d6425cc1200c43749b
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,725,38,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                    content_length = atoi(header_value);,df47d56f433688388c3f835c5c1df36522b68bc1319686b16f04415f3091e5df
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,979,19,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    num_msg_len = atoi(msg_len);,948230bbb633ff1d6cf355977b11717c28a578a25948ce5f0b7e3d1d93b8e02e
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,1022,13,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    value = atoi(major);,c7a5066400317dd41a397c2b952c4fe3f8d8577e5d662aa25f37469cf66a41bf
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,1038,13,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    value = atoi(minor);,d7e0588ebfdb1545565e611b854a4444caad5333574b18d724ba63896b9118bd
wireshark-2.2.17/epan/dissectors/packet-ms-mms.c,731,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char    protocol[3+1] = """";",35f0fba3292631e947934b2d36585c10b323c04b9f7151518b2cfb20a23da7bf
wireshark-2.2.17/epan/dissectors/packet-msrp.c,566,33,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                                atoi(tvb_get_string_enc(wmem_packet_scope(), tvb, token_3_start, token_3_len, ENC_UTF_8|ENC_NA)));",6e6127983107662b8ad0165aeb4e292d0d4ca427e92ad8f4464f97b3c7cda3f5
wireshark-2.2.17/epan/dissectors/packet-mswsp.c,295,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char name[PROP_LENGTH];,44cff50ef51ae50f77820c88474dc1f20f797b43e90d51fd7c801185ece9d6d7
wireshark-2.2.17/epan/dissectors/packet-mtp3.c,435,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char pc_string[MAX_STRUCTURED_PC_LENGTH];,fa5b46d3e46abd90d41967a4cf35c2061b75acad067aa048427e198c2f477143
wireshark-2.2.17/epan/dissectors/packet-mtp3.c,776,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&(tap_rec->addr_opc), mtp3_addr_opc, sizeof(mtp3_addr_pc_t));",1ad35d3c8f2ca1b796fcd315461434c13a1a963d9bbf26f5c4afdd615118d7fe
wireshark-2.2.17/epan/dissectors/packet-mtp3.c,777,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&(tap_rec->addr_dpc), mtp3_addr_dpc, sizeof(mtp3_addr_pc_t));",62cf18b5b2864ee4ab2ea1e4c494724f7a2073792856e0b9183f2e9abad8236b
wireshark-2.2.17/epan/dissectors/packet-mtp3.c,871,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-2.2.17/epan/dissectors/packet-nbap.c,18700,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(umts_fp_conversation_info,conv_proto_data,sizeof(umts_fp_conversation_info_t));",eac06a50a6e87e70690ad00acff77cbd133a9aa91c353cac671ae43d87e4ac95
wireshark-2.2.17/epan/dissectors/packet-nbipx.c,289,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		name[(NETBIOS_NAME_LEN - 1)*4 + 1];,e0856ae08a3d24e4353e8468a9b3b3c1d8690b5eace2b6179788ac772d964ead
wireshark-2.2.17/epan/dissectors/packet-nbipx.c,755,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		name[(NETBIOS_NAME_LEN - 1)*4 + 1];,e0856ae08a3d24e4353e8468a9b3b3c1d8690b5eace2b6179788ac772d964ead
wireshark-2.2.17/epan/dissectors/packet-nbipx.c,757,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		node_name[(NETBIOS_NAME_LEN - 1)*4 + 1];,dcd2ef54fa97867a75713ac1c1c7eb4a1cf6d63816a85420c20710cab01f544b
wireshark-2.2.17/epan/dissectors/packet-ncp-int.h,123,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char			object_name[256];,e9e02aa7c33a885949ec1103d675bfc615dbf2adadd0aa27427bdb3e78931bfe
wireshark-2.2.17/epan/dissectors/packet-ncp-sss.c,407,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    buffer[1024];,0d4b5dd860a6e9ae97c693ac1860926aafa24d1c459d2c815e8b008d5009a25e
wireshark-2.2.17/epan/dissectors/packet-netbios.c,302,15,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	static const char hex_digits[16] = {'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};",30f43486c5792d4591010c823373b1552cd620994cd3bed840057c00894b882c
wireshark-2.2.17/epan/dissectors/packet-netbios.c,366,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char        name_str[(NETBIOS_NAME_LEN - 1)*4 + 1];,42de45c29711b9e10f52a8ab7bccafe9eb1d4894f2203620304cbb7fcdb4e779
wireshark-2.2.17/epan/dissectors/packet-netbios.c,1088,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char 	       name[(NETBIOS_NAME_LEN - 1)*4 + 1];,88e22cc6074d7d544477cb7aa60aa8d0d107ad92cdddab105daaf6eb0afec508
wireshark-2.2.17/epan/dissectors/packet-netlink-route.c,276,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char tmp[16];,51bdfbf2ec4ab8358c39c0f82a40c890b1e1ae2983150d04839f8bd436cdc2b2
wireshark-2.2.17/epan/dissectors/packet-netlink-route.c,351,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char tmp[16];,51bdfbf2ec4ab8358c39c0f82a40c890b1e1ae2983150d04839f8bd436cdc2b2
wireshark-2.2.17/epan/dissectors/packet-netlink-route.c,512,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char tmp[16];,51bdfbf2ec4ab8358c39c0f82a40c890b1e1ae2983150d04839f8bd436cdc2b2
wireshark-2.2.17/epan/dissectors/packet-netlink-route.c,783,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char tmp[16];,51bdfbf2ec4ab8358c39c0f82a40c890b1e1ae2983150d04839f8bd436cdc2b2
wireshark-2.2.17/epan/dissectors/packet-nfs.c,1125,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(nns->name, ptr, name_len);",9b18f56b01a25ee9b30efa272b3feaf0a81539f49f5c0611e9af20c82986d752
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,79,23,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const unsigned char gbl_zeros[24] = ""\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"";",3c033fd052b16af13cdef4d9f50075d843724f97a82b4e44c996171e5239faf7
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,293,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char    server_challenge[8];,26d9c479f8bde0f6081654710c68feb06eb84669ca8bf545e9d9aa93a269704e
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,294,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char    client_challenge[8];,2157a29818bf21920080cdb32583f115be0ea7614c8af8a6e7ec5d8fac1fde2c
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,373,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(pw21, key, 16);",fd87bee44c8e37112f00f9e44206e28b09db42f0932623082462f2d01735ecdd
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,397,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(pw21, passhash, 16);",84c57a5517546b45968b4c9188aabb6e6d1040daaa76133029dcb20a2b71ff69
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,432,30,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"get_keyexchange_key(unsigned char keyexchangekey[NTLMSSP_KEY_LEN], const unsigned char sessionbasekey[NTLMSSP_KEY_LEN], const unsigned char lm_challenge_response[24], int flags)",e84e00f557e95d1ae0257ae9f1d50f6b279806f3efa67a66290718870b1e60e1
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,432,83,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"get_keyexchange_key(unsigned char keyexchangekey[NTLMSSP_KEY_LEN], const unsigned char sessionbasekey[NTLMSSP_KEY_LEN], const unsigned char lm_challenge_response[24], int flags)",e84e00f557e95d1ae0257ae9f1d50f6b279806f3efa67a66290718870b1e60e1
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,432,136,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"get_keyexchange_key(unsigned char keyexchangekey[NTLMSSP_KEY_LEN], const unsigned char sessionbasekey[NTLMSSP_KEY_LEN], const unsigned char lm_challenge_response[24], int flags)",e84e00f557e95d1ae0257ae9f1d50f6b279806f3efa67a66290718870b1e60e1
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,440,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(basekey, sessionbasekey, 8);",8f3c333debbf7fa833d60b1f5588068e4a97e79049499bbea24f0c6973c357fc
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,462,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(keyexchangekey, sessionbasekey, NTLMSSP_KEY_LEN);",ee2925d4a03fc4f72835bf0e8bdf90960187bde0c76123c6c3bbdc42b1925cf6
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,474,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char  nt_password_hash[NTLMSSP_KEY_LEN];,54d0da5b8bb1c6f58fec67366b3888c4f49d6d4f1baa54e1e4f6c9d62c51b7ff
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,475,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char           nt_password_unicode[256];,2368142c602cb3f7a738837b08330fb6f97808b1199aad729384fbf570f9567a
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,508,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(pass_list[i].md4, nt_password_hash, NTLMSSP_KEY_LEN);",d5aa969c9f727bf02f8f21b9f0053e3c415e5d92d019c7ad2c1fe6b02e091cb7
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,513,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(pass_list[i].md4, ek->keyvalue, NTLMSSP_KEY_LEN);",cdf67fba9eb934c9e32d0c92146e18d4b7140a30e1720e22e703ff6130b5af47
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,532,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char              domain_name_unicode[DOMAIN_NAME_BUF_SIZE];,6a905af420ab10d2567b207f1954cad0c53cbd49bde42d1cd2c60ae745f98c95
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,533,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char              user_uppercase[USER_BUF_SIZE];,c5791435d14891cb0ceac407acdc220544d6a7471fd6f7c59a9c024e0e07eed0
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,534,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char              buf[BUF_SIZE];,a7184e605a02f5cf2cda4e698fba6022a0e51ca8492af5f350ac1489cff1b2a0
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,536,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char     nt_password_hash[NTLMSSP_KEY_LEN];,fe846fc8ae07505539dc7abbdcf20cf97dcad989885ba0318a45f67f78bbf51e
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,537,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char     nt_proof[NTLMSSP_KEY_LEN];,8f1d8edad65cb86d56991e0e14614d49552ea3edb915fcc489f20555ed3f58ad
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,538,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char     ntowf[NTLMSSP_KEY_LEN];,a27851462a0e383e11e65a1cbb097031cc708c636b9c4a143a55542c7d50f730
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,586,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(nt_password_hash, pass_list[i].md4, NTLMSSP_KEY_LEN);",4215b41ef36e38bf6832468d99b0f2c746061691ff4f3b33948a0048bd4c4fbb
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,591,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, user_uppercase, user_len*2);",84c29fff6c43dbc4535ae56aee7a5e501debfbdd8372a565ed8fc25e2d918585
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,592,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf+user_len*2, domain_name_unicode, domain_len*2);",eaf8d560d3c2ce9976945ea0163c837429a52aac5baf5b72850a1f2ce6666e0b
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,598,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, serverchallenge, 8);",f444485b18ead25b0fdb035fd5f01f180740417eb65159b027ce1801585a2a02
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,599,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf+8, clientchallenge, 8);",5564de0b9bf7f754a978acb00a5acdeb9d152876ae49fbe45f3fe13e777e66da
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,601,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(lm_challenge_response+NTLMSSP_KEY_LEN, clientchallenge, 8);",0a37a8c815ffa7101d1d1c9c5a0cdda2fc9ef6297ea1cf2fe018692c2300410f
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,606,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, serverchallenge, 8);",f444485b18ead25b0fdb035fd5f01f180740417eb65159b027ce1801585a2a02
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,607,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf+8, ntlm_response->contents+NTLMSSP_KEY_LEN, MIN(BUF_SIZE - 8, ntlm_response->length-NTLMSSP_KEY_LEN));",34c2b8972c346f3a925c2dd333d8091b8cf48c7f3bfc6eac3fee28d7afa444c5
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,624,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sessionkey, encryptedsessionkey, NTLMSSP_KEY_LEN);",6f35a1858836b6201605c7944d2f8af93e594ca43045d14519fc7b7b0983e8ff
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,630,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sessionkey, keyexchangekey, NTLMSSP_KEY_LEN);",bfd273c2ac669df34af1931c4b374c9e341afc553f14ea8b3c19c19d07433f0b
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,633,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(ntlmssph->session_key, sessionkey, NTLMSSP_KEY_LEN);",0de36e9bdab5624e18cf829201d783ff93467a16c331d8aa9c30c0ec512d3eb5
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,647,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char     lm_password_upper[NTLMSSP_KEY_LEN];,de7d60afef4dce5238cd01ff110ef8f6b3961c9b3255879989b53d1fb1cf1afc
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,648,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char     lm_password_hash[NTLMSSP_KEY_LEN];,016231b0409758fcd951e6b1e735c3e2e5b2f5d96e8b3e60a0c05ec735be53e5
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,649,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char     nt_password_hash[NTLMSSP_KEY_LEN];,fe846fc8ae07505539dc7abbdcf20cf97dcad989885ba0318a45f67f78bbf51e
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,650,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char     challenges_hash[NTLMSSP_KEY_LEN];,6593e86d9017752773efa4f57ecbe9fb576592b6cc4aaffec9b98f2be5402259
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,651,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char     challenges_hash_first8[8];,762a9cdae049ad535009691aa53e6d0aa4f98c61735c14a39393deb57883add9
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,652,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char     challenges[NTLMSSP_KEY_LEN];,46886869cf829c841c208bbeaf5fc2519bed8da0be1245b4c3fea6e221ff73c1
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,661,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char              nt_password_unicode[256];,4343755ac2ec0f3be86fc80a16312876d5a87f4428d1a563941eadc5884840f2
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,698,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sessionbasekey, lm_password_hash, NTLMSSP_KEY_LEN);",a136ee3276eecca2aa32ff42689ad7caad1650937d55eb02a42a689e433b0414
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,710,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(nt_password_hash, pass_list[i].md4, NTLMSSP_KEY_LEN);",4215b41ef36e38bf6832468d99b0f2c746061691ff4f3b33948a0048bd4c4fbb
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,714,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(lm_challenge_response, clientchallenge, 8);",929c30c9320000e92a6219539d3facedbe1b7bf3615581ec17953952764203ed
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,720,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(challenges_hash_first8, challenges_hash, 8);",bcc17d549a60568f3f94946da7277673444e0b044de880a2fa313c1d3dc520c6
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,731,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(lm_challenge_response, nt_challenge_response, 24);",200373bf46df1ab11b82d81ebf56d8b19266d15a21aa83586de09c1de2a88d1d
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,749,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(challenges, serverchallenge, 8);",6c685ebb8fddc775cd8e505b1d9b39e0878479b717084d881c9d55e1f61c7c5c
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,751,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(challenges+8, clientchallenge, 8);",0242e798a6df11ebdd76e81be9a6df229c9d1853bbefe6226ed2c0995340dd18
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,757,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     memcpy(sessionbasekey, md4, NTLMSSP_KEY_LEN);",3a9317a4a1adbc6bd14ba617ecd235bed91f9106f885e5da8c2e7c6e9024850e
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,773,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(sessionkey, encryptedsessionkey, NTLMSSP_KEY_LEN);",6f35a1858836b6201605c7944d2f8af93e594ca43045d14519fc7b7b0983e8ff
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,780,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sessionkey, keyexchangekey, NTLMSSP_KEY_LEN);",bfd273c2ac669df34af1931c4b374c9e341afc553f14ea8b3c19c19d07433f0b
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,782,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(ntlmssph->session_key, sessionkey, NTLMSSP_KEY_LEN);",0de36e9bdab5624e18cf829201d783ff93467a16c331d8aa9c30c0ec512d3eb5
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,815,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(clientsealkey, exportedsessionkey, NTLMSSP_KEY_LEN);",0f9bbb50abea6bd3af558829f6cb451c0b61373db5bf2a1e82d56f240d15eb44
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,836,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(serversealkey, clientsealkey, NTLMSSP_KEY_LEN);",27130748920aa16b6c6b075cf838c6802062918459f6c719b383fb2bc2b4a383
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,868,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(serversealkey, clientsealkey,*keylen);",e1accbd8bf78b065e791355eb082e4e49d7d709b8951964fc768388d0b11ff32
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,1698,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(conv_ntlmssp_info->client_challenge, conv_ntlmssp_info->ntlm_response.contents+24, 8);",48daf9ccd5a606d9a510befbd68e13b77707fa33ffa90d764298c237e3e1f7ed
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,1780,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(encryptedsessionkey, sessionblob.contents, sessionblob.length);",851967effd54c572f72685677a0ebfe25a9a4b012053a7e537fb94f9ac765ad7
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,1797,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(conv_ntlmssp_info->client_challenge, conv_ntlmssp_info->lm_response.contents, 8);",53aaa811ff990b686b8d01d881337b64e2a28dcf14ba56715f4bf3f0a0cbb891
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,2022,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(packet_ntlmssp_info, stored_packet_ntlmssp_info, sizeof(ntlmssp_packet_info));",491438351c271e1818775e8f1409aea54dba4ce0d83c696eed886dd25f8e0e52
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,2272,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(check_buf, &sequence, 4);",f9ccc23d81232d3517ea44e2602784c31f67fb817a4bd5723f5a9bcd01337363
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,2273,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(check_buf+4, packet_ntlmssp_info->decrypted_payload, packet_ntlmssp_info->payload_len);",317d3b29464d48f63d08142b1573281941ed7d0349ca34c925ba81d3b053e942
wireshark-2.2.17/epan/dissectors/packet-ntp.c,587,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *mon_names[12] = {,992987e147907c0bfaef8c775b7201e93f906970972c895741fb2efca33ccb55
wireshark-2.2.17/epan/dissectors/packet-null.c,269,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((char *)&null_header, (const char *)&pd[0], sizeof(null_header));",6aa2f593513d6eb48de973abc00f3e481f585f850f23026c086c94c5251a5348
wireshark-2.2.17/epan/dissectors/packet-olsr.c,971,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(ett, ett_base, sizeof(ett_base));",827bd9f79ef5bf5d3f3a34c16d448f700ba1cd5b18f8fa638693a8906869c2e9
wireshark-2.2.17/epan/dissectors/packet-opensafety.c,1815,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(packet->scm_udid, scmUDID->data, 6);",4877e1a9d51fe1195a13cefbba0730c6c01e7df0521e870f4e73583dcee8e196
wireshark-2.2.17/epan/dissectors/packet-p_mul.c,577,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy((guint8 *)&dstIp, dst->data, 4);",c8daec7e341164af1b51230faef3ce0eafb272151108ee9328c279e7daab1ff0
wireshark-2.2.17/epan/dissectors/packet-p_mul.c,610,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((guint8 *)&dstIp, dst->data, 4);",c8daec7e341164af1b51230faef3ce0eafb272151108ee9328c279e7daab1ff0
wireshark-2.2.17/epan/dissectors/packet-packetbb.c,1130,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(ett, ett_base, sizeof(ett_base));",827bd9f79ef5bf5d3f3a34c16d448f700ba1cd5b18f8fa638693a8906869c2e9
wireshark-2.2.17/epan/dissectors/packet-paltalk.c,96,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((guint8 *)&src32, pinfo->net_src.data, 4); /* *Network* order */",7e3e14ff37dd9fee293b99a080afd139a481e19b936d587d2248cb10306a653a
wireshark-2.2.17/epan/dissectors/packet-paltalk.c,97,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((guint8 *)&dst32, pinfo->net_dst.data, 4); /* *Network* order */",f361ea6600fd0caf348ebf7ba52d06475c74232dbaff087c4a365e72b7bcb370
wireshark-2.2.17/epan/dissectors/packet-pdcp-lte.c,249,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char cleanString[32];,62e7141df034f41678359ecbcdbe1ca3a329e1c90af0aa31ee9bf64a2df46fea
wireshark-2.2.17/epan/dissectors/packet-pdcp-lte.c,532,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&asInt, key, sizeof(pdcp_channel_hash_key));",5943f36241977148822e16cad6eb13d8b9953a3880b2b2f5e49d8b6a126aebbd
wireshark-2.2.17/epan/dissectors/packet-pdcp-lte.c,1069,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char info_buffer[MAX_INFO_BUFFER];,a50c8ed6ed33fbc50e3ea86696137d0239db0f0bb8d7cacd0197bd41478e47c1
wireshark-2.2.17/epan/dissectors/packet-pdcp-lte.c,1508,18,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        unsigned char ctr_block[16];,d4adaf3cb8603993d3acac49d60aa26f6a2f921ce06def6c9a5e3b114bc09144
wireshark-2.2.17/epan/dissectors/packet-per.c,722,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char tmp_buf[256];,789a2d0a9c6f05d362abb0c29776a418478f9b93d60d6b34ce2563c2af2b9bdd
wireshark-2.2.17/epan/dissectors/packet-per.c,747,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char sorted_alphabet[128];,031eedf750dc1ba2164c010720387cb99e1d8801538997845d1838b75f206731
wireshark-2.2.17/epan/dissectors/packet-per.c,1042,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char bits[10];,8c5277fe7e13e11bfdd7f1323a64eda6bd43a41cc016ccbb11b11ace59e049d2
wireshark-2.2.17/epan/dissectors/packet-pkcs12.c,190,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char hash[20], buf_b[64], buf_i[128], *p;",b33066e1fc6f33e4b6d02ad049f00fe3c9fe85386923616bae7a8a054d05a467
wireshark-2.2.17/epan/dissectors/packet-pkcs12.c,244,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy (hash, gcry_md_read (md, 0), 20);",33f4c6611527d9becf1d579d46bb61863f346bd68914c6080ca02969ae9cba8b
wireshark-2.2.17/epan/dissectors/packet-pop.c,295,37,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            data_val->msg_tot_len = atoi(line + 4);,ede043231429a2f1d8309a0db1ded19cc002018f313ff6c18388b41084135fc4
wireshark-2.2.17/epan/dissectors/packet-ppp.c,2030,18,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static const char *ctrlchars[32] = {,7b62cda570c8856b33994ab002c2d8c8d7269cb521926fde663ff9f757f4ae43
wireshark-2.2.17/epan/dissectors/packet-pvfs2.c,880,27,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		string_buffer = (char *)memcpy(wmem_alloc(wmem_packet_scope(), string_length_copy+1), tmpstr, string_length_copy);",7c8b6829a38949a6fe3f4aef37a72f0d5e2dc1cc021e286b4f5348dccaf1a567
wireshark-2.2.17/epan/dissectors/packet-q931.c,2533,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&(q931_pi->crv), call_ref, call_ref_len > sizeof(q931_pi->crv) ? sizeof(q931_pi->crv) : call_ref_len );",7e24510b1b02a269a8f104bb94e6aee66a255228cda39fe7dd2df14ab6eb803b
wireshark-2.2.17/epan/dissectors/packet-quakeworld.c,150,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static	const char	*cmd_argv[MAX_ARGS];,c46f99b4407e0f33eebbe544109d3eed56ddb2900190059cd31cb581f8077a35
wireshark-2.2.17/epan/dissectors/packet-quakeworld.c,408,17,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			version    = atoi(Cmd_Argv(1));,5b55b454b4cf4ee6bfa4bff9a19373ac65dbe44ea8b6bd47fd08028995862ea5
wireshark-2.2.17/epan/dissectors/packet-quakeworld.c,409,17,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			qport      = atoi(Cmd_Argv(2));,38857ddb2171e81692a5672c64195226568a0ef0562bf67b424cc5019031a061
wireshark-2.2.17/epan/dissectors/packet-quakeworld.c,410,17,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			challenge  = atoi(Cmd_Argv(3));,1e729651ffaa954dd5ee32254b6f0f165abfcd03a39b96abebac23b64739a3d6
wireshark-2.2.17/epan/dissectors/packet-quakeworld.c,450,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,			char remaining[MAX_TEXT_SIZE+1];,c56b2629dcf74a31163e6601442b627a18617531bdf5ae7891a1368fba463e83
wireshark-2.2.17/epan/dissectors/packet-quic.c,1912,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"        quic_info->version = atoi(tvb_get_string_enc(wmem_packet_scope(), tvb,offset + 1 + len_cid + 1, 3, ENC_ASCII));",cd5ceafd8eed14c2c32fbb759cc622393961bd422ce67709d2c71b48cec4ae0c
wireshark-2.2.17/epan/dissectors/packet-radius.c,1787,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(payload+4, request_authenticator, AUTHENTICATOR_LENGTH);",468338fd8f3b66f9046e483ebb61af423beb71221a9cdd1a41b2db55f03a71a7
wireshark-2.2.17/epan/dissectors/packet-radius.c,1970,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(radius_call->req_authenticator, authenticator, AUTHENTICATOR_LENGTH);",60a8316378e34cd1b45b10d883e0e32a86ef10bdcf34a35e8699e94940122c2c
wireshark-2.2.17/epan/dissectors/packet-raw.c,39,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char zeroes[10] = {0,0,0,0,0,0,0,0,0,0};",679df40bc56537378f3e8245a66a17ab07a8d9ccdb2eb546745c20032a6f5e5f
wireshark-2.2.17/epan/dissectors/packet-reload-framing.c,207,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(transaction_id_key[2].key, pinfo->src.data, pinfo->src.len);",ef8d74dfcf4e45dd1a50579d810180e34745078b858c826bcef3b2ffdba704d6
wireshark-2.2.17/epan/dissectors/packet-reload-framing.c,214,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(transaction_id_key[2].key, pinfo->dst.data, pinfo->dst.len);",238a7271ed7830bf4772445263dd234317b7789d2b943b3ca6ed08b4b3521d5b
wireshark-2.2.17/epan/dissectors/packet-rlc-lte.c,533,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(combined_data+combined_offset, data, length);",2afba0623270f81bbe0a0a311647e5329ecdb0d3661cce8cc2a05b0469699db4
wireshark-2.2.17/epan/dissectors/packet-rlc-lte.c,649,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char info_buffer[MAX_INFO_BUFFER];,a50c8ed6ed33fbc50e3ea86696137d0239db0f0bb8d7cacd0197bd41478e47c1
wireshark-2.2.17/epan/dissectors/packet-rlc-lte.c,1867,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(p_channel_key, &channel_key, sizeof(channel_hash_key));",4c0e1b3de9367cd2762ce386030a748f7c83c5c0948697b6f53ab44fac76a8f8
wireshark-2.2.17/epan/dissectors/packet-rlc.c,649,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char info_buffer[MAX_INFO_BUFFER];,a50c8ed6ed33fbc50e3ea86696137d0239db0f0bb8d7cacd0197bd41478e47c1
wireshark-2.2.17/epan/dissectors/packet-rlc.c,854,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(sdu->data + offs, temp->data, temp->len);",9ef846cb28c61462e745520a90f6a5c3f39069da3d00ecc43e017b98bcc74bd5
wireshark-2.2.17/epan/dissectors/packet-rlc.c,1418,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(out,global_rlc_kasumi_key,strlen(global_rlc_kasumi_key));    /*Copy from prefrence const pointer*/",44573b7f448f2efc5e641f145d0fa0f61dbdf1fcdf89891303cf6202ee77cbce
wireshark-2.2.17/epan/dissectors/packet-rlogin.c,84,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char             user_name[NAME_LEN];,008e5a2994f80a84658310dff7fb36979035012a60c6533101d867cc1ad25b4b
wireshark-2.2.17/epan/dissectors/packet-rlogin.c,296,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"			                    atoi(tvb_format_text(tvb, offset, str_len)));",d29a4ccacafad19724135b9141d3fe73e16cad77a0ee3a682fad694119eb4b55
wireshark-2.2.17/epan/dissectors/packet-rpc.c,359,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char table_name[100];,e9ba8882ba05c2e7b8520f3c5619a5c23a2874746eb4cf6d40c639931250d216
wireshark-2.2.17/epan/dissectors/packet-rpcrdma.c,99,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *gPREF_ID[2]  = {NULL};,1b8da71ad0d93c01680a99a9ea3251871964d292e7e2ad6e4286e86e957f667f
wireshark-2.2.17/epan/dissectors/packet-rtcp.c,1393,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char          ascii_name[5];,dcef0dd349f66c8a9b15f5ae8343b51412b5dd395ca15b879390eac7a469a220
wireshark-2.2.17/epan/dissectors/packet-rtmpt.c,2178,41,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                                        memcpy(tp->data.p, tf->saved.d, tf->len);",5b9f2224b479984a37ac830f4e3ac0ab78dd577a336af881afe42f720768f304
wireshark-2.2.17/epan/dissectors/packet-rtp-midi.c,4629,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		helptext[200];,45b1698893e4aa4e003c10e87b41753d92d7debaa923313f3ab9e5c2ccd2fa5d
wireshark-2.2.17/epan/dissectors/packet-rtp-midi.c,4630,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		entry[200];,17855ae5790513d3e85c129be5d047da8fcdb2747c3996dba16701b902b150fd
wireshark-2.2.17/epan/dissectors/packet-rtp-midi.c,4631,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		segtype[200];,7df21689bea44bedb593a545aa1b9874d44482737cbc5a649bf4726c2bf30f67
wireshark-2.2.17/epan/dissectors/packet-rtps.c,1721,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char temp_buff[20];,49656db62b81e33010e1e6afef4c78e77d18948a3c04a0f26caf4a844749fdfa
wireshark-2.2.17/epan/dissectors/packet-rtps.c,2397,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char          type_name[40];,e9e826d22667bc583b25f8bdcb7c96557cc8624b6aa5539c66698a1b82b85afa
wireshark-2.2.17/epan/dissectors/packet-rtps.c,4427,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char temp_buff[20];,49656db62b81e33010e1e6afef4c78e77d18948a3c04a0f26caf4a844749fdfa
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,464,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(response_chars, token, 3);",f02243de4b3bedb5a81638d2e1b67ade08d623844c6c6fccf0ba073150575486
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,525,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, line_begin, line_len);",b78a37c8d240b02bd982ffe1a16e05242007f1a42a2062cb03e9298276b87546
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,676,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, line_begin, line_len);",b78a37c8d240b02bd982ffe1a16e05242007f1a42a2062cb03e9298276b87546
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,1073,37,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                                    atoi(tvb_format_text(tvb, value_offset,",20be659b1ebbe29f02d8c3cfc7e6cf15fcfab92bc780ad5895540e7839da6fe6
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,1115,37,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                rdt_feature_level = atoi(tvb_format_text(tvb, value_offset,",e001c9c6f696beb636e17c690224b47d67845e6adca85913e568f791818c05bd
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,1119,37,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                                    atoi(tvb_format_text(tvb, value_offset,",20be659b1ebbe29f02d8c3cfc7e6cf15fcfab92bc780ad5895540e7839da6fe6
wireshark-2.2.17/epan/dissectors/packet-s7comm.c,2869,21,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                    atoi(str));,fdba983f6dcf677b3c4c0791553c1fced04b9581495069511201973f88b20886
wireshark-2.2.17/epan/dissectors/packet-s7comm.c,2872,21,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                    atoi(str));,fdba983f6dcf677b3c4c0791553c1fced04b9581495069511201973f88b20886
wireshark-2.2.17/epan/dissectors/packet-s7comm.c,3221,17,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                atoi(str));,fdba983f6dcf677b3c4c0791553c1fced04b9581495069511201973f88b20886
wireshark-2.2.17/epan/dissectors/packet-s7comm.c,3224,17,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                atoi(str));,fdba983f6dcf677b3c4c0791553c1fced04b9581495069511201973f88b20886
wireshark-2.2.17/epan/dissectors/packet-s7comm.c,4287,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char str_timestamp[30];,aa80c57d663f71c7910f37f50673c1bb5153620bd042416ec25d77bb86c2d94c
wireshark-2.2.17/epan/dissectors/packet-s7comm.c,4288,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char str_version[10];,288166d810ce7f5263fffdc8b084619a63cd829dcca6b91a3e1073184e793995
wireshark-2.2.17/epan/dissectors/packet-s7comm.c,4368,25,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                        atoi(pBlocknumber));,cbc6ee91922bbecd92153d7a93fbc71fd9547f78316b52f9e49d611fd05836c4
wireshark-2.2.17/epan/dissectors/packet-s7comm.c,4371,25,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                        atoi(pBlocknumber));,cbc6ee91922bbecd92153d7a93fbc71fd9547f78316b52f9e49d611fd05836c4
wireshark-2.2.17/epan/dissectors/packet-scsi-smc.c,260,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char volid[32+1];,2e45f00a4df9b49b34a43cb61c2d29ebbf74086f03a2ae4de3af52058e484b5a
wireshark-2.2.17/epan/dissectors/packet-sctp.c,1027,18,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  if (addr->len) memcpy(k[4].key, addr->data, addr->len);",4d20c2dcea94a63a17ebb12c4a8b82c496973f73fe1c00bc3291196f08da85e4
wireshark-2.2.17/epan/dissectors/packet-sctp.c,1146,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char ds[64];,f860a8d4f9646963e847a66c3ab9668b575524cd7f49b6e474f72ee48c2e4e9a
wireshark-2.2.17/epan/dissectors/packet-sctp.c,3100,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(message->data + offset, frag_i->data, frag_i->len);",d81411e6239dc2d027f7569901b0a843d22ef5c196ef5a1b6513b82e1b399931
wireshark-2.2.17/epan/dissectors/packet-sctp.c,3113,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(message->data + offset, frag_i->data, frag_i->len);",d81411e6239dc2d027f7569901b0a843d22ef5c196ef5a1b6513b82e1b399931
wireshark-2.2.17/epan/dissectors/packet-sctp.c,3127,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(message->data + offset, frag_i->data, frag_i->len);",d81411e6239dc2d027f7569901b0a843d22ef5c196ef5a1b6513b82e1b399931
wireshark-2.2.17/epan/dissectors/packet-sdp.c,227,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char  *encoding_name[SDP_NO_OF_PT];,01220ee66771f119aea7c94fda240abdbe2b9194f338595cb9ad92ac9c4e96f9
wireshark-2.2.17/epan/dissectors/packet-sdp.c,907,33,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                                atoi(media_info->media_port[media_info->media_count]));,a5a6bb27d45a55f62f20226de9df5b9925bfb10af7f4b7eb641c2a86d3037b5b
wireshark-2.2.17/epan/dissectors/packet-sdp.c,934,33,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                                atoi(media_info->media_port[media_info->media_count]));,a5a6bb27d45a55f62f20226de9df5b9925bfb10af7f4b7eb641c2a86d3037b5b
wireshark-2.2.17/epan/dissectors/packet-sdp.c,1385,18,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            pt = atoi((const char *)payload_type);,91cafc2655d88885ca242e35b17cf71c56ac2753f59bf6c7b2971c21f735a2c9
wireshark-2.2.17/epan/dissectors/packet-sdp.c,1403,47,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"            transport_info->sample_rate[pt] = atoi(tvb_get_string_enc(wmem_packet_scope(), tvb, offset, tokenlen, ENC_UTF_8|ENC_NA));",4c3f82398f980da04d9f681717bf3647936e8af2694a21451afe1a829847e7a7
wireshark-2.2.17/epan/dissectors/packet-sdp.c,1453,32,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                media_format = atoi((char*)tvb_get_string_enc(wmem_packet_scope(), tvb, offset, tokenlen, ENC_UTF_8|ENC_NA));",56bccc89844a50702fcf000d608f48725d9a688b4ae3fdba74478157fe096193
wireshark-2.2.17/epan/dissectors/packet-sdp.c,1531,56,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                        media_info->msrp_port_number = atoi((char*)tvb_get_string_enc(wmem_packet_scope(), tvb, port_offset + 1, port_end_offset - port_offset - 1, ENC_UTF_8|ENC_NA));",8f70c96ecb61d64391698a1c9fecab9f47bf4b9b513187b91a36cccda34f069e
wireshark-2.2.17/epan/dissectors/packet-sdp.c,1594,17,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                atoi((char*)tvb_get_string_enc(wmem_packet_scope(), tvb, offset, tokenlen, ENC_UTF_8|ENC_NA)));",90afbe810cc388296a991f71bfb466308b34e0c818cf3f7018a9e40ed0fbc888
wireshark-2.2.17/epan/dissectors/packet-sdp.c,1716,55,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                            transport_info->mki_len = atoi((char*)tvb_get_string_enc(wmem_packet_scope(), tvb, offset, tokenlen, ENC_UTF_8|ENC_NA));",9b88b1727d76a1210ab68eb1a4b8cccd9a5b624494452beeadb071be7ded48b7
wireshark-2.2.17/epan/dissectors/packet-sdp.c,2552,25,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                        char num_pt[10];,b7093a2fe0b863c179f39eff699c1ceba69b9c8e09d200639f0fe20979231ada
wireshark-2.2.17/epan/dissectors/packet-sigcomp.c,933,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sip_sdp_buff+8, sip_sdp_static_dictionaty_for_sigcomp, SIP_SDP_STATE_LENGTH);",e6c5b271cc1b7e4c602301e971ea00be05258a3b4a9c1e26ec8c15f36eb5d0ce
wireshark-2.2.17/epan/dissectors/packet-sigcomp.c,945,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(presence_buff+8, presence_static_dictionary_for_sigcomp, PRESENCE_STATE_LENGTH);",ec0d5f0c7d242a38dab4dd818c3419798c226bd4eed72855dab1111a21be6a93
wireshark-2.2.17/epan/dissectors/packet-sigcomp.c,967,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char     partial_state[STATE_BUFFER_SIZE]; /* Size is 6 - 20 */,63e3a2ce9967ee012b7bc958edf13597896bc4d9520411898d901e5c8b5f3389
wireshark-2.2.17/epan/dissectors/packet-sigcomp.c,1108,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char   partial_state[STATE_BUFFER_SIZE];,13206469ef0fa4e75077f99ff025950c7193c26134c7b1454327f09d1b7f1d02
wireshark-2.2.17/epan/dissectors/packet-sigcomp.c,1142,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char   partial_state[STATE_BUFFER_SIZE];,13206469ef0fa4e75077f99ff025950c7193c26134c7b1454327f09d1b7f1d02
wireshark-2.2.17/epan/dissectors/packet-sigcomp.c,1753,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char           string[2];,6470766f7a276d4f28f022306b0afde1ad3dcee703500e79d7826a019e1bdd29
wireshark-2.2.17/epan/dissectors/packet-sigcomp.c,1800,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char  sha1_digest_buf[STATE_BUFFER_SIZE];,184e0ff11bac9131e8ca68b22e1d868274fe2cfc267ec44c023e1d478ba36540
wireshark-2.2.17/epan/dissectors/packet-sip.c,1093,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char call_id[MAX_CALL_ID_SIZE];,f2003a77392f775672786c4252448f22bf68eab5043a2a76220c242bbd475720
wireshark-2.2.17/epan/dissectors/packet-sip.c,1882,17,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"            if (atoi(tvb_get_string_enc(wmem_packet_scope(), tvb, contact_params_start_offset+8,",6d1fa54668be60196198e15d7cf18cbb200d4eb8ed06e8862825023a9a9e2af5
wireshark-2.2.17/epan/dissectors/packet-sip.c,2414,36,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                        int port = atoi(tvb_get_string_enc(wmem_packet_scope(), tvb, port_offset,",d8029125a3f79a3d1bf7a440401535ca736c712cc00bcac537b2727a213dd30d
wireshark-2.2.17/epan/dissectors/packet-sip.c,2608,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(guid.data4, &bytes->data[8], 8);",ea42a3f2559af31e864cddf266d46b0d7591291ff7a5682d2dabbf824dc31049
wireshark-2.2.17/epan/dissectors/packet-sip.c,2615,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(guid.data4, &uuid->data[8], 8);",419004c7f95846b8d51cd5af4778049fe937cda532cb5166e6aa07d4b26b737b
wireshark-2.2.17/epan/dissectors/packet-sip.c,2865,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char    cseq_method[MAX_CSEQ_METHOD_SIZE] = """";",00cfc846f897d31de7aff9fe60ef4c203179f955899596c9d79aff387ac3bda5
wireshark-2.2.17/epan/dissectors/packet-sip.c,2866,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char    call_id[MAX_CALL_ID_SIZE] = """";",c26795e029f9de33bac5a80bff2236bef55aeb168155bd72600ac81b426cafbb
wireshark-2.2.17/epan/dissectors/packet-sip.c,3634,42,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                        content_length = atoi(value);,facaf14c1a124e8694364619c60503fa05d96f5f98e8923ada1d1d6f9f225c42
wireshark-2.2.17/epan/dissectors/packet-sip.c,4307,21,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"    response_code = atoi((char*)tvb_get_string_enc(wmem_packet_scope(), tvb, offset, 3, ENC_UTF_8|ENC_NA));",9864d0a07081ffd69f346eebc93fa25078c5f1fcbefb25507d6a3f4a18a4c0d9
wireshark-2.2.17/epan/dissectors/packet-slimp3.c,250,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        lcd_str[MAX_LCD_STR_LEN + 1];,db679c3698a4e60272447c17af2ba2dbb8cecbbe629278d8de5281a77babf948
wireshark-2.2.17/epan/dissectors/packet-smb-sidsnooping.c,98,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char sid_name_str[256];,568cea86cf108d33ff3d85f7c75963047093bfc0860d6de862728200a6f02486
wireshark-2.2.17/epan/dissectors/packet-smb.c,2253,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char *name[MAX_DIALECTS+1];,6b352edf6ab30469f2f0a3ab1a41d596cde357ad7c486a4c7a273dcdccd98128
wireshark-2.2.17/epan/dissectors/packet-smb.c,5268,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char        fname[11+1];,81e4a24cc7d70a89f26af59b6e51844d1dfa78722eceeee547a255ccc7e05890
wireshark-2.2.17/epan/dissectors/packet-smb.c,5324,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char        fname[13+1];,b8a9121914753d27d78aec5bca3efe26a7fd970989c0d41045cf29c60a60c299
wireshark-2.2.17/epan/dissectors/packet-smb2.c,946,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(KO, digest, 16);",f20e3c8356e4697ff00e45b8ef925214de2b5609f540e3b9a17fe2671e70a0b9
wireshark-2.2.17/epan/dissectors/packet-smb2.c,1794,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"					memcpy(policy_hnd_hashtablekey, &policy_hnd, sizeof(e_ctx_hnd));",b15f6cbbf768a9941496f2712797e7fb191eb98487f76cbac3fa7a01d4634d4f
wireshark-2.2.17/epan/dissectors/packet-smb2.c,1836,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"					memcpy(policy_hnd_hashtablekey, &policy_hnd, sizeof(e_ctx_hnd));",b15f6cbbf768a9941496f2712797e7fb191eb98487f76cbac3fa7a01d4634d4f
wireshark-2.2.17/epan/dissectors/packet-smb2.c,2959,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(session_key, ek->keyvalue, MIN(ek->keylength, 16));",9f1ed2e70dad343c5ad45d930d0db65f26e03ce2b55ab2c153d47f3e73f3ae55
wireshark-2.2.17/epan/dissectors/packet-smb2.c,8236,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&A_1[1], sti->nonce, 15 - 4);",e8fc2c5a5a2335f06f12708f016262939879686525b01eb5ec1498d0810bd271
wireshark-2.2.17/epan/dissectors/packet-smb2.c,8637,8,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"							memcpy(policy_hnd_hashtablekey, &ssi->policy_hnd, sizeof(e_ctx_hnd));",4e8d8b49384917c0d5532d9d980b583417e9457b7254f8bb81e338d419db62c2
wireshark-2.2.17/epan/dissectors/packet-smrse.c,157,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char *strp,tmpstr[21];",4d51df34cf88f998d11eb2c2c87ae799494e889400210cb225e53d70346da604
wireshark-2.2.17/epan/dissectors/packet-smrse.c,163,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	static char n2a[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };",818637bbcab06e83147d54c4abe52b27bfc62cfaea0163e3b107477bcefd6171
wireshark-2.2.17/epan/dissectors/packet-sna.c,853,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&sna_fid_type_4_addr, addr->data, SNA_FID_TYPE_4_ADDR_LEN);",dd175080373c917eff44a716e3392c7f952c2696516709a9e3350e28dce809fa
wireshark-2.2.17/epan/dissectors/packet-snmp.c,630,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label[ITEM_LABEL_LENGTH];,e13879a30490abb6bc65df00b906e235d47e93ff8d1f9ae606071684dff9b26d
wireshark-2.2.17/epan/dissectors/packet-socks.c,429,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char ipaddr[4];,72d4f1e9c7995348ec4ca0d49ee8dd7f735bbc92194ff4377128769c2e4da78e
wireshark-2.2.17/epan/dissectors/packet-soupbintcp.c,243,20,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        next_seq = atoi(tmp_buf);,ba86c2eb22fa610ce5060293be1b7e9346ee8b544031fb2524a840029f712ece
wireshark-2.2.17/epan/dissectors/packet-soupbintcp.c,340,59,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                                               ""X"", ""%d"", atoi(tmp_buf));",4175419eed309899f93ee7c9e30bb0e84ac7aff065eae80552c234d1e5b4df74
wireshark-2.2.17/epan/dissectors/packet-soupbintcp.c,385,59,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                                               ""X"", ""%d"", atoi(tmp_buf));",4175419eed309899f93ee7c9e30bb0e84ac7aff065eae80552c234d1e5b4df74
wireshark-2.2.17/epan/dissectors/packet-spdy.c,640,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(data+offset, df->data, df->length);",32d6ca7ec511635c2e73385e009af80405ce04f7f5ca219d3419189973c5dadc
wireshark-2.2.17/epan/dissectors/packet-spnego.c,799,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(L40 + 10, T, sizeof(T));",98425899cd1db7304b73ffa6096cf3e687fa540c664f48eb4f09880f57ced0fc
wireshark-2.2.17/epan/dissectors/packet-spnego.c,873,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(sgn_cksum, cksum, 8);",a80bca5d9f6044291958b220f9ca284aedf2b02770a0b83fd1d7877447d9039d
wireshark-2.2.17/epan/dissectors/packet-spnego.c,978,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(output_message_buffer, input_message_buffer, datalen);",e4f278915ef24fdaf3142a0925842a19d1a14c6f0e19062aa4fff6b80584f502
wireshark-2.2.17/epan/dissectors/packet-spnego.c,982,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(output_message_buffer,",7bad9ec93eccc4649650a2194c177cc23d1dde261e80b652f4bfb4d13310fd12
wireshark-2.2.17/epan/dissectors/packet-spnego.c,1061,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(cryptocopy, original_data, length);",631074dcc68dfc0eed9e30cc91068a82784a2adb1222424713ab3a30707f82ec
wireshark-2.2.17/epan/dissectors/packet-spnego.c,1108,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(tmp, data, rrc);",0d8f49c541b932508aae8af04744563b632196c1d0f291d32923af212e5fd98d
wireshark-2.2.17/epan/dissectors/packet-spnego.c,1110,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(data + left, tmp, rrc);",7a38317233ea69bb4aafa81622336946ea12b1e0f39fca4b3e166f922abb9284
wireshark-2.2.17/epan/dissectors/packet-spnego.c,1112,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(tmp, data + left, rrc);",3efbe69978dbe67a2c9c04c8c51ba4d488e515bf1048d8a7eaacc9db8120d2ef
wireshark-2.2.17/epan/dissectors/packet-spnego.c,1114,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(data, tmp, rrc);",d7e6478aad14f882fb09916d0353ba2666f6d932be107f5d573910f5824111ff
wireshark-2.2.17/epan/dissectors/packet-ssh.c,1008,55,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"    if ((size_str=g_strrstr(mac_name, ""-"")) && ((size=atoi(size_str+1)))) {",0a0285e661c45d3512358221bbfc4dbab6278317bdff36d43faf4e1b3c6b6a09
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,1600,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(str->data, data, len);",7637f8b00a57955fbf542c8c549b7ff8709095872723948d41a6312c6c9c13d2
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,1633,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(dst->data, src->data, src->data_len);",96f31ab2945cf3b64af0136b3c1a34b4de103f721094004c637dbc952024ac73
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,1698,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(data, gcry_md_read(*(md), algo), len);",9e2ce258842b39a8832a3309c94aec7a2f9eeebc5e80bb04c2b920f53a398c50
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,1736,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(data, gcry_md_read(*(md),  algo), len);",395b396774c9d2e4ebfd743512813b4ba78a6cf79595d856816cfc2cec6a3691
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,1762,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, gcry_md_read(*(md),  GCRY_MD_SHA1),",bc65d7ba7c2a01dac071e08c9e294e7fd621f2df5595bb94de7d664a9bfa82f0
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,1784,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, gcry_md_read(*(md),  GCRY_MD_MD5),",0b119dc3a419d726dded1e5d483968c148cbc961f09c945f119a9253b89139f3
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,1858,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(out, in, outl < inl ? outl : inl);",1109ea7bc09aa1fb18bea297fa866ee93af698c040c497f1b0522c68ee0dc327
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2349,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ptr, tmp, tocpy);",0beb873b557caff4dda27482a77daaaf9395da95e40c7ea5e631efdc2e3f994b
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2387,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ptr,usage,usage_len);",9d8132ffb2c2f1d5dc5f5d9b8ccbe2e019e88a9a1774dccf26d79746f19745d0
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2389,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ptr,rnd1->data,rnd1->data_len);",4b393b6d1201487900dc48b3642a9ff66fd5f0fbe2b7c9864b4fb7acb53e178f
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2392,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ptr,rnd2->data,rnd2->data_len);",262140400d29152cfbe4f37049576faafb014dee1be93ad73e04b494090738ce
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2407,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(s1.data,secret->data,s_l);",a5eb4602a1d61b48a2adf75b1bb7a15fedd9831c9afd23b053e70073c2150742
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2408,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(s2.data,secret->data + (secret->data_len - s_l),s_l);",35b46bc9d6be70da0c1932bfc59277c52225e2ae294b2f6ef60d28d2076fb24e
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2447,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(label_seed.data, usage, usage_len);",21f2a9264c344baabdc7c5d454724a353795abd985ecebaf6c118792a03e74ca
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2448,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(label_seed.data+usage_len, rnd1->data, rnd1->data_len);",952d63979df25469cc17104eb86afb836003a392cdf9464ba66d7308308a7a02
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2450,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(label_seed.data+usage_len+rnd1->data_len, rnd2->data, rnd2->data_len);",55db487ab1eeb8dd0926a4c3dbeb537d0d94bff3e1b37c139237eb5452d65245
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2523,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(out->data + off, outbuf, MIN(out_len - off, 16));",cca9a580f66bc9f28e4cdd7c44f34b7d7e361cf462837a8814157769fe4fc9ed
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2591,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(out->data, tmp, len);",cb75677e7a13c21ad8cd32798ade307c8e5adf75c32a8f214ee6b991cbd34c48
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2892,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&pre_master_secret.data[psk_len + 4], ssl_session->psk.data, psk_len);",1dd6310a97ef9c981f6feab4a6506f4c451e245c6f2d5e2b69453ffc29d79988
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,3148,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(_iv_c,iv_block.data,cipher_suite->block);",fd14d595830b0501c8a442c8bce30cdd512c3635e21a2edea388111deded8edc
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,3149,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(_iv_s,iv_block.data+cipher_suite->block,",53d15c63d693cb275cc3a813ac0a3cee0bf34795dbb7e208746d7129d311f74c
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,3316,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf+4,&netnum,4);",ef461fbace5b21af21e5215c711fb466ea677c896beb352129c411f10ba6167f
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,3352,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, &temp, 2);",d81ce38f494eb923f16e86c1d3f8dd7d3cc781c04574da0a6f16ad446591383b
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,3357,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, &temp, 2);",d81ce38f494eb923f16e86c1d3f8dd7d3cc781c04574da0a6f16ad446591383b
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,3409,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, &temp, 2);",d81ce38f494eb923f16e86c1d3f8dd7d3cc781c04574da0a6f16ad446591383b
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,3466,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, &temp, 2);",d81ce38f494eb923f16e86c1d3f8dd7d3cc781c04574da0a6f16ad446591383b
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,3470,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(buf, &temp, 2);",d81ce38f494eb923f16e86c1d3f8dd7d3cc781c04574da0a6f16ad446591383b
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,3555,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(gcm_nonce, decoder->write_iv.data, decoder->write_iv.data_len); /* salt */",00f07cac28cb791547b7b63fb67f5fda4cae61a6c7ef7fa3eb76254504455244
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,3556,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(gcm_nonce + decoder->write_iv.data_len, in, SSL_EX_NONCE_LEN_GCM);",f2c9964284c83412803661424016d4e1361e461a0cafdffe6cd010e0b9541ea4
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,3567,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(gcm_nonce + 1, decoder->write_iv.data, decoder->write_iv.data_len); /* salt */",c1d69626717c13ce37de6324089a99e3f33c8f00ac111bb9d5064716432faef6
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,3568,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(gcm_nonce + 1 + decoder->write_iv.data_len, in, SSL_EX_NONCE_LEN_GCM);",12e98237e3b221c80ba0df2f1b51d9a3f2be7fd92b75ba56e1e91ac511e977dc
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4335,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(real_data, data, data_len);",1ee19fe8ff9f8550278e8dea2969b572a42ab3e82283a89acd4cf10a31d5134a
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4382,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(rec->plain_data.data, data, data_len);",525c55f74b022c20420c29b6da0c7eefba9e7789beb5cf1cb299986d7e25a189
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4515,20,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"        int port = atoi(uats->port); /* Also maps ""start_tls"" -> 0 (wildcard) */",d481dac73569b4e93ee64bb6f174ebb1ca3bb6eed304b1cf000789e2feed610b
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4798,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"        char buf[512], *line;",cf470666ecba157ede5815d8da77bd331047b9dc25b1957146d3d276c6bc8e9e
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4989,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        const gint i = atoi(p);,a353adb5474eb048f91e9da91963c4cf44fea1e535798b18a26d9bd120e9b550
wireshark-2.2.17/epan/dissectors/packet-ssl.c,422,66,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"                wmem_stack_push(key_list_stack, GUINT_TO_POINTER(atoi(ssl_uat->port)));",d244915529b482a1342fa97699f27393d0140b646fb2ea528dd8e38582b3a788
wireshark-2.2.17/epan/dissectors/packet-synergy.c,146,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char buffer[20];,08eab8bb307ddf658e7f3a87cc52aeeaee9fb5cf755ad4008df5fdad05bad880
wireshark-2.2.17/epan/dissectors/packet-synphasor.c,161,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	      name[CHNAM_LEN + 1];,aa83665eb006d2fcf32a089b1a2f46f0c2eb54d688940a37d6940cc389ef3c2d
wireshark-2.2.17/epan/dissectors/packet-synphasor.c,168,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	name[CHNAM_LEN + 1];,bd8022a6f4e1c017c84b180dfb6b00af1efc479d5028f75ad2d535f1094be8ec
wireshark-2.2.17/epan/dissectors/packet-synphasor.c,175,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		   name[CHNAM_LEN + 1];	/* holds STN			  */,3d871ae52b0594aa04f0ca756e5636f3a6511d9de98844e6d4d94ec94de5e80b
wireshark-2.2.17/epan/dissectors/packet-t38.c,1071,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&(p_t38_packet_conv->src_t38_info), &(p_t38_conv->src_t38_info), sizeof(t38_conv_info));",aaa33a37baf1984e1c3d7efaab9358a6eac8a97767b6b5741b81be535109be4d
wireshark-2.2.17/epan/dissectors/packet-t38.c,1072,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&(p_t38_packet_conv->dst_t38_info), &(p_t38_conv->dst_t38_info), sizeof(t38_conv_info));",f67a4666ee3daa117f7c7723afda7682e3ca8e6b4c143cb4de092e63a70d9737
wireshark-2.2.17/epan/dissectors/packet-tacacs.c,1302,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(mdp, session_id, 4);",882c94c37d52991fb7b90c42fd097a45166a7ab6356016493754fe5ab8143992
wireshark-2.2.17/epan/dissectors/packet-tacacs.c,1304,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(mdp, key, strlen(key));",35295c06a91fe8861190f000057666cdba1f708e0496bb43f2c31d15e1e6f795
wireshark-2.2.17/epan/dissectors/packet-tacacs.c,1323,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(mdp, hash, MD5_LEN);",bda73d9d4476572b18b8b7dce335efe3973fbd21d635ab7163dec844ad2e5c8e
wireshark-2.2.17/epan/dissectors/packet-tali.c,99,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char opcode[TALI_OPCODE_LENGTH+1]; /* TALI opcode */,43738e22820e3ba578762bea1f605610916dc547fd7978e894d343552297d2af
wireshark-2.2.17/epan/dissectors/packet-tali.c,154,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char opcode[TALI_OPCODE_LENGTH]; /* TALI opcode */,b2d31c85a9e83b34e46a570d1a63a818fa5b61c3549d5c3fc5e01df1552546fb
wireshark-2.2.17/epan/dissectors/packet-telnet.c,228,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char str_model[2];,19f3bda1dba40a1249145b29da746ef8c5a39de7632b79f72bd6b440407e5472
wireshark-2.2.17/epan/dissectors/packet-telnet.c,238,13,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    model = atoi(str_model);,91ffb480f3af97eebba6ff97580461a7e6821cb36268eb740661a6568019810b
wireshark-2.2.17/epan/dissectors/packet-telnet.c,790,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char ls_buffer[512];,0b3e5da989dcb21f6766a91b141ee153187e9df34a2b6d9cf6f3729c92168048
wireshark-2.2.17/epan/dissectors/packet-telnet.c,822,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char ms_buffer[256];,4dcdd5eee80bdedb99be22a249408202a01a43dee27a900b3c33d590265b6aaf
wireshark-2.2.17/epan/dissectors/packet-tpncp.c,597,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(hf + (hf_size - 1), hf_tpncp + idx, sizeof(hf_register_info));",55fc38481c5ee8e60a2a841d8c5866db488e6fa81c9fef50de5699fa3f4c4d51
wireshark-2.2.17/epan/dissectors/packet-tpncp.c,620,19,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        data_id = atoi(tmp);,b20232ffea9b5d96d35dc217a1093e7d6316e9298bd5638da48e1dabdea707f9
wireshark-2.2.17/epan/dissectors/packet-tpncp.c,625,33,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        tpncp_data_field_sign = atoi(tmp);,df4ba746231832af3d314325a7812e493a995c89380116de767b8503efe2cda0
wireshark-2.2.17/epan/dissectors/packet-tpncp.c,628,33,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        tpncp_data_field_size = atoi(tmp);,1cad422c6b8024756241169a96305a0b9afdfd34c41e680e86ac23957094dad3
wireshark-2.2.17/epan/dissectors/packet-tpncp.c,631,38,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        tpncp_data_field_array_dim = atoi(tmp);,f1f7d9d934e62fa26a3544008d42d8a8d23c85a1fcd50baa75b6981ab8035aba
wireshark-2.2.17/epan/dissectors/packet-tpncp.c,634,39,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        tpncp_data_field_is_ip_addr = atoi(tmp);,b996048ad97e851b0a08369b97cf96823d8c12fcd5c2fbae90f2adba1b2a3210
wireshark-2.2.17/epan/dissectors/packet-tpncp.c,698,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(hf + hf_size - 1, &hf_entr, sizeof(hf_register_info));",07053db053a821fb36af4290efd76e44dc9025c5bd91a9e76e2033e51780a3dd
wireshark-2.2.17/epan/dissectors/packet-tr.c,427,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(trn_shost_nonsr, trh->src.data, 6);",74975c426b7d46fd74445fefe43876d69f8e418d5c64c09eaaae0951fee6ebe0
wireshark-2.2.17/epan/dissectors/packet-ucp.c,833,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char         strval[UCP_BUFSIZ + 1],",eaeb4dea930544e4b7b25f207750403d7fcef0173a1d7a7db97471e7cda256ea
wireshark-2.2.17/epan/dissectors/packet-ucp.c,907,18,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        intval = atoi(strval);,cc3c6d0b09f969d5b2a1206755ecefac864761cef1550f6c0d4d1f1a7b530e1e
wireshark-2.2.17/epan/dissectors/packet-umts_mac.c,648,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(sdu->data+total_length-frag->length-sdu->length, frag->data, frag->length);",f0cf17ae9a0d3677ae0a01e8ed4ba602ab9d62881884b31894f85651e19242f7
wireshark-2.2.17/epan/dissectors/packet-umts_mac.c,650,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(sdu->data+sdu->length, frag->data, frag->length);",83b43a26d16d7b3dfbba0039003fefbe56510e67f9c528e566b44862b5bd9f40
wireshark-2.2.17/epan/dissectors/packet-usb-hid.c,754,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&cur_global, global, sizeof(struct usb_hid_global_state));",85232206d3b2e72017a05e949e417352ebdf4e877e6012f44fad5b3d8e995892
wireshark-2.2.17/epan/dissectors/packet-usb-video.c,1174,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char fourcc[5];,cf9bef4976dff2f93b74c7a676bcd5b50282d7f7d31a53d84980a60cdb29f696
wireshark-2.2.17/epan/dissectors/packet-vlan.c,135,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char id_str[16];,16854ebc845fca92855a61b8fad5b8e323112690a7b61dca06da1ea5a4a07bd3
wireshark-2.2.17/epan/dissectors/packet-wbxml.c,6987,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char indent_buffer[514] = "" """,a132b6d3ba83ee61c38f17dcd3d22141b57b94840541c1b2633f43a666a02fb7
wireshark-2.2.17/epan/dissectors/packet-wcp.c,661,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy( &pdata_ptr->buffer, buf_ptr->buf_cur, len);",7e02062623d9006d1791638a318e90064a3b1052c081f956ad675649a61638f0
wireshark-2.2.17/epan/dissectors/packet-winsrepl.c,384,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char  name_str[(NETBIOS_NAME_LEN - 1)*4 + 1];,17666e57b63df392166ae37302c35fa9fee49f05162bf4d1ff6bab6e8bb74585
wireshark-2.2.17/epan/dissectors/packet-wtls.c,481,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char valStr[1024];,1cddb16498d400ac0fc190b331bc3897612bb0be9a2d4b38732df727c47bf521
wireshark-2.2.17/epan/dissectors/packet-x11.c,1726,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *,d9ec37f374002ad2a9626627effec871ff5cb9befd95e89037f58ae323f39287
wireshark-2.2.17/epan/dissectors/packet-xcsl.c,241,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                    result = atoi(str);,bbcdc0bb61f18db47f48a97058472915c8e19479d791eee5b0226ca56d999b47
wireshark-2.2.17/epan/dissectors/packet-xmcp.c,603,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char buf[GUID_STR_LEN];,78ac5e0209d9988a0b34d5fb97976faa3d8c746407cc69a42f1e338240c696a9
wireshark-2.2.17/epan/dissectors/packet-yhoo.c,108,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char          version[8];       /* 7 chars and trailing null */,15cae485ce18407f67a1bcd71a83063e581a31fb005abee8046b3814bff77849
wireshark-2.2.17/epan/dissectors/packet-yhoo.c,109,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char len[4];           /* length - little endian */,e920b0fb76a1b1b6ce4e8debc9476b686c209d47d29d0322c37938e26346dcff
wireshark-2.2.17/epan/dissectors/packet-yhoo.c,110,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char service[4];       /* service - little endian */,0bb22f4e8c1a0ef27295a8321c6a66553bb54fdb4e1b741b6f90543d6c0b6d77
wireshark-2.2.17/epan/dissectors/packet-yhoo.c,111,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char connection_id[4]; /* connection number - little endian */,8e77d35ad6ab91b3bdce0566b8f44577c16dbfedc31bb2c4bfaa01f97cd75d5a
wireshark-2.2.17/epan/dissectors/packet-yhoo.c,112,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char magic_id[4];      /* magic number used for http session */,a210b701fdbc1f7a44e4c70e5f40295a5f73e1459b31dac42ae2b41dbed10c05
wireshark-2.2.17/epan/dissectors/packet-yhoo.c,113,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char unknown1[4];,7bf50a720d842ba56c90da46258740debf1d9f975ec43628a54b9d41799104ed
wireshark-2.2.17/epan/dissectors/packet-yhoo.c,114,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char msgtype[4];,90dc04fc51f2aedb105afa662efc97b735006d3a3346931cdc7b916594d05759
wireshark-2.2.17/epan/dissectors/packet-yhoo.c,115,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char          nick1[36];,fdaacd1ad04ee3bc929d9bf591a8790fb9327c1bf97134f9184935d9db55606f
wireshark-2.2.17/epan/dissectors/packet-yhoo.c,116,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char          nick2[36];,b56bb64ca6263d61274a9671c8d1930b70769ea0203758d700e4171c5534ede9
wireshark-2.2.17/epan/dissectors/packet-yhoo.c,117,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char          content[1];       /* was zero, had problems with aix xlc */",08d9285bc18599454b0ddaf239e4f3630fae3efc0fbd68a065f57ab7a31dbd14
wireshark-2.2.17/epan/dissectors/packet-ymsg.c,214,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char ymsg[4];			/* Packet identification string (YMSG) */,e33d5ebda73502845c3eb5b14611d93a78b6aaac134c0cb14ea89f6460e10d17
wireshark-2.2.17/epan/dissectors/packet-ymsg.c,215,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	unsigned char version[2];	/* 2 bytes, little endian */",b4cfcc8fc6e0e992dc9565ca4e65e35c6159b2bfce84092baa582a26fd31f8d1
wireshark-2.2.17/epan/dissectors/packet-ymsg.c,216,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	unsigned char vendor[2];	/* 2 bytes, little endian */",1d80fc3d1dcb93c64093149d98d1f2fcc5a6c2121668242071b79a381164e092
wireshark-2.2.17/epan/dissectors/packet-ymsg.c,217,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char len[2];		/* length - little endian */,da50225072fc1f2d178148489d36726c6bef8b32a6083fe4fc89b1af88d9ac90
wireshark-2.2.17/epan/dissectors/packet-ymsg.c,218,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char service[2];	/* service - little endian */,30f605f7acc74b44a357eccd451e32b767429f4d352b5c3615c0ce9299ec9a27
wireshark-2.2.17/epan/dissectors/packet-ymsg.c,219,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	unsigned char status[4];	/* Status - online, away etc.*/",971e939d1eec057a14ddb00e6840636413182ff95302783038db144315b12c89
wireshark-2.2.17/epan/dissectors/packet-ymsg.c,220,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char session_id[4];	/* Session ID */,6da5b536c737dbdb4305ebdaa567c4f35ecf194102753be5d657330f8f97d060
wireshark-2.2.17/epan/dissectors/packet-ymsg.c,221,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char content[6];		/* 6 is the minimum size of the content */,31322d801a6fc1189f7a81c980af8eb60586210815de34990b85ee369648ae39
wireshark-2.2.17/epan/dissectors/packet-zbee-aps.c,1334,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&key_record.key, &key, ZBEE_APS_CMD_KEY_LENGTH);",e316a1a6539c48f3668c485f859518d545906f7eff7d8c6a9cb5558274d5d88a
wireshark-2.2.17/epan/dissectors/packet-zbee-nwk-gp.c,1381,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(key_record.key, gp_uat_key_records[i].key, ZBEE_SEC_CONST_KEYSIZE);",2be3956e141b07d2cd9964793bdc2e7ad723f74f08397c5550fb297f2b14eb53
wireshark-2.2.17/epan/dissectors/packet-zbee-security.c,208,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&key_record.key, key, ZBEE_SEC_CONST_KEYSIZE);",383c23b48f12583087c070a9658522161f064267e3cf8a088b854a0b821abfcc
wireshark-2.2.17/epan/dissectors/packet-zbee-security.c,929,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(cipher_in + 1, nonce, ZBEE_SEC_CONST_NONCE_LEN);",9c59b93d0c4c2c1de151d2cf4094247532ab6905e9aaf9b8eb7d54e1b775cad4
wireshark-2.2.17/epan/dissectors/packet-zbee-security.c,956,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(decrypted_mic, c + l_m, M);",e75ec88de619dfcae0b5b259a7543d4023c37b9f2d04163a6275c1513e915e9c
wireshark-2.2.17/epan/dissectors/packet-zbee-security.c,1003,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(cipher_in+sizeof(gchar), nonce, ZBEE_SEC_CONST_NONCE_LEN);",0db90656e815e8b5f113fbf163ca5ddaab30b3b59b4f30053ce04e8224e5a315
wireshark-2.2.17/epan/dissectors/packet-zrtp.c,323,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char  message_type[9];,7a84c81e628f8545af66b4193f3791309c8ac4431790505c6cc9cc3aa89d958e
wireshark-2.2.17/epan/dissectors/packet-zrtp.c,561,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char value[5];,ef94c94959a6098b888f54569bc85d603f8fd84ff895b79c6c99df9cc3d1180f
wireshark-2.2.17/epan/dissectors/packet-zrtp.c,637,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char  value[5];,a71b0f70c06e09697a5faedc2b7cc491768d9f89a0512e5537402878a4ad74c1
wireshark-2.2.17/epan/dissectors/packet-zrtp.c,638,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char  version_str[5];,a3ef1e9d68d49d1283e3e91b25c682d1c9c23bda2e248be5787494873ec2962a
wireshark-2.2.17/epan/dtd_parse.c,2731,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(buff, state->input_string->str + state->offsetx, size);",42fa16f89107bfa5095ad8962cb431be8e44207823f908fd270b1dbbe38db0b7
wireshark-2.2.17/epan/dtd_parse.c,2736,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(buff, state->input_string->str + state->offsetx, size);",42fa16f89107bfa5095ad8962cb431be8e44207823f908fd270b1dbbe38db0b7
wireshark-2.2.17/epan/except.c,389,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[256];,86753089edd8e96675f0102bc52bd39c8f2c94e4f63e4a6e6052dfa82d40f6a3
wireshark-2.2.17/epan/expert.c,514,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char           formatted[ITEM_LABEL_LENGTH];,96f07a1527f08e9e219059f357c009f61859fb4f94120d1971d5ecb728604548
wireshark-2.2.17/epan/exported_pdu.c,58,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(tlv_buffer+4, pinfo->net_src.data, EXP_PDU_TAG_IPV4_LEN);",94e10d9cb8ea63289c5df3753bb4f803c71bda7a4d050c47c58360b28eb942c1
wireshark-2.2.17/epan/exported_pdu.c,65,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(tlv_buffer+4, pinfo->net_src.data, EXP_PDU_TAG_IPV6_LEN);",931274f97209c27edd8ea1de48aac1fc68eed17858e93ebccaf7c8f521fcf39b
wireshark-2.2.17/epan/exported_pdu.c,84,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(tlv_buffer+4, pinfo->net_dst.data, EXP_PDU_TAG_IPV4_LEN);",e13befabd09ab164b7d9c4ce300ed2584a34b73a90afe0f5b2ab38924dac7b24
wireshark-2.2.17/epan/exported_pdu.c,91,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(tlv_buffer+4, pinfo->net_dst.data, EXP_PDU_TAG_IPV6_LEN);",bdb41cb1b5856202cb31bdb7abe015cf656fb7062b0411b604be1df33f4c8ebe
wireshark-2.2.17/epan/exported_pdu.c,235,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buffer_data+4, proto_name, proto_str_len);",89a5c97d7711ef7189454269f34d52d5d3aa1d4827b01c8bca75a7f533225f8b
wireshark-2.2.17/epan/ftypes/ftype-guid.c,47,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char digits[9];,db8a0c4b6788908f78acfa60088426bc432b25bb3a39df21845c9af117dcda55
wireshark-2.2.17/epan/ftypes/ftype-ieee-11073-float.c,270,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(buf + offset, mantissa_str, mantissa_digits);",8391b2249149f8f2775ef63268357de570b1138a43b284a65e8342bc52074330
wireshark-2.2.17/epan/ftypes/ftype-ieee-11073-float.c,273,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(buf + offset, mantissa_str, mantissa_digits);",8391b2249149f8f2775ef63268357de570b1138a43b284a65e8342bc52074330
wireshark-2.2.17/epan/ftypes/ftype-ieee-11073-float.c,280,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(buf + offset, mantissa_str, mantissa_digits + exponent);",f320fffce9c610e21f896e24ab1d2ecbc82f99870c1251e20acc85b1465124bf
wireshark-2.2.17/epan/ftypes/ftype-ieee-11073-float.c,286,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(buf + offset, mantissa_str + mantissa_digits + exponent, -exponent);",11e29c8ba133b5bf5eee0a193c6c8730e37b0a67f1c36cc87c8d8356edcfe51d
wireshark-2.2.17/epan/ftypes/ftype-ieee-11073-float.c,300,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(buf + offset, mantissa_str, mantissa_digits);",8391b2249149f8f2775ef63268357de570b1138a43b284a65e8342bc52074330
wireshark-2.2.17/epan/ftypes/ftype-ieee-11073-float.c,964,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(buf + offset, mantissa_str, mantissa_digits);",8391b2249149f8f2775ef63268357de570b1138a43b284a65e8342bc52074330
wireshark-2.2.17/epan/ftypes/ftype-ieee-11073-float.c,967,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(buf + offset, mantissa_str, mantissa_digits);",8391b2249149f8f2775ef63268357de570b1138a43b284a65e8342bc52074330
wireshark-2.2.17/epan/ftypes/ftype-ieee-11073-float.c,974,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(buf + offset, mantissa_str, mantissa_digits + exponent);",f320fffce9c610e21f896e24ab1d2ecbc82f99870c1251e20acc85b1465124bf
wireshark-2.2.17/epan/ftypes/ftype-ieee-11073-float.c,980,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(buf + offset, mantissa_str + mantissa_digits + exponent, -exponent);",11e29c8ba133b5bf5eee0a193c6c8730e37b0a67f1c36cc87c8d8356edcfe51d
wireshark-2.2.17/epan/ftypes/ftype-ieee-11073-float.c,994,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(buf + offset, mantissa_str, mantissa_digits);",8391b2249149f8f2775ef63268357de570b1138a43b284a65e8342bc52074330
wireshark-2.2.17/epan/ftypes/ftype-integer.c,752,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(eui64.bytes, bytes->data, 8);",75ab3f4c7d6292a93341572b8401e0caa5bbd1ca3f6917f2e47539a3e4b12d5e
wireshark-2.2.17/epan/ftypes/ftype-ipv6.c,33,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(fv->value.ipv6.addr.bytes, value, FT_IPv6_LEN);",650857169f71830061c598de8488c23c828e2277d08bb7a0b03364c3598da376
wireshark-2.2.17/epan/ftypes/ftype-string.c,117,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(fv->value.string, fv_bytes->value.bytes->data, num_bytes);",5fd8c273845abc74a352e0d35c6ea52ddf6b72f272b09d95387ae0f444e9b9c6
wireshark-2.2.17/epan/geoip_db.c,450,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&gaddr, &addr, sizeof(addr));",41b327619731ed38343dd00eb8230d63d767a029f25fa71f85aa888cd5a7a2a9
wireshark-2.2.17/epan/ipproto.c,286,16,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        static char buf[128];,eab9b5d81ccc4f28e750e605b0e51c583e8bc6a4fd16c6b1942afdafd41c217e
wireshark-2.2.17/epan/nghttp2/nghttp2_helper.c,34,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(buf, &x, sizeof(uint16_t));",e507f808fc08bbeb3c296d32f8c46e31aa561a19938e283e60867cf5d470d5c3
wireshark-2.2.17/epan/nghttp2/nghttp2_helper.c,39,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(buf, &x, sizeof(uint32_t));",3b13bba0ae91c955215ab0502c0e5cbc1671b89a25a36d37d7777e5e09ff092a
wireshark-2.2.17/epan/nghttp2/nghttp2_helper.c,44,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&n, data, sizeof(uint16_t));",b3cc201c41a9bfb7fa5fac410a889f91983ffbf125907743ce80572ca6787470
wireshark-2.2.17/epan/nghttp2/nghttp2_helper.c,50,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&n, data, sizeof(uint32_t));",f18b7b9b1a58ea0899092bef54a45b1dc970b01c14f72392f15d02e8480a6d08
wireshark-2.2.17/epan/nghttp2/nghttp2_helper.c,450,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(dest, src, len);",8e4587614949fa66048cfb7f2c18f117f914b9833a35ebcacdf241f1a142ed67
wireshark-2.2.17/epan/nghttp2/nghttp2_rcbuf.c,61,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy((*rcbuf_ptr)->base, src, srclen);",fcb9acb84a42f6a11eef43c4dfd7ec6b3c242298df98f87d1a2498da068f377f
wireshark-2.2.17/epan/print.c,335,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char ts[30];,79c7b1b2b4977a0be2e844a6a29c9226876a55735d1a8286ea4b9f141f4a2e30
wireshark-2.2.17/epan/print.c,386,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char ts[30];,79c7b1b2b4977a0be2e844a6a29c9226876a55735d1a8286ea4b9f141f4a2e30
wireshark-2.2.17/epan/print.c,1332,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char          ascii[9];,f70ed21eba8eedb25f84e02570ae54c700e7ca5b91eda3f7ae68a83a25a095df
wireshark-2.2.17/epan/print.c,1439,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        temp_str[8];,3cebda2b402d067084bb50a92597d0946b861525c3dfacae71863bfdada6c4fa
wireshark-2.2.17/epan/print.c,1477,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        temp_str[8];,3cebda2b402d067084bb50a92597d0946b861525c3dfacae71863bfdada6c4fa
wireshark-2.2.17/epan/print_stream.c,114,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char  spaces[MAX_INDENT];,0c0fa8636fee944397b5a254504e6c21f19b25937e0f4b51b840800c205e6df5
wireshark-2.2.17/epan/print_stream.c,283,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char       psbuffer[MAX_PS_LINE_LENGTH]; /* static sized buffer! */,846baeeee2c623e1de1e83263b2b93b6531328136ad3a7bad66a79e210f2a007
wireshark-2.2.17/epan/print_stream.c,298,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char       psbuffer[MAX_PS_LINE_LENGTH]; /* static sized buffer! */,846baeeee2c623e1de1e83263b2b93b6531328136ad3a7bad66a79e210f2a007
wireshark-2.2.17/epan/print_stream.c,309,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char       psbuffer[MAX_PS_LINE_LENGTH]; /* static sized buffer! */,846baeeee2c623e1de1e83263b2b93b6531328136ad3a7bad66a79e210f2a007
wireshark-2.2.17/epan/proto.c,188,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_number_value_format_display(const header_field_info *hfinfo, int display, char buf[32], guint32 value);",c8e6ada9e598964f94205ac5acfb3339458d447e39e58037d3cbd0c08f2e50aa
wireshark-2.2.17/epan/proto.c,188,101,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_number_value_format_display(const header_field_info *hfinfo, int display, char buf[32], guint32 value);",c8e6ada9e598964f94205ac5acfb3339458d447e39e58037d3cbd0c08f2e50aa
wireshark-2.2.17/epan/proto.c,189,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_number_value_format_display64(const header_field_info *hfinfo, int display, char buf[48], guint64 value);",f2c5635b2827de38e05a26d50ff43d0f5e0626ce9147e86660e07414c5d4e19d
wireshark-2.2.17/epan/proto.c,189,103,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_number_value_format_display64(const header_field_info *hfinfo, int display, char buf[48], guint64 value);",f2c5635b2827de38e05a26d50ff43d0f5e0626ce9147e86660e07414c5d4e19d
wireshark-2.2.17/epan/proto.c,190,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_number_vals_format(const header_field_info *hfinfo, char buf[32], guint32 value);",5e6a2111eddff0d0dd9eb21df77d9c91c48d5531acf7f77f039a9d45e9b28279
wireshark-2.2.17/epan/proto.c,190,79,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_number_vals_format(const header_field_info *hfinfo, char buf[32], guint32 value);",5e6a2111eddff0d0dd9eb21df77d9c91c48d5531acf7f77f039a9d45e9b28279
wireshark-2.2.17/epan/proto.c,191,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_number_vals_format64(const header_field_info *hfinfo, char buf[48], guint64 value);",49166cfedc7e64605a7cd3407c92a8a516c1403c407eae27d80fb2d265b0c92e
wireshark-2.2.17/epan/proto.c,191,81,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_number_vals_format64(const header_field_info *hfinfo, char buf[48], guint64 value);",49166cfedc7e64605a7cd3407c92a8a516c1403c407eae27d80fb2d265b0c92e
wireshark-2.2.17/epan/proto.c,192,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_number_value_format(const header_field_info *hfinfo, char buf[32], guint32 value);",8cd7a33bf197a5445163fd5d3c392f52acff4b33bcf4e893ba3521ef7c5be1cc
wireshark-2.2.17/epan/proto.c,192,80,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_number_value_format(const header_field_info *hfinfo, char buf[32], guint32 value);",8cd7a33bf197a5445163fd5d3c392f52acff4b33bcf4e893ba3521ef7c5be1cc
wireshark-2.2.17/epan/proto.c,193,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_number_value_format64(const header_field_info *hfinfo, char buf[48], guint64 value);",a60fe1dbb9e3d2946c69b3effc7a82e379956b8cfd6813d0424f4a755ad4358f
wireshark-2.2.17/epan/proto.c,193,82,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_number_value_format64(const header_field_info *hfinfo, char buf[48], guint64 value);",a60fe1dbb9e3d2946c69b3effc7a82e379956b8cfd6813d0424f4a755ad4358f
wireshark-2.2.17/epan/proto.c,194,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_numeric_value_format(const header_field_info *hfinfo, char buf[32], guint32 value);",b4520b2698b359f5c9a394c108dbfc0370551e3a2c419c3fcae44ef13941c3f6
wireshark-2.2.17/epan/proto.c,194,81,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_numeric_value_format(const header_field_info *hfinfo, char buf[32], guint32 value);",b4520b2698b359f5c9a394c108dbfc0370551e3a2c419c3fcae44ef13941c3f6
wireshark-2.2.17/epan/proto.c,195,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_numeric_value_format64(const header_field_info *hfinfo, char buf[48], guint64 value);",de20c570c94703e8d8aab355677a5ba071a39f1d787a1b385bdb176b24dc319b
wireshark-2.2.17/epan/proto.c,195,83,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char *hfinfo_numeric_value_format64(const header_field_info *hfinfo, char buf[48], guint64 value);",de20c570c94703e8d8aab355677a5ba071a39f1d787a1b385bdb176b24dc319b
wireshark-2.2.17/epan/proto.c,985,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(pushed_tree, ptvc->pushed_tree, ptvc->pushed_tree_max - SUBTREE_ONCE_ALLOCATION_NUMBER);",6ed60b1328ea2faa328b6c6a6874c1802996ac34af90673f2473f6a46004c4d0
wireshark-2.2.17/epan/proto.c,4909,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char number_buf[48];,e956e8e38c901b373aa601513c57c8667b23e5d83dbcde6896cb102d594319c9
wireshark-2.2.17/epan/proto.c,5394,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char        representation[ITEM_LABEL_LENGTH];,fbc721d2089203cece1679339181474200a21a71a00b7dc724e4b90f73355df6
wireshark-2.2.17/epan/proto.c,7013,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(label_str + name_pos, trunc_str, trunc_len);",0ab035cfe3cc51c57cee5afa5d7fdb6798fc88b08ab1e1ea2f6f46a75fab39a7
wireshark-2.2.17/epan/proto.c,7481,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char        buf[32];,f0c53fd8ca84c225ce9c4fe9788ec5aae8ae33e3f8c41c46a9e8a7d624da5908
wireshark-2.2.17/epan/proto.c,7537,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char        buf[48];,70b17ee86fcec1175f9817833107e4655dd5677ef0841d25cbd1211e2962cbcd
wireshark-2.2.17/epan/proto.c,7591,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char               buf[32];,4d8e4d770b0e4e33f6d20c63b68b6003b0a32ae39f99e031ee40314fa9626c63
wireshark-2.2.17/epan/proto.c,7637,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char               buf[48];,2bf1428553142e5129824e81d352e9076aa69a74075a486d865dd1ea51a0ff28
wireshark-2.2.17/epan/proto.c,7766,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *,d9ec37f374002ad2a9626627effec871ff5cb9befd95e89037f58ae323f39287
wireshark-2.2.17/epan/proto.c,7767,82,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"hfinfo_number_value_format_display(const header_field_info *hfinfo, int display, char buf[32], guint32 value)",5f633302d03cd283e740cd424078c1267c0ec3a0bcc3110abf00a584a90e24d3
wireshark-2.2.17/epan/proto.c,7814,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *,d9ec37f374002ad2a9626627effec871ff5cb9befd95e89037f58ae323f39287
wireshark-2.2.17/epan/proto.c,7815,84,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"hfinfo_number_value_format_display64(const header_field_info *hfinfo, int display, char buf[48], guint64 value)",1284d15e5c87169fedf777e8d34f5f4214fb69b2256912fa01f444bb2611041b
wireshark-2.2.17/epan/proto.c,7854,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *,d9ec37f374002ad2a9626627effec871ff5cb9befd95e89037f58ae323f39287
wireshark-2.2.17/epan/proto.c,7855,61,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"hfinfo_number_value_format(const header_field_info *hfinfo, char buf[32], guint32 value)",6a5b6b1a281f5f4ff2004c3a4727591cd03219d01e007b680558497cdc2d7428
wireshark-2.2.17/epan/proto.c,7869,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *,d9ec37f374002ad2a9626627effec871ff5cb9befd95e89037f58ae323f39287
wireshark-2.2.17/epan/proto.c,7870,63,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"hfinfo_number_value_format64(const header_field_info *hfinfo, char buf[64], guint64 value)",014cf88b4fbfb375b119ca81983ce9e6cc217199a489f61ddc0c837f1d324bce
wireshark-2.2.17/epan/proto.c,7884,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *,d9ec37f374002ad2a9626627effec871ff5cb9befd95e89037f58ae323f39287
wireshark-2.2.17/epan/proto.c,7885,62,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"hfinfo_numeric_value_format(const header_field_info *hfinfo, char buf[32], guint32 value)",71b590159c2ed07c3d5ecbabf0ebd8310f42eddc155c96b077a462c6ee9e9916
wireshark-2.2.17/epan/proto.c,7919,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *,d9ec37f374002ad2a9626627effec871ff5cb9befd95e89037f58ae323f39287
wireshark-2.2.17/epan/proto.c,7920,64,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"hfinfo_numeric_value_format64(const header_field_info *hfinfo, char buf[64], guint64 value)",5f23440439277d6b9f58d43aad1ff1be1c59c7956ff33ce3ad56a19b9bc3c29d
wireshark-2.2.17/epan/proto.c,7950,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *,d9ec37f374002ad2a9626627effec871ff5cb9befd95e89037f58ae323f39287
wireshark-2.2.17/epan/proto.c,7951,60,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"hfinfo_number_vals_format(const header_field_info *hfinfo, char buf[32], guint32 value)",5cf947714f586f8108204c146ecb1f676501bd07f29a0cd7b5c8af2c48c79176
wireshark-2.2.17/epan/proto.c,7967,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *,d9ec37f374002ad2a9626627effec871ff5cb9befd95e89037f58ae323f39287
wireshark-2.2.17/epan/proto.c,7968,62,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"hfinfo_number_vals_format64(const header_field_info *hfinfo, char buf[64], guint64 value)",cc788fcaf4a9a6d1512c3a918d310e8aabdd85be036d7322eb627306b8e0f05a
wireshark-2.2.17/epan/proto.c,8546,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		   width[5];,7696856c002cc689d7d25662c7d2b8e123e9f3f576c666c3c4f81bad640d366e
wireshark-2.2.17/epan/proto.c,8755,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,				char buf[32];,917f6ed0ae72790ae84d5546f1fd6d51df65d8cc348e82b8bf2389e3a4b61c78
wireshark-2.2.17/epan/proto.c,8782,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,				char buf [48];,5470f421a519adfa0ee7cc96fcd9a5e02c05c296d19846ed99ad315a7867d7d2
wireshark-2.2.17/epan/proto.c,9035,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,				char buf[32];,917f6ed0ae72790ae84d5546f1fd6d51df65d8cc348e82b8bf2389e3a4b61c78
wireshark-2.2.17/epan/proto.c,9074,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,				char buf[32];,917f6ed0ae72790ae84d5546f1fd6d51df65d8cc348e82b8bf2389e3a4b61c78
wireshark-2.2.17/epan/proto.c,9108,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,				char buf[48];,e7a892b668f2d433a82e44536a21e1cd8e69cc5d63d4f59ab4b9dbaa9db43b5c
wireshark-2.2.17/epan/proto.c,9146,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,				char buf[48];,e7a892b668f2d433a82e44536a21e1cd8e69cc5d63d4f59ab4b9dbaa9db43b5c
wireshark-2.2.17/epan/proto.c,9486,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char     lbl_str[ITEM_LABEL_LENGTH];,21ee8514db703da9642baf5d1940d896c67f7dd59f66146682a4f45d6abc5852
wireshark-2.2.17/epan/proto.c,9615,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char        bf_str[256];,2d6e3e6251e56662759c793524dedce0e757eb7ba5b66cac23640edbf484b3ee
wireshark-2.2.17/epan/proto.c,9616,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char        lbl_str[ITEM_LABEL_LENGTH];,a014244f666d5057c4ffeaa1e651d6e16be3954dc3a7fcc054f664e863396d63
wireshark-2.2.17/epan/proto.h,617,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char representation[ITEM_LABEL_LENGTH];,817c6786f7b5c2f745d25cf0877830d85ef426274f146562d202813b9b0b1ba5
wireshark-2.2.17/epan/range.c,359,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"   memcpy(dst, src, range_size);",9e6216b337f3ee6a8b51fa7add9305d70e6cd69ab2480e067b01c4998921ab96
wireshark-2.2.17/epan/reassemble.c,1172,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"						memcpy(data+dfpos,",d1c65272d41210e81b489b8152ef6e76389a41ce6329d2c7fd967debb3c2956f
wireshark-2.2.17/epan/reassemble.c,1526,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(data+dfpos, tvb_get_ptr(fd_i->tvb_data, 0, fd_i->len), fd_i->len);",89892df2ed00072aaa97906305422f6d87392572f92542da6af3eb4251be0994
wireshark-2.2.17/epan/reedsolomon.c,199,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static unsigned char taltab[NN+1],tal1tab[NN+1];",c5880d97879a929967d23c9c79699bebf383006eb61d19241dc4ea657900ccea
wireshark-2.2.17/epan/stat_tap_ui.c,208,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(stat_table->elements[table_index], fields, num_fields*sizeof(stat_tap_table_item_type));",7dff3af6cb8f13ede0b304390b372c440a6e0a62058f31bf932b1e2974a1f443
wireshark-2.2.17/epan/stats_tree.c,1164,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char fmt[16];,0e8f5b84e7ef650d1eb1b921dc574611506231ce857122546d49e854363eba6d
wireshark-2.2.17/epan/stats_tree.c,1246,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char fmt[16] = ""%s%s%s"";",5109049f19831b7cde3cb1d5995e0581621d2ddeea7da48840f06ea0dac21c39
wireshark-2.2.17/epan/strutil.c,39,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static const char hex[16] = { '0', '1', '2', '3', '4', '5', '6', '7',",b591a186fa56e9a4b30162c6cedd3acfaac227c471752e2ae0215780ea836236
wireshark-2.2.17/epan/strutil.c,434,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        four_digits_first_half[3];,c1ebef31215bd2ccc4a8b058a6fc9543c9a1a9b0b5f215d72533bb5a803babc9
wireshark-2.2.17/epan/strutil.c,435,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        four_digits_second_half[3];,1bc425418a82ac20bb79b1d5a3f366933b53ba6728185fd771ff839a2ecb2cf1
wireshark-2.2.17/epan/strutil.c,436,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        two_digits[3];,0d171057f05903ef666226e518ae8b4be7f5bf4f516f63919eb327e1604c2736
wireshark-2.2.17/epan/strutil.c,437,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        one_digit[2];,256e3d06554597cd934d2f4e410fb1e8ae7a2d504a1ac4008db14545865474f9
wireshark-2.2.17/epan/strutil.c,1116,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char hexbuf[3];,e682c3f7deadc7eac0d3c8a488c96fb0f73c93d42ec417d639ebc1891e676590
wireshark-2.2.17/epan/to_str.c,363,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char mon_names[12][4] = {,4e22353654fc61460d5ff1c87683182c80c43dc13bc10f4eaa7887cc47e89d42
wireshark-2.2.17/epan/to_str.c,399,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	static char *ws_tzname[2] = {NULL, NULL};",00e6d77d081f6727c40100188372f3665bf15bf62b8f3d1ea4a8acb4670c7419
wireshark-2.2.17/epan/to_str.c,673,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buf, num_ptr, num_len);",7d37dc0dc6bbf9179668b9aa5b155ac55907fa9f8d6bd2a5f54ad09c2536346b
wireshark-2.2.17/epan/to_str.c,710,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(buf, num_ptr, num_len);",7d37dc0dc6bbf9179668b9aa5b155ac55907fa9f8d6bd2a5f54ad09c2536346b
wireshark-2.2.17/epan/tvbtest.c,412,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(comp[1], small[0], small_length[0]);",9be67ad740c60e48bea3e2bed69ac7c79d72b45706448b7894c1b6a2fe4d3de3
wireshark-2.2.17/epan/tvbtest.c,413,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[1][small_length[0]], small[1], small_length[1]);",e6db1c42b1b6bb9c7492f124f3fc7dc8ffebd80480c2ebfb2bf8808f33a80a5b
wireshark-2.2.17/epan/tvbtest.c,433,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(comp[3], subset[4], subset_length[4]);",bfde49206a5a5aaba31bbdef91e2f32c78e7fbee88f3e46a34793a45aa3e599d
wireshark-2.2.17/epan/tvbtest.c,434,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[3][subset_length[4]], subset[5], subset_length[5]);",518b616e4e983bd8bd65b5ffab8fe3fe2fedac332f60efad96f271297f8e4e75
wireshark-2.2.17/epan/tvbtest.c,445,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[4][0], small[0], small_length[0]);",1d600c142994bf1d2682500952ef486dfd97fb35e7d5e6acd3588246b8b5e138
wireshark-2.2.17/epan/tvbtest.c,446,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[4][small_length[0]], subset[1], subset_length[1]);",8842de88729cb0a497b14a252db9049c76c75aaa55a1b359a25e0bf65d559595
wireshark-2.2.17/epan/tvbtest.c,465,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[5][len], comp[0], comp_length[0]);",045b4f8de959c034d6ec2499df640fc512a7e1c76531b00038528573c2575c03
wireshark-2.2.17/epan/tvbtest.c,467,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[5][len], comp[1], comp_length[1]);",a29e14fbe75081e6c6d1d47493088558d55b9c84f122e22085906bcf88d297d5
wireshark-2.2.17/epan/tvbtest.c,469,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[5][len], comp[2], comp_length[2]);",3c05a6d95754460e1552f68f677201df6d6d119f73457b699e6776022a912511
wireshark-2.2.17/epan/tvbtest.c,471,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&comp[5][len], comp[3], comp_length[3]);",cfb2d9a93a48fffa102f21f71165228dd79107ab9a01d05232cb4407e3037071
wireshark-2.2.17/epan/tvbuff.c,790,10,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		return memcpy(target, tvb->real_data + abs_offset, abs_length);",a08157f39c42d04419b947762d62b0e26e523e36274a834fb59951ec20838774
wireshark-2.2.17/epan/tvbuff.c,1668,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&addr, ptr, sizeof addr);",e681442082b96f1db81191236d231de2aad56e847bf4efe6283babfc362c96c6
wireshark-2.2.17/epan/tvbuff.c,1679,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(addr, ptr, sizeof *addr);",a4b27ada2c6dafe8d9e9462805acf33cdc3b0b70a2b8b1ca71ccaeac1e4a969f
wireshark-2.2.17/epan/tvbuff.c,1691,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(guid->data4, ptr + 8, sizeof guid->data4);",6c110a84143845c69b354a618c1ce2bd451259e7bf20760c3db1a15847a3ef24
wireshark-2.2.17/epan/tvbuff.c,1702,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(guid->data4, ptr + 8, sizeof guid->data4);",6c110a84143845c69b354a618c1ce2bd451259e7bf20760c3db1a15847a3ef24
wireshark-2.2.17/epan/tvbuff.h,844,20,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    const unsigned char out[16];,9933e020806b2d0f5c82bacd340e5ef667bbce8d50943d506df7de9beafd5638
wireshark-2.2.17/epan/tvbuff_zlib.c,137,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(new_data, uncompr, bytes_out);",74a8e1f672cc0186152a4a0d1de2765cc2d8b6871b0feb0e85f8e69119f87bd2
wireshark-2.2.17/epan/tvbuff_zlib.c,138,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(new_data + bytes_out, strmbuf, bytes_pass);",2dc06b85da94d5cf71c50a06238178417c781c4c933a40ba5e7f640f771a1224
wireshark-2.2.17/epan/uat.c,195,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(tmp, UAT_INDEX_PTR(uat,a), s);",e0cfa5fc29e320189ef6f1a6655e4d86041b2be393e3409ab92de344631dd470
wireshark-2.2.17/epan/uat.c,196,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(UAT_INDEX_PTR(uat,a), UAT_INDEX_PTR(uat,b), s);",689ee9eb0e82e3f966b4c09dbcb2d8d0a9d0551cc3693eaf8d1971f8848c3395
wireshark-2.2.17/epan/uat.c,197,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(UAT_INDEX_PTR(uat,b), tmp, s);",1ded1f116097e8dce9c5645fb63b28027af7053cbb08388c82b3ec60e4f812b6
wireshark-2.2.17/epan/uat_load.c,808,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(buf, yyextra->parse_str + yyextra->parse_str_pos, n); \",a708e38b2553e22973bdb3423d24600052b1119972e6d71f9f73bb3a16e59b54
wireshark-2.2.17/epan/wmem/wmem_allocator_block.c,992,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(newptr, ptr, WMEM_CHUNK_DATA_LEN(chunk));",c0f1bf3a5825473b82236afbc9ab5db6e1e4c3570bd71d1081c1419974126d30
wireshark-2.2.17/epan/wmem/wmem_allocator_block_fast.c,176,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(newptr, ptr, chunk->len);",41fb7fbde75fea52cb9bdb192f0a8024a72859e7f6351ffd18634512e7e418d4
wireshark-2.2.17/epan/wmem/wmem_allocator_strict.c,155,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(new_ptr, ptr, size);",73d8cb3775a056efb9dc40281bedb5e812da2884edec35c7bc24b625653d8006
wireshark-2.2.17/epan/wmem/wmem_allocator_strict.c,158,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(new_ptr, ptr, block->data_len);",375ed8ae1c32fd11de7712ad82f7d99683909cef9c411a3382a284c5247d84f4
wireshark-2.2.17/epan/wmem/wmem_array.c,131,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&array->buf[array->elem_count * array->elem_size], in,",4a2252b502e88746c0de35c0c2f3ec49c4e16631c0d0e4fb1e8600fe43ce60eb
wireshark-2.2.17/epan/wmem/wmem_miscutl.c,36,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(dest, source, size);",5f234ab6c4113c38aecbfa095c22e462bcbe4752d40ae9a1870518d4ad12b7c3
wireshark-2.2.17/epan/wmem/wmem_strbuf.c,250,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&strbuf->str[strbuf->len], buf, charlen);",747724b9cf97bf7e6d400650127775c2e53774c421026b9604548cb64294eb53
wireshark-2.2.17/epan/wmem/wmem_strutl.c,53,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    return (gchar *)memcpy(wmem_alloc(allocator, len), src, len);",df5b60d06844888e1a28f579a2f728c61ffb7e1d113f8f303f83b3d01130afa4
wireshark-2.2.17/epan/wmem/wmem_test.c,214,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char *ptrs[MAX_SIMULTANEOUS_ALLOCS];,d881df15a8eb562e71d9a39673a5bbd079a5800634e4e1d5e8a534145f4d0af2
wireshark-2.2.17/epan/wmem/wmem_test.c,225,20,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"        ptrs[i] = (char *)wmem_realloc(allocator, ptrs[i], 4*len);",8bb01dbcd50cc49e8f3c04789f84d552564f93411573c8b5f4fbc89991638a3e
wireshark-2.2.17/epan/wmem/wmem_test.c,279,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char *ptrs[MAX_SIMULTANEOUS_ALLOCS];,d881df15a8eb562e71d9a39673a5bbd079a5800634e4e1d5e8a534145f4d0af2
wireshark-2.2.17/epan/wmem/wmem_test.c,333,33,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"            ptrs[ptrs_index] = (char *) wmem_realloc(allocator,",55ec7dcbea050549750a8c2269b024dce96ed3b11024c4009d035dc0b7b17e8a
wireshark-2.2.17/epan/wmem/wmem_test.c,500,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char                buffer[1];,1e5f3780512f54d068e502239bb5c3d89694fc97b21861c875aa2bfbe1f25ae9
wireshark-2.2.17/epan/ws_version_info.c,152,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char CPUBrandString[0x40];,ea4eba0693a7869facefaaabae935fc5ae5af95a3d43f6345964a5de0e33b660
wireshark-2.2.17/epan/ws_version_info.c,169,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(CPUBrandString, CPUInfo, sizeof(CPUInfo));",21dcc3bbce077c7d735d497d4586c723a62005822f230b8bf56bebb87ca765e2
wireshark-2.2.17/epan/ws_version_info.c,171,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(CPUBrandString + 16, CPUInfo, sizeof(CPUInfo));",b25d36a1b188cf4675808c227a35fae689ccfff54f6005f86a307b2f3d0560f2
wireshark-2.2.17/epan/ws_version_info.c,173,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(CPUBrandString + 32, CPUInfo, sizeof(CPUInfo));",95329c940743727f482b4dee900aba95ed10899e0c0111cc12d135bc2254a025
wireshark-2.2.17/epan/wslua/init_wslua.c,403,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char buff[512];,e83dbe8f5992d72d2d96300de76c2e466b2bcb5014c3b29da980e9794c363966
wireshark-2.2.17/epan/wslua/lrexlib.c,206,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (buf->arr + buf->top, src, sz);",0614fcdc78180b8658ea4b90eaded2a5db5a290044ba97431d897679604933ab
wireshark-2.2.17/epan/wslua/lua_bitop.c,134,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buf[8];,794dd086f29fe8304359c335f25d99574851f607ff35b5fa940ffbc8b6b35d2c
wireshark-2.2.17/epan/wslua/wslua_byte_array.c,269,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(data, ba->data, ba->len);",df39441a568c2036eb72c8add14624b5fbeeaea6510983a0fe949eb0a814a2b8
wireshark-2.2.17/epan/wslua/wslua_capture_info.c,193,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&v4_addr, addr, 4);",4fd1565f8dc4b3fbe377247ab1a6ee7833981ddf558379a3b9abc6575b02e1eb
wireshark-2.2.17/epan/wslua/wslua_capture_info.c,236,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&v6_addr, addr, 16);",a27a2eb516449a5ee06036457244ba852d75acae252bbb0fd89ae46456d83e60
wireshark-2.2.17/epan/wslua/wslua_dir.c,362,27,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"    WSLUA_CLASS_FNREG(Dir,open),",c3334cb3a6eb9f1c9e649a3107ad86bd032f0dd3e0d6fed6fa8bc8727a2c660b
wireshark-2.2.17/epan/wslua/wslua_dumper.c,187,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char fname_clean[256];,7e61c93dc6f717e0d0434a945c7fee6bfc32da40e0d35c7c1aadf00a4add6ff2
wireshark-2.2.17/epan/wslua/wslua_file_handler.c,337,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(ws_buffer_start_ptr(buf), fd, len);",c0732888c31cf39117b05feb7e91af8987eaee64c4904394b79a8f2aa4b911b4
wireshark-2.2.17/epan/wslua/wslua_frame_info.c,172,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ws_buffer_start_ptr(fi->buf), s, len);",7abdaf765fb3e9b8ddfdcdf6a2312be2ec5af21b7ba9704d0e5bf9ebe282a660
wireshark-2.2.17/epan/wslua/wslua_internals.c,469,18,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static const char byte_to_str_upper[256][3] = {,7960ca5d3b8d25beafc787bde2b602eae14d4a2f04078c20091ebf4175da57c1
wireshark-2.2.17/epan/wslua/wslua_internals.c,487,18,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static const char byte_to_str_lower[256][3] = {,5598e1f2d87cb0f0c0ffeb7d194541ded8c9dc3a841cd8970a8ff728bd59565e
wireshark-2.2.17/epan/wslua/wslua_internals.c,505,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    const char (*byte_to_str)[3] = byte_to_str_upper;,a72203f8f891b194215c3729a5d5eeb316c3c96231b3b7aa9083a0fa42f90778
wireshark-2.2.17/epan/wslua/wslua_struct.c,503,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&f, data+pos, size);",10d296f05af21179f3dc409ce046a26898200622ab1651e9f6ab0e1e47e67f70
wireshark-2.2.17/epan/wslua/wslua_struct.c,510,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&d, data+pos, size);",66b704896405a412bfdc6667ea4860150c304c6ab4e0d3b172f1e8bebc915397
wireshark-2.2.17/epan/wslua/wslua_util.c,197,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char fname_clean[256];,0977e7b90d102e96240fc76c2fbca50d01ae322c02208781fa9806e45c41595e
wireshark-2.2.17/extcap/androiddump.c,530,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char     status[4];,3a695e655bcd6a90d3a6001347f8069b354d2ea625f332d377b1c701fb01d059
wireshark-2.2.17/extcap/androiddump.c,557,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(status, buffer, 4);",84fca9230a578c8b4f0941bb39cbdd4f455dc41380ca65139d96eb6bf7ec8e78
wireshark-2.2.17/extcap/androiddump.c,593,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char     status[4];,3a695e655bcd6a90d3a6001347f8069b354d2ea625f332d377b1c701fb01d059
wireshark-2.2.17/extcap/androiddump.c,619,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(status, buffer, 4);",84fca9230a578c8b4f0941bb39cbdd4f455dc41380ca65139d96eb6bf7ec8e78
wireshark-2.2.17/extcap/androiddump.c,650,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buffer[4];,9f38b5e15e18cd08aab3e62600e6182572602ba42e11b0e5abcc15fcc9621599
wireshark-2.2.17/extcap/androiddump.c,715,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char            packet[PACKET_LENGTH];,59afc93578938b89f342c1d0c53ed272ccc773e054ae06b754eda31216018dda
wireshark-2.2.17/extcap/androiddump.c,716,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char            helpful_packet[PACKET_LENGTH];,7f3da0438b8213e9fc73d66a1c625f18c70b02677d16d333d6cd002012a5d598
wireshark-2.2.17/extcap/androiddump.c,730,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char                   serial_number[SERIAL_NUMBER_LENGTH_MAX];,361a8d2522f26b55f05ee51237a3a4121343854c071761ddba82828edd2cf57d
wireshark-2.2.17/extcap/androiddump.c,732,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char                   model_name[MODEL_NAME_LENGTH_MAX];,1332c8c329a102475b16f00150e56241392f7dc432c90a264ab9922de3045562
wireshark-2.2.17/extcap/androiddump.c,771,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(serial_number, prev_pos, result);",de7ccf4379bd04c5ab8e67690385899b10ebace0922a73f9a8b127fc3d6c54e4
wireshark-2.2.17/extcap/androiddump.c,780,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(model_name, model_pos + 6, device_pos - model_pos - 6 - 1);",98b763dd20c46ffa33438604d382ac672b7c3cedf5c93fd4088b9aba731582fc
wireshark-2.2.17/extcap/androiddump.c,786,13,2,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",Risk is low because the source is a constant string.,CWE-120,"            strcpy(model_name, ""unknown"");",0a7c0d2132b1e905936e635902b13e3d1be638887f6530fcd4925a5dd12beeab
wireshark-2.2.17/extcap/androiddump.c,935,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                char   pid[16];,519a6494c38a3aa8f88be2f84264e41e05b388de2ca2e453d69bb13b5e89cf61
wireshark-2.2.17/extcap/androiddump.c,1027,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                char   pid[16];,519a6494c38a3aa8f88be2f84264e41e05b388de2ca2e453d69bb13b5e89cf61
wireshark-2.2.17/extcap/androiddump.c,1166,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char                    data[PACKET_LENGTH];,097f46c3e4d69d9b516aa66b145202d89c6438e74a59f291d3709f9ab5787e8d
wireshark-2.2.17/extcap/androiddump.c,1167,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char                    packet[PACKET_LENGTH];,057a7485a344065836fd86b4e677b429f11b7772fad8e8968b6eb80393026d75
wireshark-2.2.17/extcap/androiddump.c,1168,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char                    helpful_packet[PACKET_LENGTH];,61d9cf2cc5a1b765d08f83d1e403116b22f79a42c1d3a6dc3bb250bf37f870ec
wireshark-2.2.17/extcap/androiddump.c,1535,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char           helpful_packet[PACKET_LENGTH];,fa8e6fb3e34dc16293118e1947b99c77c2ef1aa97bbe127b1d762f61f0123250
wireshark-2.2.17/extcap/androiddump.c,1560,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char                    buffer[PACKET_LENGTH];,84cd6a255e99ab2015c29e465a5cbceb7baf370e23b30d89a40ea1e6c1c847e4
wireshark-2.2.17/extcap/androiddump.c,1823,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char                    packet[PACKET_LENGTH];,057a7485a344065836fd86b4e677b429f11b7772fad8e8968b6eb80393026d75
wireshark-2.2.17/extcap/androiddump.c,1973,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char                 packet[PACKET_LENGTH];,d42f84c07c3ff1516f074f19fe5d8c2cfb81ce61c6d726f7ac3d08d8931c8046
wireshark-2.2.17/extcap/androiddump.c,2080,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(packet, exported_pdu_header_protocol, sizeof(struct exported_pdu_header));",8114fafff18805ee7ef1451a51b78f804906026913c7c6de143ed50081a75643
wireshark-2.2.17/extcap/androiddump.c,2083,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(packet + exported_pdu_headers_size, protocol_name, GUINT16_FROM_BE(exported_pdu_header_protocol->length) - 2);",c5a7c4e2597ca51d2ef69b4f6833afb1ebd7f73095111932f2d8abad39a8525d
wireshark-2.2.17/extcap/androiddump.c,2089,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(packet + exported_pdu_headers_size, &exported_pdu_header_end, sizeof(struct exported_pdu_header));",345012538d9dc2e922b63074de22f15e0bc578641c59f9965fbc7bddf85ed23d
wireshark-2.2.17/extcap/androiddump.c,2157,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char                 packet[PACKET_LENGTH];,d42f84c07c3ff1516f074f19fe5d8c2cfb81ce61c6d726f7ac3d08d8931c8046
wireshark-2.2.17/extcap/androiddump.c,2158,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char                 helper_packet[PACKET_LENGTH];,806de8f9056949bc66e89702aaeb9a2cf4c146718b5f9133a0acb3c4c846e7bf
wireshark-2.2.17/extcap/androiddump.c,2263,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(packet, exported_pdu_header_protocol, sizeof(struct exported_pdu_header));",8114fafff18805ee7ef1451a51b78f804906026913c7c6de143ed50081a75643
wireshark-2.2.17/extcap/androiddump.c,2266,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(packet + exported_pdu_headers_size, protocol_name, GUINT16_FROM_BE(exported_pdu_header_protocol->length) - 2);",c5a7c4e2597ca51d2ef69b4f6833afb1ebd7f73095111932f2d8abad39a8525d
wireshark-2.2.17/extcap/androiddump.c,2272,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(packet + exported_pdu_headers_size, &exported_pdu_header_end, sizeof(struct exported_pdu_header));",345012538d9dc2e922b63074de22f15e0bc578641c59f9965fbc7bddf85ed23d
wireshark-2.2.17/extcap/androiddump.c,2396,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char                              data[PACKET_LENGTH];,e1b83811e51a7da3b1a428f659167c8b2040370e19e816641ddd6c837a812333
wireshark-2.2.17/extcap/androiddump.c,2397,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char                              helpful_packet[PACKET_LENGTH];,1f24a3713bb0ef039942448ecea4e80b5623b6037135e29ffb8be9185ed2b0c8
wireshark-2.2.17/extcap/androiddump.c,2408,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char                              filter_buffer[PACKET_LENGTH];,8b833f4ffd113dbd3b245d8c0520ed9414bcee95e007e1080f3b443fd83f2c09
wireshark-2.2.17/extcap/ciscodump.c,173,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char output[SSH_READ_BLOCK_SIZE];,973e26dfecfffea8671185dbcb1b898b22ce9e7aec9431b4ba84cb6a238a09a3
wireshark-2.2.17/extcap/ciscodump.c,234,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(packet + *offset, &value, size);",59e1d5a4967519b601978a2244acbbf5eb6186e8812e450926c0d3149ad20745
wireshark-2.2.17/extcap/ciscodump.c,244,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char line[SSH_READ_BLOCK_SIZE];,efbaec2e112d31ec160f477c449ce839308fec14d761034d271b8ead8232d85f
wireshark-2.2.17/extcap/ciscodump.c,440,8,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"		fp = fopen(fifo, ""wb"");",6a02ad09e48d0a5be9877b2444733bb0462e4b1cc8a3c9f407b37d7424d7e201
wireshark-2.2.17/extcap/randpktdump.c,208,15,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,			maxbytes = atoi(optarg);,fee173313fe05bdc46e63c1677b9b1a9306d49825c4231ce7525038e544a245d
wireshark-2.2.17/extcap/sshdump.c,89,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buffer[SSH_READ_BLOCK_SIZE];,4d5ee89238e5d18b97590bb9f33a3bedf480620e428669f1441a753e8f51d92d
wireshark-2.2.17/file.c,1523,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ws_buffer_start_ptr(buf), frame->pd, frame->phdr.caplen);",b82f94ab3027c02940ddf0b5c2504e6fd7bf85c7fd1dd1e12a5a212d9c2db288
wireshark-2.2.17/file.c,2220,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char            bookmark_name[9+10+1];  /* ""__frameNNNNNNNNNN__\0"" */",9d465e117746aa7cb35ec4498e55c70ab990b7eb31e1a5ee31ee571de39000a8
wireshark-2.2.17/file.c,2221,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char            bookmark_title[6+10+1]; /* ""Frame NNNNNNNNNN__\0""  */",de6f79df54ac69f6bf36ae117d3ceca0362e4ba81eae4bdd947d21e57baf4ba1
wireshark-2.2.17/frame_tvbuff.c,123,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	return memcpy(target, tvb->real_data + abs_offset, abs_length);",a08157f39c42d04419b947762d62b0e26e523e36274a834fb59951ec20838774
wireshark-2.2.17/plugins/easy_codec/codec-g722.c,79,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(speech, ctx->speach_buffer, L_G722_FRAME / 2 * sizeof(short));",157a22a0d0682795fc906ede3fa15ea8b06d5926d029ca7e4917ef1f2770c3d8
wireshark-2.2.17/plugins/easy_codec/codec-g7231.c,85,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(speech, ctx->speach_buffer, L_G7231_FRAME * sizeof(short));",0f0f851481ed182e7e6790efc6a71586340b8651e0b00214bfc9a76015f286bc
wireshark-2.2.17/plugins/easy_codec/codec-g729a.c,72,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(speech, ctx->speach_buffer, L_G729A_FRAME * sizeof(short));",9077e9ac766ada5184ca8b165384f21ed9ff9963c4ec3f1f6845ee836f3292c1
wireshark-2.2.17/plugins/ethercat/packet-ams.c,404,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-2.2.17/plugins/ethercat/packet-ams.h,1087,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char       sName[ADS_FIXEDNAMESIZE];,a2edf3dc3d2177606d695332f8e30afbb10dd6130e2caedee0870ce5b57a77f3
wireshark-2.2.17/plugins/ethercat/packet-ecatmb.c,373,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char tmp[50];,9aa5a01117d855a7a42bf1269d1c2f81ccff979d823aba5e27e0093d1a6d36b2
wireshark-2.2.17/plugins/ethercat/packet-ecatmb.c,427,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char tmp[50];,9aa5a01117d855a7a42bf1269d1c2f81ccff979d823aba5e27e0093d1a6d36b2
wireshark-2.2.17/plugins/ethercat/packet-ecatmb.c,428,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char elm[50];,4f2c8e4eba654e8bb9b32d0920cff6e5a6d6b76347fbc7857126bd53c354c2f3
wireshark-2.2.17/plugins/ethercat/packet-ecatmb.c,491,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-2.2.17/plugins/ethercat/packet-ecatmb.c,823,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-2.2.17/plugins/ethercat/packet-ecatmb.c,1095,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-2.2.17/plugins/ethercat/packet-ecatmb.h,316,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char    Name[1];     /* rest of mailbox data*/,1016ae1f0a9b597c1c029303c4b230d8d615aae6ca55524d1c79fd877d2a07e5
wireshark-2.2.17/plugins/ethercat/packet-ecatmb.h,337,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char    ErrorText[1]; /* rest of mailbox data */,da28cd5fc4ba990922ce0f722f6342bce09a2293cb12b5d12771de79d7860ea5
wireshark-2.2.17/plugins/ethercat/packet-ethercat-datagram.c,1427,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-2.2.17/plugins/ethercat/packet-ioraw.c,56,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-2.2.17/plugins/ethercat/packet-nv.c,97,4,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,   char szText[200];,2e0c4209a8e15bcde8970aca060b9153ae62ef88d2af4c864583a2ecc4899f79
wireshark-2.2.17/plugins/gryphon/packet-gryphon.h,455,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (dest, src, size);	    	    \",f1536632c27e90bedc5dcabcdc604274d6e992cace995d543b7da7d95334e1d1
wireshark-2.2.17/plugins/irda/packet-ircomm.c,239,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        buf[256];,a6614e42f2b378080c91c16e0b183bd94885734072ecdc2ab39a10b3a0c52794
wireshark-2.2.17/plugins/irda/packet-irda.c,462,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char   buf[128];,9a7f6e5202f11abcd133e1036b2623bd101569a31cc0bb0646151ae189373dcb
wireshark-2.2.17/plugins/irda/packet-irda.c,516,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    buf[128];,0f03f627eea79bdbe32a3e52aabeeca0b26c9760f2bee38a219fc77097ebc8da
wireshark-2.2.17/plugins/irda/packet-irda.c,569,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                char    class_name[256];,2cd9bf3b1bf5e94af155d9a85ebf40096da5742a4343445f7d289507c5278252
wireshark-2.2.17/plugins/irda/packet-irda.c,570,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                char    attr_name[256];,95810a72247ae4949bc967aae9bd5c27e33da86e9a32ebe3b6e2d4139d0f5159
wireshark-2.2.17/plugins/irda/packet-irda.c,599,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&buf[clen], ""\"" \"""", 3);",c0e720b61cd5dcafaec0dc43575880322413fede84a1c409c74beac71dc15615
wireshark-2.2.17/plugins/irda/packet-irda.c,663,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char                buf[300];,cd70840a2748b8e8d9d3038e5d0fddd3df9bd75e120d458e5147863a5ae9d3b0
wireshark-2.2.17/plugins/irda/packet-irda.c,1240,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        buf[256];,a6614e42f2b378080c91c16e0b183bd94885734072ecdc2ab39a10b3a0c52794
wireshark-2.2.17/plugins/irda/packet-irda.c,1515,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char buf[23];,b8270f671f5161a1edc2987e83ad5cb59ec5207b2f703fe2939ad3339d738a60
wireshark-2.2.17/plugins/irda/packet-irda.c,1541,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                char    service_hints[256];,433963a38e3930f9c749789e78448dddc0f22774398a7c011c0d05305219124d
wireshark-2.2.17/plugins/irda/packet-irda.c,1631,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char    buf[256];,7d074ba766c4340ca4f42b9c1fa351e30186909a9dde928fb15032d9b741f206
wireshark-2.2.17/plugins/irda/packet-irda.c,1668,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char     addr[9];,f38ab0b9c5c2bbf44a49f54355b126a9304339f863d09b79102aaa649dd2f0d9
wireshark-2.2.17/plugins/opcua/opcua_simpletypes.c,1035,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char szNum[20];,565028e2f2bcfa869c9462b1e68f9d6107fdb0d328d16bc71560f55e40f0b255
wireshark-2.2.17/plugins/profinet/packet-dcerpc-pn-io.c,2841,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&ar->aruuid, aruuid, sizeof(e_guid_t));",d0f9c0b349bf28ad6ccd84fabe4c148973b0962c6d5b0feee15d7d8fd681fa88
wireshark-2.2.17/plugins/profinet/packet-dcerpc-pn-io.c,7151,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy( (void *) (&par->controllermac), mac, sizeof(par->controllermac));",9eb758cdc55fb20363a55e44517b1e661395c3591b0889db9337e8e62b6fd203
wireshark-2.2.17/plugins/profinet/packet-dcerpc-pn-io.c,7204,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy( (void *) (&par->devicemac), mac, sizeof(par->controllermac));",0870f877bcbe57420abb0f0547edef132d19ab44e1982b44b21730f3ecdfb8f8
wireshark-2.2.17/plugins/profinet/packet-dcom-cba-acco.c,511,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy( (void *) (pdev->ip), addr->data, 4);",b1295defe646e3b92ec4cbf196ea847430f343d3a81c65bee3ad764437707073
wireshark-2.2.17/plugins/profinet/packet-dcom-cba-acco.c,763,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy( (guint8 *) (frame->consmac), consmac, sizeof(frame->consmac));",4f482ef8e3b680d12048a7adf01b5a8ca623287519ade85f7bd02ead43d2b270
wireshark-2.2.17/plugins/profinet/packet-pn-rt.c,172,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char virtualFramebuffer[16];,acbaaf8b8d3c19e57aad64df7179505dbd2f0624241e7d023960ac5443882575
wireshark-2.2.17/plugins/profinet/packet-pn-rt.c,181,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&virtualFramebuffer[0], pinfo->dst.data, 6);",67e1c318424accb92dbe754609d6a0fc43cf17c8975400ae84944967221909e6
wireshark-2.2.17/plugins/profinet/packet-pn-rt.c,182,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&virtualFramebuffer[6], pinfo->src.data, 6);",3d27c674e7afa1ff2424795b4a70e0fd2443df9041a315338d953d0ebbb6fc68
wireshark-2.2.17/plugins/profinet/packet-pn.c,189,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(pdata, data, 6);",2087d9e86351bd3c50acc4aa5860c0988efb20a8eb1f3107d2bbcb103c5a4d03
wireshark-2.2.17/plugins/wimax/mac_hd_type1_decoder.c,66,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *type1_subtype_abbrv[TYPE_I_SUBTYPE_MAX] =,4e22c044dd7cdf416e8732784857067cb568f2aad354c674a11ba3c7f55d391a
wireshark-2.2.17/plugins/wimax/mac_hd_type2_decoder.c,72,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *type2_fb_type_abbrv[TYPE_II_FB_TYPE_MAX] =,182a6a7324c95f81e4a3ec274021c3bb0797bb7cb979bd6644585990a3ce2df8
wireshark-2.2.17/plugins/wimaxasncp/wimaxasncp_dict.c,3279,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buf,statep->read_ptr,max);",010f922e301f83a2f661029668613a4205ee888f46308c2bf144070fc1c3af11
wireshark-2.2.17/randpkt.c,157,25,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,				produce_max_bytes = atoi(optarg);,fa276127e929b6a2f787c875d4662819190d7e55ad258630d80defb2033389ee
wireshark-2.2.17/randpkt.c,165,21,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,				produce_count = atoi(optarg);,60e2e7cb3d7c1d720087705002b03243c97f6f2d49bf0e6fde3a7c6b26f9d632
wireshark-2.2.17/randpkt_core/randpkt_core.c,564,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(ps_header, example->pseudo_buffer, example->pseudo_length);",05479d2c4540d4a002c415907f3170f9ef60c54520b9f0afb5f89778d1ffd002
wireshark-2.2.17/randpkt_core/randpkt_core.c,568,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(buffer, example->sample_buffer, example->sample_length);",eaf48fc824605724c66d98fdc04a6ea73fbccad6e66a5d2ad934a045df2e74cf
wireshark-2.2.17/randpkt_core/randpkt_core.c,599,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(&buffer[j], ""%s"", 3);",6ff7f032dc477d5b847840a01f69fac1cef02cfbb99afff40eff3615788417fd
wireshark-2.2.17/rawshark.c,1372,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char hfibuf[100];,64507a5087371733c1ee083d80745bfa60ad04e9a4c6bcd689c961ba53354764
wireshark-2.2.17/ringbuffer.c,87,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char    filenum[5+1];,7ef91a06a81d1532408843052a11a27ebb66bdf99d74ff233bb94b27379d8455
wireshark-2.2.17/ringbuffer.c,88,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char    timestr[14+1];,00acd5d453c1426accc8af6d961b1fb585d04caa133a881c3c2e5a17c659c20f
wireshark-2.2.17/text2pcap.c,400,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static char tempbuf[64];,a99c0a0ac8a0ac8ce1b9d74efa4e74089a17769d854a76cbf0f27c4fab54707b
wireshark-2.2.17/text2pcap.c,675,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&HDR_IPv6.ip6_src, isInbound ? &hdr_ipv6_dest_addr : &hdr_ipv6_src_addr, sizeof(struct e_in6_addr));",fedaf8b271f5a2fc0db53efbc67203162705d2e151f8552026124bdbf74029b3
wireshark-2.2.17/text2pcap.c,677,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&HDR_IPv6.ip6_dst, isInbound ? &hdr_ipv6_src_addr : &hdr_ipv6_dest_addr, sizeof(struct e_in6_addr));",5be5672fa4d3ae373dd68940a092d36c5e1deb79e7b09802284c302149d0fb31
wireshark-2.2.17/text2pcap.c,953,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char xs[PACKET_PREAMBLE_MAX_LEN];,daebefceb98690d69ef11150f1b42f6c75618faf02a4948e4e2fb155bd5c19e5
wireshark-2.2.17/text2pcap.c,1135,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char     tmp_str[3];,ea0ed035535b9c7e5e8de16614ef48a08a58e49bbad47d6caf355424bb348e20
wireshark-2.2.17/tfshark.c,1794,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(dest, str, str_len);",040db4890cf42959a29028a4cdafa504df141326ca0a6fbc65e1432e53dfd070
wireshark-2.2.17/tfshark.c,1814,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(dest, str, str_len);",040db4890cf42959a29028a4cdafa504df141326ca0a6fbc65e1432e53dfd070
wireshark-2.2.17/tfshark.c,2148,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char   err_msg[2048+1];,54419ae355ba679f6b1c614a97b435d625a812dad6c0cf35232099ca85f2e894
wireshark-2.2.17/tools/lemon/lemon.c,91,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&zBuf[*pnUsed], zIn, nIn);",a49d39167225eb44be56d31f10fba98e3e34cfc1065aae3e1b236f3b27b5eef6
wireshark-2.2.17/tools/lemon/lemon.c,100,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char zTemp[50];,ffe815c2e6e1d877dd8e4fad0787f38251099e2caacb5aa264294703d09722b2
wireshark-2.2.17/tools/lemon/lemon.c,1516,15,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  azDefine = (char **) realloc(azDefine, sizeof(azDefine[0])*nDefine);",26b7bd03ec69f1d4ca81d00b366726959ddb9c21b5fdfcf7be559e9dfdc54df6
wireshark-2.2.17/tools/lemon/lemon.c,1802,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char *set[LISTSIZE];,5d9ec9a874fa5812d8fd7e00af000eb85397e0ce98ceae9a84f304a876611c20
wireshark-2.2.17/tools/lemon/lemon.c,2140,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  const char *alias[MAXRHS]; /* Aliases for each RHS symbol (or NULL) */,a7c657408f5e979fe6c2013ea9cae5129a99c3b4653ff8c277917697303a3d5c
wireshark-2.2.17/tools/lemon/lemon.c,2519,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char zLine[50];,4398a1fe86d208e8b5c86434b13773bb7712ceb496ba743796d960a2763a60d5
wireshark-2.2.17/tools/lemon/lemon.c,2547,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(zBuf, zLine, nLine);",acae83989897ed67d30514930f89e669167a0e98525c815c9faee979c4bb2c02
wireshark-2.2.17/tools/lemon/lemon.c,2562,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(zBuf, zNew, nNew);",ecc7adf7064cc56588dff0a772ad3c8453f0b9253c0656ac2cd123ea98ac1e7a
wireshark-2.2.17/tools/lemon/lemon.c,2731,8,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  fp = fopen(ps.filename,""rb"");",eaac68fd76bc3b080bca92734031cc9a39c1f5887e93fef31eb867170c4a4fd1
wireshark-2.2.17/tools/lemon/lemon.c,2972,8,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  fp = fopen(lemp->outname,mode);",8e815fbe1790466fcf1c31b89c83a883d80bc7cbbb966077be873287d7281b3b
wireshark-2.2.17/tools/lemon/lemon.c,3176,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char buf[20];,90f9d5685b966121e5a6eae2f61e8f266d703e27ea4c7b87d2a4e8c629a5699b
wireshark-2.2.17/tools/lemon/lemon.c,3305,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char line[LINESIZE];,37958d4b0c1af121dc564a1e5408b88c87594e50e01b2816301cfee2920bf3fa
wireshark-2.2.17/tools/lemon/lemon.c,3330,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buf[1000];,fab6e9e48c61b9a61195c82a0c32330a065da6ba0da96365e623a89f74d3a0c7
wireshark-2.2.17/tools/lemon/lemon.c,3344,10,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"    in = fopen(user_templatename,""rb"");",fa0c6d1c9312e38caf7be041ec7f107dff9f92241e939679ea87c1ac37d1abac
wireshark-2.2.17/tools/lemon/lemon.c,3374,8,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  in = fopen(tpltname,""rb"");",0712ecb2125e22a9d8f6705fc3f427cf88c8c3a17ba643bca295a7e0295342b1
wireshark-2.2.17/tools/lemon/lemon.c,3490,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char empty[1] = { 0 };,383338a2c68248b399e01086c0575ec0726631e9654d4a605b12d93d6d709d53
wireshark-2.2.17/tools/lemon/lemon.c,3495,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char zInt[40];,cfeda2b74e7e71546084da52a4415f97ad234f63458d0835de95476b7c80cea7
wireshark-2.2.17/tools/lemon/lemon.c,3539,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char used[MAXRHS];   /* True for each RHS element which is used */,b3382202d8230bb3be0f08091113918e5823200a4fdcccb158e84facd202e0b6
wireshark-2.2.17/tools/lemon/lemon.c,3545,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    static char newlinestr[2] = { '\n', '\0' };",a6378477d138ca731897c8a2783c456d871e57e80fc15784e2c96999ca4d5988
wireshark-2.2.17/tools/lemon/lemon.c,3855,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char line[LINESIZE];,37958d4b0c1af121dc564a1e5408b88c87594e50e01b2816301cfee2920bf3fa
wireshark-2.2.17/tools/lemon/lemon.c,4325,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char line[LINESIZE];,37958d4b0c1af121dc564a1e5408b88c87594e50e01b2816301cfee2920bf3fa
wireshark-2.2.17/tools/lemon/lemon.c,4326,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char pattern[LINESIZE];,2bf2cd30e4637c71047e8e7b4051d863af8541bf0b7427a314af76298d02500f
wireshark-2.2.17/tools/make_charset_table.c,42,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"		unsigned char in[1], out[2];",76414184631869fff0947840aa68f04c115c400b08ff9841f4692203104e87a7
wireshark-2.2.17/tools/npl/ast.h,62,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char *args[NPL_PARAMS_MAX];,769253adcee30f2ec71daf2466b6cc1db7d1388bb8b6922029f49cdba0d335a0
wireshark-2.2.17/tools/npl/npl.c,200,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char ett_name[256];,90daeee7acf0f72709d2f50d8f69af4ff7a735e1a57c52cef3c64323fa2a691a
wireshark-2.2.17/tools/npl/npl.c,251,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char hf_name[256];,2df102cf43e7be5c00d37a0631b8a69ac9c5f4abfce03fcabeca13e6620fe061
wireshark-2.2.17/tools/npl/npl.c,282,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char filter_name[1024];,5de02b67f866f86257a19e9ddee1946f671eff932885ca979cf5738969ce705e
wireshark-2.2.17/tools/npl/npl.c,1584,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char tmp_id[32];,9b7a08baac6582f554421705a331701f42870f761f1b06507f20795b9a0c9642
wireshark-2.2.17/tools/npl/npl.c,1768,14,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"			if (!(f = fopen(filename, ""rb""))) {",563fb757a9ea78c9b61ff9b1c582f07f680731113467c4c4ef7f34746b9c5ff4
wireshark-2.2.17/tools/npl/npl.c,1897,8,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"	out = fopen(""/tmp/npl.c"", ""w"");",132324f8d5d266d81eac1cb74c4a6f5ccd03aeef92b40b63684ec90930120383
wireshark-2.2.17/tools/npl/npl.c,1970,13,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"		if (!(f = fopen(argv[i], ""rb""))) {",4ae1aedb9cf5e13f4afad5462b66fa08d59a57e9d9db5e3429e5e27b11db839a
wireshark-2.2.17/tools/npl/xmem.h,32,104,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"static inline void *xmemdup(void *p, size_t s) { void *ptr = malloc(s); if (!ptr) oom_killer(); return memcpy(ptr, p, s); }",5ebcb58fa744d30237858c3f82d2db2cc684227986a014ee318bd37c6dac92cf
wireshark-2.2.17/tshark.c,3568,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(dest, str, str_len);",040db4890cf42959a29028a4cdafa504df141326ca0a6fbc65e1432e53dfd070
wireshark-2.2.17/tshark.c,3588,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(dest, str, str_len);",040db4890cf42959a29028a4cdafa504df141326ca0a6fbc65e1432e53dfd070
wireshark-2.2.17/tshark.c,3942,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char   err_msg[2048+1];,54419ae355ba679f6b1c614a97b435d625a812dad6c0cf35232099ca85f2e894
wireshark-2.2.17/tshark.c,4074,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char errmsg_errno[1024+1];,d3a48dd6bc93bca3e84f669e2c8877706d80f16af252aaf122e7357a1411da58
wireshark-2.2.17/ui/capture.c,736,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(ps, &sc_item->ps, sizeof(struct pcap_stat));",a1fa0fe2be1f361b0ba14ca9fa0b04fef874bb40c0c8030bd72622ba39007f20
wireshark-2.2.17/ui/cli/tap-diameter-avp.c,242,27,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,		ds->cmd_code = (guint32)atoi(tokens[2]);,dcb091bedc03c6d3df4eb242fa2ac27e76f6292cb49c5d160b1cb79d0aca079c
wireshark-2.2.17/ui/cli/tap-follow.c,120,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char          line[LINE_LEN + 1];,b5ac53a1821eba6596c5de146ca7be43cf2331e29f2bee273af6013c83e71507
wireshark-2.2.17/ui/cli/tap-follow.c,345,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char          addr[ADDR_LEN];,7324231ec114ecffb1c893e237c5b8aee5e6bf773ad2440f4a92bf180a1eae8f
wireshark-2.2.17/ui/cli/tap-iostat.c,1294,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(field, p, parenp-p);",6d302aef46982d5f2ad8f59dd766d8bbded294f4313fff6b8e092f0618b86ded
wireshark-2.2.17/ui/cli/tap-protohierstat.c,133,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[MAXPHSLINE];,cb3ef3df6e3c7395f36f7d7e29b98aa6004335d345c4aeede53d5f540965bb65
wireshark-2.2.17/ui/cli/tap-rpcprogs.c,182,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[64];,2b2a1c195b37c134129d114524a76691f731dd143f4adba9672fa8049b0885ca
wireshark-2.2.17/ui/export_object_tftp.c,72,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(entry->payload_data + payload_data_offset,",c9f145bb89a0362b030cadc889ee78669315ad6687bff65c614dbe95df0a614e
wireshark-2.2.17/ui/gtk/bytes_view.c,591,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[128];,60f0b5e0bb9c5ae7b5f08d4bbe624d113abcafa17f0b15b9c5f4115c9d08ab72
wireshark-2.2.17/ui/gtk/capture_dlg.c,881,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *time_unit_name[MAX_TIME_UNITS] = {,0626c191651955fca3db4956bec5cbf620783aa4fbf64155030943f775723072
wireshark-2.2.17/ui/gtk/capture_dlg.c,972,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *size_unit_name[MAX_SIZE_UNITS] = {,fe033f0ad4f9606fcd58a3649d9f0697842f3bb4f4810195c79304706957251b
wireshark-2.2.17/ui/gtk/capture_dlg.c,2674,16,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,  marked_row = atoi(gtk_tree_path_to_string(path));,c32553c48671a18c9b836bfc34d44b97522943499e3d90fb52e978a6e02a30f5
wireshark-2.2.17/ui/gtk/capture_dlg.c,3600,25,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"    if (name != NULL && atoi(gtk_tree_model_get_string_from_iter(model, &iter)) < (gint)global_capture_opts.all_ifaces->len) {",df44ad2ba7b7e832cff42deb3dac17987bc9b37ef276ebaa8a4a43fa06ebe47d
wireshark-2.2.17/ui/gtk/capture_dlg.c,5781,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char               buffer[512];,7bc7da13e17e7cdcc7e87596423ab18a5e83b1d0d2a6a8092dad6d1108293f21
wireshark-2.2.17/ui/gtk/capture_dlg.c,5845,23,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,  int          indx = atoi(gtk_tree_path_to_string(path));,ac205c7d41ed34d3798ea45cd4822ca4a04b46df1ca80f00c930ea047dde003a
wireshark-2.2.17/ui/gtk/capture_file_dlg.c,940,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char        *in_filenames[2];,13bf73ebfdd4e7b35a6f23459bc60b33fe317414a3e5fcb2d92bab753a341319
wireshark-2.2.17/ui/gtk/capture_if_details_dlg_win32.c,92,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char      __ss_pad1[ETH_SS_PAD1SIZE];,bd93119bc149221aeee4cc944b1c136636a86ca6574d4133860fa341e78553bb
wireshark-2.2.17/ui/gtk/capture_if_details_dlg_win32.c,98,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char      __ss_pad2[ETH_SS_PAD2SIZE];,7d95cb5b6eb6b7b0aa601b2b5b8e4af64ab245fb42e4c8ed7370c70e0f045736
wireshark-2.2.17/ui/gtk/capture_if_details_dlg_win32.c,684,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char values[10000];,535353f408026f2b9b9efed007005d1dcaa9e115b5acaeeae96000f5a0b2249a
wireshark-2.2.17/ui/gtk/capture_if_details_dlg_win32.c,708,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char values[10000];,535353f408026f2b9b9efed007005d1dcaa9e115b5acaeeae96000f5a0b2249a
wireshark-2.2.17/ui/gtk/capture_if_details_dlg_win32.c,1039,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char          mac[6];,092700f6b3c516776d9b43e0168d97b1f2353626fdb1824812a69426c4d122ea
wireshark-2.2.17/ui/gtk/capture_if_details_dlg_win32.c,1077,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(ssid_buff, bssid_item->ssid.essid, bssid_item->ssid.length);",3d34152640b18e9f2f6a66e8a315ee185863693cb8cc7412b0cadf538bd7b003
wireshark-2.2.17/ui/gtk/capture_if_details_dlg_win32.c,1257,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char      values[100];,968500df1bd931d9be37dc1cc45bf79c326a4441b8685fb0bc5b414a4d5e0546
wireshark-2.2.17/ui/gtk/capture_if_details_dlg_win32.c,1525,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char  values[100];,f5b0363041cef2d1b7b5a662ce7c4872417d0cc60cc6924049e9ccb52b914a9e
wireshark-2.2.17/ui/gtk/capture_if_details_dlg_win32.c,1662,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char values[10000];,535353f408026f2b9b9efed007005d1dcaa9e115b5acaeeae96000f5a0b2249a
wireshark-2.2.17/ui/gtk/capture_if_details_dlg_win32.c,1831,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char   values[100];,e7441d618e7c7c1aced2bd3af542f3743c21e79be050bc591b89031e751bfb3b
wireshark-2.2.17/ui/gtk/conversations_table.c,73,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-2.2.17/ui/gtk/conversations_table.c,1626,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-2.2.17/ui/gtk/conversations_table.c,1655,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"        char start_time[COL_STR_LEN], duration[COL_STR_LEN],",dfc299884a5e03e7297f6c2c57cffba8a88a005d8688a7d58e00a9f3bdc1955f
wireshark-2.2.17/ui/gtk/conversations_table.c,1930,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-2.2.17/ui/gtk/conversations_table.c,2188,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-2.2.17/ui/gtk/conversations_table.c,2463,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-2.2.17/ui/gtk/conversations_table.c,2588,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char cmd_str[50];,d62da16a73d58eb8beffc2bec027abed9636124d2ad84f9491c0c81ca4d8015d
wireshark-2.2.17/ui/gtk/conversations_table.h,45,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    const char  *default_titles[14]; /**< Column headers */,c5af5936217414b5b203865f09a8f84912900b1c612242e6ef5fca6d3cdaa1b6
wireshark-2.2.17/ui/gtk/dcerpc_stat.c,346,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char vs[5];,5b1b460f6e997979510d62027205c645162574b07af17c6ff3f7555932ace07e
wireshark-2.2.17/ui/gtk/dcerpc_stat.c,389,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[64];,2b2a1c195b37c134129d114524a76691f731dd143f4adba9672fa8049b0885ca
wireshark-2.2.17/ui/gtk/decode_as_dlg.c,603,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char               *string, *text[E_LIST_S_COLUMNS];",3a9b737278bb7fc53441f92f0fde2f3428247e8683866a1dde4335c295f2d999
wireshark-2.2.17/ui/gtk/dfilter_expr_dlg.c,116,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char value_label_string[1024+1];   /* XXX - should be large enough */,3d177a7abfd35b5c17d5af379f530205906bbcc4404bb2b36d231207e7fd29ce
wireshark-2.2.17/ui/gtk/drag_and_drop.c,277,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(cf_names_freeme, sel_data_data, sel_data_len);",c6ad8019cbc40176a34b2ef20b60a578b446e8fcaaa16e750b469e7d3b3a3f54
wireshark-2.2.17/ui/gtk/drag_and_drop.c,296,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(selection_path, path, length);",166acf80616cf704a6270c8b4d2cfdfab9acc11b9ed4d35277a009f72cabcdc1
wireshark-2.2.17/ui/gtk/expert_comp_dlg.c,680,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    const char *entries[2];   /**< column entries */,771f5f53e00360eb6ad7edb61a041472127d87c24db6cfd03b267b86dd5e2c40
wireshark-2.2.17/ui/gtk/expert_comp_table.c,118,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,          gint int_a = atoi(str_a);,9e6cd91507f430a959edd99e0338e24dbb27c45e863a0333825c6228e10d19be
wireshark-2.2.17/ui/gtk/expert_comp_table.c,119,24,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,          gint int_b = atoi(str_b);,262bc0712661176b7ded85ff05f4ea3090394e5ae48d4a63457f50c448257927
wireshark-2.2.17/ui/gtk/expert_comp_table.c,159,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char str[512];,3dcfd1642ad7d5af2a61fff9919f0a4c7dbe2e1763a09cad8638c5650a25ddb0
wireshark-2.2.17/ui/gtk/expert_comp_table.c,592,35,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,"            cf_goto_frame(&cfile, atoi(pkt));",6fb0fcfee172031b64dabec687923cd5e2840ca6b6780fbd6d9ebffa9c73eb4a
wireshark-2.2.17/ui/gtk/expert_comp_table.h,40,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char    *entries[2];       /**< column entries */,457eecd15292e646d5d368b693e14b5a6964ea92ff71181c5c9aef1c3c9ee3d7
wireshark-2.2.17/ui/gtk/export_object_dlg.c,220,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,						char generic_name[MAXFILELEN+1];,11b409ddbbb08bce8e21c4de0a1a7ed0e94600aa256fcd47e114ef18d6e9eac8
wireshark-2.2.17/ui/gtk/file_dlg.c,173,3,2,buffer,wchar_t,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  wchar_t wtarget[MAX_PATH];,22458e4e433e6e5220d796d9ff39d3c667c2adf0c8034524391d19f83e19fa89
wireshark-2.2.17/ui/gtk/follow_stream.c,175,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char  stream_window_title[256];,41c125421ac23886cae41b8e6cbd14c39ed9c7a83cc5c7a324a52a4992decd32
wireshark-2.2.17/ui/gtk/follow_stream.c,347,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(str, buffer, nchars);",7c2bf3effcf782de62aa523b3ff95edba74cc95976c3fae938af4c323ed8f49e
wireshark-2.2.17/ui/gtk/font_utils.c,253,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char appfontname[128] = ""tahoma 8"";",15286c49b20f4399398dd116d1a3dea5f98efe514642c25ec4b58f63043b3a12
wireshark-2.2.17/ui/gtk/graph_analysis.c,300,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char     label_string[MAX_COMMENT];,1560b09458e576564879758d420d3e11157bf668d8fe93cfed5dd582ec2a85a3
wireshark-2.2.17/ui/gtk/graph_analysis.c,786,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(&label_string[MAX_FRAME_LABEL-4], ""..."", 3);",0dd5a11474e90654bb527370a7a70fca2350791b1ab975196ff811a7cb66d24f
wireshark-2.2.17/ui/gtk/gui_utils.c,1076,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(copy_data->data,data,len * sizeof(guint8));",dc670af23d81993cad4c288889a14dbc702af05ae8b86a80d9d0bd60778bf18b
wireshark-2.2.17/ui/gtk/hostlist_table.c,77,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-2.2.17/ui/gtk/hostlist_table.c,504,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-2.2.17/ui/gtk/hostlist_table.c,561,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char *geoip[ENDP_NUM_GEOIP_COLUMNS];,caadddc810913660b315e8d432f974ca95be0ba899f39759f1a565dea4449721
wireshark-2.2.17/ui/gtk/hostlist_table.c,854,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-2.2.17/ui/gtk/hostlist_table.c,1021,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-2.2.17/ui/gtk/hostlist_table.c,1252,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char title[256];,2e202ac939cbbcdbce1bd36b8a3758d54db79b37fd023f81e79fbe96dc73caa4
wireshark-2.2.17/ui/gtk/hostlist_table.c,1360,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char cmd_str[50];,d62da16a73d58eb8beffc2bec027abed9636124d2ad84f9491c0c81ca4d8015d
wireshark-2.2.17/ui/gtk/hostlist_table.h,66,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    const char          *default_titles[ENDP_NUM_COLUMNS+ENDP_NUM_GEOIP_COLUMNS]; /**< Column headers */,c19bb765830f4dce0d38faf96c51af749399098823a9a3b99c7473a0f6f20a17
wireshark-2.2.17/ui/gtk/iax2_analysis.c,117,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *graph_descr[4]		    = {,35ba0b569ff8160e4ce0609bd4ae3aa3a738dce497f71374ffaf515cb3ea3af7
wireshark-2.2.17/ui/gtk/iax2_analysis.c,859,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char           label_string[15];,036aa61f54f24b0894954bc50431118bf36cd1b6df8acb925b456a8d0076d866
wireshark-2.2.17/ui/gtk/iax2_analysis.c,1545,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	   str[256];,cfcf200345533b00c1f6911b077f88ececb503aaf1ae82d7baf26a1733853f90
wireshark-2.2.17/ui/gtk/iax2_analysis.c,1653,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	   str[15];,1da367d0c2760e2a69612bd136a476077ade6d981f922260f19b7555d1fda77a
wireshark-2.2.17/ui/gtk/iax2_analysis.c,1679,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	   str[5];,59d0ba82b605c0e78ce8219b3463515b9a3118e1ec7c51107ff7c288e9271a39
wireshark-2.2.17/ui/gtk/iax2_analysis.c,1701,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	   str[15];,1da367d0c2760e2a69612bd136a476077ade6d981f922260f19b7555d1fda77a
wireshark-2.2.17/ui/gtk/io_stat.c,84,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *plot_style_name[MAX_PLOT_STYLES] = {,67a6c96d38c50424b428b46c2bc816cc00ac81ab4a6170fb91fa5ac86cd8bfd0
wireshark-2.2.17/ui/gtk/io_stat.c,102,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *count_type_names[MAX_COUNT_TYPES] = {,15ee1872b7edd5eaf91f8909609dd970b98e7301e9e2a0bbc595431c04d2ec87
wireshark-2.2.17/ui/gtk/io_stat.c,122,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *calc_type_names[MAX_CALC_TYPES] = {,52d375f456c496ee07f1e5273f04e2721a2cd54a59b6d902daf7630b0b69307d
wireshark-2.2.17/ui/gtk/io_stat.c,531,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char           label_string[45];,f9f74568d80582999e930f935dd31420b641fe6e187316198540bb9c5c21c9ce
wireshark-2.2.17/ui/gtk/io_stat.c,1539,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char       str[5];,6395372835fb749d1fd8a13cce35f211fecdcfca531bc27a112ca5fb33720b5e
wireshark-2.2.17/ui/gtk/io_stat.c,1588,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char       str[15];,ef378eda83288997970fa3ad3f5e530d966018bd03046b5c10d90a7f740c7261
wireshark-2.2.17/ui/gtk/io_stat.c,1616,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char       str[15];,ef378eda83288997970fa3ad3f5e530d966018bd03046b5c10d90a7f740c7261
wireshark-2.2.17/ui/gtk/io_stat.c,1639,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char       str[15];,ef378eda83288997970fa3ad3f5e530d966018bd03046b5c10d90a7f740c7261
wireshark-2.2.17/ui/gtk/io_stat.c,1950,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char str[256];,9b6aaacdbf5367d8b8e8dc8c0612440e406f5ce8b3437bcb90eb73a5bd1ff32a
wireshark-2.2.17/ui/gtk/io_stat.c,2075,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char        string[15];,e365121fb5d86cada8e6decd288b9f573d8fff33f3c3138e69d26c9a0348cbf8
wireshark-2.2.17/ui/gtk/lbm_stream_dlg.c,161,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char stream_buf[64];,f914055a832092f5afe943bbdad9beb50e5ebea9a1351a389cffd2a498f0b6d0
wireshark-2.2.17/ui/gtk/lbm_stream_dlg.c,200,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char value[64];,f41f8b87179f3cde272d6bb667bf73abeb62217a22e25ae79ad369c6167a5aaa
wireshark-2.2.17/ui/gtk/lbm_stream_dlg.c,569,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char valbuf[256];,6f04bd39a7d0287f379f5bce680c239f91b496cbde4b9fa5016e06eb8d293153
wireshark-2.2.17/ui/gtk/lbm_stream_dlg.c,669,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char valbuf[256];,6f04bd39a7d0287f379f5bce680c239f91b496cbde4b9fa5016e06eb8d293153
wireshark-2.2.17/ui/gtk/mac_lte_stat_dlg.c,804,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char buffer[MAX_FILTER_LEN];,725c4fa46319017286da8bd11e997ac8bcb0ac6ca85f07ec3d7cbd17c78de5be
wireshark-2.2.17/ui/gtk/main.c,640,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char labelstring[ITEM_LABEL_LENGTH];,010dc0517c2a62df157be29652bd32ed3734dd42d4872c55725530b6ab778566
wireshark-2.2.17/ui/gtk/main_80211_toolbar.c,178,16,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        return atoi(primary_msg);,3d5e8a9e194b7952a11a894bf785b33f49f23d2f9197fe25edd5cbb56839c4ef
wireshark-2.2.17/ui/gtk/mtp3_summary.c,236,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char         *entries[N_COLUMN];,d33419a4c671ec7e52bab1243f14011f4f49863783af95dae9a577a687326012
wireshark-2.2.17/ui/gtk/packet_list.c,253,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char       custom_occurrence_str[8];,e96cd16a403efabef2e585d3464aba563de282c407162cf6e3cd2aff6ab686ff
wireshark-2.2.17/ui/gtk/packet_win.c,740,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(DataPtr->pd, data.pd, DataPtr->frame->cap_len);",1555b4d063604ebeb62174b110f2d9649b856eef733553fa2d5eb5ce370669b6
wireshark-2.2.17/ui/gtk/packet_win.c,959,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(DataPtr->pd, ws_buffer_start_ptr(&cfile.buf), DataPtr->frame->cap_len);",f22f484bb73eed16b88005620600a847691e2bcacaa3282dd3a928dbea1dadad
wireshark-2.2.17/ui/gtk/prefs_column.c,60,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char custom_occurrence_str[8] = """";",3d4d20704435fff957a40040daa49a91de9c4eb815776f446d11e271a86ff3b3
wireshark-2.2.17/ui/gtk/prefs_dlg.c,129,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char        uint_str[10+1];,b482c5169238be256367d083771608ec2f33b8a4bf910c5d57e0e5cd516b44c0
wireshark-2.2.17/ui/gtk/prefs_gui.c,129,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char recent_files_count_max_str[128] = """";",1da0e4724b1907460265c21719c0a81c6b02e633d91849b3236880fb27a35e58
wireshark-2.2.17/ui/gtk/prefs_gui.c,132,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char recent_df_entries_max_str[128] = """";",6a1665f9a2846d0fa31dca4608201d2a3eef415ca264e4e1011a58b46a1709b7
wireshark-2.2.17/ui/gtk/prefs_gui.c,135,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char open_file_preview_str[128] = """";",c7bf69c7382aa71e51b6ce4d7a6de5b158318d0157c6d9d6610b27a1cafd12b4
wireshark-2.2.17/ui/gtk/prefs_gui.c,138,8,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"static char scroll_percent_preview_str[128] = """";",882debc773e4367abc4c8864fda2dd3d4d8796111afbd3e2d08fe502b9c3bda0
wireshark-2.2.17/ui/gtk/prefs_gui.c,161,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char       current_val_str[128];,803b930b10821c4144de04fced35e7bfa3b4f7fdd5ba4354de1fae25d715f088
wireshark-2.2.17/ui/gtk/prefs_layout.c,71,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[64];,465eabb0806860179ab2df61dda647bce326eb7218231f8bbb69a8f322b93fff
wireshark-2.2.17/ui/gtk/proto_hier_stats_dlg.c,548,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char       title[256];,d60e6e1965836b8ba2c1ee8bf25f03757467ecb0ac6888789f92fab975b30f4b
wireshark-2.2.17/ui/gtk/response_time_delay_table.c,168,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char str[5][256];,bc41fd583b42ed86819ab71f8ade40d809308bce65eee7c385a206d9233d5dee
wireshark-2.2.17/ui/gtk/response_time_delay_table.c,171,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_str[256];,b5ea0527f73969d8ed2effee8a1b554601b6dc88f92ba6207657e3a729be8a3a
wireshark-2.2.17/ui/gtk/rlc_lte_graph.c,460,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char window_title[WINDOW_TITLE_LENGTH];,c74d751335cb8fde5a6aae1f3d6de4cd70d0a2c217ecc820cce3bb877184a384
wireshark-2.2.17/ui/gtk/rlc_lte_graph.c,1128,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char desc[32];,f00a721f6c1adcb200659bc562dd6b63eb9ab02e69346794340d86fb67363c1e
wireshark-2.2.17/ui/gtk/rlc_lte_graph.c,1233,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char desc[32];,f00a721f6c1adcb200659bc562dd6b63eb9ab02e69346794340d86fb67363c1e
wireshark-2.2.17/ui/gtk/rlc_lte_graph.c,1421,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char   str[32];,cded71682478c71017a2bcc34151167f682573ef1efe0b47d4fadd3c62d7f77a
wireshark-2.2.17/ui/gtk/rlc_lte_graph.c,2711,9,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    i = atoi(buf);,f75aa761ec8f5478382349d1bfc18628ee7294eb647e9d43a2ec9e7c054f1c00
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,366,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char unknown[32];,0279f7000962b01646698ee8b922d050f6799db4d9bcb27f43c3ad289d6c35d5
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,605,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char               buff[32];,fc843434b920625f087672a97d1a22b3975ca08ce15ac3ef3b09c882605ffe3a
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,1007,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char buffer[MAX_FILTER_LEN];,725c4fa46319017286da8bd11e997ac8bcb0ac6ca85f07ec3d7cbd17c78de5be
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,1158,14,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        sn = atoi(sn_string);,c8f109324560ecbd639e4493a62d2b694f2efb1351c60edae92a91ed9076776e
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,1187,14,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        sn = atoi(sn_string);,c8f109324560ecbd639e4493a62d2b694f2efb1351c60edae92a91ed9076776e
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,1216,14,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        sn = atoi(sn_string);,c8f109324560ecbd639e4493a62d2b694f2efb1351c60edae92a91ed9076776e
wireshark-2.2.17/ui/gtk/rpc_stat.c,351,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char vs[5];,5b1b460f6e997979510d62027205c645162574b07af17c6ff3f7555932ace07e
wireshark-2.2.17/ui/gtk/rtp_analysis.c,131,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char *graph_descr[MAX_GRAPHS] = {,8162a13d6a69cd4db84bb3a89f6873575d7bdbab6f399545c707f8c4da4b8d64
wireshark-2.2.17/ui/gtk/rtp_analysis.c,994,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	       label_string[15];,2164a75c7e88e345f25729594a74684eecbc2b3f857dd43c19f11f7c1bf86461
wireshark-2.2.17/ui/gtk/rtp_analysis.c,1716,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	   str[256];,cfcf200345533b00c1f6911b077f88ececb503aaf1ae82d7baf26a1733853f90
wireshark-2.2.17/ui/gtk/rtp_analysis.c,1825,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	   str[15];,1da367d0c2760e2a69612bd136a476077ade6d981f922260f19b7555d1fda77a
wireshark-2.2.17/ui/gtk/rtp_analysis.c,1851,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	   str[5];,59d0ba82b605c0e78ce8219b3463515b9a3118e1ec7c51107ff7c288e9271a39
wireshark-2.2.17/ui/gtk/rtp_analysis.c,1873,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	   str[15];,1da367d0c2760e2a69612bd136a476077ade6d981f922260f19b7555d1fda77a
wireshark-2.2.17/ui/gtk/rtp_player.c,363,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(new_rtp_packet->info, rtp_info, sizeof(struct _rtp_info));",db8492591795511242cf41e8d245a629bbbee652abeda7ffadf6435d5d8393c9
wireshark-2.2.17/ui/gtk/rtp_player.c,368,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(new_rtp_packet->payload_data, &(rtp_info->info_data[rtp_info->info_payload_offset]), rtp_info->info_payload_len);",ffc46ac4a7071916834c12c0f44700aee645f926e5e536591368cbea876aff17
wireshark-2.2.17/ui/gtk/rtp_player.c,1169,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[MAX_TIME_LABEL];,4cab8f7d0a4c0b340e7c6139a9ca8e5b0395e10aa1009cf40d1b6a9f5740a4ac
wireshark-2.2.17/ui/gtk/sctp_byte_graph_dlg.c,285,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[15];,01543fee1e1b31c1b4d7bec8ece07cff26c4190db954fa6d4dcc06db1c0ddd90
wireshark-2.2.17/ui/gtk/sctp_byte_graph_dlg.c,403,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(label_string,(gchar *)g_locale_to_utf8(label_string, -1 , NULL, NULL, NULL), 15);",c3fba9160730cd6b819baa8b4c652d6838e2807d7a47cc6e6b303408a637593d
wireshark-2.2.17/ui/gtk/sctp_byte_graph_dlg.c,1015,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[30];,12ea93508d94e61a7f6a7a30a94df15d6441a568147054f34af1bb697f73e9eb
wireshark-2.2.17/ui/gtk/sctp_graph_dlg.c,621,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[15];,01543fee1e1b31c1b4d7bec8ece07cff26c4190db954fa6d4dcc06db1c0ddd90
wireshark-2.2.17/ui/gtk/sctp_graph_dlg.c,1412,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char label_string[30];,12ea93508d94e61a7f6a7a30a94df15d6441a568147054f34af1bb697f73e9eb
wireshark-2.2.17/ui/gtk/sctp_graph_dlg.c,1867,6,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,	i = atoi(buf);,f75aa761ec8f5478382349d1bfc18628ee7294eb647e9d43a2ec9e7c054f1c00
wireshark-2.2.17/ui/gtk/stock_icons.c,430,19,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"                {(char *)ws_stock_items[i].name,",579a071840a7ddb52992482f70ab8f25566d58c138184a717536e55e198d75e8
wireshark-2.2.17/ui/gtk/stock_icons.c,431,19,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"                 (char *)ws_stock_items[i].label,",deaf0aa326b4075ee39674b9b1956f84cd387695ac3ca026a8ff3650b81df177
wireshark-2.2.17/ui/gtk/stock_icons.c,444,66,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        GdkPixbuf * pixbuf = gdk_pixbuf_new_from_xpm_data((const char **) (pixmaps[i].xpm_data));,7826149f2cf23d7d43f27d051c10166372413df384e7e339895d6683fcf13637
wireshark-2.2.17/ui/gtk/supported_protos_dlg.c,186,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char buffer[BUFF_LEN];,cfbeb93a47b4f080de30af962b6efcee24074f0e22110ef30780a436070c6faa
wireshark-2.2.17/ui/gtk/tcp_graph.c,685,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char         window_title[WINDOW_TITLE_LENGTH];,063b09f650272341324245fc0550370299539a4e7296e7e5a31f388b25d542d8
wireshark-2.2.17/ui/gtk/tcp_graph.c,837,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char window_title[WINDOW_TITLE_LENGTH];,c74d751335cb8fde5a6aae1f3d6de4cd70d0a2c217ecc820cce3bb877184a384
wireshark-2.2.17/ui/gtk/tcp_graph.c,1226,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char s[32];,162efaf2affad2a2dfb657cca840e7dd16353ce48761e94cbe802d7f25fd916c
wireshark-2.2.17/ui/gtk/tcp_graph.c,2191,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char desc[32];,f00a721f6c1adcb200659bc562dd6b63eb9ab02e69346794340d86fb67363c1e
wireshark-2.2.17/ui/gtk/tcp_graph.c,2291,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char desc[32];,f00a721f6c1adcb200659bc562dd6b63eb9ab02e69346794340d86fb67363c1e
wireshark-2.2.17/ui/gtk/tcp_graph.c,2468,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char   str[32];,cded71682478c71017a2bcc34151167f682573ef1efe0b47d4fadd3c62d7f77a
wireshark-2.2.17/ui/gtk/tcp_graph.c,2693,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy((void * )mg, (void * )g, sizeof(struct gtk_graph));",36632db06e6dc341a1324678f4e31f6066939203897717d3402d2fb0aaa63e54
wireshark-2.2.17/ui/gtk/tcp_graph.c,4501,9,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    i = atoi(buf);,f75aa761ec8f5478382349d1bfc18628ee7294eb647e9d43a2ec9e7c054f1c00
wireshark-2.2.17/ui/gtk/text_page_utils.c,112,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char line[4096+1];  /* XXX - size? */,5b9cfccd2dc69a4e6ad3481a1cc52c0e575fd17a68446476f47df16ddb7b39f5
wireshark-2.2.17/ui/gtk/wlan_stat_dlg.c,161,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char          title[256];,077a0eef0f1019ba1d460a876af27417028f96411e053e4f2a5271fb47ce58f0
wireshark-2.2.17/ui/gtk/wlan_stat_dlg.c,246,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy (ep->stats.ssid, si->stats.ssid, MAX_SSID_LEN);",1abae4384c9d5e7350e20bdf0ff74abe530ed0a1a87913be3ee88c90aa1c1498
wireshark-2.2.17/ui/gtk/wlan_stat_dlg.c,479,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy (te->stats.ssid, si->stats.ssid, MAX_SSID_LEN);",8d634d9b9361a1c001e0ca0ac16d7627f1c58a8de873fa5b6309651b8c48e21e
wireshark-2.2.17/ui/gtk/wlan_stat_dlg.c,498,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char              *addr_str, comment[256], percent[256];",893f2fe049262c16a8a971054f533a96278a8a2661ab2d2842c2cca3b8ae95b3
wireshark-2.2.17/ui/gtk/wlan_stat_dlg.c,559,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char             *bssid, channel[256], ssid[256], percent[256];",92bdc1974e019f1355bdc7b7e5d0a9b38ba142ff78c62bcf4f8737b44e0f28fd
wireshark-2.2.17/ui/gtk/wlan_stat_dlg.c,1768,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char  title[256];,f1bf1e2f2765f79b4dffd2c02e77ecd65ccdea78773b34a16eba86e486fe0ea5
wireshark-2.2.17/ui/iface_lists.c,214,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(temp_addr->addr.ip6_addr, addr->addr.ip6_addr, sizeof(addr->addr));",ba60f070fe9a40022d815d0b36ec272d74f17bfc170a0ba15d36621ea2e8930e
wireshark-2.2.17/ui/io_graph_item.c,55,15,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        const char *item_unit_names[NUM_IOG_ITEM_UNITS] = {,1d98dd4374e5c9bfb751d1136854b5d51fe0bf60b6d7ec8adc81cb0d055174ac
wireshark-2.2.17/ui/preference_utils.c,177,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&pref->stashed_val.color, &pref->default_val.color, sizeof(color_t));",d14221f3c2e3cdc14c724e8b8bc7afa44d20cbf8b36853a1d566c8494ba33806
wireshark-2.2.17/ui/qt/about_dialog.cpp,197,15,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    f_authors.open(QFile::ReadOnly | QFile::Text);,f9deca4cfcfa2114b860322591b5ced0bc250191a3e679366defb48145513c4a
wireshark-2.2.17/ui/qt/about_dialog.cpp,348,15,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    f_license.open(QFile::ReadOnly | QFile::Text);,876899482e852923bada66e939d565284504f0732e8d2a05fa7c06af210e18c8
wireshark-2.2.17/ui/qt/capture_file_dialog.cpp,252,24,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"int CaptureFileDialog::open(QString &file_name, unsigned int &type) {",5a2bcdb1c3a0d7f660178b466b0f5e5d12cf963b75ecc39c471808c2aea8a60d
wireshark-2.2.17/ui/qt/capture_file_dialog.cpp,577,24,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"int CaptureFileDialog::open(QString &file_name, unsigned int &type) {",5a2bcdb1c3a0d7f660178b466b0f5e5d12cf963b75ecc39c471808c2aea8a60d
wireshark-2.2.17/ui/qt/capture_file_dialog.h,147,9,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"    int open(QString &file_name, unsigned int &type);",855bed2eb1afcad6cb87520fe62f52118cadc8a6f76685a2ae0cea278394c2eb
wireshark-2.2.17/ui/qt/export_object_dialog.cpp,378,17,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,                char generic_name[256];,e096949a05c055b635d83c9105e95940e41fec0016e134c557c70a311569818c
wireshark-2.2.17/ui/qt/firewall_rules_dialog.cpp,146,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char addr_buf[ADDR_BUF_LEN];,ed5a1ed212daad87fb259a8d1138fdeff2ad65265f1b21b74990eeeb8c277350
wireshark-2.2.17/ui/qt/firewall_rules_dialog.cpp,194,23,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,            save_file.open(QIODevice::WriteOnly);,539e200405b43ed9b93e3761adb27dfe1ac9242a88c4b95337ccbd5e8b371835
wireshark-2.2.17/ui/qt/follow_stream_dialog.cpp,281,20,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,        if (!file_.open(QIODevice::WriteOnly)) {,3be12f88bfa0c013c68d7bef51b1c38d31dd29093169a18f64e1ba27d6d217b3
wireshark-2.2.17/ui/qt/iax2_analysis_dialog.cpp,276,20,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    fwd_tempfile_->open();,b5cd57fe9a0db7491a75d34504f2b6507d9227621d405f2b180ab80b4be8eebd
wireshark-2.2.17/ui/qt/iax2_analysis_dialog.cpp,279,20,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    rev_tempfile_->open();,e44ca4ccbd4ca283c5e08aacff5f12caae303ed8bfddf211018c1c0967a59838
wireshark-2.2.17/ui/qt/iax2_analysis_dialog.cpp,727,54,2,tmpfile,tmpfile,"Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377)",,,CWE-377,"void Iax2AnalysisDialog::savePayload(QTemporaryFile *tmpfile, packet_info *pinfo, const struct _iax2_info_t *iax2info)",8d19401f0114cd3af22a9d1b5d472f9a85ef44967270031587b62fbb12d47fb0
wireshark-2.2.17/ui/qt/iax2_analysis_dialog.cpp,923,15,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    save_file.open(QIODevice::WriteOnly);,539e200405b43ed9b93e3761adb27dfe1ac9242a88c4b95337ccbd5e8b371835
wireshark-2.2.17/ui/qt/iax2_analysis_dialog.cpp,1172,15,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    save_file.open(QFile::WriteOnly);,ddf41397fcd049d9ffdf300a373663bab8a03d6bf9d2d969bed5a09358247c7b
wireshark-2.2.17/ui/qt/iax2_analysis_dialog.h,132,38,2,tmpfile,tmpfile,"Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377)",,,CWE-377,"    void savePayload(QTemporaryFile *tmpfile, packet_info *pinfo, const struct _iax2_info_t *iax2info);",6f8e27d97f4ab3cd1435d06e15b9412979f81b6b2f5e3ac1e06c06f38c10c628
wireshark-2.2.17/ui/qt/import_text_dialog.cpp,311,20,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    if (text_file->open(QIODevice::ReadOnly)) {,3f5bbb3b4ca9d6649f93fc5dddeaa955c62aa081958279af97678c148aa5ddfc
wireshark-2.2.17/ui/qt/import_text_dialog.cpp,364,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char time_str[100];,25174bbd4e490a55941896814b5151f9ed9e9c7c86fe7084eb3059614eb0d877
wireshark-2.2.17/ui/qt/io_graph_dialog.cpp,1661,15,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    save_file.open(QFile::WriteOnly);,ddf41397fcd049d9ffdf300a373663bab8a03d6bf9d2d969bed5a09358247c7b
wireshark-2.2.17/ui/qt/main_window.cpp,1045,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char        *in_filenames[2];,13bf73ebfdd4e7b35a6f23459bc60b33fe317414a3e5fcb2d92bab753a341319
wireshark-2.2.17/ui/qt/main_window_slots.cpp,192,26,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"            if (open_dlg.open(file_name, type)) {",da1f6451fdee0cb3c9a32c48f9a8865ecc86edabfd5dbaa87be3ab0da63050ff
wireshark-2.2.17/ui/qt/main_window_slots.cpp,1945,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char label_str[ITEM_LABEL_LENGTH];,1aba35cf2b27a126997815fde5905357677cfa78d3ada42baf078a1cec0e7ed9
wireshark-2.2.17/ui/qt/qcustomplot.cpp,14370,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(pixels.at(y), pixels.first(), n*sizeof(QRgb));",c90f9a8aed7524cfada5dde022c664cc0c0a5c67bef835b0c2f0f576be32a552
wireshark-2.2.17/ui/qt/qcustomplot.cpp,19711,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(mData, other.mData, sizeof(mData[0])*keySize*valueSize);",5dd7b7716979e6a2b1b87c8fb9a67175a090562fa46ecd77dcde56f4b5ce9bcd
wireshark-2.2.17/ui/qt/qcustomplot.cpp,20531,3,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  open(0),",b72c9d17e3ea8887d9ea9a3700e41743649cbb64387ac58e8f322e375f3a9d77
wireshark-2.2.17/ui/qt/qcustomplot.cpp,20541,55,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"QCPFinancialData::QCPFinancialData(double key, double open, double high, double low, double close) :",b40670a194d9ccad7a5e9a8b10c99c54db4e3a64d40fddf9eeab96cc0b729b14
wireshark-2.2.17/ui/qt/qcustomplot.cpp,20543,3,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  open(open),",8541be89acad11c573aa6e026ea69ca9d36fbb7320c0868b41909c1da6d30d60
wireshark-2.2.17/ui/qt/qcustomplot.cpp,20543,8,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  open(open),",8541be89acad11c573aa6e026ea69ca9d36fbb7320c0868b41909c1da6d30d60
wireshark-2.2.17/ui/qt/qcustomplot.cpp,20665,79,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"void QCPFinancial::setData(const QVector<double> &key, const QVector<double> &open, const QVector<double> &high, const QVector<double> &low, const QVector<double> &close)",0660decb5c3a7077b0cf3d0039bde2e06e41e9c6f26484f75a987e79b144623b
wireshark-2.2.17/ui/qt/qcustomplot.cpp,20669,15,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  n = qMin(n, open.size());",6cb5ac466a434bc058a9d3122f28ef3fc432d0579d1781ac5cfe11cac1333ca6
wireshark-2.2.17/ui/qt/qcustomplot.cpp,20675,57,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"    mData->insertMulti(key[i], QCPFinancialData(key[i], open[i], high[i], low[i], close[i]));",9386496d0a1351cd3717bbc9919b18631efc7b666cea4971e524dff3e62cf1fa
wireshark-2.2.17/ui/qt/qcustomplot.cpp,20804,47,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"void QCPFinancial::addData(double key, double open, double high, double low, double close)",ba03637d8a3b261daab1e7d4ac11553bbe41de66ae309c75816c1c89a06b1b6d
wireshark-2.2.17/ui/qt/qcustomplot.cpp,20806,49,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  mData->insertMulti(key, QCPFinancialData(key, open, high, low, close));",d0f8dd68928beefd6a1142366554ea9b9aab2dac265c76a7bd38428368cc2ed1
wireshark-2.2.17/ui/qt/qcustomplot.cpp,20818,79,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"void QCPFinancial::addData(const QVector<double> &key, const QVector<double> &open, const QVector<double> &high, const QVector<double> &low, const QVector<double> &close)",c6152745118cd99e1035a4886aba5b417c6229d54a403067f3a0ef7dcf7c0e49
wireshark-2.2.17/ui/qt/qcustomplot.cpp,20821,15,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  n = qMin(n, open.size());",6cb5ac466a434bc058a9d3122f28ef3fc432d0579d1781ac5cfe11cac1333ca6
wireshark-2.2.17/ui/qt/qcustomplot.cpp,20827,57,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"    mData->insertMulti(key[i], QCPFinancialData(key[i], open[i], high[i], low[i], close[i]));",9386496d0a1351cd3717bbc9919b18631efc7b666cea4971e524dff3e62cf1fa
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21154,50,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,        linePen = it.value().close >= it.value().open ? mPenPositive : mPenNegative;,ba1270473c244da1255cdf029249871618c7a54db20752f635c47e2c6050d445
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21159,61,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,      double openPixel = valueAxis->coordToPixel(it.value().open);,e3ca2b660748405424083f457248d481a9ac5e119c3fed1b1988b5a3529030b2
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21176,50,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,        linePen = it.value().close >= it.value().open ? mPenPositive : mPenNegative;,ba1270473c244da1255cdf029249871618c7a54db20752f635c47e2c6050d445
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21181,61,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,      double openPixel = valueAxis->coordToPixel(it.value().open);,e3ca2b660748405424083f457248d481a9ac5e119c3fed1b1988b5a3529030b2
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21219,44,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,        if (it.value().close >= it.value().open),2943839b52c400720b1093ca5e37341dfca72378790ca4b718500b7c03471311
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21236,61,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,      double openPixel = valueAxis->coordToPixel(it.value().open);,e3ca2b660748405424083f457248d481a9ac5e119c3fed1b1988b5a3529030b2
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21239,144,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"      painter->drawLine(QPointF(keyPixel, valueAxis->coordToPixel(it.value().high)), QPointF(keyPixel, valueAxis->coordToPixel(qMax(it.value().open, it.value().close))));",74986b926eb581feac53ff8653ebe447361d7dd90643a8d7d252e7574b3745d9
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21241,143,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"      painter->drawLine(QPointF(keyPixel, valueAxis->coordToPixel(it.value().low)), QPointF(keyPixel, valueAxis->coordToPixel(qMin(it.value().open, it.value().close))));",c263e95613860f93e9c3432b30a086df40827d0276d37654dfee9ddb523cccdc
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21256,44,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,        if (it.value().close >= it.value().open),2943839b52c400720b1093ca5e37341dfca72378790ca4b718500b7c03471311
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21273,61,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,      double openPixel = valueAxis->coordToPixel(it.value().open);,e3ca2b660748405424083f457248d481a9ac5e119c3fed1b1988b5a3529030b2
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21276,134,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"      painter->drawLine(QPointF(valueAxis->coordToPixel(it.value().high), keyPixel), QPointF(valueAxis->coordToPixel(qMax(it.value().open, it.value().close)), keyPixel));",db51be6033e84cd10d0bc5d5b5b105572ab8b75eaae798080a1292d0482add98
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21278,133,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"      painter->drawLine(QPointF(valueAxis->coordToPixel(it.value().low), keyPixel), QPointF(valueAxis->coordToPixel(qMin(it.value().open, it.value().close)), keyPixel));",9791f61356bdac3642a9c8464b11e7ad5c74b40aed77635fe3451dfc1851eb87
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21344,59,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"      QCPRange boxValueRange(it.value().close, it.value().open);",39d57df7aee8e945c2e46db7cc01509665d31429619c09e06332e4a3a93af3d6
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21354,167,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"        double highLineDistSqr = distSqrToLine(QPointF(keyPixel, valueAxis->coordToPixel(it.value().high)), QPointF(keyPixel, valueAxis->coordToPixel(qMax(it.value().open, it.value().close))), pos);",a9366c0e8aacd295c78b3a14ff6f923b03396ab2c7f616e91bbb6ce45b26d021
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21355,165,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"        double lowLineDistSqr = distSqrToLine(QPointF(keyPixel, valueAxis->coordToPixel(it.value().low)), QPointF(keyPixel, valueAxis->coordToPixel(qMin(it.value().open, it.value().close))), pos);",d196c5a8a8a70fb4423d2fb19003d6c390e62459b63a1d3a56b09f61fdea257b
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21368,59,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"      QCPRange boxValueRange(it.value().close, it.value().open);",39d57df7aee8e945c2e46db7cc01509665d31429619c09e06332e4a3a93af3d6
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21378,157,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"        double highLineDistSqr = distSqrToLine(QPointF(valueAxis->coordToPixel(it.value().high), keyPixel), QPointF(valueAxis->coordToPixel(qMax(it.value().open, it.value().close)), keyPixel), pos);",6255e3d64eae52ed3802281dc4d70a650ed95cec0aa8153ef846b9ee207db330
wireshark-2.2.17/ui/qt/qcustomplot.cpp,21379,155,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"        double lowLineDistSqr = distSqrToLine(QPointF(valueAxis->coordToPixel(it.value().low), keyPixel), QPointF(valueAxis->coordToPixel(qMin(it.value().open, it.value().close)), keyPixel), pos);",b74b28a59d4dfe1ba71b28ed1ea5451d4993e82330305606cfd9b4c44895aab6
wireshark-2.2.17/ui/qt/qcustomplot.h,3130,39,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  QCPFinancialData(double key, double open, double high, double low, double close);",673288d488aa552d751820529f14ee07d645aee2cb114426e2d4755bd7f1dd06
wireshark-2.2.17/ui/qt/qcustomplot.h,3131,15,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  double key, open, high, low, close;",ec3a7a965fbd06a724b7718ccc3b7fdf6f518cd9c759dd95eabc4c0e3bc202a6
wireshark-2.2.17/ui/qt/qcustomplot.h,3186,67,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  void setData(const QVector<double> &key, const QVector<double> &open, const QVector<double> &high, const QVector<double> &low, const QVector<double> &close);",1eb65fdb9b7bcfc083af4c8a39e2923f1c204c0c298bae427e72ec41ff2ee124
wireshark-2.2.17/ui/qt/qcustomplot.h,3198,35,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  void addData(double key, double open, double high, double low, double close);",dcfd7ded1c895f34ffb65fd36226e21c43fdb4643424aa75c9e5459e55bc8b42
wireshark-2.2.17/ui/qt/qcustomplot.h,3199,67,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"  void addData(const QVector<double> &key, const QVector<double> &open, const QVector<double> &high, const QVector<double> &low, const QVector<double> &close);",366e1591980a49ea68930bb502c2ba3808c0e3e9d3a887c410f99482b79b28c7
wireshark-2.2.17/ui/qt/rtp_analysis_dialog.cpp,328,20,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    fwd_tempfile_->open();,b5cd57fe9a0db7491a75d34504f2b6507d9227621d405f2b180ab80b4be8eebd
wireshark-2.2.17/ui/qt/rtp_analysis_dialog.cpp,331,20,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    rev_tempfile_->open();,e44ca4ccbd4ca283c5e08aacff5f12caae303ed8bfddf211018c1c0967a59838
wireshark-2.2.17/ui/qt/rtp_analysis_dialog.cpp,737,53,2,tmpfile,tmpfile,"Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377)",,,CWE-377,"void RtpAnalysisDialog::savePayload(QTemporaryFile *tmpfile, tap_rtp_stat_t *statinfo, packet_info *pinfo, const _rtp_info *rtpinfo)",3899ae7fd6e6bf85065fa4bc97d7a85fda875a59cf97709c90f733367a051ef9
wireshark-2.2.17/ui/qt/rtp_analysis_dialog.cpp,1096,15,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    save_file.open(QIODevice::WriteOnly);,539e200405b43ed9b93e3761adb27dfe1ac9242a88c4b95337ccbd5e8b371835
wireshark-2.2.17/ui/qt/rtp_analysis_dialog.cpp,1345,15,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    save_file.open(QFile::WriteOnly);,ddf41397fcd049d9ffdf300a373663bab8a03d6bf9d2d969bed5a09358247c7b
wireshark-2.2.17/ui/qt/rtp_analysis_dialog.h,150,38,2,tmpfile,tmpfile,"Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377)",,,CWE-377,"    void savePayload(QTemporaryFile *tmpfile, tap_rtp_stat_t *statinfo, packet_info *pinfo, const struct _rtp_info *rtpinfo);",5bbff438c39b3686074da42873f8b7e88bf28f0cf481674796c0a50d99937fe8
wireshark-2.2.17/ui/qt/rtp_audio_stream.cpp,80,16,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    tempfile_->open();,2c2dd8106d27e5e5b12827c5a08f1bb1c5ea34ff0ba7b435373ee0833b24ca9b
wireshark-2.2.17/ui/qt/sctp_chunk_statistics_dialog.cpp,139,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char line[100];,1c4a9ff05d1cb0aaf1d191aa71f10fc222765e2491b55336d92f6e158716a1e4
wireshark-2.2.17/ui/qt/sctp_chunk_statistics_dialog.cpp,140,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"        char *token, id[5];",35c36328ed7ae48c582003432fcabd65b46cc8af370e78f308725f74884d1808
wireshark-2.2.17/ui/qt/sctp_chunk_statistics_dialog.cpp,151,23,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            temp.id = atoi(id);,eba55a931cea3caafc3961c84d585977ee1d38ce2a6c5ee704b26925039c3e70
wireshark-2.2.17/ui/qt/sctp_chunk_statistics_dialog.cpp,237,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char str[40];,58ef9a03920cdfb280878594845fb33169326d996f600e209769f1315d20452d
wireshark-2.2.17/ui/qt/sctp_chunk_statistics_dialog.h,86,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char name[30];,be298bd4ded555cdd815303ef916ec635deb9e9fe3aeeb8e03118f0641b6f992
wireshark-2.2.17/ui/qt/show_packet_bytes_dialog.cpp,311,10,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,    file.open(QIODevice::WriteOnly);,aac682e09b1a9c3e1c71ad9d08df1be3bc0bd0127fb6c0b24e61e7b8e2cb55c8
wireshark-2.2.17/ui/qt/show_packet_bytes_dialog.cpp,637,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char hexbuf[256];,7a15d2001aa5b7eff3809f1fbd1debc1ca7a2999edb37b0d5cb181852f2bfb04
wireshark-2.2.17/ui/tap-rtp-common.c,158,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(&source, strinfo->src_addr.data, sourcelen);",a5eaca914526de21940b20178a967ddecc5a16864c4956ee75e000a5da453d69
wireshark-2.2.17/ui/tap-sctp-analysis.c,280,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(dat, vadd->data, vadd->len);",93bd5bcac2d2d7ed97e39fc1c93ab0aeaec7924923107e366c4eb565b672cbd1
wireshark-2.2.17/ui/tap-sctp-analysis.c,365,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(addr, sctp_info->ip_src.data, tmp_info.src.len);",8aa4e43b306f362237f42d38abfebd04daf3589152a6ee768a14b5e87a2c349e
wireshark-2.2.17/ui/tap-sctp-analysis.c,387,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(addr, sctp_info->ip_dst.data, tmp_info.dst.len);",c2e94f31a4403d08ec669adc6655d3eeb64e9ad85201044af327c8d75ec9caf0
wireshark-2.2.17/ui/tap-sctp-analysis.c,429,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(addr,(tmp_info.src.data), tmp_info.src.len);",2bf54e448bfb3d18d370701c9ec6c0dcdc788d8e3833337b65bacb59af4c022d
wireshark-2.2.17/ui/tap-sctp-analysis.c,434,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(addr, (tmp_info.dst.data), tmp_info.dst.len);",a68957e774eebc8d118996be95cd671aaef3e284be770d3e98a15fdc00bbaa73
wireshark-2.2.17/ui/tap-sctp-analysis.c,503,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(addr, tmp_info.src.data, tmp_info.src.len);",c5036034bc59db9ef9bd42dc39642e267c677333b67ca362ab25b4523d3743b1
wireshark-2.2.17/ui/tap-sctp-analysis.c,506,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(addr, tmp_info.src.data, tmp_info.src.len);",c5036034bc59db9ef9bd42dc39642e267c677333b67ca362ab25b4523d3743b1
wireshark-2.2.17/ui/tap-sctp-analysis.c,511,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(addr, tmp_info.dst.data, tmp_info.dst.len);",aafa0d9d255527c4c9822e258e8620c61c3362bd9eaaef2ee92d4a645eab5747
wireshark-2.2.17/ui/tap-sctp-analysis.c,514,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(addr, tmp_info.dst.data, tmp_info.dst.len);",aafa0d9d255527c4c9822e258e8620c61c3362bd9eaaef2ee92d4a645eab5747
wireshark-2.2.17/ui/tap-sctp-analysis.c,744,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(addr,(tmp_info.src.data),tmp_info.src.len);",e9fc9c4f2bba597afc71d61f80d537e9331ed72f37a7db7a07497dba9ae89585
wireshark-2.2.17/ui/tap-sctp-analysis.c,751,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(addr,(tmp_info.dst.data),tmp_info.dst.len);",80ca0292d2aa1fe2aad5c1b3298d9ecf2d9f1ec62eca18cee434f9cb4ff13a73
wireshark-2.2.17/ui/tap-sctp-analysis.c,820,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(addr, tmp_info.src.data, tmp_info.src.len);",c5036034bc59db9ef9bd42dc39642e267c677333b67ca362ab25b4523d3743b1
wireshark-2.2.17/ui/tap-sctp-analysis.c,823,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(addr, tmp_info.src.data, tmp_info.src.len);",c5036034bc59db9ef9bd42dc39642e267c677333b67ca362ab25b4523d3743b1
wireshark-2.2.17/ui/tap-sctp-analysis.c,828,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(addr, tmp_info.dst.data, tmp_info.dst.len);",aafa0d9d255527c4c9822e258e8620c61c3362bd9eaaef2ee92d4a645eab5747
wireshark-2.2.17/ui/tap-sctp-analysis.c,831,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(addr, tmp_info.dst.data, tmp_info.dst.len);",aafa0d9d255527c4c9822e258e8620c61c3362bd9eaaef2ee92d4a645eab5747
wireshark-2.2.17/ui/tap-sctp-analysis.c,867,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(addr,(tmp_info.src.data),tmp_info.src.len);",e9fc9c4f2bba597afc71d61f80d537e9331ed72f37a7db7a07497dba9ae89585
wireshark-2.2.17/ui/tap-sctp-analysis.c,879,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(addr,(tmp_info.dst.data),tmp_info.dst.len);",80ca0292d2aa1fe2aad5c1b3298d9ecf2d9f1ec62eca18cee434f9cb4ff13a73
wireshark-2.2.17/ui/tap-sequence-analysis.c,500,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char        src_port[8], dst_port[8];",ede2849b96a348ae24cd9e2b54af6c3886269d01d23d23061dde7153086a5258
wireshark-2.2.17/ui/tap_export_pdu.c,57,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(packet_buf, exp_pdu_data->tlv_buffer, exp_pdu_data->tlv_buffer_len);",63e540740c77545484c7d895c1cc9a60748660f1fcf8d02c141e19b6c4b82abf
wireshark-2.2.17/ui/text_import.c,411,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&packet_buf[prefix_index], &HDR_ETHERNET, sizeof(HDR_ETHERNET));",eaa758ec0bcaa05bc600218127b64cf4ffe075fc331e2556fa4cde3020790d43
wireshark-2.2.17/ui/text_import.c,425,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&packet_buf[prefix_index], &HDR_IP, sizeof(HDR_IP));",1546ed433fa067b0b1c8cf725617f942799677beaa8d6ffadbeee701991572f1
wireshark-2.2.17/ui/text_import.c,450,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&packet_buf[prefix_index], &HDR_UDP, sizeof(HDR_UDP));",d1a5c96dab24590988706b915a88c9c138054dada68e7e345f24c5647a617863
wireshark-2.2.17/ui/text_import.c,469,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&packet_buf[prefix_index], &HDR_TCP, sizeof(HDR_TCP));",daff2286f1b7c538b5ac415e7a5ba349c8f12aea4570d1c81671d25c55d7bd7a
wireshark-2.2.17/ui/text_import.c,501,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&packet_buf[prefix_index], &HDR_SCTP, sizeof(HDR_SCTP));",24c9a41f729a3da540fad47157b8c4550ba399fc364db9eeaf82f1e86608216b
wireshark-2.2.17/ui/text_import.c,507,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(&packet_buf[prefix_index], &HDR_DATA_CHUNK, sizeof(HDR_DATA_CHUNK));",01a9475f1150fefd56464e7e4fc275673bdf4f3a9cb7759766cf734859b85831
wireshark-2.2.17/ui/text_import.c,582,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char xs[PACKET_PREAMBLE_MAX_LEN];,daebefceb98690d69ef11150f1b42f6c75618faf02a4948e4e2fb155bd5c19e5
wireshark-2.2.17/ui/traffic_table_ui.c,49,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,const char *conv_column_titles[CONV_NUM_COLUMNS] = {,992800b39b264ac2263656b874a0a21b2a666724ac919188e3e266eb6db38fb9
wireshark-2.2.17/ui/traffic_table_ui.c,70,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,const char *endp_column_titles[ENDP_NUM_COLUMNS] = {,809fa634412d6e050c381150d51d1a4a5ccd571c86f79ab3e581cec70bfe3d68
wireshark-2.2.17/ui/traffic_table_ui.h,54,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,extern const char *conv_column_titles[CONV_NUM_COLUMNS];,4e4e839085488ad1fc32a4005526b31e421dead74cd7cad1d3a8ea7a119935c8
wireshark-2.2.17/ui/traffic_table_ui.h,72,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,extern const char *endp_column_titles[ENDP_NUM_COLUMNS];,5f1ded21f6e8ca1dc964bd7b19f58c88cfaa3f5fe3e9f6474c383d464550ed93
wireshark-2.2.17/ui/util.c,283,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(phostname, lastp, hostlen);",b7d010560c55ff7caab8d7a65d48901872481bbb705d6ed9ef5b661aa60e3976
wireshark-2.2.17/ui/voip_calls.c,71,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,const char *voip_call_state_name[8]={,e39f8860461591d79e35fefa2a9989ed2305237c98aba8d62c33a45c4f28781d
wireshark-2.2.17/ui/voip_calls.h,58,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,extern const char *voip_call_state_name[8];,d62159e1c0f5b913fcf84d1129eb5290eb8fae47fe8bc79a89b0df4b6c56c7e0
wireshark-2.2.17/ui/win32/file_dlg_win32.c,192,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR file_name16[MAX_PATH] = _T("""");",000d4abbea8b5ed57916243ef5f2a7d8b30ecccf91b821816ee39bb7b4ae850c
wireshark-2.2.17/ui/win32/file_dlg_win32.c,349,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR  file_name16[MAX_PATH] = _T("""");",64e08f7f019acd306849cdb479febe3081634cd02e00062dc84771a30798d88c
wireshark-2.2.17/ui/win32/file_dlg_win32.c,426,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR  file_name16[MAX_PATH] = _T("""");",64e08f7f019acd306849cdb479febe3081634cd02e00062dc84771a30798d88c
wireshark-2.2.17/ui/win32/file_dlg_win32.c,497,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR  file_name16[MAX_PATH] = _T("""");",64e08f7f019acd306849cdb479febe3081634cd02e00062dc84771a30798d88c
wireshark-2.2.17/ui/win32/file_dlg_win32.c,573,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR         file_name16[MAX_PATH] = _T("""");",366f01c643a87d3195b1aee71957b28f15ba2175461378c99fc33ce81a45cba6
wireshark-2.2.17/ui/win32/file_dlg_win32.c,649,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR             file_name[MAX_PATH] = _T("""");",3575ff073839131d6178e8e1c349159814c0013969902192cefb6dd5f262e531
wireshark-2.2.17/ui/win32/file_dlg_win32.c,754,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR         file_name[MAX_PATH] = _T("""");",b8b972752093e6dad137bc68c99de71bf14f4cdaab6fb92fe37d0b0ee5e6f888
wireshark-2.2.17/ui/win32/file_dlg_win32.c,827,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR         file_name[MAX_PATH] = _T("""");",b8b972752093e6dad137bc68c99de71bf14f4cdaab6fb92fe37d0b0ee5e6f888
wireshark-2.2.17/ui/win32/file_dlg_win32.c,904,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR  file_name[MAX_PATH] = _T("""");",cd687a3300157e98286e00ce792a0081ea7c8493d692baba461ea5e34d91afcf
wireshark-2.2.17/ui/win32/file_dlg_win32.c,955,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    TCHAR  file_name[MAX_PATH] = _T("""");",cd687a3300157e98286e00ce792a0081ea7c8493d692baba461ea5e34d91afcf
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1125,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR       string_buff[PREVIEW_STR_MAX];,f95a21b8427fccdf7cff98eac9cadffaf767c6e4e08905dcf9bd263689257aa3
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1310,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(strval, filter_text, len);",f1c44edcb006a742824b390ebd6a518ca629148d812a644f413c5ab7bd2bf8c2
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1342,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR     sel_name[MAX_PATH];,b330fff7ff37bfbcae6ea3e763c71dc3e56e44bb93ab17379c1eeeb31fa0beb0
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1918,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR    static_val[STATIC_LABEL_CHARS];,0195fc080a3077e91cec37320447c5528d7943636a8a46dbdd23c25ac6a28fcc
wireshark-2.2.17/ui/win32/file_dlg_win32.c,2154,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR range_text[RANGE_TEXT_MAX];,f481d16310ee1a131cffa2d3ed252f11097d82d12fcf56bf52f20f1e35633cd4
wireshark-2.2.17/ui/win32/file_dlg_win32.c,2224,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR     sel_name[MAX_PATH];,b330fff7ff37bfbcae6ea3e763c71dc3e56e44bb93ab17379c1eeeb31fa0beb0
wireshark-2.2.17/ui/win32/file_dlg_win32.c,2360,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR         raw_msg[STATIC_LABEL_CHARS];,71f58349290e8bd8fd7b6fa3ce9d1da3d1f208723f90474f4c393881c506b150
wireshark-2.2.17/ui/win32/file_dlg_win32.c,2388,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR         sslkeys_msg[STATIC_LABEL_CHARS];,8aea4b2fb3b8486d46edf6e4807a0bb79058aed7ce96a31ca3d1a5655a5c5a3a
wireshark-2.2.17/ui/win32/print_win32.c,186,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[MAX_BUF_SIZE];,8b5b3ddbcdce6da1aa35ae0591207c342cd71462b946b5b0f38f233406602382
wireshark-2.2.17/wiretap/ascend.c,1085,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];,81a61aabea773ce5c14dad61d7243fe03297e8078bd2a40f976aa1d0a22f382d
wireshark-2.2.17/wiretap/ascend.c,1279,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char yymsgbuf[128];,93ae2f12b6366f758688707b840f2220226a0ffcc07b6f9c76f044046ff31b16
wireshark-2.2.17/wiretap/btsnoop.c,83,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char magic[sizeof btsnoop_magic];,1a755731b9986ee1fe369c5b8d8d3c430d15cc0afba007363a96633b92993857
wireshark-2.2.17/wiretap/capsa.c,130,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic[sizeof capsa_magic];,20335ec7bc29f5850e59bb024c0fa5ffcfd68154ace399bee1948fc7288eda38
wireshark-2.2.17/wiretap/catapult_dct2000.c,387,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char timestamp_string[MAX_TIMESTAMP_LEN+1];,b182bf4ea83bbc8d52e247a78a7477b038aa658d8048d2214059e6ca71434974
wireshark-2.2.17/wiretap/catapult_dct2000.c,416,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(line_prefix_info->before_time, linebuff, before_time_offset);",4aec842d92231dd054b86382a0ac2bf0a5301cd09c98b6516ede36ce487225b1
wireshark-2.2.17/wiretap/catapult_dct2000.c,430,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(line_prefix_info->after_time, linebuff+after_time_offset, dollar_offset - after_time_offset);",b5166826d7da81fb5e62a993c598176b40bfcffd03dd1e9fae2cf1b79876041d
wireshark-2.2.17/wiretap/catapult_dct2000.c,499,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,        char timestamp_string[MAX_TIMESTAMP_LEN+1];,b182bf4ea83bbc8d52e247a78a7477b038aa658d8048d2214059e6ca71434974
wireshark-2.2.17/wiretap/catapult_dct2000.c,767,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            char c[1];,0c7f65cec122bd7d2403b64c5c9a9bea4c966c087beeb8bd289552de25f6640b
wireshark-2.2.17/wiretap/catapult_dct2000.c,849,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char port_number_string[MAX_PORT_DIGITS+1];,cbefb84b24658727590f9472b83002a0d15d7662d818e74f5bed71910137f562
wireshark-2.2.17/wiretap/catapult_dct2000.c,855,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char seconds_buff[MAX_SECONDS_CHARS+1];,51b6225c6e3370a404268f266406fdb914419b5cb9fd214f7a6e28dd0c8e80cb
wireshark-2.2.17/wiretap/catapult_dct2000.c,857,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char subsecond_decimals_buff[MAX_SUBSECOND_DECIMALS+1];,71c6eac348f65cdcb12977da70740bd9dc96d97df54ed8e49d1d47129965249e
wireshark-2.2.17/wiretap/catapult_dct2000.c,927,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            *context_portp = atoi(port_number_string);,65f5ccff8c22f63a422ced1883add0bca727f0d54283498c524a1775506606f4
wireshark-2.2.17/wiretap/catapult_dct2000.c,976,27,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,                variant = atoi(variant_name);,c58c619a55cd0f10c206a505725f65cf02cc2aef13e5802cc5186b8ba2f18472
wireshark-2.2.17/wiretap/catapult_dct2000.c,1201,16,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    *seconds = atoi(seconds_buff);,22cd44a981225c678a77dd5ceb6cfb4f5b6bd184628dbfc3a12655e93dbb80ea
wireshark-2.2.17/wiretap/catapult_dct2000.c,1228,17,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    *useconds = atoi(subsecond_decimals_buff) * 100;,17f13ac1d5974f7baeded3711367398c1ae618d41227896f556fa02dcd33f774
wireshark-2.2.17/wiretap/catapult_dct2000.c,1552,18,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static const char hex_lookup[16] =,6fb17c21cd49a8e79f60210769165b54c55041b706be1d0e4f91c5aad6512d67
wireshark-2.2.17/wiretap/catapult_dct2000.c,1594,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char month[MAX_MONTH_LETTERS+1];,a3027832924349284a7185d084d4cf21a20502a53230200796f9c6dbd9a1329c
wireshark-2.2.17/wiretap/cosine.c,199,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[COSINE_LINE_LENGTH];,fb92ce20b884a989a874e179e5746bdd59f735f331179fa13d74f29258aeeab6
wireshark-2.2.17/wiretap/cosine.c,230,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	buf[COSINE_LINE_LENGTH];,f0816a6a9cdf0dab9525c1c2c8de8ae178afaedc30b058d2a5fbc845eec08e21
wireshark-2.2.17/wiretap/cosine.c,286,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	line[COSINE_LINE_LENGTH];,9a61dc03a8ed15861785c851cefe7885fb61b200b94935841d4c39b66b5da1a2
wireshark-2.2.17/wiretap/cosine.c,304,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	line[COSINE_LINE_LENGTH];,9a61dc03a8ed15861785c851cefe7885fb61b200b94935841d4c39b66b5da1a2
wireshark-2.2.17/wiretap/cosine.c,336,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char	if_name[COSINE_MAX_IF_NAME_LEN] = """", direction[6] = """";",620cfc10256549fd1c4a7bfb6b14e3007f5254a22e507d21dd963e1f029aab46
wireshark-2.2.17/wiretap/daintree-sna.c,86,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char readLine[DAINTREE_MAX_LINE_SIZE];,c8c3c06945d4eb1fcce827c98795e5816f0c2228fc821f8092b71010c8b88315
wireshark-2.2.17/wiretap/daintree-sna.c,159,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char readLine[DAINTREE_MAX_LINE_SIZE];,c8c3c06945d4eb1fcce827c98795e5816f0c2228fc821f8092b71010c8b88315
wireshark-2.2.17/wiretap/daintree-sna.c,160,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char readData[READDATA_BUF_SIZE];,99ef2eccadde66d2a3cb50544200cd5bfd4878d08e8101c5605098aab4696f78
wireshark-2.2.17/wiretap/daintree-sna.c,254,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(ws_buffer_start_ptr(buf), readData, bytes);",f321c5da4b3e4ff1ab968ad70bf2572eaabc7cbe26c83d89c85e14c5f11be619
wireshark-2.2.17/wiretap/dbs-etherwatch.c,140,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    buf[DBS_ETHERWATCH_LINE_LENGTH];,54533d68efb94df27983e707506aaa8437b5cc6bed6e34663f29f3f79462d685
wireshark-2.2.17/wiretap/dbs-etherwatch.c,274,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    line[DBS_ETHERWATCH_LINE_LENGTH];,f275d19540afbf6388ef86b4c0cfc31a7563d028b015eca70b89211bb34de97b
wireshark-2.2.17/wiretap/dbs-etherwatch.c,279,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char mon[4] = ""xxx"";",54a7aeed59e9c8d304727cf2152990a02f9b4e3cd0807795e5a4958eed7c9161
wireshark-2.2.17/wiretap/dct3trace.c,133,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[32];,917f6ed0ae72790ae84d5546f1fd6d51df65d8cc348e82b8bf2389e3a4b61c78
wireshark-2.2.17/wiretap/dct3trace.c,148,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buf, start, end - start);",52b7541247ec0102c0fba6df2596a3fddd46050f50d4f0a4a6349048d02aa692
wireshark-2.2.17/wiretap/dct3trace.c,150,9,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,	*val = atoi(buf);,40df9f5e75cde542830345fa068eb270fdcfbe744b3c4e73a203f9ebfc56e0a7
wireshark-2.2.17/wiretap/dct3trace.c,157,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char line1[64], line2[64];",32a52cfe7d882d65df8188ee2130a70c496b8e3bdd1627e9e0e169265ecad516
wireshark-2.2.17/wiretap/dct3trace.c,190,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char line[1024];,5f7c8de949da56768253d9720bc45f0c5abcad22f8508d2df1b41eee3d14c498
wireshark-2.2.17/wiretap/dct3trace.c,221,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy( ws_buffer_start_ptr(buf), databuf, phdr->caplen );",3a98b2ad8bbb669a08248d3504a8639c18cc6abd413ebf328ae65f95f5c0fdee
wireshark-2.2.17/wiretap/erf.c,240,14,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,    if ((n = atoi(s)) >= 0 && n < 101) {,ae19461adfdec8fc68342316d5d7d7d30c36e590225b4e70dd9adf19398ad401
wireshark-2.2.17/wiretap/erf.c,588,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"      memcpy(&pseudo_header->erf.ehdr_list[i].ehdr, &erf_exhdr_sw, sizeof(erf_exhdr_sw));",346d232083a4399b5f4e52aa9ef1ca911047b9dfc85885259144a07521cad920
wireshark-2.2.17/wiretap/erf.c,757,11,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"          memcpy(&erf_subhdr[0], &pseudo_header->erf.subhdr.eth_hdr, sizeof pseudo_header->erf.subhdr.eth_hdr);",ccd4bfbc93610b280a16de06677e220bb11f7bb3a391d06e6d2a8cb45e551b51
wireshark-2.2.17/wiretap/erf.c,1071,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char sourceid_buf[16];,18ba765de9403d9c859a7a182c5350652c824d1c310805dbb7e3845b729a5352
wireshark-2.2.17/wiretap/erf.c,1073,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char hostid_buf[24];,404d8f5281cf4aecc76ab47285f07fc6c728e8edf910b628f649ef7e5a7c8b00
wireshark-2.2.17/wiretap/erf.c,1109,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char portstr_buf[16];,a81a98fd5e93bcf6c93f0093edd9a9634c57c5cc78810e8310df6aece118ae62
wireshark-2.2.17/wiretap/eyesdn.c,133,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	magic[EYESDN_HDR_MAGIC_SIZE];,8b935c3a267ac4534d059511c1d4a37388c76a70ae0bb87c9fc4d237af43a161
wireshark-2.2.17/wiretap/eyesdn.c,244,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		unsigned char cell[CELL_LEN];,a68370fed8cc52f973376e73e86c88ceb4fbab7db56db14fab3e7e4b02a72f08
wireshark-2.2.17/wiretap/file_wrappers.c,173,22,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,            unsigned char window[ZLIB_WINSIZE]; /* preceding 32K of uncompressed data */,a7b318966427a1f4b4bccdf8bbb3cf4b597bb96f44f78e4747233fc0764bccd0
wireshark-2.2.17/wiretap/file_wrappers.c,183,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char window[ZLIB_WINSIZE]; /* preceding 32K of uncompressed data */,a7b318966427a1f4b4bccdf8bbb3cf4b597bb96f44f78e4747233fc0764bccd0
wireshark-2.2.17/wiretap/file_wrappers.c,406,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(val->data.zlib.window, point->window + point->pos, left);",555e95afd9b21fa2001459943bb84cd8b78028202e9c52336451f54da8a668d5
wireshark-2.2.17/wiretap/file_wrappers.c,407,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(val->data.zlib.window + left, point->window, point->pos);",2a5701298b01d93e79ec6cb88100a738c5b3419418c2f49a34d358122b4b9fca
wireshark-2.2.17/wiretap/file_wrappers.c,409,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(val->data.zlib.window, point->window, ZLIB_WINSIZE);",1bc50b1dd4a6b71c117f47873083fc89aa7db833a36b8fc6a6fe89a884365f98
wireshark-2.2.17/wiretap/file_wrappers.c,506,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(cur->window + cur->pos, buf2, left);",027939c57f0ce6a62bc77b9e2085f27ab8b7c72dc4184583f37063e377afe2f3
wireshark-2.2.17/wiretap/file_wrappers.c,508,25,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                        memcpy(cur->window, buf2 + left, ready - left);",d7d7a8b8ab4f57065ec4fedc6cc4df6c5f4d7f2ed7a70f37539f0dbfb510e7dc
wireshark-2.2.17/wiretap/file_wrappers.c,513,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(cur->window + cur->pos, buf2, ready);",cdebaf8b5d4fbae606f98b14196cfc4e2ce565df18a8920f2b589cc3a6c7014a
wireshark-2.2.17/wiretap/file_wrappers.c,522,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(cur->window, buf2 + (ready - ZLIB_WINSIZE), ZLIB_WINSIZE);",0cfea2c2564021ef52c7e93f43b805a7854b6954f30996b514afd8010acef459
wireshark-2.2.17/wiretap/file_wrappers.c,686,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(state->next + state->have, state->next_in, state->avail_in);",cd72b1cd4242dd44a979ec465cc3d675d408f28fa645e43d7df5cebf931ef481
wireshark-2.2.17/wiretap/file_wrappers.c,1216,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(buf, file->next, n);",4ad11e96fdc2e3c439817298fc0e76d7a1925fc25ee07f57a67dd351c90708ba
wireshark-2.2.17/wiretap/file_wrappers.c,1304,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char buf[1];,6de30b391b4f76e6d5d3b4b978be2c010917c41b41cd8dfc82223c54a307a9dd
wireshark-2.2.17/wiretap/file_wrappers.c,1377,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(buf, file->next, n);",4ad11e96fdc2e3c439817298fc0e76d7a1925fc25ee07f57a67dd351c90708ba
wireshark-2.2.17/wiretap/file_wrappers.c,1671,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy((Bytef *)strm->next_in + strm->avail_in, buf, n);",b9d3485368e3eaf1808423efe8e20ba4c77ff0c7c3aa7b481ee83d6b1fe04155
wireshark-2.2.17/wiretap/file_wrappers.c,1674,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(strm->next_in + strm->avail_in, buf, n);",ce8c2fe6c7c008ed0e8ed0440c27beb9667fda942bc0e7b1bb85aa305d687c82
wireshark-2.2.17/wiretap/ipfix.c,195,18,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,        if ((n = atoi(s)) > 0 && n < 101) {,26a012f7096f9a47df8a9d7046a1b7c21b942494e989d3560ece848c8dae7a59
wireshark-2.2.17/wiretap/iptrace.c,53,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char name[NAME_SIZE+1];,629fa1ca8c0cf0fe1e19408d0f607ab221768aa1a58af9ad0584377de0c88c52
wireshark-2.2.17/wiretap/iptrace.c,107,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,/* 12-15 */	char		if_name[4];	/* null-terminated */,8969d790a9936aea426fcab566433a4ae3417429ba5facca465ea821c2cd2a94
wireshark-2.2.17/wiretap/iptrace.c,108,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,/* 16-27 */	char		junk2[12];	/* ??? */,837a9943c440116ad069902d324b870b8c2ba53675ae0f3b777f03fcafff0d3b
wireshark-2.2.17/wiretap/iptrace.c,279,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,/* 12-15 */	char		if_name[4];	/* null-terminated */,8969d790a9936aea426fcab566433a4ae3417429ba5facca465ea821c2cd2a94
wireshark-2.2.17/wiretap/iptrace.c,280,13,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,/* 16-27 */	char		if_desc[12];	/* interface description. */,1c8ea17d9a8b79a09ef7c6a4e9b23bf62da330c0865d87e540601ddf4feaed16
wireshark-2.2.17/wiretap/iptrace.c,485,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	if_text[9];,069c6975e2b3e21428dec6b025c69bfa2a289e04308c2a457250cace11b535e7
wireshark-2.2.17/wiretap/iptrace.c,494,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(if_text, &header[20], 8);",9970498e5ea89829035572ed1df49f989a74b1248f3ee5138d937950eb2cddca
wireshark-2.2.17/wiretap/iseries.c,216,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char magic[ISERIES_LINE_LENGTH];,f10487401a28d4d95a5a6034cd8fd29f5bbf0cfaf7cd52861b2fb47cbb7ca9c0
wireshark-2.2.17/wiretap/iseries.c,324,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char       buf[ISERIES_LINE_LENGTH], protocol[9];",fe098a64116e1ecee7ebaefc87f333aa9d077b07d7faa915fb06db0730ea7bce
wireshark-2.2.17/wiretap/iseries.c,419,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char       buf[ISERIES_LINE_LENGTH],type[5];",7978e887e69c7b986bfa2973afb27761403f0e3ff79a86f55aa5e928ad91188f
wireshark-2.2.17/wiretap/iseries.c,582,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"  char       direction[2], destmac[13], srcmac[13], type[5], csec[9+1];",dc089a316f8599ec11fe644fc02f260d551340fed9ef1e6bb6677944f351c4ee
wireshark-2.2.17/wiretap/iseries.c,583,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char       data[ISERIES_LINE_LENGTH * 2];,4b2849c6cd2713b1b98efa41257edb071c8be01e48fb1aec0d01342c3dc2f9af
wireshark-2.2.17/wiretap/iseries.c,763,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            phdr->ts.nsecs = atoi(csec) * 100000000;,666e427c88d1c8ec5bb4a9a9fc378b36a348a5483099182d6004726f14ac6713
wireshark-2.2.17/wiretap/iseries.c,766,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            phdr->ts.nsecs = atoi(csec) * 10000000;,97447d1e743d2d8ffe4e84ea7ca27b24243d2ffa8284be3dbf8835ab32105226
wireshark-2.2.17/wiretap/iseries.c,769,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            phdr->ts.nsecs = atoi(csec) * 1000000;,93ac7d7a4f64a988bf0d284167d31ba2a05d9ed95fb23b07d7ff4c2413e4059c
wireshark-2.2.17/wiretap/iseries.c,772,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            phdr->ts.nsecs = atoi(csec) * 100000;,4e81fcd07f662628012cb5d8580aa30b1e7afd6045050b15a76bf4e196ec9f0a
wireshark-2.2.17/wiretap/iseries.c,775,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            phdr->ts.nsecs = atoi(csec) * 10000;,a37ba6a97a202bbb3df154690b4e7eb3527dcff040dc8392f88ba16425a6e9cb
wireshark-2.2.17/wiretap/iseries.c,778,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            phdr->ts.nsecs = atoi(csec) * 1000;,b6ec1b71f8a0822850cd1acf9ea56b5df4aaab766898e197b229e6cbbca4f0fc
wireshark-2.2.17/wiretap/iseries.c,781,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            phdr->ts.nsecs = atoi(csec) * 100;,e30283dbb035086dace7910fcab0aa1f2dd094148d09dada7631f7ee154249e5
wireshark-2.2.17/wiretap/iseries.c,784,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            phdr->ts.nsecs = atoi(csec) * 10;,1b8147e3f8b33c70b5a85a779930be0669b51e1a30800822dcc7951538c1a522
wireshark-2.2.17/wiretap/iseries.c,787,30,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            phdr->ts.nsecs = atoi(csec);,c3be5d41a39ff9eba270eea8908ce210c3a069c92e17c2c84512dbfa2ccb1df1
wireshark-2.2.17/wiretap/iseries.c,816,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&ascii_buf[0], destmac, 12);",47353a73fd190c30e7ab49d4bbbc541d97d32d158e6f91c1e51d001a4a29ad21
wireshark-2.2.17/wiretap/iseries.c,818,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&ascii_buf[12], srcmac, 12);",953fb23dc3dcbaec9fae88f5bf5573952b7881fa6852d496f1d1f125e92d9822
wireshark-2.2.17/wiretap/iseries.c,820,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&ascii_buf[24], type, 4);",38f48f2e5472b3158fff62892fd538184dec1dcc0b32a8f871ab5e3b1e9f92ba
wireshark-2.2.17/wiretap/k12.c,616,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ws_buffer_start_ptr(target), buffer + buffer_offset, length);",7498a4096182458041de0256df8f89ace01b065d8620094d5ebf6905cd8d1982
wireshark-2.2.17/wiretap/k12.c,621,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ws_buffer_start_ptr(&(k12->extra_info)),",aaa618f1d14ac602803395cb64013f203a60b6d99517f953f1cf971c2e3662a0
wireshark-2.2.17/wiretap/k12.c,657,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&(phdr->pseudo_header.k12.input_info),&(src_desc->input_info),sizeof(src_desc->input_info));",463f93e2a9ee8ff03fc49f7ca5ffa278f2f10b854e9c8897b96d84e569f3ebea
wireshark-2.2.17/wiretap/k12.c,1244,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(obj.buffer + offset,",09b5339e41da77530c045f01558ecfb99b4c16b94e3efc4fee11013141399fab
wireshark-2.2.17/wiretap/k12.c,1248,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(obj.buffer + offset + obj.record.name_len,",a077cec03c2e5929c67efa98049e2acb67879b2b223de8a4ec7d8922243e4339
wireshark-2.2.17/wiretap/k12.c,1311,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(obj.record.frame,pd,phdr->caplen);",f80e3e3ceafc22af0a65b43176346a83b11598c0f0df7416c5c9ed024a3378fb
wireshark-2.2.17/wiretap/k12text.c,2883,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(ws_buffer_start_ptr(wth->frame_buffer), state.bb, wth->phdr.caplen);",6448736ef9a385421524ba48316b7d2859dc005e6aafef8d40bd5215636e1253
wireshark-2.2.17/wiretap/k12text.c,2915,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(ws_buffer_start_ptr(buf), state.bb, phdr->caplen);",1037431a905514335d4b8b8b60df895fc2276bb6d97b0c3418b1c4305e1a26b3
wireshark-2.2.17/wiretap/lanalyzer.c,282,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char header_fixed[2];,0ca2b0fddb65eb4b810185ad7e0eee871975d8f6700b97a72d1dedf30c932210
wireshark-2.2.17/wiretap/lanalyzer.c,284,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char summary[210];,3155b2518a09f9453030dd0153e5ada8d262b6e0fc57dcfd26f8bd64a7437317
wireshark-2.2.17/wiretap/lanalyzer.c,440,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char         LE_record_type[2];,752b988208f2db47236ba88094d6742a225e90e18bcf1d35ee9a721e44e43390
wireshark-2.2.17/wiretap/lanalyzer.c,441,7,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      char         LE_record_length[2];,c658b2b6d916d65d06fbea30a0915c9ba73af1999a5691dc5fa2180a21d1da95
wireshark-2.2.17/wiretap/libpcap.c,971,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&rec_hdr.ifindex, pseudo_header->nokia.stuff, 4);",204b9b5c277c45e61b3907dc6bacd303e002153123d89da7ffe60a270a9090f6
wireshark-2.2.17/wiretap/logcat.c,201,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(pd, tmp, 2);",bc177db9f15ad149f3eb75810abe351119e88dc2777aa28a50d7625fc62b3177
wireshark-2.2.17/wiretap/logcat_text.c,242,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(pd, cbuff, phdr->caplen + 1);",6712a15d461c72bb783a3b159801575da59cd7016fbf13519607e8818390b0cb
wireshark-2.2.17/wiretap/mime_file.c,177,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic_buf[128]; /* increase buffer size when needed */,1af4e4f26a74c7daff67ebede6bd9fcb3adac4a8586986c188081808562b4585
wireshark-2.2.17/wiretap/mpeg.c,237,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic_buf[16];,7dcca956bd8e8c5abc0fc465c976f70e1ffd7228b4a1be09a5cb5efdd5946049
wireshark-2.2.17/wiretap/netmon.c,47,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char netmon_1_x_magic[MAGIC_SIZE] = {,8581bae0d4a0165af0a961312561927a2603f78ac37cb29e8d00e5e3f21bdc73
wireshark-2.2.17/wiretap/netmon.c,52,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char netmon_2_x_magic[MAGIC_SIZE] = {,58279d1e22396f3901189761905db5892166c651bae4e74eb2509ddccf2f2c1f
wireshark-2.2.17/wiretap/netmon.c,190,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic[MAGIC_SIZE];,47b3a8e322d7c47d5beb71f2111b66eb01ebec5926fef9ed042dc8128b40d0f0
wireshark-2.2.17/wiretap/netscaler.c,996,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ws_buffer_start_ptr(wth->frame_buffer), type, (phdr)->caplen);\",f44f439a430a4ccde6368b3850cd188055e4593a948f502411e384198d914c07
wireshark-2.2.17/wiretap/netscaler.c,1176,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ws_buffer_start_ptr(wth->frame_buffer), fp, (phdr)->caplen);\",342504852c394795ad03c565807cdfb0a6a3da8400227af360c8f5f8f0d39ee4
wireshark-2.2.17/wiretap/netscaler.c,1397,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ws_buffer_start_ptr(wth->frame_buffer), nstrace_tmpbuff, (phdr)->caplen);\",8135952a1bef2599137704acc8edb72727846b1bfc57e9d42d138cbfc4c00f5f
wireshark-2.2.17/wiretap/netscaler.c,1547,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(pd, (void *)&hdr, sizeof hdr);",6087410a6e6772258394c22f94f1fb89213fcfe28c70b97371d2201aa4abc88b
wireshark-2.2.17/wiretap/netscaler.c,1654,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(pd, (void *)&hdr, hdrlen);",07b01207927e98c207d466c28f9587938fe6eb38f3e256bc00c6816830427bf1
wireshark-2.2.17/wiretap/netscaler.c,1780,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(pd, (void *)&hdr, hdrlen);",07b01207927e98c207d466c28f9587938fe6eb38f3e256bc00c6816830427bf1
wireshark-2.2.17/wiretap/netscaler.c,1901,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(sig10.phd.ph_RecordType, &val16b, sizeof sig10.phd.ph_RecordType);",d79d8f34561885e0977597944f39ec14c479e27b586f716edaab99fd13f91691
wireshark-2.2.17/wiretap/netscaler.c,1903,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(sig10.phd.ph_RecordSize, &val16b, sizeof sig10.phd.ph_RecordSize);",4d82ba9b85e143f2d74c77c0f319492d70dba22b4a848f6068a53149ee5813ff
wireshark-2.2.17/wiretap/netscaler.c,1921,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(sig20.sig_Signature, NSPR_SIGSTR_V20, sizeof(NSPR_SIGSTR_V20));",7421bee076af6abea8a0fae6c106475074b9c12f18d7106cc9200e2eb7f0e8d0
wireshark-2.2.17/wiretap/netscaler.c,1937,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(sig30.sig_Signature, NSPR_SIGSTR_V30, sizeof(NSPR_SIGSTR_V30));",96012387ec8974326d4ea482b808664fb7c3a9be21157bd5867dc81e3e1319df
wireshark-2.2.17/wiretap/netscaler.c,1952,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(sig35.sig_Signature, NSPR_SIGSTR_V35, sizeof(NSPR_SIGSTR_V35));",3586b3da43079b84cfd38aabe438a1dd92d193d180ad790329fa009018bc0cc7
wireshark-2.2.17/wiretap/netscaler.c,1987,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(abs10.phd.ph_RecordType, &val16, sizeof abs10.phd.ph_RecordType);",96a21da877e0a3330e6e1141e94652cfe996b9b2b0d486600b3d8a9711226967
wireshark-2.2.17/wiretap/netscaler.c,1989,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(abs10.phd.ph_RecordSize, &val16, sizeof abs10.phd.ph_RecordSize);",bdca64849b50d309d39c3529ba8896a8c39bb792fe6057ef29e695eb39d5b883
wireshark-2.2.17/wiretap/netscaler.c,1991,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&reltime, ((const nspr_pktracefull_v10_t *)pd)->fp_RelTimeHr, sizeof reltime);",b104ecf23b1b217388f557fb9973b37abb25274e32d94ecb3afde58188c21259
wireshark-2.2.17/wiretap/netscaler.c,1996,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(abs10.abs_Time, &abstime, sizeof abs10.abs_Time);",f37698446a285c5899f95eabe5af065260bfe511eaed90aac467e425925e65b2
wireshark-2.2.17/wiretap/netscaler.c,2015,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&reltime, ((const nspr_pktracefull_v20_t *)pd)->fp_RelTimeHr, sizeof reltime);",57d5389f44a03458cede83ca84330f0c309a2cb55aa87177d65b10601eb7c58a
wireshark-2.2.17/wiretap/netscaler.c,2020,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(abs20.abs_RelTime, &abstime, sizeof abs20.abs_RelTime);",269238d4f1b39b42567a38989f0d7f260e46070fec4d4dfdb6f1e9c0d082bc04
wireshark-2.2.17/wiretap/netscreen.c,102,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[NETSCREEN_LINE_LENGTH];,e7bb9b97bc47862b997d62b5e739980755154ee600f53e3316df5ca302e5f1b9
wireshark-2.2.17/wiretap/netscreen.c,134,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	buf[NETSCREEN_LINE_LENGTH];,dbee1ab9f4b296702468871d41a3a82b0e2e0ce1471d7aec7e837d876aa299df
wireshark-2.2.17/wiretap/netscreen.c,190,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		line[NETSCREEN_LINE_LENGTH];,58165789b8d7ac4a053ecbcdd5574019d835ae37cf2de4fb80724e9dc14d3c9c
wireshark-2.2.17/wiretap/netscreen.c,227,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		line[NETSCREEN_LINE_LENGTH];,58165789b8d7ac4a053ecbcdd5574019d835ae37cf2de4fb80724e9dc14d3c9c
wireshark-2.2.17/wiretap/netscreen.c,269,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		cap_int[NETSCREEN_MAX_INT_NAME_LENGTH];,83581e8e3a43e75f578d28f71a9491b9c5bd70e8b849ca3e1c9bc673a1bc0813
wireshark-2.2.17/wiretap/netscreen.c,270,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		direction[2];,b1a40f52da6afb2a8daed4412b750bb3a58abdf9a64c0d0d434e0d23d68b1b8c
wireshark-2.2.17/wiretap/netscreen.c,271,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		cap_src[13];,f9873996bbf5bf362d4e490671160f0f2c252b881f087225232d7c0a8831c5a8
wireshark-2.2.17/wiretap/netscreen.c,272,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char		cap_dst[13];,7970fd5ce72e74a9dc61671a2ac365bdb0725983ca21639444cc64c7e9189526
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,356,176,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"write_packet_data(wtap_dumper *wdh, struct wtap_pkthdr *phdr, int *err, gchar **err_info, guint8 *file_buf, time_t start_time, int ms, exported_pdu_info_t *exported_pdu_info, char name_str[64])",74e9ed07602ccad83ba71630e81e3f71d052232474a1c6a216033124c4260781
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,359,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char proto_name_str[16];,c7b835328e80f2016b8c0196d7b8f04503775f76a0ff435dda198728f7e22d5d
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,360,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char dissector_table_str[32];,37414c0e7106b52ccd73a956a1f092a98fe2fedd36217da3c15d680527ac58b4
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,477,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&packet_buf[4], proto_name_str, proto_str_len);",9acc07b2bfac1fba6e07b05dfdda603327b92705cb07754924efc4aa08556675
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,484,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&packet_buf[4], dissector_table_str, dissector_table_str_len);",27b7a965d2db6967e4715a2f25120cc493c1af5eda4adabd5e0bcf027031b4d6
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,727,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char name_str[64];,c298fa40097937a6afec5662e6ef2f33e6ffe0259d80e6c977942449290a4929
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,955,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,				char transp_str[5];,392aa9919c3b87162fc65396d9f061810a1678bbd6c8c0ed362030fcf65978c4
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,1002,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,				char transp_str[5];,392aa9919c3b87162fc65396d9f061810a1678bbd6c8c0ed362030fcf65978c4
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,1085,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic_buf[512+1]; /* increase buffer size when needed */,5a9ffe825d9f68bc224bcbdff6c7d328eb075237cf88506602041f532445f2f4
wireshark-2.2.17/wiretap/network_instruments.c,591,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char comment[64];,1634b2aca8e3a5b7706a196f0dd73fa834a4c85bc4ec1d66f1aa95a0fb9a2f54
wireshark-2.2.17/wiretap/network_instruments.h,35,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    observer_version[31];,6439ddff89ff48eb31d3562ef08c9b078b067eadf41d821291f772dbe90c916e
wireshark-2.2.17/wiretap/netxray.c,37,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char old_netxray_magic[MAGIC_SIZE] = {,417c5275c2f87eb998e5acbb94253cd8e02478b5cdfe9a8c9b7c5123aaa00588
wireshark-2.2.17/wiretap/netxray.c,42,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,static const char netxray_magic[MAGIC_SIZE] = {,a71e1254f6151d5c253812fadb81ecc44b42dff77d6d0aa57bcece71c6d9fbd8
wireshark-2.2.17/wiretap/netxray.c,55,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	version[8];	/* version number				*/,6cbe278fd008650f6f36b369eefdf5f8d611760b09e1a4a273343e4baf57a090
wireshark-2.2.17/wiretap/netxray.c,424,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic[MAGIC_SIZE];,47b3a8e322d7c47d5beb71f2111b66eb01ebec5926fef9ed042dc8128b40d0f0
wireshark-2.2.17/wiretap/netxray.c,1800,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char hdr_buf[CAPTUREFILE_HEADER_SIZE - sizeof(netxray_magic)];,96faeaebe2901f2b3f73936b1168f57be6a55dcd03bbbe0a6fdbdcd4108a1ca8
wireshark-2.2.17/wiretap/netxray.c,1818,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(file_hdr.version, vers_1_1, sizeof vers_1_1);",12e1203f70ec698cc8e7863f83b06ce9e589c0197e0da60b7a0cbf73964d99be
wireshark-2.2.17/wiretap/netxray.c,1829,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(hdr_buf, &file_hdr, sizeof(file_hdr));",467e0e810d8f03d4ff2cfac479ed1884a4e76eae8608ff0d9e8caeb2ed4536e4
wireshark-2.2.17/wiretap/netxray.c,2009,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char hdr_buf[CAPTUREFILE_HEADER_SIZE - sizeof(netxray_magic)];,96faeaebe2901f2b3f73936b1168f57be6a55dcd03bbbe0a6fdbdcd4108a1ca8
wireshark-2.2.17/wiretap/netxray.c,2027,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(file_hdr.version, vers_2_001, sizeof vers_2_001);",f9f5665a499c4318f2111b90125b0c1ca2c64c40219d76cd6b10f39fcdac3b3c
wireshark-2.2.17/wiretap/netxray.c,2061,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(hdr_buf, &file_hdr, sizeof(file_hdr));",467e0e810d8f03d4ff2cfac479ed1884a4e76eae8608ff0d9e8caeb2ed4536e4
wireshark-2.2.17/wiretap/ngsniffer.c,547,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic[sizeof ngsniffer_magic];,bace9bcbd0f4b9e2888f3c6f893eb877a2fcfe052b57795c74442ce626e2797b
wireshark-2.2.17/wiretap/ngsniffer.c,548,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char record_type[2];,acd5b20d9651b104ec64d9987d1e1f1e7e7a55228589d944b70b38581752b04c
wireshark-2.2.17/wiretap/ngsniffer.c,549,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char record_length[4]; /* only the first 2 bytes are length,",8f0a9ec208928afbf871a398cc46d6ac1aaa0799d4f7dca0091244a073ecb17b
wireshark-2.2.17/wiretap/ngsniffer.c,785,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char record_type[2];,acd5b20d9651b104ec64d9987d1e1f1e7e7a55228589d944b70b38581752b04c
wireshark-2.2.17/wiretap/ngsniffer.c,786,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char record_length[4]; /* only the first 2 bytes are length,",8f0a9ec208928afbf871a398cc46d6ac1aaa0799d4f7dca0091244a073ecb17b
wireshark-2.2.17/wiretap/ngsniffer.c,790,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char buffer[256];,5ce3e1f2e4cb110480855571be75010b07c1e42a358679087c8b7cdd4ef966a9
wireshark-2.2.17/wiretap/ngsniffer.c,1136,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	record_type[2];,553f023b236ce16edbc0227763040372050aa5e93960d5996a16535f158f73b9
wireshark-2.2.17/wiretap/ngsniffer.c,1137,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	record_length[4]; /* only 1st 2 bytes are length */,ad495f9f044a0bd5e33a0a3e2c0aec0de61a38a2c0b1c776ad84bea27a5cd3cd
wireshark-2.2.17/wiretap/ngsniffer.c,1998,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char buf[6] = {REC_VERS, 0x00, 0x12, 0x00, 0x00, 0x00}; /* version record */",70f0f404e8bba6e8e21cb49bc71a3599e260785c03c0747cae4389827fcd2cf8
wireshark-2.2.17/wiretap/ngsniffer.c,2028,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char buf[6];,64a5741057bdfe9fd83e3c17e0bde24d19900cd80eabcda408e1e93777d9dc40
wireshark-2.2.17/wiretap/ngsniffer.c,2163,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char buf[6] = {REC_EOF, 0x00, 0x00, 0x00, 0x00, 0x00};",abb0b59283625e8560ba120a006b2a9050c5267a57076f844821e9d4d6d9c205
wireshark-2.2.17/wiretap/ngsniffer.c,2260,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy( pout, pout - offset, length ); \",b26b40a5a6d45b5ff8b4c8071ce34ddb3ddb468ebcf4029ed1fd974f99facdbb
wireshark-2.2.17/wiretap/ngsniffer.c,2505,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(outbuffer, &comp_stream->buf[comp_stream->nextout],",cb4cb68878b4b77fb1d1c998885c7895e5a7d7b39fbe80eff75383d3508c9627
wireshark-2.2.17/wiretap/ngsniffer.c,2570,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(comp_stream->buf, file_inbuf, in_len);",c916a3b82379e6bac1b5f7f8f4cd1c8057aba1f0d19bcc0abb6d0eed7dd8b1bf
wireshark-2.2.17/wiretap/pcap-common.c,957,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(pseudo_header->nokia.stuff, phdr, NOKIA_LEN);",690565e60c9993b8914b15c2acad5e3d4975f1bbc2e93d1d8a7285d8c9c4ebb6
wireshark-2.2.17/wiretap/pcap-common.c,1541,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"				memcpy(&pseudo_header->erf.ehdr_list[i].ehdr, &erf_exhdr_sw, sizeof(erf_exhdr_sw));",346d232083a4399b5f4e52aa9ef1ca911047b9dfc85885259144a07521cad920
wireshark-2.2.17/wiretap/pcap-common.c,1588,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&pseudo_header->erf.subhdr.eth_hdr, erf_subhdr, sizeof pseudo_header->erf.subhdr.eth_hdr);",fca35495340175cf1ce8de2c23921dd119a3d6cbf5dc2234c8f03c647814d8e3
wireshark-2.2.17/wiretap/pcap-common.c,2247,4,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"			memcpy(&erf_subhdr[0], &pseudo_header->erf.subhdr.eth_hdr, sizeof pseudo_header->erf.subhdr.eth_hdr);",ccd4bfbc93610b280a16de06677e220bb11f7bb3a391d06e6d2a8cb45e551b51
wireshark-2.2.17/wiretap/pcapng.c,801,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&tmp64, option_content, sizeof(guint64));",8606a374f09821565e8ace58d4b4c52ef38b868198cdd9c5b81202d3b26194e3
wireshark-2.2.17/wiretap/pcapng.c,1284,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&wblock->packet_header->pack_flags, option_content, sizeof(guint32));",0b3ad29f0a60f5ed4c9ce5759039f3e483da021a063f8764dcdfdb365230f4a8
wireshark-2.2.17/wiretap/pcapng.c,1287,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(option_content, &wblock->packet_header->pack_flags, sizeof(guint32));",66634167cd930e37b57c45ce9895a94b4664b95d65108b5bd3064e9bb3a44feb
wireshark-2.2.17/wiretap/pcapng.c,1312,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(&wblock->packet_header->drop_count, option_content, sizeof(guint64));",a223f7c168b1d6905db0ee1b61094521b9b58dde795730acc47c66eeca952a8f
wireshark-2.2.17/wiretap/pcapng.c,1315,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(option_content, &wblock->packet_header->drop_count, sizeof(guint64));",5e81795ee87d21b8cb34c33b39044c3ee5580b631b489d2569f814ed731fa7d6
wireshark-2.2.17/wiretap/pcapng.c,1662,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&v4_addr,",b75a156f63c49b6bbbfeae07447b6199cfffd8a7a63b77cfb360700a38f882a2
wireshark-2.2.17/wiretap/pcapng.c,1934,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&high, option_content, sizeof(guint32));",97be100ba47417f0b9f317d763a84655cf544146943bda2adc2234f44f177735
wireshark-2.2.17/wiretap/pcapng.c,1935,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&low, option_content + sizeof(guint32), sizeof(guint32));",053fccb8e6d6b5aae871950cb4849da20c265d2d5f6710b74e0a465174ccc54c
wireshark-2.2.17/wiretap/pcapng.c,1959,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&high, option_content, sizeof(guint32));",97be100ba47417f0b9f317d763a84655cf544146943bda2adc2234f44f177735
wireshark-2.2.17/wiretap/pcapng.c,1960,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&low, option_content + sizeof(guint32), sizeof(guint32));",053fccb8e6d6b5aae871950cb4849da20c265d2d5f6710b74e0a465174ccc54c
wireshark-2.2.17/wiretap/pcapng.c,1982,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&ifrecv, option_content, sizeof(guint64));",eb468212c7702f2f52674295d6a64b6d72bf567ae1e95aebbee218d34e299bd6
wireshark-2.2.17/wiretap/pcapng.c,1999,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&ifdrop, option_content, sizeof(guint64));",4913a5706ae2f2939c87fa48b8c072d704505a89bddfe2cc4335498369b0e0bf
wireshark-2.2.17/wiretap/pcapng.c,2016,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&filteraccept, option_content, sizeof(guint64));",257bf90932fb9674ad79abd9b2d6fd178773f35ae41fbe601b0e204f721e6b77
wireshark-2.2.17/wiretap/pcapng.c,2033,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&osdrop, option_content, sizeof(guint64));",9d323ef17f88520bcdea8224c70487cd80883514f1eb18cb7f64d38258c844f6
wireshark-2.2.17/wiretap/pcapng.c,2050,21,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                    memcpy(&usrdeliv, option_content, sizeof(guint64));",77c2d680eed13aa2b3ec20f5deff6a945f6b5e77855035bedeeb8cfbf1addc2b
wireshark-2.2.17/wiretap/pcapng.c,3251,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(*opt_ptrp, &option_hdr, 4);",23808ee3dc192bade25a3b21948df664727dbdd105d1e1d5c9cf3c5549fecf1e
wireshark-2.2.17/wiretap/pcapng.c,3254,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(*opt_ptrp, optval->stringval, size);",9d4882c523648c723bedbe91121e40b164494f3aa85100ff4fd80945a27b9cf4
wireshark-2.2.17/wiretap/pcapng.c,3272,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(*opt_ptrp, &option_hdr, 4);",23808ee3dc192bade25a3b21948df664727dbdd105d1e1d5c9cf3c5549fecf1e
wireshark-2.2.17/wiretap/pcapng.c,3275,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(*opt_ptrp, &optval->ipv4val, 4);",b4c56f3a52b0bd2be7195d0879376046693cdb42c1a00fc189683a47f9ec4a2f
wireshark-2.2.17/wiretap/pcapng.c,3281,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(*opt_ptrp, &option_hdr, 4);",23808ee3dc192bade25a3b21948df664727dbdd105d1e1d5c9cf3c5549fecf1e
wireshark-2.2.17/wiretap/pcapng.c,3284,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(*opt_ptrp, &optval->ipv6val, 16);",21bc4af6fefa02e91b6b72b605cf8aae423f14a5d22a3bb09b20ffc76596fc37
wireshark-2.2.17/wiretap/pcapng.c,3305,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(opt_ptr, &option_hdr, 4);",ddf84ae330a02691b1a8080cae0345b8e0fcc3a945ce594e72c427cd71bd3dcd
wireshark-2.2.17/wiretap/pcapng.c,3429,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(block_data, &bh, sizeof(bh));",287a7f8d9ebd343059f46fbc388ece53a612e81939f28544a38ab6b20913aa27
wireshark-2.2.17/wiretap/pcapng.c,3432,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(block_data + block_off, &bh.block_total_length, sizeof(bh.block_total_length));",82dd4c5c6ce7ae5b24c5f308d92edd6dfb59cf43ffaa94ae942f8db148cad7ec
wireshark-2.2.17/wiretap/pcapng.c,3449,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(block_data + block_off, &nrb, sizeof(nrb));",56e3eba96eb985faebdf190600fea799c4959ded486a2ce82f34edc327ff8c61
wireshark-2.2.17/wiretap/pcapng.c,3451,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(block_data + block_off, &(ipv4_hash_list_entry->addr), 4);",d57d758543c4de0c5648c9b43dfe5a3bf23e7d359e28177f1e4bc6d5c25f6411
wireshark-2.2.17/wiretap/pcapng.c,3453,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(block_data + block_off, ipv4_hash_list_entry->name, namelen);",7b0ac421ab716b21aa89648c47780f19aade871de0dd8294dc3aff13a2c3b635
wireshark-2.2.17/wiretap/pcapng.c,3509,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(block_data, &bh, sizeof(bh));",287a7f8d9ebd343059f46fbc388ece53a612e81939f28544a38ab6b20913aa27
wireshark-2.2.17/wiretap/pcapng.c,3512,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(block_data + block_off, &bh.block_total_length, sizeof(bh.block_total_length));",82dd4c5c6ce7ae5b24c5f308d92edd6dfb59cf43ffaa94ae942f8db148cad7ec
wireshark-2.2.17/wiretap/pcapng.c,3529,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(block_data + block_off, &nrb, sizeof(nrb));",56e3eba96eb985faebdf190600fea799c4959ded486a2ce82f34edc327ff8c61
wireshark-2.2.17/wiretap/pcapng.c,3531,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(block_data + block_off, &(ipv6_hash_list_entry->addr), 16);",fc5c9f5cadb8723f0969f62f23c2ea5578276fca81ea36db6dbff264e3bce1d1
wireshark-2.2.17/wiretap/pcapng.c,3533,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(block_data + block_off, ipv6_hash_list_entry->name, namelen);",eb858ba1d84ca7daf6a38df5b6b3c024aec5edf0f3c3ca6e31b5e10bb7021480
wireshark-2.2.17/wiretap/pcapng.c,3559,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(block_data, &bh, sizeof(bh));",287a7f8d9ebd343059f46fbc388ece53a612e81939f28544a38ab6b20913aa27
wireshark-2.2.17/wiretap/pcapng.c,3562,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(block_data + block_off, &bh.block_total_length, sizeof(bh.block_total_length));",82dd4c5c6ce7ae5b24c5f308d92edd6dfb59cf43ffaa94ae942f8db148cad7ec
wireshark-2.2.17/wiretap/peekclassic.c,587,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char    protoStr[8];,9fcc434652c83e807723653eb97f8dc88d1ea867701ccbd9a4d1500883e72352
wireshark-2.2.17/wiretap/peekclassic.c,608,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(protoStr, &ep_pkt[PEEKCLASSIC_V56_PROTOSTR_OFFSET],",fa175cc438ff79f3adc57ee6a9a926bf24adac1ac4271051780c4eff10bf8527
wireshark-2.2.17/wiretap/peektagged.c,236,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char str_num[12];,8548656873cc54782f2e7b36568e3582c34e46694f4ddbec9ecef49c0d3bd298
wireshark-2.2.17/wiretap/pppdump.c,441,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"					memcpy(pd, pkt->buf, num_written);",ddb7d7a29a84b34d9f8ae1914b9d58019be939154c0b1b7dd4868649958a8dbb
wireshark-2.2.17/wiretap/radcom.c,38,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	year[2];,f8ea829ce292339f2b9bae83b7278b3d6c1890b85bdd1f93e2b79d696ad973a5
wireshark-2.2.17/wiretap/radcom.c,41,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	sec[4];		/* seconds since midnight */,5eb52dacc06a20602eaa838281ef680773e0aee2a655a101e494caf0e294886e
wireshark-2.2.17/wiretap/radcom.c,42,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	usec[4];,23cb46ce3b774775facbbf746138b93efae78676deab797e8738eed2a7fe82d6
wireshark-2.2.17/wiretap/radcom.c,75,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	xxx[4];		/* unknown */,261246224b6fae62923088ec0e762d99026a6e3513b7606286405cfc3437f1b1
wireshark-2.2.17/wiretap/radcom.c,76,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	data_length[2];	/* packet length? */,2ee7ff1bf803435956d9290cdccc99fc29689e32d8aad0849e3a2d19f1e10b87
wireshark-2.2.17/wiretap/radcom.c,77,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	xxy[5];		/* unknown */,27423df857d34abf84121329dc3f7e11cfd5e7da11b3e0999813cb67a5826908
wireshark-2.2.17/wiretap/radcom.c,79,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	real_length[2];	/* actual length of packet */,7dfa2ec753fc0b4fc94f119a82af85008a1cd0929aebdb33951d6bf8806a12c2
wireshark-2.2.17/wiretap/radcom.c,80,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	length[2];	/* captured length of packet */,f21e72ec580d1290cddd679f9bc8f709d1526b2dd0743905c2477541888d608b
wireshark-2.2.17/wiretap/radcom.c,81,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	xxz[2];		/* unknown */,3db666318887fe15abc9eb1858e94f5e98b1bcbbbcbc66a35435bf986231a09e
wireshark-2.2.17/wiretap/radcom.c,83,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	xxw[9];		/* unknown */,4fdf5445224753ce6e0415c2416054c627d5b1b32c4238552f763fbc389685ae
wireshark-2.2.17/wiretap/radcom.c,240,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	fcs[2];,dfd2cfa50c6327db7362c9b2f2d3e754e98a4e39312cb739c42b45da759b6a12
wireshark-2.2.17/wiretap/snoop.c,181,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char magic[sizeof snoop_magic];,b8af9857fadd166f776d07e706189057ac614e3f4c428654d5a14d00869646b2
wireshark-2.2.17/wiretap/snoop.c,823,15,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static const char zeroes[4] = {0};,7f0b121f623d3287c88cee7d34cd9c1b988f95e5b8d37b14583045458eba3958
wireshark-2.2.17/wiretap/toshiba.c,153,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	buf[TOSHIBA_LINE_LENGTH];,a0cebde4fcbb64fa5d04f7d16bc3e3997e57068b38ae7896bbd4cfdf8af4a8fe
wireshark-2.2.17/wiretap/toshiba.c,249,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char	line[TOSHIBA_LINE_LENGTH];,4d8c55bbc02c91bbbf32a5e5a43b86fb6edd919af27a0660111500bfa055f917
wireshark-2.2.17/wiretap/toshiba.c,252,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char	channel[10], direction[10];",0f0f1fbdf8bb9148f0b04ddba8f9b3e9282396a4395ca38d070a9cec1421bd2b
wireshark-2.2.17/wiretap/visual.c,75,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    RESERVED_[102];     /* MUST BE ALL ZEROS FOR FUTURE COMPATABILITY */,1ab67abc77936ac219a005d9b40f31e4c9fa6a68971934ba1d6314d9a9a79e90
wireshark-2.2.17/wiretap/visual.c,76,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    description[64];    /* File description (null terminated) */,dc9b3e5dd14e7c1f3ec63123df8e723344a31f349c7a81461fc3bb834717eb5c
wireshark-2.2.17/wiretap/visual.c,99,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    RESERVED_[6];       /* RESERVED - must be zero */,8d58f0173899610c00e87f3956ecab0185f444e9f54eef3f77556ed70660311a
wireshark-2.2.17/wiretap/visual.c,175,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char magic[sizeof visual_magic];,6311cc9c1a5f8f6f819898525dd10d656f19beb3fc73c2a58b9f59d41703ccef
wireshark-2.2.17/wiretap/vms.c,155,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[VMS_LINE_LENGTH];,50965a6370f6a6c13239a99f85ac9b2f54ad089dcad31dfbe4c1949353d3657f
wireshark-2.2.17/wiretap/vms.c,192,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[VMS_LINE_LENGTH];,50965a6370f6a6c13239a99f85ac9b2f54ad089dcad31dfbe4c1949353d3657f
wireshark-2.2.17/wiretap/vms.c,321,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char   line[VMS_LINE_LENGTH + 1];,c53a789aa87e996bf1295e56dcde918bc2825f359936fb04c4690ab0d01438bb
wireshark-2.2.17/wiretap/vms.c,327,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char mon[4] = {'J', 'A', 'N', 0};",be458e0a56c9882a4184e8177f920b5dbfb58b3d7c7110777335e8938d5e7f25
wireshark-2.2.17/wiretap/vms.c,389,23,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,            pkt_len = atoi(p);,2bf0f5a1bda3fae3754dd567a0d95234295fd45cadfa060c0f9e52f11eccd775
wireshark-2.2.17/wiretap/vms.c,496,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char lbuf[3] = {0,0,0};",38b1e48d353999d1917499ab4241aad3021710181b477747d77d71803ef24a3a
wireshark-2.2.17/wiretap/vwr.c,1188,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&data_ptr[bytes_written], &rec[plcp_hdr_len], actual_octets);",a6cc24bea9ae8ee2a83511c9affa2c6eb52ae920664f1481b11c14e3629a77a6
wireshark-2.2.17/wiretap/vwr.c,1635,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&data_ptr[bytes_written], &rec[16], 16);",f918879808021a2ec838f9fbb2c23f3003d0e51b2d9bed4d11ac1caf11c9253e
wireshark-2.2.17/wiretap/vwr.c,1642,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&data_ptr[bytes_written], &rec[vwr->MPDU_OFF], actual_octets);",bfb4719826767191c563f347fb4d2e1d65e2a9fd5deaae2b2f265885b3bbfeac
wireshark-2.2.17/wiretap/vwr.c,1905,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&data_ptr[bytes_written], m_ptr, actual_octets);",f2686f12355d1a905afde41aa6d63b8003599e8db0c1c662d2dbd5e0be162a59
wireshark-2.2.17/wiretap/ws_version_info.c,152,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char CPUBrandString[0x40];,ea4eba0693a7869facefaaabae935fc5ae5af95a3d43f6345964a5de0e33b660
wireshark-2.2.17/wiretap/ws_version_info.c,169,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(CPUBrandString, CPUInfo, sizeof(CPUInfo));",21dcc3bbce077c7d735d497d4586c723a62005822f230b8bf56bebb87ca765e2
wireshark-2.2.17/wiretap/ws_version_info.c,171,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(CPUBrandString + 16, CPUInfo, sizeof(CPUInfo));",b25d36a1b188cf4675808c227a35fae689ccfff54f6005f86a307b2f3d0560f2
wireshark-2.2.17/wiretap/ws_version_info.c,173,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(CPUBrandString + 32, CPUInfo, sizeof(CPUInfo));",95329c940743727f482b4dee900aba95ed10899e0c0111cc12d135bc2254a025
wireshark-2.2.17/wiretap/wtap.c,1116,9,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	static char errbuf[128];,93dd942b0dcded5ec2552e755f7a734251e4611e70d4f4f3a9a3366d6e26f25f
wireshark-2.2.17/wiretap/wtap.h,526,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char    user[ASCEND_MAX_STR_LEN];     /* Username, from wandsession header */",f275ef1bc8b6237dde50755568a48d3cf5dcff9b1ccf791da9f158e5ec36cef3
wireshark-2.2.17/wiretap/wtap.h,528,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char    call_num[ASCEND_MAX_STR_LEN]; /* Called number, from WDD header */",97a103adc43df8146fc235ec48e1517c45f5c9733762944176cec399d54f098b
wireshark-2.2.17/wiretap/wtap.h,826,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char    if_name[COSINE_MAX_IF_NAME_LEN];  /* Encap & Logical I/F name */,bc71457171837ba4eaa9b90d88693ff259c627caa27323752c10f902a5375683
wireshark-2.2.17/wiretap/wtap_opttypes.c,904,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(dest_block->mandatory_data, src_block->mandatory_data, sizeof(wtapng_mandatory_section_t));",f4a6ee1f52612154efa16538f4fa3b21f10c3e003e6087b06203a7edd2690a5e
wireshark-2.2.17/wiretap/wtap_opttypes.c,919,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(dest_block->mandatory_data, src_block->mandatory_data, sizeof(wtapng_if_stats_mandatory_t));",1a89e1e929a182b01d95484efee46e3656c3db7519104637ee5ab22944dd30b1
wireshark-2.2.17/wiretap/wtap_opttypes.c,973,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(dest_mand, src_mand, sizeof(wtapng_if_descr_mandatory_t));",c58159b31a80fd0ee7d826741efa2b8c33780c1db93e87c9861e8920666687a4
wireshark-2.2.17/ws_version_info.c,152,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char CPUBrandString[0x40];,ea4eba0693a7869facefaaabae935fc5ae5af95a3d43f6345964a5de0e33b660
wireshark-2.2.17/ws_version_info.c,169,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(CPUBrandString, CPUInfo, sizeof(CPUInfo));",21dcc3bbce077c7d735d497d4586c723a62005822f230b8bf56bebb87ca765e2
wireshark-2.2.17/ws_version_info.c,171,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(CPUBrandString + 16, CPUInfo, sizeof(CPUInfo));",b25d36a1b188cf4675808c227a35fae689ccfff54f6005f86a307b2f3d0560f2
wireshark-2.2.17/ws_version_info.c,173,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(CPUBrandString + 32, CPUInfo, sizeof(CPUInfo));",95329c940743727f482b4dee900aba95ed10899e0c0111cc12d135bc2254a025
wireshark-2.2.17/wsutil/aes.c,1293,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&ctx->input[ctx->input_used], input, length);",2d21cd65153cf56e87a85607f4d11f8a518e9fd98dbce85a140b47747953b86b
wireshark-2.2.17/wsutil/aes.c,1299,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(&ctx->input[ctx->input_used], input, left);",def66330c5af12d989d1dc9c92fcb9d28601147f3152b3dd2271747cfcb46fa5
wireshark-2.2.17/wsutil/aes.c,1314,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"		memcpy(ctx->input, input, length);",ad226c93587dcd1212c1876a4f1aba26b0ca9365dd7b396ddc6f0881b2791ac6
wireshark-2.2.17/wsutil/buffer.c,92,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buffer->data + buffer->first_free, from, bytes);",c4a92719259201969fa8b72f43e204de6cbea8a2ed9f49264b27ba39e8be08fe
wireshark-2.2.17/wsutil/des.c,51,24,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,#define uchar unsigned char,85aafa1a9550dda5f8aa539cc060f2de8a8d4a8324a34a9cd654cad55f479080
wireshark-2.2.17/wsutil/des.c,161,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char out[64];,7d5455759684d645b4c5f03accd5d904ee5b927ef4d30c7b54ae879b61dfacb6
wireshark-2.2.17/wsutil/des.c,187,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char pk1[56];,dd1571adf4eeb757e64475398988eb6c7477f33d46d9c696e2a7bdc945852ea3
wireshark-2.2.17/wsutil/des.c,188,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char c[28];,0a844eba2f873a69747725393ccc925042bc99c110e1154bd2053256cd4c5de1
wireshark-2.2.17/wsutil/des.c,189,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char d[28];,d54494382c2804b4a7f27ddf57135e4d1a41690a56458f62ee5580b734aff4e1
wireshark-2.2.17/wsutil/des.c,190,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char cd[56];,6e5efbb577662d9e3f80016ad3e2868598aa0e8c5e2602d9517582b8456bee83
wireshark-2.2.17/wsutil/des.c,191,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char ki[16][48];,1c9ee8122049e82a7f0bfafdd5326c5385ad039b53121397ed076140c987d242
wireshark-2.2.17/wsutil/des.c,192,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char pd1[64];,61bd327608cd8a21bf3cb5a1d717c91fdeb0790dd637dd5a4ba30ec277333899
wireshark-2.2.17/wsutil/des.c,193,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char l[32], r[32];",ec6779238db1a83ced848a0bf912d18d5380de05f87ee4dcc89272ca8942e6a6
wireshark-2.2.17/wsutil/des.c,194,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char rl[64];,ee5e3ef0080b0081d94f235806066ac609c0e1c21aaf04b5df6312829ada000b
wireshark-2.2.17/wsutil/des.c,219,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char er[48];,c989aac2afe318347cc328083f346319aa63aed7da793c8dfb86194a9fe9af52
wireshark-2.2.17/wsutil/des.c,220,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char erk[48];,e623a62adeaa0bfe6f254033dba989549c068a097c9141ec0926e2dc48520c21
wireshark-2.2.17/wsutil/des.c,221,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char b[8][6];,7b723bef8eca08a26ee384ce3858b003a2582a99b0da46e490b08d7b8f95a271
wireshark-2.2.17/wsutil/des.c,222,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char cb[32];,1c4a3467ec06562b7a821ddc47a1864df6be06accd4ff7f7a2eae9dc8c94e524
wireshark-2.2.17/wsutil/des.c,223,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char pcb[32];,32cd4fa4e07474446d9687945bb32693da868db36c1b1b283b5d0f7d5c8df8df
wireshark-2.2.17/wsutil/des.c,224,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,		char r2[32];,934ad61adf692756a2254851e60f72dd981f332233e4a4d714953ae47d5cab1f
wireshark-2.2.17/wsutil/des.c,284,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char outb[64];,d0827305d66efd44d648e3596f49a71a1d2cfa4e9342c53c71d7ff870aefcf22
wireshark-2.2.17/wsutil/des.c,285,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char inb[64];,0b3556bcbda670236f1f5de8a95aba4aa2d69c6c4a6993863d712124bcb582a7
wireshark-2.2.17/wsutil/des.c,286,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	char keyb[64];,f203fd8ee825de424286a8e2e5847e41d34bd6ae0f664c1005931ad42e69b2b3
wireshark-2.2.17/wsutil/des.c,287,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char key2[8];,0e9c0584214025b0f79717b3d9a0de65694ad467f7217ea562e5551d62070c04
wireshark-2.2.17/wsutil/eax.c,40,29,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"#define BLK_CPY(dst, src) { memcpy(dst, src, EAX_SIZEOF_KEY); }",152c4d1b71d19ecffad8a0d91475fb97abec0ff1ec72455683a05ac620ab77f2
wireshark-2.2.17/wsutil/eax.c,46,26,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"void AesEncrypt(unsigned char msg[EAX_SIZEOF_KEY], unsigned char key[EAX_SIZEOF_KEY]);",ee13325b58a99d8f6f49ad3884bda2b6b0f21f24e769fc396b8fbcec2e08118d
wireshark-2.2.17/wsutil/eax.c,46,61,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"void AesEncrypt(unsigned char msg[EAX_SIZEOF_KEY], unsigned char key[EAX_SIZEOF_KEY]);",ee13325b58a99d8f6f49ad3884bda2b6b0f21f24e769fc396b8fbcec2e08118d
wireshark-2.2.17/wsutil/eax.c,158,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(work, pN, SizeN);",4d208aae4084b8929d96e67661bca755ac63d58dd805e74e5f828f0d1c21c2e6
wireshark-2.2.17/wsutil/eax.c,160,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&work[SizeN], pC, SizeC);",c2c84bf37084da1540328cc59780681cb96c68d169a2864dfb8a60ecbeb1bd1a
wireshark-2.2.17/wsutil/eax.c,196,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ws, ptr, EAX_SIZEOF_KEY);",be0cf1eb33ce4cccc754e0d92d3c885932abd35c81e4eddc5df232573f3ab627
wireshark-2.2.17/wsutil/eax.c,231,26,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"void AesEncrypt(unsigned char msg[EAX_SIZEOF_KEY], unsigned char key[EAX_SIZEOF_KEY])",5af27ecbeaaf03df993ef690526be627dc1309ddd226279a0b23731675d2300a
wireshark-2.2.17/wsutil/eax.c,231,61,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"void AesEncrypt(unsigned char msg[EAX_SIZEOF_KEY], unsigned char key[EAX_SIZEOF_KEY])",5af27ecbeaaf03df993ef690526be627dc1309ddd226279a0b23731675d2300a
wireshark-2.2.17/wsutil/file_util.c,474,7,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      TCHAR path_w[MAX_PATH];,b86e3056cd108100ca987462254e17052d8430015327b1db465b1f975790a714
wireshark-2.2.17/wsutil/file_util.c,517,7,2,buffer,wchar_t,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,      wchar_t npcap_path_w[MAX_PATH];,d32ffa6c7648e62eb6f859494a85be02061c8c9d361cee13dc6da054bb83d833
wireshark-2.2.17/wsutil/file_util.h,179,19,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,#define ws_open			open,7db0e058c03eda40cb195bdb88c526e418d09c83f307128ec7dbe7b48f88705b
wireshark-2.2.17/wsutil/file_util.h,185,19,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,#define ws_fopen		fopen,adb798dcd32b686e6bce35c99e88aefa26c5a286ac00830c72d028cecf95b5f5
wireshark-2.2.17/wsutil/filesystem.c,357,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char executable_path[PATH_MAX + 1];,07ce98c0ed10dc51f6722601b5b02724877cd9eb0f9d669ccbb12d7a61d03cdb
wireshark-2.2.17/wsutil/filesystem.c,409,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char executable_path[PATH_MAX + 1];,07ce98c0ed10dc51f6722601b5b02724877cd9eb0f9d669ccbb12d7a61d03cdb
wireshark-2.2.17/wsutil/filesystem.c,423,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char executable_path[PATH_MAX + 1];,07ce98c0ed10dc51f6722601b5b02724877cd9eb0f9d669ccbb12d7a61d03cdb
wireshark-2.2.17/wsutil/filesystem.c,463,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR prog_pathname_w[_MAX_PATH+2];,ac4b694cdce3ccf08fef7f2f8a0b9e7dbf451b9dce30e64f370e0f085a89e990
wireshark-2.2.17/wsutil/filesystem.c,636,17,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                memcpy(path, path_start, path_component_len);",a77376e8adbaf227af42da34f9c15e56cfc28f3198791a5a8955fbc3f9eee142
wireshark-2.2.17/wsutil/filesystem.c,771,29,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"                            memcpy(appbundle_dir, prog_pathname, p - prog_pathname);",d873d64db0cd922b0d2b0e211234165f16ec21bfd10f9cabcc065f4bff05897f
wireshark-2.2.17/wsutil/filesystem.c,1675,5,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    TCHAR tszPath[MAX_PATH];,e071d18c80d6e297aa6d304a3049537921bd64c437e38b822fd97414a835ab70
wireshark-2.2.17/wsutil/filesystem.c,1832,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char errmsg_errno[1024+1];,d3a48dd6bc93bca3e84f669e2c8877706d80f16af252aaf122e7357a1411da58
wireshark-2.2.17/wsutil/filesystem.c,1937,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char errmsg_errno[1024+1];,d3a48dd6bc93bca3e84f669e2c8877706d80f16af252aaf122e7357a1411da58
wireshark-2.2.17/wsutil/filesystem.c,2014,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char full1[MAX_PATH], full2[MAX_PATH];",f79269ec4cc95815f1248a2a4c471d4293ef99784e6af396deb634c7d97907ab
wireshark-2.2.17/wsutil/g711.c,44,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,unsigned char _u2a[128] = {			/* u- to A-law conversions */,8fcd14a1fbaa15e25cff07d0e46ebf0a95727aa328309938b96df970d673761e
wireshark-2.2.17/wsutil/g711.c,62,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,unsigned char _a2u[128] = {			/* A- to u-law conversions */,38c8f4df7ffdd73e81aae554cb8716c83518f72bee34f117a4a9ec2c64b6a84d
wireshark-2.2.17/wsutil/inet_ntop.c,89,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char tmp[sizeof ""255.255.255.255""];",5fcb5984254b6955b10e5fcc36c55effacbfbf6e198182b6ab309a6d606a2eac
wireshark-2.2.17/wsutil/inet_ntop.c,118,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"	char tmp[sizeof ""ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255""], *tp;",bb9de5b2facf62c3103581725e7425221dd07c1ae5bd9983ca54dde52c2ecf4a
wireshark-2.2.17/wsutil/inet_pton.c,130,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(dst, tmp, NS_INADDRSZ);",b78e269e4b72a57894a08df7e2d5fa3b4cbf0e49755ecbbbeefef46a573d7aa0
wireshark-2.2.17/wsutil/inet_pton.c,232,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(dst, tmp, NS_IN6ADDRSZ);",e88dd37150a278f25a990d1bb7b15da39097d3f7754cc524e4e7bb78f495fa19
wireshark-2.2.17/wsutil/interface.c,59,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char ip[INET6_ADDRSTRLEN];,1c0ceaf5957f6217339da3bab030e89ba3ac3e1d5ce889bbc0ebb4092cf4c49a
wireshark-2.2.17/wsutil/md4.c,128,11,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,	unsigned char buf[128];,3e1bca1160763f157298ac4722c8c12eb2027fe154ac40a167e1fd2acd1e6091
wireshark-2.2.17/wsutil/md4.c,147,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"	memcpy(buf, in, n);",a8cb1f555162a790ecd907ee6a1167958b06f28d42163c574d74be285e6b74af
wireshark-2.2.17/wsutil/md5.c,114,13,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"            memcpy(p, buf, len);",76f33ebb20b88e081513f4d137c956592dd6058a6fba45534e859236d4fe641f
wireshark-2.2.17/wsutil/md5.c,117,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(p, buf, t);",68a82406c237de5f909df5121365bc06029fcbb06788c42bafc34352bb11e392
wireshark-2.2.17/wsutil/md5.c,126,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(ctx->in, buf, 64);",e3393692ad3af6de1549cb1989fb6b9ce8678c15126e51e7f6a3feebd8500902
wireshark-2.2.17/wsutil/md5.c,135,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(ctx->in, buf, len);",2f3509d976e8fefa6a5440fa894767b399525fca437d827e6eab119ba00ccc42
wireshark-2.2.17/wsutil/md5.c,179,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(digest, ctx->buf, 16);",fa2ea0cf2018ba19274f851cb996354d64f798d426b89a0b99ef7fc1d1a3ab8b
wireshark-2.2.17/wsutil/md5.c,317,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(k_ipad, key, key_len);",6813d4b3c7da07cc2a8c24d049d449956ae0321b5c21366c83197481965728aa
wireshark-2.2.17/wsutil/md5.c,318,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(hctx->k_opad, key, key_len);",d4efbca05f683d0588c29c6ee2256acdd11110924d0edb8299984a84e9be2c80
wireshark-2.2.17/wsutil/rc4.h,30,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  unsigned char s_box[256];,70aecc854d2d39cdcb3d14ea558b699b364e595102d0bcc3b0e9eac3a8660573
wireshark-2.2.17/wsutil/sha1.c,234,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy( (void *) (ctx->buffer + left),",4222df3643eb998941a60b3a16a0f51179b697b910d9c67464e9897648dd7a9c
wireshark-2.2.17/wsutil/sha1.c,251,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy( (void *) (ctx->buffer + left),",4222df3643eb998941a60b3a16a0f51179b697b910d9c67464e9897648dd7a9c
wireshark-2.2.17/wsutil/sha1.c,365,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char output[41];,225a3641a92b4bc0bd42d1986f063b5a5decb7d59986a17ce0a6a87dc029b37e
wireshark-2.2.17/wsutil/sha1.c,367,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char buf[1000];,3a8a1141315227cf144877c348c6f8ba3b66790cb7b0693737da92f19d743a59
wireshark-2.2.17/wsutil/sha1.c,368,14,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    unsigned char sha1sum[SHA1_DIGEST_LEN];,8ddd5ed090a4a54ec5b58db63d4ba0918ee48fc4c9b2846bcdf2e174edf46993
wireshark-2.2.17/wsutil/sha2.c,157,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy( (void *) (ctx->buffer + left),",4222df3643eb998941a60b3a16a0f51179b697b910d9c67464e9897648dd7a9c
wireshark-2.2.17/wsutil/sha2.c,174,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy( (void *) (ctx->buffer + left),",4222df3643eb998941a60b3a16a0f51179b697b910d9c67464e9897648dd7a9c
wireshark-2.2.17/wsutil/sober128.c,126,33,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { unsigned long __t = (x); memcpy(y, &__t, 4); }",2bba8cf6640395ce0a6aaaa11b00f689eda19fa9bf79978e505ae3b7b63f4ed2
wireshark-2.2.17/wsutil/sober128.c,129,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     memcpy(&(x), y, 4);",1011fe9f434944d3c47b7ce0959c094e1a6524cdb5b8390ae268b3022b379526
wireshark-2.2.17/wsutil/sober128.c,146,33,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { unsigned long __t = (x); memcpy(y, &__t, 4); }",2bba8cf6640395ce0a6aaaa11b00f689eda19fa9bf79978e505ae3b7b63f4ed2
wireshark-2.2.17/wsutil/sober128.c,149,8,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { memcpy(&(x), y, 4); x &= 0xFFFFFFFF; }",de0692339575525c35e7f1f8cd1ba815a1701b55e10512e07d3bef4d0a10a85d
wireshark-2.2.17/wsutil/sober128.c,152,27,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { ulong64 __t = (x); memcpy(y, &__t, 8); }",e56fdffd706a4e8997751daa7f265215aa462665a06e4e55d4342008c0f05dd3
wireshark-2.2.17/wsutil/sober128.c,155,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    { memcpy(&(x), y, 8); }",0b3f656c4cda426dcb81621c66c2e9fc0b5ec5ade489bf373c52f501935fc6ef
wireshark-2.2.17/wsutil/sober128.c,187,33,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { unsigned long __t = (x); memcpy(y, &__t, 4); }",2bba8cf6640395ce0a6aaaa11b00f689eda19fa9bf79978e505ae3b7b63f4ed2
wireshark-2.2.17/wsutil/sober128.c,190,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     memcpy(&(x), y, 4);",1011fe9f434944d3c47b7ce0959c094e1a6524cdb5b8390ae268b3022b379526
wireshark-2.2.17/wsutil/sober128.c,207,33,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { unsigned long __t = (x); memcpy(y, &__t, 4); }",2bba8cf6640395ce0a6aaaa11b00f689eda19fa9bf79978e505ae3b7b63f4ed2
wireshark-2.2.17/wsutil/sober128.c,210,8,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { memcpy(&(x), y, 4); x &= 0xFFFFFFFF; }",de0692339575525c35e7f1f8cd1ba815a1701b55e10512e07d3bef4d0a10a85d
wireshark-2.2.17/wsutil/sober128.c,213,27,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { ulong64 __t = (x); memcpy(y, &__t, 8); }",e56fdffd706a4e8997751daa7f265215aa462665a06e4e55d4342008c0f05dd3
wireshark-2.2.17/wsutil/sober128.c,216,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    { memcpy(&(x), y, 8); }",0b3f656c4cda426dcb81621c66c2e9fc0b5ec5ade489bf373c52f501935fc6ef
wireshark-2.2.17/wsutil/sober128.c,349,33,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { unsigned long __t = (x); memcpy(y, &__t, 4); }",2bba8cf6640395ce0a6aaaa11b00f689eda19fa9bf79978e505ae3b7b63f4ed2
wireshark-2.2.17/wsutil/sober128.c,352,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     memcpy(&(x), y, 4);",1011fe9f434944d3c47b7ce0959c094e1a6524cdb5b8390ae268b3022b379526
wireshark-2.2.17/wsutil/sober128.c,369,33,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { unsigned long __t = (x); memcpy(y, &__t, 4); }",2bba8cf6640395ce0a6aaaa11b00f689eda19fa9bf79978e505ae3b7b63f4ed2
wireshark-2.2.17/wsutil/sober128.c,372,8,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { memcpy(&(x), y, 4); x &= 0xFFFFFFFF; }",de0692339575525c35e7f1f8cd1ba815a1701b55e10512e07d3bef4d0a10a85d
wireshark-2.2.17/wsutil/sober128.c,375,27,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { ulong64 __t = (x); memcpy(y, &__t, 8); }",e56fdffd706a4e8997751daa7f265215aa462665a06e4e55d4342008c0f05dd3
wireshark-2.2.17/wsutil/sober128.c,378,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    { memcpy(&(x), y, 8); }",0b3f656c4cda426dcb81621c66c2e9fc0b5ec5ade489bf373c52f501935fc6ef
wireshark-2.2.17/wsutil/sober128.c,410,33,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { unsigned long __t = (x); memcpy(y, &__t, 4); }",2bba8cf6640395ce0a6aaaa11b00f689eda19fa9bf79978e505ae3b7b63f4ed2
wireshark-2.2.17/wsutil/sober128.c,413,6,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     memcpy(&(x), y, 4);",1011fe9f434944d3c47b7ce0959c094e1a6524cdb5b8390ae268b3022b379526
wireshark-2.2.17/wsutil/sober128.c,430,33,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { unsigned long __t = (x); memcpy(y, &__t, 4); }",2bba8cf6640395ce0a6aaaa11b00f689eda19fa9bf79978e505ae3b7b63f4ed2
wireshark-2.2.17/wsutil/sober128.c,433,8,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { memcpy(&(x), y, 4); x &= 0xFFFFFFFF; }",de0692339575525c35e7f1f8cd1ba815a1701b55e10512e07d3bef4d0a10a85d
wireshark-2.2.17/wsutil/sober128.c,436,27,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"     { ulong64 __t = (x); memcpy(y, &__t, 8); }",e56fdffd706a4e8997751daa7f265215aa462665a06e4e55d4342008c0f05dd3
wireshark-2.2.17/wsutil/sober128.c,439,7,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    { memcpy(&(x), y, 8); }",0b3f656c4cda426dcb81621c66c2e9fc0b5ec5ade489bf373c52f501935fc6ef
wireshark-2.2.17/wsutil/tempfile.c,58,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char uniqueness[6];,02e92ba73ff3bdca6f9bbc2c26e73617a57ad32ce44a7e2ad611c407bc989aee
wireshark-2.2.17/wsutil/tempfile.c,74,3,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"  memcpy(&path_template[len - 5 - suffixlen], uniqueness, 5);",17c4f6dde0d30991f46110c72f8cfbb98ff6d853410828a609e1c1c552e0da69
wireshark-2.2.17/wsutil/tempfile.c,173,3,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  char timestr[14 + 1];,d2a0fc4641119fb3eafb44b15d77256eaa083d7787dfb2181d24c8084dd7d3b8
wireshark-2.2.17/wsutil/tempfile.c,198,21,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    tf[idx].path = (char *)g_malloc(tf[idx].len);,5876a722e6f8cbb871b1345fb5c4632956f002bb9606740cb7444c9f721c0caf
wireshark-2.2.17/wsutil/tempfile.c,214,21,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    tf[idx].path = (char *)g_realloc(tf[idx].path, tf[idx].len);",7214732e034a34b9ec95c829c24bd149a7e7ccc5a7a7fc6273bbf3a1d5169bfe
wireshark-2.2.17/wsutil/tempfile.c,246,10,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static char *td_path[3];,bfde0b4b098c3795c192b647da4b391f85c44b4385a8adeaa2d60f39f1b31f58
wireshark-2.2.17/wsutil/tempfile.c,258,21,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    td_path[idx] = (char *)g_malloc(td_path_len[idx]);,809c4ec93e6aed3c6aa1f2ca3f7c7ed00fd9b000f8447e51011142ca4a85bb07
wireshark-2.2.17/wsutil/tempfile.c,268,21,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    td_path[idx] = (char *)g_realloc(td_path[idx], td_path_len[idx]);",b66abf51af9cb5bc8c8df0ed24929ac9370100449355e56c97b24fdb92ef987a
wireshark-2.2.17/wsutil/unicode-utils.c,67,10,2,buffer,wchar_t,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,  static wchar_t *utf16buf[3];,109e8992e3848eb9f2de15d7daeea903bdfe94c9cc12da422d3eea91853ec0e4
wireshark-2.2.17/wsutil/unicode-utils.c,84,10,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120)",,,CWE-120,"  while (MultiByteToWideChar(CP_UTF8, 0, utf8str,",2cfe9af41405066efb084fd2c5ab35b7a19b75708645d3d62f80ac19e0bbd78b
wireshark-2.2.17/wsutil/unicode-utils.c,96,7,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120)",,,CWE-120,"  if (MultiByteToWideChar(CP_UTF8, 0, utf8str,",ce325ae60d69b1cca285bfceef9850dfab4a2b39357762344ac19ec38a1958d7
wireshark-2.2.17/wsutil/win32-utils.c,97,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char errbuf[ERRBUF_SIZE+1];,207fb2aa5f06e9eb853714c08c5e5a71d3b0ad451870028f10da674c28a052f1
wireshark-2.2.17/wsutil/win32-utils.c,124,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char errbuf[ERRBUF_SIZE+1];,207fb2aa5f06e9eb853714c08c5e5a71d3b0ad451870028f10da674c28a052f1
wireshark-2.2.17/wsutil/ws_mempbrk_sse42.c,73,9,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"        memcpy(&(pattern->mask), needles, length);",e33b2651c8d9298da79fc4947af90169773d8ee25d3468ad3fb07161ce07f51b
wireshark-2.2.17/capchild/capture_ifinfo.c,164,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(if_parts[1]) > 0),4bfea8037d95cef8e635f48ac2feb3356fbb35db3ff08443d5c1ffde8dc3e253
wireshark-2.2.17/capchild/capture_ifinfo.c,166,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(if_parts[2]) > 0),aeeb252c427427764edd8a0f444c8f530d92f3da55a7f854d11d919e40d4109a
wireshark-2.2.17/capchild/capture_sync.c,340,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (interface_opts.cfilter != NULL && strlen(interface_opts.cfilter) != 0) {,e08fa2062c0bab13cde4218a7c0bb10e7fbe577361459f091b92c144e15d6845
wireshark-2.2.17/capture_opts.c,629,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                prefix_length = strlen(optarg_str_p);,5807711fd9dea8a67b55f05ff8363552d64d9043f91b13d2fb49419c4d4b3a20
wireshark-2.2.17/caputils/airpcap_loader.c,897,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        if (strlen(if_info->name) > 4 && (g_ascii_strcasecmp(if_info->name + 4, name) == 0)) {",61dd875cff8561c3c7438a5668ec095c761eac783af36d0c69d8fcd6fc8714a9
wireshark-2.2.17/caputils/ws80211_utils.c,981,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		if (strlen(ifname) > 4 && g_str_has_prefix(ifname, airpcap_dev_prefix_)) ifname += 4;",ec49d5584e1c22f46747a520b8b6c3b480ff60627b95072e314548d6b24881d5
wireshark-2.2.17/dumpcap.c,1355,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        len = strlen(sockname);,210705ef6ab65014377e327a1954fafc5b90ed06f23b158be4b2649c8fd85e50
wireshark-2.2.17/dumpcap.c,1593,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (pos && g_ascii_strncasecmp(pos, PIPE_STR, strlen(PIPE_STR)) != 0)",9d8c1491670f56b277c0d2e42d711f559c254555f51bc97586a569e06351f675
wireshark-2.2.17/echld/common.c,386,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		long param_len = strlen(param)+1;,bc154d65c2ead738ee962c6c1922d3a990d92ec990b5373a8c9993861558fdd5
wireshark-2.2.17/echld/common.c,397,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		value_len = strlen(value)+1;,ca77b87e0650ec635cebeb787097091764c357dbf661281305fe813dc09db1b9
wireshark-2.2.17/echld/common.c,441,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	g_byte_array_append(ba,s,(guint)(strlen(s)+1));",38421082033da3d8f667ed86acc5e3821540db2bee55588a4ac5939e9ea6c62b
wireshark-2.2.17/echld/common.c,449,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (b+(strlen(b)+1) > end) return FALSE;,9da1ad59e6499d647013e439c5313e773d48e1fe8c98c0bf7a73b7df0897affc
wireshark-2.2.17/echld/common.c,460,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	g_byte_array_append(ba,s,(guint)(strlen(s)+1));",38421082033da3d8f667ed86acc5e3821540db2bee55588a4ac5939e9ea6c62b
wireshark-2.2.17/echld/common.c,472,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((b += (strlen(b)+1)) > end) return FALSE;,f20c158fcbaf83bf0d49af201d67ebce2a70f7f93d7ab18111820a41828e3950
wireshark-2.2.17/echld/common.c,499,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	g_byte_array_append(ba,s1,(guint)(strlen(s1)+1));",61f23458886f49e03ae769652283fe2f4d6386f8cf3e6845cebff87d77639b21
wireshark-2.2.17/echld/common.c,500,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	g_byte_array_append(ba,s2,(guint)(strlen(s2)+1));",b62a9b868510d60854f86fe7e3c5b3df8d03f7e01fc30362eeaa319c6f7eeba2
wireshark-2.2.17/echld/common.c,509,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((b += (strlen(b)+1)) > end) return FALSE;,f20c158fcbaf83bf0d49af201d67ebce2a70f7f93d7ab18111820a41828e3950
wireshark-2.2.17/echld/common.c,511,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((b += (strlen(b)+1)) > end) return FALSE;,f20c158fcbaf83bf0d49af201d67ebce2a70f7f93d7ab18111820a41828e3950
wireshark-2.2.17/echld/common.c,528,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((b += (strlen(b)+1)) > end) return FALSE;,f20c158fcbaf83bf0d49af201d67ebce2a70f7f93d7ab18111820a41828e3950
wireshark-2.2.17/echld/common.c,530,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((b += (strlen(b)+1)) > end) return FALSE;,f20c158fcbaf83bf0d49af201d67ebce2a70f7f93d7ab18111820a41828e3950
wireshark-2.2.17/echld/common.c,532,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((b += (strlen(b)+1)) > end) return FALSE;,f20c158fcbaf83bf0d49af201d67ebce2a70f7f93d7ab18111820a41828e3950
wireshark-2.2.17/echld/common.c,539,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	g_byte_array_append(ba,s1,(guint)(strlen(s1)+1));",61f23458886f49e03ae769652283fe2f4d6386f8cf3e6845cebff87d77639b21
wireshark-2.2.17/echld/common.c,540,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	g_byte_array_append(ba,s2,(guint)(strlen(s2)+1));",b62a9b868510d60854f86fe7e3c5b3df8d03f7e01fc30362eeaa319c6f7eeba2
wireshark-2.2.17/echld/common.c,541,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	g_byte_array_append(ba,s3,(guint)(strlen(s3)+1));",38e765293b3eaf7dd0f655c22b105e7976350f64fe9ca060e4fa8b868ee8bbe4
wireshark-2.2.17/echld/common.c,555,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((b += (strlen(b)+1)) > end) return FALSE;,f20c158fcbaf83bf0d49af201d67ebce2a70f7f93d7ab18111820a41828e3950
wireshark-2.2.17/echld/common.c,557,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((b += (strlen(b)+1)) > end) return FALSE;,f20c158fcbaf83bf0d49af201d67ebce2a70f7f93d7ab18111820a41828e3950
wireshark-2.2.17/echld/common.c,559,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((b += (strlen(b)+1)) > end) return FALSE;,f20c158fcbaf83bf0d49af201d67ebce2a70f7f93d7ab18111820a41828e3950
wireshark-2.2.17/echld/common.c,570,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	g_byte_array_append(ba,s1,(guint)(strlen(s1)+1));",61f23458886f49e03ae769652283fe2f4d6386f8cf3e6845cebff87d77639b21
wireshark-2.2.17/echld/common.c,571,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	g_byte_array_append(ba,s2,(guint)(strlen(s2)+1));",b62a9b868510d60854f86fe7e3c5b3df8d03f7e01fc30362eeaa319c6f7eeba2
wireshark-2.2.17/echld/common.c,572,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	g_byte_array_append(ba,s3,(guint)(strlen(s3)+1));",38e765293b3eaf7dd0f655c22b105e7976350f64fe9ca060e4fa8b868ee8bbe4
wireshark-2.2.17/echld/common.c,709,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	char* s2 = ((char*)(ba->data)) + strlen(s1);,ffbdebf58776c15bfd9947c736ceba039eb261c92a601360ff75a9604f39bec2
wireshark-2.2.17/echld/common.c,719,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	char* s2 = ((char*)(ba->data)) + strlen(s1);,ffbdebf58776c15bfd9947c736ceba039eb261c92a601360ff75a9604f39bec2
wireshark-2.2.17/echld/parent.c,899,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		long param_len = strlen(param)+1;,bc154d65c2ead738ee962c6c1922d3a990d92ec990b5373a8c9993861558fdd5
wireshark-2.2.17/echld/parent.c,910,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		value_len = strlen(value)+1;,ca77b87e0650ec635cebeb787097091764c357dbf661281305fe813dc09db1b9
wireshark-2.2.17/echld/parent.c,938,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			g_byte_array_append(ba, (guint8*) param_str, (guint)strlen(param_str)+1);",274f9942195a6214435bd173104a0ef8a9145e5b2dd58af27eeaed31dee82906
wireshark-2.2.17/echld/parent.c,939,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			g_byte_array_append(ba, (guint8*) val_str, (guint)strlen(val_str)+1);",7b6cfbe2af980b9acc0a4258367a7aba594f686c24b937492e030d27648f9696
wireshark-2.2.17/epan/address_types.c,212,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return (int)(strlen(buf)+1);,ce3f1081deaab4a5ac34b880987eca70eda4fedaac0b9f516aa46f4aa0296847
wireshark-2.2.17/epan/address_types.c,251,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return (int)(strlen(buf)+1);,ce3f1081deaab4a5ac34b880987eca70eda4fedaac0b9f516aa46f4aa0296847
wireshark-2.2.17/epan/address_types.c,407,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return (int)(strlen(buf)+1);,ce3f1081deaab4a5ac34b880987eca70eda4fedaac0b9f516aa46f4aa0296847
wireshark-2.2.17/epan/color_filters.c,98,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    g_assert(strlen(prefs.gui_colorized_fg)==69);,ab95513d7f466c8b74f96c9e87c9a7f045832f14d8de8de2993922765f6079f6
wireshark-2.2.17/epan/color_filters.c,99,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    g_assert(strlen(prefs.gui_colorized_bg)==69);,d88243b478b09e985e4de6628752cc10675037688a5b6e61948c3b2e07e40d33
wireshark-2.2.17/epan/column-utils.c,216,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      col_item->col_fence = (int)strlen(col_item->col_data);,6bf68c82dc30b902888bc1ecbc2924d1089365ab58627b2763dd9849aedb3909
wireshark-2.2.17/epan/column-utils.c,412,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      pos = strlen(col_item->col_buf);,f092c578959196ba1b1807ddbebb2ad366347c1c2590a7b5c569c495bc9ad08e
wireshark-2.2.17/epan/column-utils.c,469,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  sep_len = (separator) ? strlen(separator) : 0;,db72786242a6f1389b23e56dc6e4f8e4e9961ebf082b5cf9811c5d9a164b8146
wireshark-2.2.17/epan/column-utils.c,484,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      len = strlen(col_item->col_buf);,8b28c6b9c53e1a087943527b7b6981ff70d6a42d53efe86042d800c7aae40eb9
wireshark-2.2.17/epan/column-utils.c,578,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        col_item->col_fence += (int) strlen(col_item->col_buf);,c998bcbf4eb47eb865aa504c15c2cc691f227f9c492424fb68582bc184910970
wireshark-2.2.17/epan/column-utils.c,622,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        col_item->col_fence += (int) strlen(col_item->col_buf);,c998bcbf4eb47eb865aa504c15c2cc691f227f9c492424fb68582bc184910970
wireshark-2.2.17/epan/column-utils.c,624,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        col_item->col_fence = (int) strlen(col_item->col_buf);,44d6a2b9e2b4f830832a38435297b82b886e9a9b2efb85066fe3828c1196618f
wireshark-2.2.17/epan/column-utils.c,1921,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen(pinfo->cinfo->col_expr.col_expr[col]) > 0),60be36fe02ac5a0103d4d41ff089f8f0ce07337db093202f0e73998148ac124f
wireshark-2.2.17/epan/column.c,548,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if(strlen(get_column_longest_string(format)) >,e93f5c1d42f6ded5f8107f9f009bf48fc9528961cf8e6839205eacd5354acd39
wireshark-2.2.17/epan/column.c,549,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,       strlen(get_column_title(col))),b5ef3454950859713be388b65b697f7989b3dc67034e0847b0321d19d9367600
wireshark-2.2.17/epan/column.c,560,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  return (gint)strlen(get_column_longest_string(format));,0365a887b2a8d7c3546fa46e7451935ec6acfb1d35ae13034e4c3aa05c304efe
wireshark-2.2.17/epan/crypt/airpdcap.c,1667,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            len=strlen(key->UserPwd.Passphrase);,74c2a3ea3850eff989691c89add4402292694a012681f26d1f9e318ab2550ea7
wireshark-2.2.17/epan/dfilter/dfunctions.c,93,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            fvalue_set_uinteger(ft_len, (guint) strlen((char *)fvalue_get(arg_fvalue)));",084e79b1627567a5f23af80626076ddb75ef2ed350f2f91ce7e11c48975d63a0
wireshark-2.2.17/epan/dfilter/scanner.c,1006,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-2.2.17/epan/dfilter/scanner.c,2283,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);",f6db99431b143cf4d85bbc3049addd0480055ecadec213a4a82bfa4cdffcb561
wireshark-2.2.17/epan/dfilter/semcheck.c,1047,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		else if (len_range == 1 && strlen(s) == 4 && strncmp(s, ""0x"", 2) == 0) {",075eac63bf7c12b3e68871ed964d8821375b8f880acbddae6824c02aec78bd54
wireshark-2.2.17/epan/diam_dict.c,1408,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-2.2.17/epan/diam_dict.c,2993,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);",f6db99431b143cf4d85bbc3049addd0480055ecadec213a4a82bfa4cdffcb561
wireshark-2.2.17/epan/diam_dict.c,3443,2,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"	strncpy(statep->write_ptr,txt,len);",f7d0bd2220a34f3a9d9393d7994b7a914c092dd12058c5c8cfd8ab4912d73465
wireshark-2.2.17/epan/dissectors/asn1/pkcs12/packet-pkcs12-template.c,114,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    pwlen = strlen(pw);,4191727ceafd7c4c4666e7110a729c9e605901abc7442cb1e1f78676083354f5
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,361,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		if(!strncmp(hf_name, hri->old_name, strlen(hf_name))){",bf14c0110287eaa6e799d67a7fd025d81128df38acaac078f99e98fabc125fd5
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,386,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (strlen(blurb) > 0),3e8e2539f68bec2cbf4e4212da8430af5eeed9a419beccf2626731929fee8dc5
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,978,6,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",		ch=fgetc(fh);,721c0dc27444d9c3cb388d71e6aa373ebe7c3d8faaadcfc818cff5dfa77357c5
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,997,12,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",				nextch=fgetc(fh);,8e331d668453f6e6259d063b639388c8e1e502cac569499892c866555c27f912
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,1007,12,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",				nextch=fgetc(fh);,8e331d668453f6e6259d063b639388c8e1e502cac569499892c866555c27f912
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,3029,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		len=strlen(pfx->name);,ec7158da9fea79c29c2ac14a2e94db5598bd99c1b05a7b80bf5377a2bfe49883
wireshark-2.2.17/epan/dissectors/dcerpc/idl2wrs.c,3060,6,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",		ch=fgetc(infile);,1903f052937d73689da38729ebd958e2a002c596a6a8587814e75b3fafad67a8
wireshark-2.2.17/epan/dissectors/packet-afs.c,749,68,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		proto_tree_add_string(tree,hf_afs_fs_acl_entity, tvb,offset,(int)strlen(who), who);\",bd5f8dbf169e3c95f7a2e63601451a25ee41e519db05ac8cf47654516caea92d
wireshark-2.2.17/epan/dissectors/packet-afs.c,750,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		tmpoffset = offset + (int)strlen(who) + 1; \,ea8d75d4c781f707c855a7c78a270a6e5ec2c515679cb4559e980bff814c0cef
wireshark-2.2.17/epan/dissectors/packet-afs.c,751,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		acllen = bytes - (int)strlen(who) - 1; \,16cf384356deae013bea1a235fdee355ca40d27eb01172e94a6bb05019a40a35
wireshark-2.2.17/epan/dissectors/packet-afs.c,1489,7,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"		if (sscanf(GETSTR, ""%127s %d %n"", user, &acl, &n) != 2) {",40e0c8159b5e55ba72ce4ca99d90f8b8446d599e4f02459ae2102cdc7b78ead8
wireshark-2.2.17/epan/dissectors/packet-afs.c,1496,7,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"		if (sscanf(GETSTR, ""%127s %d %n"", user, &acl, &n) != 2) {",40e0c8159b5e55ba72ce4ca99d90f8b8446d599e4f02459ae2102cdc7b78ead8
wireshark-2.2.17/epan/dissectors/packet-applemidi.c,166,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			string_size = (gint)( strlen( name ) + 1 );,14c255609c3124053b87e0ae7dce7c7b817e8e1e4f5f6a6e3bfa6d5c046069e0
wireshark-2.2.17/epan/dissectors/packet-bittorrent.c,344,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,               if (strlen(amp_messages[i].name)==typelen &&,a28509798b9b18d1a685cdde90f0e294c015d3993ac4d4a950a95ff990e02aa7
wireshark-2.2.17/epan/dissectors/packet-bittorrent.c,346,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                              amp_messages[i].name, (int)strlen(amp_messages[i].name))==0) {",1fe1db29e64e96d79a49ef692924044a2e4e8115a1812230d787573f5354c0b9
wireshark-2.2.17/epan/dissectors/packet-bittorrent.c,515,57,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"         if(tvb_memeql(tvb, offset, peer_id[i].id, (int)strlen(peer_id[i].id)) == 0) {",3b7cc9bd1f8c54ecc36097df5183e5e341c369594b418d6b7b416e1ce4f1180d
wireshark-2.2.17/epan/dissectors/packet-bittorrent.c,516,82,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            version = tvb_get_string_enc(wmem_packet_scope(), tvb, offset + (int)strlen(peer_id[i].id),",27b291a485cd36cac00408b8886d2fc5d7c50d3a0203bda1bb91321094d913be
wireshark-2.2.17/epan/dissectors/packet-bootp.c,1942,62,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    strncmp((const gchar*)*vendor_class_id_p, ""PXEClient"", strlen(""PXEClient"")) == 0) {",13e031ec097d7347d90931e5e1353b6755f8f3f4144d2854673b89643cb2d028
wireshark-2.2.17/epan/dissectors/packet-bootp.c,1952,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			   ((strncmp((const gchar*)*vendor_class_id_p, ""pktc"", strlen(""pktc"")) == 0) ||",0f6c1d6dc19d89487bb4f41f5d570d98218f325ecd8a623c35aade27dd3c4d3d
wireshark-2.2.17/epan/dissectors/packet-bootp.c,1953,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    (strncmp((const gchar*)*vendor_class_id_p, ""docsis"", strlen(""docsis"")) == 0) ||",55a6e14d05752cc618078d16d2daa7f989721593c7dc08b3f1b426f72f575e8e
wireshark-2.2.17/epan/dissectors/packet-bootp.c,1954,67,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    (strncmp((const gchar*)*vendor_class_id_p, ""OpenCable2.0"", strlen(""OpenCable2.0"")) == 0) ||",05211ce174959450955ca7620c0d0d0efae01cd722528e87639aecb4d42d93c3
wireshark-2.2.17/epan/dissectors/packet-bootp.c,1955,64,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    (strncmp((const gchar*)*vendor_class_id_p, ""CableHome"", strlen(""CableHome"")) == 0))) {",e3dffc4a30387de35d373869d9d206cd24ec13119a3c9d255c2c38f86435bc22
wireshark-2.2.17/epan/dissectors/packet-bootp.c,1965,62,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			   ((strncmp((const gchar*)*vendor_class_id_p, ""ArubaAP"", strlen(""ArubaAP"")) == 0) )) {",c5e8ebf11351ed67978fe7086659b031ff3de419f27a6b8a2414fd7cfc908b38
wireshark-2.2.17/epan/dissectors/packet-bootp.c,1970,69,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			   ((strncmp((const gchar*)*vendor_class_id_p, ""ArubaInstantAP"", strlen(""ArubaInstantAP"")) == 0) )) {",ea1524021b6814a0f49a563d62a40288ef555232c6f433b8d92600e9dc20e136
wireshark-2.2.17/epan/dissectors/packet-bootp.c,1982,69,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			   ((strncmp((const gchar*)*vendor_class_id_p, PACKETCABLE_BSDP, strlen(PACKETCABLE_BSDP)) == 0) )) {",d276767872cfe82a05c7c9001a7558110373002e62bf19bad9092621973a8a2a
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2094,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				      (int)strlen(PACKETCABLE_MTA_CAP10)) == 0),ccb4669c9aa9617f70bf36e48ebca0a758731f1c0767ed976b98777b0f99e92c
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2097,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				      (int)strlen(PACKETCABLE_MTA_CAP15)) == 0),39daa24c4ac537d6093adb7bb0383ff0dd1adc96d244afb51c7a1e15461cbad2
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2100,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				      (int)strlen(PACKETCABLE_MTA_CAP20)) == 0)),8399b58cd91ff527e2019977579b005ddf89d504c6da9bf200071d152d085937
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2105,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				(int)strlen(PACKETCABLE_CM_CAP11)) == 0),c8ef1f251fa221f3f720492408ce6db081defbbe6bd656161eadb79b4df1da9a
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2108,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				(int)strlen(PACKETCABLE_CM_CAP20)) == 0 )),619b36b69a35f7ae8dc2d15dea22ccdabc681b6b3b22fe38a194c0b21a4b47df
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2113,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				(int)strlen(PACKETCABLE_CM_CAP30)) == 0 ),8f077d9d8e9484391c90977b963d3ece397451be815483c7d5b41f0fa05522dc
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2118,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				(int)strlen(PACKETCABLE_BSDPD)) == 0 ),014a64d02048ea7183753339290d8c968e0be1d114e710af2fa97f952f660b99
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2120,84,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			proto_tree_add_item(v_tree, hf_bootp_option_vendor_class_data, tvb, optoff+(int)strlen(PACKETCABLE_BSDPD), optlen-(int)strlen(PACKETCABLE_BSDPD), ENC_ASCII|ENC_NA);",57192738797857bda0ef62941ba7acbf05d6b63058575d1bed40aa4474e6455e
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2120,123,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			proto_tree_add_item(v_tree, hf_bootp_option_vendor_class_data, tvb, optoff+(int)strlen(PACKETCABLE_BSDPD), optlen-(int)strlen(PACKETCABLE_BSDPD), ENC_ASCII|ENC_NA);",57192738797857bda0ef62941ba7acbf05d6b63058575d1bed40aa4474e6455e
wireshark-2.2.17/epan/dissectors/packet-bootp.c,2953,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,					optoff += (int)strlen(field);,3d05a41154852598c3aae09a6d19150a63556d14b87ccba69a055d2b6708bc82
wireshark-2.2.17/epan/dissectors/packet-bt-dht.c,415,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if( strlen(key)==1 ),3d7aab3b8e22aa5938e2c5779399111315e64b896f9117e13903c8ff525cbacd
wireshark-2.2.17/epan/dissectors/packet-bt-dht.c,417,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if( strlen(val)==1 ),e6d5756e781ae278f3894ca7d59229a35c6906747a2fb1aafc5f7474df02826c
wireshark-2.2.17/epan/dissectors/packet-btatt.c,9150,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(pinfo->current_proto) > 7) {,4d9150b0f2f87160ff847cdacfe2b1754c4e4c2c6247b728f2ab2e188a52fcb3
wireshark-2.2.17/epan/dissectors/packet-btatt.c,9152,74,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        uuid.bt_uuid = (guint16) g_ascii_strtoull(pinfo->current_proto + strlen(pinfo->current_proto) - 7, NULL, 16);",b8aab12a16be8c7f6100040ece8e3f6d2dc09b2e9f603805901cceb91d564ec0
wireshark-2.2.17/epan/dissectors/packet-bthci_acl.c,297,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        remote_length = (gint)(strlen(remote_ether_addr) + 3 + strlen(remote_name) + 1);,bc46dd18f3ecb7f8bcac53709ca125758bb36626c12dd971c2e6060b9d4bf918
wireshark-2.2.17/epan/dissectors/packet-bthci_acl.c,297,64,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        remote_length = (gint)(strlen(remote_ether_addr) + 3 + strlen(remote_name) + 1);,bc46dd18f3ecb7f8bcac53709ca125758bb36626c12dd971c2e6060b9d4bf918
wireshark-2.2.17/epan/dissectors/packet-bthci_acl.c,344,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    localhost_length = (gint)(strlen(localhost_ether_addr) + 3 + strlen(localhost_name) + 1);,d2571d1a01b0d2fa83748c229b2c78e3449b341254b370ef631cecdad01207a6
wireshark-2.2.17/epan/dissectors/packet-bthci_acl.c,344,66,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    localhost_length = (gint)(strlen(localhost_ether_addr) + 3 + strlen(localhost_name) + 1);,d2571d1a01b0d2fa83748c229b2c78e3449b341254b370ef631cecdad01207a6
wireshark-2.2.17/epan/dissectors/packet-bthci_acl.c,500,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    set_address(&pinfo->net_src, AT_STRINGZ, (int)strlen(src_name) + 1, src_name);",b5840e9cec9f59fe81c51768d3f3f71beec329a6ed4382a64dc381f735b9c80b
wireshark-2.2.17/epan/dissectors/packet-bthci_acl.c,502,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    set_address(&pinfo->src, AT_STRINGZ, (int)strlen(src_addr_name) + 1, src_addr_name);",fd81de5b186e8a743f661eac07f75c8ff9eba665c4a2201ea50f486734ac1ec6
wireshark-2.2.17/epan/dissectors/packet-bthci_acl.c,504,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    set_address(&pinfo->net_dst, AT_STRINGZ, (int)strlen(dst_name) + 1, dst_name);",b227259f953230ea06555cf63fd586d720980a724216fa9fd0de3985204eb863
wireshark-2.2.17/epan/dissectors/packet-bthci_acl.c,506,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    set_address(&pinfo->dst, AT_STRINGZ, (int)strlen(dst_addr_name) + 1, dst_addr_name);",b0a04cd6a20a310a3130e2f2115c441875820538c2710d06570538e12503caeb
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,194,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        remote_length = (gint)(strlen(remote_ether_addr) + 3 + strlen(remote_name) + 1);,bc46dd18f3ecb7f8bcac53709ca125758bb36626c12dd971c2e6060b9d4bf918
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,194,64,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        remote_length = (gint)(strlen(remote_ether_addr) + 3 + strlen(remote_name) + 1);,bc46dd18f3ecb7f8bcac53709ca125758bb36626c12dd971c2e6060b9d4bf918
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,200,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            set_address(&pinfo->net_src, AT_STRINGZ, (int)strlen(remote_name) + 1, remote_name);",bc5e99d648a82bcf000f411348b9c6aaae9a56aa77b084b3254f1bf4cee8902d
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,202,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            set_address(&pinfo->src, AT_STRINGZ, (int)strlen(remote_addr_name) + 1, remote_addr_name);",d2e85e3d58b9e82c06450293afd4aedd5630d830cb61f3cb9e1e80658453291b
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,204,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            set_address(&pinfo->net_dst, AT_STRINGZ, (int)strlen(remote_name) + 1, remote_name);",05b3f00a43ae48bd0967592da5ce1c7a3d2c1fcc96f4e717e2b0830f14e17d0d
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,206,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            set_address(&pinfo->dst, AT_STRINGZ, (int)strlen(remote_addr_name) + 1, remote_addr_name);",b7bfc33070f13476c9ab3e1ec717cb7b8fa4282ae1152d2e4f6ec94a5d4f405b
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,254,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    localhost_length = (gint)(strlen(localhost_ether_addr) + 3 + strlen(localhost_name) + 1);,d2571d1a01b0d2fa83748c229b2c78e3449b341254b370ef631cecdad01207a6
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,254,66,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    localhost_length = (gint)(strlen(localhost_ether_addr) + 3 + strlen(localhost_name) + 1);,d2571d1a01b0d2fa83748c229b2c78e3449b341254b370ef631cecdad01207a6
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,260,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        set_address(&pinfo->net_dst, AT_STRINGZ, (int)strlen(localhost_name) + 1, localhost_name);",35f6b8bd71547167ba6cc879e6871c0260d31081775cc3d8bf1c26f97a78eecb
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,262,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        set_address(&pinfo->dst, AT_STRINGZ, (int)strlen(localhost_addr_name) + 1, localhost_addr_name);",5856bec0e39ad2fa85085047d3ab224617d0f073c0a03dcc857d35688d1f5b8c
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,264,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        set_address(&pinfo->net_src, AT_STRINGZ, (int)strlen(localhost_name) + 1, localhost_name);",c22f9906e59d4d03fb716c9b720209b7956a35fd529bcadb1703fe58b4338f2d
wireshark-2.2.17/epan/dissectors/packet-bthci_sco.c,266,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        set_address(&pinfo->src, AT_STRINGZ, (int)strlen(localhost_addr_name) + 1, localhost_addr_name);",5a2e6fb9940f469121a701014e09d9e76a0d85df61ae421ed26705b91f4b163d
wireshark-2.2.17/epan/dissectors/packet-bthfp.c,1697,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                            (gint) strlen(i_at_cmd->name), ENC_NA | ENC_ASCII);",5aae455569f1d38780b3086df8b350cc0ddb09057e417a80258f1b6045ed6686
wireshark-2.2.17/epan/dissectors/packet-bthsp.c,392,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                            (gint) strlen(i_at_cmd->name), ENC_NA | ENC_ASCII);",5aae455569f1d38780b3086df8b350cc0ddb09057e417a80258f1b6045ed6686
wireshark-2.2.17/epan/dissectors/packet-c15ch.c,4833,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ( strlen( desc_string ) ),0aaffcd32246702dbdf57a6bae77ada774636c3a2729a2492365c31a9aaa505f
wireshark-2.2.17/epan/dissectors/packet-c15ch.c,4846,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ( strlen( desc_string) ),fc26f75de4f7d6eb9720dc207c78a93e25c1870b1d0da0737fb5c37378e5558f
wireshark-2.2.17/epan/dissectors/packet-catapult-dct2000.c,1302,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (strncmp(protocol_name, ""diameter"", strlen(""diameter"")) == 0) {",b1d02d49e23e7b5f5faa4712a14c870200d8c40ad2f38fbe414281e30c669478
wireshark-2.2.17/epan/dissectors/packet-catapult-dct2000.c,1332,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (strncmp(protocol_name, ""nbap_sctp"", strlen(""nbap_sctp"")) == 0) {",9ad0c1447d47651e28283a3aa0d216e1d266c82cc2eef8617ceaac0a49aaaff3
wireshark-2.2.17/epan/dissectors/packet-catapult-dct2000.c,1336,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (strncmp(protocol_name, ""gtp"", strlen(""gtp"")) == 0) {",1437a53684b0e7ef7e29f11980b60b69a81180ef646c05af204b3d3888f66920
wireshark-2.2.17/epan/dissectors/packet-catapult-dct2000.c,1348,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (strncmp(protocol_name, ""sabp"", strlen(""sabp"")) == 0) {",d7c8304f81a87da56c542076d43ad702fc874fc6aec3cbe9d37a3c8f3908bfe3
wireshark-2.2.17/epan/dissectors/packet-catapult-dct2000.c,1358,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        strncmp(protocol_name, ""s1ap"", strlen(""s1ap"")) == 0) {",868bfa7858f6dff9c1e2c5a3362ee08ed5a7dbe1c86fd39718c695a818631d96
wireshark-2.2.17/epan/dissectors/packet-catapult-dct2000.c,1364,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if ((strncmp(protocol_name, ""x2ap_r8_lte"", strlen(""x2ap_r8_lte"")) == 0) ||",fd7d6fe72d3cd05b59286a850732e768d76ec7ac2d4be2721bae9d5e8e0c4175
wireshark-2.2.17/epan/dissectors/packet-catapult-dct2000.c,1365,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        (strncmp(protocol_name, ""x2ap_r9_lte"", strlen(""x2ap_r9_lte"")) == 0)) {",4730db55430a2a46ca567e9ddf0ea6fa6613c677f1a492a801eb60ff3025977e
wireshark-2.2.17/epan/dissectors/packet-cell_broadcast.c,268,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      tvb_out = tvb_new_child_real_data(tvb, text, (guint)strlen(text), (guint)strlen(text));",b2c233df204c2f177ad3f2e128696fd6bdbd013456cece16f0a83865880f46ec
wireshark-2.2.17/epan/dissectors/packet-cell_broadcast.c,268,80,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      tvb_out = tvb_new_child_real_data(tvb, text, (guint)strlen(text), (guint)strlen(text));",b2c233df204c2f177ad3f2e128696fd6bdbd013456cece16f0a83865880f46ec
wireshark-2.2.17/epan/dissectors/packet-cell_broadcast.c,277,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      tvb_out = tvb_new_child_real_data(tvb, text, (guint)strlen(text), (guint)strlen(text));",b2c233df204c2f177ad3f2e128696fd6bdbd013456cece16f0a83865880f46ec
wireshark-2.2.17/epan/dissectors/packet-cell_broadcast.c,277,80,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      tvb_out = tvb_new_child_real_data(tvb, text, (guint)strlen(text), (guint)strlen(text));",b2c233df204c2f177ad3f2e128696fd6bdbd013456cece16f0a83865880f46ec
wireshark-2.2.17/epan/dissectors/packet-cell_broadcast.c,284,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      tvb_out = tvb_new_child_real_data(tvb, text, (guint)strlen(text), (guint)strlen(text));",b2c233df204c2f177ad3f2e128696fd6bdbd013456cece16f0a83865880f46ec
wireshark-2.2.17/epan/dissectors/packet-cell_broadcast.c,284,80,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      tvb_out = tvb_new_child_real_data(tvb, text, (guint)strlen(text), (guint)strlen(text));",b2c233df204c2f177ad3f2e128696fd6bdbd013456cece16f0a83865880f46ec
wireshark-2.2.17/epan/dissectors/packet-cimd.c,496,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  size = (int)strlen(payloadText);,974e9ca2e400c6dbb483bcab8809e3f5bbc63314eda00253490b05579afbb7d3
wireshark-2.2.17/epan/dissectors/packet-cimd.c,542,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  size1 = (int)strlen(tmpBuffer);,73f9fc33fe33b3c735ea7c0a523ce042fec9e2dce7b99c77147e5548447b6ad0
wireshark-2.2.17/epan/dissectors/packet-cops.c,1256,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                     strlen(type_str) ? "" ("" : """",",a39a78a90715ab2d05db88dfec35eddfdfda33d139dfe54736ac0c63fd1b8ad6
wireshark-2.2.17/epan/dissectors/packet-cops.c,1258,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                     strlen(type_str) ? "")"" : """");",1e26554d57fdddd63c12243c8584e0e40e5dab92c50920a4e39fd90a65c1879b
wireshark-2.2.17/epan/dissectors/packet-cops.c,1312,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                         strlen(type_str) ? "" ("" : """",",a39a78a90715ab2d05db88dfec35eddfdfda33d139dfe54736ac0c63fd1b8ad6
wireshark-2.2.17/epan/dissectors/packet-cops.c,1314,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                         strlen(type_str) ? "")"" : """");",1e26554d57fdddd63c12243c8584e0e40e5dab92c50920a4e39fd90a65c1879b
wireshark-2.2.17/epan/dissectors/packet-corosync-totemnet.c,295,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  private_key_len = (strlen(key_for_trial)+4) & 0xFC;,941293eb05ef894cf3f01cb03a4974cfeb38c899cc2e476ce8eadffa32a253a0
wireshark-2.2.17/epan/dissectors/packet-dbus.c,429,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					            AT_STRINGZ, (int)strlen(addr_val.str)+1, wmem_strdup(pinfo->pool, addr_val.str));",c52dcdc35a3472f3295ffb118b258dd9d67f85a311a0e5d2c75709322193e79f
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,2438,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    debugprintf(""1)Len %d offset %d txt %s\n"",(int) strlen(dcv->private_data),offset,(char*)dcv->private_data);",f0585166c904773906d6d86723cf17552cc39652cfd5c0bc9aaf78414ea34a8d
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,2441,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    debugprintf(""2)Len %d offset %d txt %s\n"",(int) strlen(dcv->private_data),offset,vars->client_name);",d2ea084e30baa37cd2079ca3672ef6ece379729362e41b1240ff36a6c2103093
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,6553,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    password_len = strlen(nt_password);,a10805bb7abbe031cdccbe9d7c952cdc01e782ba2b244cb2400266744ed1192e
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,6589,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (ntlm_pass[0] != '\0' && ( strlen(ntlm_pass) < 129 )) {,3b9d5ba8c03b9390b5ffd6a49b1b237b1eeefd9fd414e95e22e920fa9528af79
wireshark-2.2.17/epan/dissectors/packet-dcerpc-netlogon.c,6592,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        password_len = (int)strlen(ntlm_pass);,696ee7d29fcbfa882bdb8dfbeaa3b9363605563a5237b1277255f7eedce22bbb
wireshark-2.2.17/epan/dissectors/packet-dcerpc-spoolss.c,1097,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	len = (int)strlen(text);,ae6ad68251d3a2141db3ebe260ed161855820525c817005a848c1fc532dc44b4
wireshark-2.2.17/epan/dissectors/packet-dcerpc-spoolss.c,6314,100,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_tree_add_string( subtree, hf_enumprinterdataex_name, tvb, start_offset + name_offset, ((int)strlen(name) + 1) * 2, name);",5bad5c1af53b40b2c08d44fc988f3ac323519a4163126ed5ee20b89a309a6e02
wireshark-2.2.17/epan/dissectors/packet-dcm.c,4459,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len=(int)strlen(value);,ff789ef646e48df29e5962b4e1655500b04e418c18fefe82691a48eff465bd60
wireshark-2.2.17/epan/dissectors/packet-dcm.c,4580,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(assoc->ae_calling)>0 && strlen(assoc->ae_called)>0 ) {,796e03292519f3054e1f9b9b9a312b6c9051bbb3bd0434b77b0532a67a98db50
wireshark-2.2.17/epan/dissectors/packet-dcm.c,4580,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(assoc->ae_calling)>0 && strlen(assoc->ae_called)>0 ) {,796e03292519f3054e1f9b9b9a312b6c9051bbb3bd0434b77b0532a67a98db50
wireshark-2.2.17/epan/dissectors/packet-dcm.c,4588,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        pdv_curr->sop_class_uid    && strlen(pdv_curr->sop_class_uid)>0 &&,ffa1f09385725ef45172a41d9b1fcc81869a22f24f44a6c949b315af5ffa90e5
wireshark-2.2.17/epan/dissectors/packet-dcm.c,4589,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        pdv_curr->sop_instance_uid && strlen(pdv_curr->sop_instance_uid)>0) {,98eb2d1c3df4d1289b449254ba4d21c093c2f223b33bc5e83ba7494af0c2168c
wireshark-2.2.17/epan/dissectors/packet-dcm.c,4615,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (pctx && pctx->xfer_uid && strlen(pctx->xfer_uid)>0) {,7cccc203ef13386891179d79b4857a5fbb3f9adecf7debedc09741274c3f1789
wireshark-2.2.17/epan/dissectors/packet-dcm.c,5757,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (strlen(vals) > 50) {,efc7a9752833e43a5953756b7987f33cd25394ab912959dbb5839172a30db903
wireshark-2.2.17/epan/dissectors/packet-dhcpv6.c,1047,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                if ((device_type == NULL) || (strlen(device_type) == 0)) {,e65725315102db25d047d1589aa9f42ee3682bfec6c3254a4f810326ff3f587b
wireshark-2.2.17/epan/dissectors/packet-dmp.c,2710,73,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  proto_item_append_text (dmp.mts_id_item, "" (%zu bytes decompressed)"", strlen(mts_id));",a4a23de9bf32a4b444601df0545425728f1ded844f2d574acbf2b65f01e557e2
wireshark-2.2.17/epan/dissectors/packet-dmp.c,2711,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  mts_id = format_text (mts_id, strlen(mts_id));",9c72e53fdaf9b734719f31426630e2b07f1b14fe5eef984ff0e7516ee906257c
wireshark-2.2.17/epan/dissectors/packet-dmp.c,2766,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  proto_item_append_text (tf, "" (%zu bytes decompressed)"", strlen(ipm_id));",610c205679f1696218d0f9b83adad07bc904b7210fb12327b086c54e24596015
wireshark-2.2.17/epan/dissectors/packet-dmp.c,2767,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  ipm_id = format_text (ipm_id, strlen(ipm_id));",70a9cfa108e16fb0225f014922e800133f4b756b71ed1f28f7a3b12061c9b294
wireshark-2.2.17/epan/dissectors/packet-dmp.c,3236,73,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    proto_item_append_text (en, "", Id: %s"", format_text (dmp.struct_id, strlen(dmp.struct_id)));",7249ae623871aaf44485d84afa85a86fb9b2898b9851969808028980955e342c
wireshark-2.2.17/epan/dissectors/packet-dmp.c,4091,52,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                       format_text (dmp.struct_id, strlen(dmp.struct_id)));",e7ab9c9e8c166528889ef15550cee4fdee2ea1e355b1c6525d0cdfe1e268cd27
wireshark-2.2.17/epan/dissectors/packet-dmp.c,4094,52,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                       format_text (dmp.struct_id, strlen(dmp.struct_id)));",e7ab9c9e8c166528889ef15550cee4fdee2ea1e355b1c6525d0cdfe1e268cd27
wireshark-2.2.17/epan/dissectors/packet-dns.c,1117,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        for (i = 0; i < strlen(name); i++) {,719085f5dd1fc3233f36f9a672439c8a8c4f18b9586d2cef9e528fcd37cafc15
wireshark-2.2.17/epan/dissectors/packet-dns.c,1433,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  name_out = format_text(name, strlen(name));",c4cbf38e631d8fd4d220f2509dbe4699ce5e00382e4dccd87268b1ca13566242
wireshark-2.2.17/epan/dissectors/packet-dns.c,1448,107,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    tq = proto_tree_add_uint(q_tree, hf_dns_qry_name_len, tvb, offset, name_len, name_len > 1 ?  (guint32)strlen(name) : 0);",11b45c675bd44f0e8d6f3137df4f9224878241168f58570bfb1dadf558224b4d
wireshark-2.2.17/epan/dissectors/packet-dns.c,1803,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    name_out = format_text(name, strlen(name));",c4cbf38e631d8fd4d220f2509dbe4699ce5e00382e4dccd87268b1ca13566242
wireshark-2.2.17/epan/dissectors/packet-dns.c,1853,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(ns_name, strlen(ns_name));",e7e81b9eb755ccea861ea58b0fd9c5e989177fec0841ea0c641eafca355b2325
wireshark-2.2.17/epan/dissectors/packet-dns.c,1891,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(cname, strlen(cname));",47869f8391f06c9ca71550af482ebc08571340aab2a86df46784a03fda9a1090
wireshark-2.2.17/epan/dissectors/packet-dns.c,1909,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(mname, strlen(mname));",70af7b34c0235d13a30255d20804113f09d00dcfea52ec47e7aceee089e0d5b0
wireshark-2.2.17/epan/dissectors/packet-dns.c,1917,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(rname, strlen(rname));",5d4ebc8095092f6153e7515db77754e824114e17e7eff3c93a65accced1058f5
wireshark-2.2.17/epan/dissectors/packet-dns.c,2056,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(pname, strlen(pname));",1ce25797d73a54565f189872a554df933a49e63581da607d6da25614d7ef3562
wireshark-2.2.17/epan/dissectors/packet-dns.c,2119,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(mx_name, strlen(mx_name));",fbd40db67906b34883f521467339c5f63f590508d34553c2ec4a1c23b9428913
wireshark-2.2.17/epan/dissectors/packet-dns.c,2419,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(next_domain_name, strlen(next_domain_name));",6d256a4201f845cb07b7ad0e77e5a95186f92e0d0e7a584704d32a787bb8fd06
wireshark-2.2.17/epan/dissectors/packet-dns.c,2451,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(target, strlen(target));",5d0bd1dfbd661b108cc616a4a7067b60c213e103677f4b28b702c51a3ce53436
wireshark-2.2.17/epan/dissectors/packet-dns.c,2508,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(replacement, strlen(replacement));",834fa651176e0def90f50d0de2e117c0133b5e1b08d88e088af5f12d7fd79a9e
wireshark-2.2.17/epan/dissectors/packet-dns.c,2528,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(kx_name, strlen(kx_name));",282475f6d8fd432d996e2414418245c84be3945d66b4acb845452afac80591b7
wireshark-2.2.17/epan/dissectors/packet-dns.c,2593,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(pname, strlen(pname));",1ce25797d73a54565f189872a554df933a49e63581da607d6da25614d7ef3562
wireshark-2.2.17/epan/dissectors/packet-dns.c,2625,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(dname, strlen(dname));",e48ef30e6bf32d2057db22f953295d6d8ed761cb385a613ffab17e99e62ac4ab
wireshark-2.2.17/epan/dissectors/packet-dns.c,3003,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(next_domain_name, strlen(next_domain_name));",6d256a4201f845cb07b7ad0e77e5a95186f92e0d0e7a584704d32a787bb8fd06
wireshark-2.2.17/epan/dissectors/packet-dns.c,3517,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      name_out = format_text(dname, strlen(dname));",e48ef30e6bf32d2057db22f953295d6d8ed761cb385a613ffab17e99e62ac4ab
wireshark-2.2.17/epan/dissectors/packet-dof.c,3365,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    size = (guint32)strlen(rec->domain);,6f02970da6633c306470b2c358105adfd996b3b9e0f2bf46cb07b4889b3dd732
wireshark-2.2.17/epan/dissectors/packet-dof.c,3377,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    size = (guint32)strlen(rec->identity);,b3be45a1b1317dffe5c105381607123c28b51683220175d4ee087fcf305f4937
wireshark-2.2.17/epan/dissectors/packet-dof.c,3507,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    size = (guint32)strlen(rec->domain);,6f02970da6633c306470b2c358105adfd996b3b9e0f2bf46cb07b4889b3dd732
wireshark-2.2.17/epan/dissectors/packet-dof.c,3522,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    size = (guint32)strlen(rec->identity);,b3be45a1b1317dffe5c105381607123c28b51683220175d4ee087fcf305f4937
wireshark-2.2.17/epan/dissectors/packet-dof.c,4742,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            ctx.oidLen = (guint32)strlen(oid);,1ef55412ad777c969588b7944471b5b80514ef5d15aea7914ec45b2ceeb53647
wireshark-2.2.17/epan/dissectors/packet-dof.c,10703,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                size = (guint32)strlen(list[i].domain);,d0337349bd6d297d97b05cf6a20901c4b86d1559b516195c94d3220cc851b473
wireshark-2.2.17/epan/dissectors/packet-dof.c,10714,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                size = (guint32)strlen(list[i].identity);,0cf6612ea44cad44347523d621fcab3b3a1c2b1c8bd48f6f6b5bebd10992a713
wireshark-2.2.17/epan/dissectors/packet-dtls.c,274,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        gchar *path = uat_esc(parts[3], (guint)strlen(parts[3]));",e34b7707aba481a230b9a09c5bbf538da0784c5e8ac6ab410c6e30db5f0141b8
wireshark-2.2.17/epan/dissectors/packet-dtls.c,1554,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (!p || strlen(p) == 0u) {,8f47087139ccacc05a17fdfee41e6b13362ca3dc8b81670bbe378c6d792dca79
wireshark-2.2.17/epan/dissectors/packet-dtn.c,1632,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        else if (strlen(cteb_creator_custodian_eid) != strlen(bundle_custodian)) {,f3214d639d475644be61e5612ce5f5f6e53c3d0e05367de26fe19743078e7e9e
wireshark-2.2.17/epan/dissectors/packet-dtn.c,1632,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        else if (strlen(cteb_creator_custodian_eid) != strlen(bundle_custodian)) {,f3214d639d475644be61e5612ce5f5f6e53c3d0e05367de26fe19743078e7e9e
wireshark-2.2.17/epan/dissectors/packet-dtn.c,1637,71,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        else if (memcmp(cteb_creator_custodian_eid, bundle_custodian, strlen(bundle_custodian)) != 0) {",43173560646c5e363622996f6ab581a12cdabc35149a1f949e3263bc32770b2f
wireshark-2.2.17/epan/dissectors/packet-dvbci.c,1661,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_HOST)+1, ADDR_HOST);",e961771f40b1609b252620406829dacb793410a36d0e2c915c9a21b110c97102
wireshark-2.2.17/epan/dissectors/packet-dvbci.c,1663,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_CAM)+1 , ADDR_CAM);",4a580a388d8a75c0403c781ff4595e0dbd13f57d8f91b5d41d0495755d34289d
wireshark-2.2.17/epan/dissectors/packet-dvbci.c,1667,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_CAM)+1 , ADDR_CAM);",4a580a388d8a75c0403c781ff4595e0dbd13f57d8f91b5d41d0495755d34289d
wireshark-2.2.17/epan/dissectors/packet-dvbci.c,1669,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_HOST)+1, ADDR_HOST);",e961771f40b1609b252620406829dacb793410a36d0e2c915c9a21b110c97102
wireshark-2.2.17/epan/dissectors/packet-dvbci.c,2376,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    key_string_len = (int)strlen(key_string);,0283c103ffbb7a4d3e1d1c06a655c5383feb7992f460d4000aeb16f09d94b001
wireshark-2.2.17/epan/dissectors/packet-edonkey.c,2355,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ( strlen( tagname_string ) == 1 ) {,bb419f0d145d1f2c9854c6da909397fe71060253837b63967ddea3262046cbd0
wireshark-2.2.17/epan/dissectors/packet-etch.c,294,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      length = strlen(line);,ef329f2bb0fbb589e53e381b92b2f077c814179d40a5c07bea3aa888c717cd81
wireshark-2.2.17/epan/dissectors/packet-extreme.c,432,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	        format_text(display_name, strlen(display_name)));",e8a00691bd16658fc7e75effa5389f32a044849f7a7a1ffcb1c1d5dcabdde486
wireshark-2.2.17/epan/dissectors/packet-extreme.c,611,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	        format_text(vlan_name, strlen(vlan_name)));",bfbae3aa7730ec1360d64716b044397e8ffa9d836f565513798f955bf0bd08be
wireshark-2.2.17/epan/dissectors/packet-fmp.c,427,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(msg) == 0) {,fc83eee9cb2a95b515eb462d6c462704f3f8718077cf449f391d8703c44d46af
wireshark-2.2.17/epan/dissectors/packet-foundry.c,154,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		format_text(string_value, strlen(string_value)));",dd0fd27e5c598de890d069320ef23bc30ac314e63461ca12f0ad8f300b450eb0
wireshark-2.2.17/epan/dissectors/packet-ftp.c,331,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if ((gint)strlen(args) < linelen),4fd51579ddeb93339741ebc70f6690d8aa4c669ad5bd01629b242aeeb9f8940e
wireshark-2.2.17/epan/dissectors/packet-ftp.c,332,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        linelen = (gint)strlen(args);,5700f4291e6b0a8a1907a83c3ed30ab6f5d0646e9c5a534429bd83e95be5ff5a
wireshark-2.2.17/epan/dissectors/packet-gearman.c,439,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      cmdlen = (int)strlen(GEARMAN_MGR_CMDS[i]);,df4706dce7b9fc46c39a233ebd335d2abbc45b7c9480920ad09863462941f985
wireshark-2.2.17/epan/dissectors/packet-giop.c,1300,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  len = (int)strlen(key->module);,e732c3fbf2fffbe8f42574f6eed2b75c4e78096486bdc4332c94e5a8fe1dfbb2
wireshark-2.2.17/epan/dissectors/packet-giop.c,1527,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return (int)strlen(line);,c8c7bc8216744ccbebbe741498634cce16280700e8840a6f237aaf4f60ca475e
wireshark-2.2.17/epan/dissectors/packet-h245.c,10764,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(h245_pi->frame_label) == 0),7cca7c8c7d0fc003528f0895ca99e717b4f5c34391280145bef72de65f4c61ec
wireshark-2.2.17/epan/dissectors/packet-h245.c,12389,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ( strlen(h245_pi->frame_label) == 0 ){,e24fc663c6eac72984b8dee6d9ac31357248c35142f6accf0de4c00b199b365f
wireshark-2.2.17/epan/dissectors/packet-h245.c,13421,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if ( strlen(h245_pi->frame_label) == 0 ){,e24fc663c6eac72984b8dee6d9ac31357248c35142f6accf0de4c00b199b365f
wireshark-2.2.17/epan/dissectors/packet-h245.c,14482,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if ( strlen(h245_pi->frame_label) == 0 ){,e24fc663c6eac72984b8dee6d9ac31357248c35142f6accf0de4c00b199b365f
wireshark-2.2.17/epan/dissectors/packet-hclnfsd.c,230,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			ident_len = (int)strlen(ident);,af80bd49cb4191b2ac07016b6e3a063e7abfd20ab0fcbf139a74eb970b50bf47
wireshark-2.2.17/epan/dissectors/packet-hclnfsd.c,237,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			password = username + strlen(username) + 1;,645da5becf4dce08d1358d380c0b065298e58da0e7b003fa5e190e9bfd574536
wireshark-2.2.17/epan/dissectors/packet-hdmi.c,171,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        set_address(&pinfo->src, AT_STRINGZ, (int)strlen(ADDR_RCV)+1, ADDR_RCV);",47c823eff094ade14ddb75ee89062b7e25a57f8d07c5b438cd8d495b968a9ac6
wireshark-2.2.17/epan/dissectors/packet-hdmi.c,172,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        set_address(&pinfo->dst, AT_STRINGZ, (int)strlen(ADDR_TRX)+1, ADDR_TRX);",d2b950d00c9580c766ed46ffc5f177d990d9eaaf0678b99097a93043a9d6a1b7
wireshark-2.2.17/epan/dissectors/packet-hdmi.c,176,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        set_address(&pinfo->src, AT_STRINGZ, (int)strlen(ADDR_TRX)+1, ADDR_TRX);",d7363a800fb4a7b05f00c9d09a15c1581cfc092f75a1043346983c282a2c5cca
wireshark-2.2.17/epan/dissectors/packet-hdmi.c,177,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        set_address(&pinfo->dst, AT_STRINGZ, (int)strlen(ADDR_RCV)+1, ADDR_RCV);",d0331b1986c6adc72ac156e49364e1c210497a2656581c39619fbfa9151d8a25
wireshark-2.2.17/epan/dissectors/packet-hpfeeds.c,230,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (strncmp(ch_node->channel, pi->channel, strlen(pi->channel)) == 0) {",d98c0ab025b0fe75a692035db2874c8debf91817dab7a2f0bd79228cad48f9e8
wireshark-2.2.17/epan/dissectors/packet-hsrp.c,430,81,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                             (tvb_strneql(tvb, offset, ""cisco"", strlen(""cisco""))) == 0 ? """" : ""Non-"",",f44e0a41569f43f2f527c87a825159ccd922d01e3f26238bf2423a47c66f527c
wireshark-2.2.17/epan/dissectors/packet-hsrp.c,592,97,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                                             (tvb_strneql(tvb, offset, ""cisco"", strlen(""cisco""))) == 0 ? """" : ""Non-"",",f44e0a41569f43f2f527c87a825159ccd922d01e3f26238bf2423a47c66f527c
wireshark-2.2.17/epan/dissectors/packet-http.c,1663,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (strlen(query_str) > 1) {,adf6577efc296335072a61242b69f1c476d4e9227047b5e09b4ec7dfbea1deb0
wireshark-2.2.17/epan/dissectors/packet-http.c,1665,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			query_str_len = (int)strlen(query_str);,59faa040f99c6813bc909e0886255f864c9753bcb96b9f8d0abd15069a91f967
wireshark-2.2.17/epan/dissectors/packet-http.c,1666,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			request_uri_len = (int)strlen(request_uri);,9dee1423ced8463a4017340216d1831bed898431448b98d8d3e54f1137747ea3
wireshark-2.2.17/epan/dissectors/packet-http.c,1675,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				parameter_str_len = (int) strlen(parameter_str);,7567fde550dd47d0719262c6edb363f6d04241c72da89c0b78c7261200aa4bd5
wireshark-2.2.17/epan/dissectors/packet-http.c,2892,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (header_len == strlen(headers[i].name) &&,62d0d8fc77f0d994db2cc978e305c742d5cdc18515d928dd34fb0b8a2738d7b6
wireshark-2.2.17/epan/dissectors/packet-http.c,2921,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		hdrlen = strlen(*header);,73796dbfa7ab8343b4cf4081e8bf39eaf54262443c0a7d6661b7029436ace45f
wireshark-2.2.17/epan/dissectors/packet-http.c,2951,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		hdrlen = strlen(*header);,73796dbfa7ab8343b4cf4081e8bf39eaf54262443c0a7d6661b7029436ace45f
wireshark-2.2.17/epan/dissectors/packet-http.c,2990,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		hdrlen = strlen(*header);,73796dbfa7ab8343b4cf4081e8bf39eaf54262443c0a7d6661b7029436ace45f
wireshark-2.2.17/epan/dissectors/packet-iec104.c,1121,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		for (Ind=strlen(cause_str); Ind< 7; Ind++),d7d15b08d557dadd661896511b363681a55fd7b151a6a66989989a9751312125
wireshark-2.2.17/epan/dissectors/packet-infiniband.c,1745,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            set_address(&pinfo->dst,  AT_STRINGZ, (int)strlen((char *)dst_addr)+1, dst_addr);",d445171fedab8c084f2a66fbe3eb2f238c34c47db9903c45d0e0aa4e42750348
wireshark-2.2.17/epan/dissectors/packet-infiniband.c,4988,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            set_address(&pinfo->dst,  AT_STRINGZ, (int)strlen((char *)dst_addr)+1, dst_addr);",d445171fedab8c084f2a66fbe3eb2f238c34c47db9903c45d0e0aa4e42750348
wireshark-2.2.17/epan/dissectors/packet-ip.c,1000,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,              if (cat_str_len < (strlen(cat_str) + 2 + USHRT_MAX_STRLEN)) {,7525933f7503b3c696059b38636f686214cd0d605f9364f1387c2336e546c52b
wireshark-2.2.17/epan/dissectors/packet-ip.c,1003,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                while (cat_str_len < (strlen(cat_str) + 2 + USHRT_MAX_STRLEN)),cb5d07da502e07fe0acd910e233c29554be6f376fa93f2e7fdc7c5b09a52b13b
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,251,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    raw_key_len = (guint)strlen(key);,ce899477862374fcf74754c559cac13c0d5ad80df797fdb924b418d79336198d
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,592,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  ipv6_len = (int) strlen(ipv6_address);,a3e423fbda69964d899418d017b754a8b3ddd90e564cf1905bb53f45f71cbbf1
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,689,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if((strlen(ipv6_addr) == 1) && (ipv6_addr[0] == IPSEC_SA_WILDCARDS_ANY)),24530a8fe6f4f7cc7289f6f16b8dcb7a8f87f1bbb2f7378387b8d0d105fde618
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,700,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  suffix_len = (int) strlen(suffix);,84eb67568ffe6d6a3592409aae10fa8df3759af8a29a2434f190200a2d0910c9
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,704,65,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      prefix_addr = wmem_strndup(wmem_packet_scope(), ipv6_addr,strlen(ipv6_addr) - suffix_cpt);",26b88981004a4366b09bd130b6549b309879d271816458376544cbbcc5037a06
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,706,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      prefix_len = (int) strlen(prefix);,c20af6d4718d25f7bef054d677e742bd2498eaaaf3e7a890d20a2056e4ab6901
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,721,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return (int) strlen(ipv6_addr) - suffix_cpt;,8d540f4b6d22f8731feb8667943df201cc796ebd3c1287cd09598fbc1bdc5d39
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,754,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if((strlen(ipv4_address) == 1) && (ipv4_address[0] == IPSEC_SA_WILDCARDS_ANY)),9389e9b6e2038c9bb9600a8a76107cb95302f21c60a4db8a6a38db4edcc05ac9
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,768,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    while((done_flag == FALSE) && (j <= strlen(ipv4_address)) && (cpt < IPSEC_STRLEN_IPV4)),4999918ccae844092e605ad658670fc4289ebcf8b94b8701bc7daf19f5263a65
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,770,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if(j == strlen(ipv4_address)),abde8be77fbbfe927e98b848543bd95d2d2598e9369cf8b543310761ea99c1c8
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,773,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if((strlen(addr_byte_string_tmp) == 1) && (addr_byte_string_tmp[0] == IPSEC_SA_WILDCARDS_ANY)),508d0215133874db66cf3693a6f34352b5424703895fe633b1f425bc71590cd5
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,790,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          for(i = 0; i < strlen(addr_byte_string); i++),959d9d67828ab2006285476fa8d440d0b422a145aeab239fd78d7642d2b2fdcc
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,802,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if((strlen(addr_byte_string_tmp) == 1) && (addr_byte_string_tmp[0] == IPSEC_SA_WILDCARDS_ANY)),508d0215133874db66cf3693a6f34352b5424703895fe633b1f425bc71590cd5
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,819,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          for(i = 0; i < strlen(addr_byte_string); i++),959d9d67828ab2006285476fa8d440d0b422a145aeab239fd78d7642d2b2fdcc
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,872,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  guint filter_len = (guint)strlen(filter);,ca5f80eda0ebf0d5779a09de8bde505175a5d6ece329dc315128608fc51cd5f0
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,877,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  addr_len = (guint)strlen(addr);,da460839174cc51e455d28cba7ff4c2565de41b18a07493608e10896af56ec4d
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,940,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  guint filter_len = (guint)strlen(filter);,ca5f80eda0ebf0d5779a09de8bde505175a5d6ece329dc315128608fc51cd5f0
wireshark-2.2.17/epan/dissectors/packet-ipsec.c,953,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if(strlen(spi_string) != filter_len),bfada09f31db8b7a9776d7c26b29fdfe3448402fee4248bc86a936ec1bf2d6bb
wireshark-2.2.17/epan/dissectors/packet-iso14443.c,1011,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_PCD)+1, ADDR_PCD);",d79f3c3cc597de46900dcfe5d7f6053785a81aca3afa76462c6efcc4525a7988
wireshark-2.2.17/epan/dissectors/packet-iso14443.c,1013,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_PICC)+1 , ADDR_PICC);",d5fd7ec00bb70ebd889a71687ef130abe3578fe21b9a3fc23cc31d1efca0a2dc
wireshark-2.2.17/epan/dissectors/packet-iso14443.c,1019,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_PICC)+1 , ADDR_PICC);",d5fd7ec00bb70ebd889a71687ef130abe3578fe21b9a3fc23cc31d1efca0a2dc
wireshark-2.2.17/epan/dissectors/packet-iso14443.c,1021,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_PCD)+1, ADDR_PCD);",d79f3c3cc597de46900dcfe5d7f6053785a81aca3afa76462c6efcc4525a7988
wireshark-2.2.17/epan/dissectors/packet-iso7816.c,727,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_INTF)+1, ADDR_INTF);",47b292ee71ad2e09d3eff2667bb6588bdac007754ecd29c45b83ae67b4c5d10d
wireshark-2.2.17/epan/dissectors/packet-iso7816.c,729,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_CARD)+1, ADDR_CARD);",f04d6529e2359308b543ebcd32fa75e98fd5e4aad8054b0178170cfd8090d148
wireshark-2.2.17/epan/dissectors/packet-iso7816.c,735,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_CARD)+1, ADDR_CARD);",f04d6529e2359308b543ebcd32fa75e98fd5e4aad8054b0178170cfd8090d148
wireshark-2.2.17/epan/dissectors/packet-iso7816.c,737,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_INTF)+1, ADDR_INTF);",47b292ee71ad2e09d3eff2667bb6588bdac007754ecd29c45b83ae67b4c5d10d
wireshark-2.2.17/epan/dissectors/packet-iso8583.c,692,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        *length = (gint)strlen(ret);,0a134a229e68f1c9c93edfb4b97d63e90f6aa200948f82142531d1ba80848c1b
wireshark-2.2.17/epan/dissectors/packet-iso8583.c,715,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        *length = (gint)strlen(ret);,0a134a229e68f1c9c93edfb4b97d63e90f6aa200948f82142531d1ba80848c1b
wireshark-2.2.17/epan/dissectors/packet-iso8583.c,871,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  if(strlen(msg_type) == 4 && !isnum_str(msg_type,4)) /*MTI is composed of 4 digits*/",b9d58772be2cb0d7440e5bc6990a9ee0a65073364309af4ec755b91f3e6f2400
wireshark-2.2.17/epan/dissectors/packet-iso8583.c,887,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  if(strlen(msg_bitmap) == 16 && !ishex_str(msg_bitmap, BM_LEN*2)) /*MTI is composed of 4 digits*/",bcb44960e3315560eef8962f21da062994d2c5c152a2ab5fdff2b32a8b633bbe
wireshark-2.2.17/epan/dissectors/packet-jxta.c,882,99,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_sig, tvb, token_offset, (gint) strlen(*current_token), ENC_ASCII|ENC_NA);",4e99cb60eae2d6b6a47a7cbaea1bbeb5f3495b2a028b6aa834dff852277ba34f
wireshark-2.2.17/epan/dissectors/packet-jxta.c,884,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-2.2.17/epan/dissectors/packet-jxta.c,894,108,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_destAddr, tvb, token_offset, (gint) strlen(*current_token),",9dd72b15c365fb8035bb9d6b715e7858c8d578cfd751ff5cd9bf21ae7ac71daf
wireshark-2.2.17/epan/dissectors/packet-jxta.c,898,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-2.2.17/epan/dissectors/packet-jxta.c,908,107,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_pubAddr, tvb, token_offset, (gint) strlen(*current_token), ENC_ASCII|ENC_NA);",c47d10b48962fa0e399d2b80ccb4f0fc7f971a05f41c97a9b0caa961d6dc60ef
wireshark-2.2.17/epan/dissectors/packet-jxta.c,911,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-2.2.17/epan/dissectors/packet-jxta.c,921,106,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_peerid, tvb, token_offset, (gint) strlen(*current_token), ENC_ASCII|ENC_NA);",2920857b3fa11a174524945992d4af65bfce647ebe64c3e32a0a63a6d1bcf7ac
wireshark-2.2.17/epan/dissectors/packet-jxta.c,928,64,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                set_address(found_addr, uri_address_type, (int)strlen(*current_token) + 1, wmem_strdup(wmem_file_scope(), *current_token));",703366df380338dd8b8c55ae9618dbb8705708b9d93038985e07d9f442c27b65
wireshark-2.2.17/epan/dissectors/packet-jxta.c,931,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-2.2.17/epan/dissectors/packet-jxta.c,956,112,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_noProp, tvb, token_offset, (gint) strlen(*current_token), ENC_ASCII|ENC_NA);",b9dd965f47250fa4e53d3eb53c88578af19a8da5b583d7ac1075dfe201a1a2bd
wireshark-2.2.17/epan/dissectors/packet-jxta.c,959,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                  token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-2.2.17/epan/dissectors/packet-jxta.c,963,113,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_version, tvb, token_offset, (gint) strlen(*current_token), ENC_ASCII|ENC_NA);",be85eba7cadf200a0a92cce758e56e60719789a6d45864a2c33c0652e038ded4
wireshark-2.2.17/epan/dissectors/packet-jxta.c,967,112,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_noProp, tvb, token_offset, (gint) strlen(*current_token), ENC_ASCII|ENC_NA);",b9dd965f47250fa4e53d3eb53c88578af19a8da5b583d7ac1075dfe201a1a2bd
wireshark-2.2.17/epan/dissectors/packet-jxta.c,970,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                  token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-2.2.17/epan/dissectors/packet-jxta.c,974,113,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_msgVers, tvb, token_offset, (gint) strlen(*current_token), ENC_ASCII|ENC_NA);",0cf969c424af4ce7f587450ae53238d2f8444e9e0b30369f075fc33af35108a4
wireshark-2.2.17/epan/dissectors/packet-jxta.c,977,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                  token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-2.2.17/epan/dissectors/packet-jxta.c,981,113,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      proto_tree_add_item(jxta_welcome_tree, hf_jxta_welcome_version, tvb, token_offset, (gint) strlen(*current_token), ENC_ASCII|ENC_NA);",be85eba7cadf200a0a92cce758e56e60719789a6d45864a2c33c0652e038ded4
wireshark-2.2.17/epan/dissectors/packet-jxta.c,991,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        tvb, token_offset, (gint) strlen(*current_token), ENC_ASCII|ENC_NA);",0c19f75f9723f0892c0e176c5351445244811f6f0c0fa0f53522fb69b622ac41
wireshark-2.2.17/epan/dissectors/packet-jxta.c,996,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                  token_offset += (guint) strlen(*current_token) + 1;,797365c849eec2a06e79f196a12360cc45c2c20f3dc82221140c492cbd728320
wireshark-2.2.17/epan/dissectors/packet-l2tp.c,1029,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        md5_hmac(&data, 1, secret, strlen(secret), tunnel->shared_key);",007088c172387d810c20c11ae9a7022983b09afc67991682b44ba88027bae5c5
wireshark-2.2.17/epan/dissectors/packet-lbm.h,137,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            *out_len = (unsigned)strlen((((rec_t*)rec)->field_name)); \,2fc54d83c4dd3a3b398eca8fb78c2c9fed4e88ae5b2cd2dfd1645b2c9ddd9c9b
wireshark-2.2.17/epan/dissectors/packet-lbm.h,180,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            *out_len = (unsigned)strlen((((rec_t*)rec)->field_name)); \,2fc54d83c4dd3a3b398eca8fb78c2c9fed4e88ae5b2cd2dfd1645b2c9ddd9c9b
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5058,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    tqr_tap->topic_length = (guint8)strlen(tqr->topic);,b6ddf0489d8fb49dc393607de1fc14cc72b11dba0ef28d2f01ae99555ca3d6aa
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5071,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    tir_tap->topic_length = (guint8)strlen(tir->topic);,1931574fcfd7c17cadb075b0d1829555e5661e552740f5f33ab3ac332afe6ed4
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5072,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    tir_tap->source_length = (guint8)strlen(tir->source_string);,0fea0ec7fdeb7e93edf96faeccade8e49e88c5b6cadd4ac2c103729f24b4f8ee
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5088,57,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    wctqr_tap->pattern_length = (guint8)strlen(wctqr->pattern);,bf6d3c2949bfc0551a24408f703f55007da7f201af83870ea8514a125f3bca1b
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5104,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    qqr_tap->queue_length = (guint8)strlen(qqr->queue);,89e6e9c6b473b8618a5356cc0ff2de8723b32d86940ef51f0c5314a203def6ba
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5118,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    qir_tap->queue_length = (guint8)strlen(qir->queue);,f6e31a4850c56644505d537c93ecac82f57767bdd007a9cdea4732b8b5efdc32
wireshark-2.2.17/epan/dissectors/packet-lbmr.c,5119,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    qir_tap->topic_length = (guint8)strlen(qir->topic);,9d09156f617379e431b628e70e8c8127ed84756c65fa4ad0d867cba0a44bb08d
wireshark-2.2.17/epan/dissectors/packet-logcat-text.c,122,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    gint tok_len = (gint)strlen(token);,a63a6388e5c57f302fbc5195c801f9d7b43accc269df35f3a64bf24b9547fcc8
wireshark-2.2.17/epan/dissectors/packet-logcat-text.c,136,68,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    proto_tree_add_uint(maintree, header_field, tvb, offset, (gint)strlen(token),",5e71cf5771ab066e5dd75fe8eb8635aaadf7a2435ad31d6c2a882f91800cc87d
wireshark-2.2.17/epan/dissectors/packet-logcat-text.c,138,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return offset + (int)strlen(token);,9b5e1f685a646510c680ff3eaa894e743acdff3a57eb16cf87f0f6944b229370
wireshark-2.2.17/epan/dissectors/packet-logcat-text.c,157,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            (int)strlen(token), token);",08043aeddd8729313ca7a8f17601caeb5bf24887916a10e7c7718f8eeb79127f
wireshark-2.2.17/epan/dissectors/packet-logcat-text.c,159,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return offset + (int)strlen(token);,9b5e1f685a646510c680ff3eaa894e743acdff3a57eb16cf87f0f6944b229370
wireshark-2.2.17/epan/dissectors/packet-logcat-text.c,183,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(token), &ts);",e4989b6548faa63eea21611ed76b20956a50392dcf513bbc835371d49151e318
wireshark-2.2.17/epan/dissectors/packet-logcat-text.c,187,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return offset + (int)strlen(token);,9b5e1f685a646510c680ff3eaa894e743acdff3a57eb16cf87f0f6944b229370
wireshark-2.2.17/epan/dissectors/packet-lwres.c,212,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    slen = (int)strlen(addrs);,a831a2334e49981b6348a28a394a0470749da78b6232ba95d3d2ccb6faca9625
wireshark-2.2.17/epan/dissectors/packet-lwres.c,425,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            slen = (int)strlen(addrs);,a831a2334e49981b6348a28a394a0470749da78b6232ba95d3d2ccb6faca9625
wireshark-2.2.17/epan/dissectors/packet-mac-lte.c,2498,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (tvb_captured_length_remaining(tvb, offset) < (gint)(strlen(MAC_LTE_START_STRING)+3+2)) {",ccdebc683b16c7681d7d5767adefe5d2ee31c6ccfe02cb8294dabe830b5dabdb
wireshark-2.2.17/epan/dissectors/packet-mac-lte.c,2503,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (tvb_strneql(tvb, offset, MAC_LTE_START_STRING, strlen(MAC_LTE_START_STRING)) != 0) {",9d4106d44ee0b6af71244b2d2255d6ad880fe8f92ec0ca0b55cb7860a597289e
wireshark-2.2.17/epan/dissectors/packet-mac-lte.c,2506,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    offset += (gint)strlen(MAC_LTE_START_STRING);,2e92cd047001ef44632d2fcebe0987651a20da0c22ce9e7c396d9600d1c6ef3a
wireshark-2.2.17/epan/dissectors/packet-mbtcp.c,463,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(err_str) > 0) {,66fcdf8003bd275e924d9eccd955329845fdbf10c4b46998072980f78511b5f2
wireshark-2.2.17/epan/dissectors/packet-mbtcp.c,477,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(err_str) > 0) {,66fcdf8003bd275e924d9eccd955329845fdbf10c4b46998072980f78511b5f2
wireshark-2.2.17/epan/dissectors/packet-mbtcp.c,585,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(err_str) > 0) {,66fcdf8003bd275e924d9eccd955329845fdbf10c4b46998072980f78511b5f2
wireshark-2.2.17/epan/dissectors/packet-mbtcp.c,599,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(err_str) > 0) {,66fcdf8003bd275e924d9eccd955329845fdbf10c4b46998072980f78511b5f2
wireshark-2.2.17/epan/dissectors/packet-megaco.c,526,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (header_len == strlen(megaco_messageBody_names[i].name) &&,96a52731173aeb0196ffa48951ace2407ce7861aa3747af4f8c2858bae304ace
wireshark-2.2.17/epan/dissectors/packet-megaco.c,530,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            header_len == strlen(megaco_messageBody_names[i].compact_name) &&,e859e60169966b336488dbf56630429a31bd6dfef65c44d490c538afc7d36822
wireshark-2.2.17/epan/dissectors/packet-megaco.c,1635,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (header_len == strlen(megaco_descriptors_names[i].name) &&,50f05762482c3e734345b899157f161a98a51618ca7569a6c754ffc0cbe16759
wireshark-2.2.17/epan/dissectors/packet-megaco.c,1639,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            header_len == strlen(megaco_descriptors_names[i].compact_name) &&,7bc1fd76707adf086db09bbeeafbcf84de50a72347221483d466ad48469c7fb2
wireshark-2.2.17/epan/dissectors/packet-megaco.c,1719,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (header_len == strlen(megaco_mediaParm_names[i].name) &&,afdc53fe71d10e70fe315fdfb3b0b2f3b19c4d4551550e5c7072f636a0707012
wireshark-2.2.17/epan/dissectors/packet-megaco.c,1723,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            header_len == strlen(megaco_mediaParm_names[i].compact_name) &&,f9fb0eae7a933ea9415932b4388522db6d6c5e8c525cc946de8611a119fdf42e
wireshark-2.2.17/epan/dissectors/packet-megaco.c,2353,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (header_len == strlen(megaco_serviceChangeParm_names[i].name) &&,4e3411503242448990ba8f6532f9e3a9c05e7bbad762118300b7cd6b0bbb5ebe
wireshark-2.2.17/epan/dissectors/packet-megaco.c,2357,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            header_len == strlen(megaco_serviceChangeParm_names[i].compact_name) &&,a16eb0c8d4be46458986cedf9b7a56062354f82c35710dc39daaec6563c0456d
wireshark-2.2.17/epan/dissectors/packet-megaco.c,3095,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (header_len == strlen(megaco_localParam_names[i].name) &&,774a7946a459a758790b3c8837c22f8cbdf6e98cfea54fc65f6ba752116e5fd2
wireshark-2.2.17/epan/dissectors/packet-megaco.c,3099,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            header_len == strlen(megaco_localParam_names[i].compact_name) &&,7636df36885d1a3bf29e21ec2c0e7cb9261a805e6d42615b5fd3b7bdb0f85554
wireshark-2.2.17/epan/dissectors/packet-mgcp.c,1154,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,					                             strlen(code_with_verb) ? code_with_verb : code);,49f172ffda7c1aa21fcc6b4a4b57ad9fc3cfe96ebbde01c304294785c0195548
wireshark-2.2.17/epan/dissectors/packet-mgcp.c,1564,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		tokenlen = (int)strlen(tokens[i]);,fe6ebf34925dd97fc14bf3239f4edc0ae00390c34bf3bc726e7c4cd54fc7ce45
wireshark-2.2.17/epan/dissectors/packet-mgcp.c,1673,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		tokenlen = (int)strlen(tokens[i]);,fe6ebf34925dd97fc14bf3239f4edc0ae00390c34bf3bc726e7c4cd54fc7ce45
wireshark-2.2.17/epan/dissectors/packet-mmse.c,1111,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                            format_text(strval, strlen(strval)),",43b736124a01aeeb1e21e41141389580a2c52052b99ffe55039a9de0390a8732
wireshark-2.2.17/epan/dissectors/packet-mmse.c,1148,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                            format_text(strval, strlen(strval)),",43b736124a01aeeb1e21e41141389580a2c52052b99ffe55039a9de0390a8732
wireshark-2.2.17/epan/dissectors/packet-mmse.c,1182,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        str = format_text(strval, strlen(strval));",d0ad578efd8b7743a25d73128a21ec98df98bff5198ea030d432dfeb887549bf
wireshark-2.2.17/epan/dissectors/packet-mmse.c,1216,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                            format_text(strval, strlen(strval)),",43b736124a01aeeb1e21e41141389580a2c52052b99ffe55039a9de0390a8732
wireshark-2.2.17/epan/dissectors/packet-mmse.c,1217,50,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                            format_text(strval2, strlen(strval2)));",f2016c9dd11dc5de62bc634050e1fdb18e4dd02c10df24c1d620e1bafed6843c
wireshark-2.2.17/epan/dissectors/packet-mount.c,173,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				addr_len = (int)strlen(name);,2789275fc45464a52d3e32aaa7dbd5d32efef4b28511d78220f3881d18f7ce0a
wireshark-2.2.17/epan/dissectors/packet-mq-pcf.c,273,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    format_text_chr(sStr, strlen((const char *)sStr), '.');",602551da95f604ae2a13da74cab2bf06186bed9ec14a6e0d9e84c1062fe2c855
wireshark-2.2.17/epan/dissectors/packet-mq-pcf.c,346,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        format_text_chr(sStr, strlen((const char *)sStr), '.');",602551da95f604ae2a13da74cab2bf06186bed9ec14a6e0d9e84c1062fe2c855
wireshark-2.2.17/epan/dissectors/packet-mq.c,3730,79,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                                        format_text_chr(sStr, strlen((const char *)sStr), '.');",602551da95f604ae2a13da74cab2bf06186bed9ec14a6e0d9e84c1062fe2c855
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,524,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field1);,60ceb270e6c3d22813f705c60c3a753f169b63f00d4e9fa33f49de5a200c0338
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,528,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field2);,2b48e5008cfa2773f1db32ecca140bcf79b9b30cfddf6b7f23e6c673c760c121
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,533,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field3);,3adb1876a2b0d9aa59c7def648c32a12ee89fa783aa5aaddf9b7e6d434a9d17c
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,537,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field4);,b4cd49361d67c1a1ad7b07fe48e73063808d830de721797317cd3ff5241af3cb
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,548,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field1);,60ceb270e6c3d22813f705c60c3a753f169b63f00d4e9fa33f49de5a200c0338
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,552,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field2);,2b48e5008cfa2773f1db32ecca140bcf79b9b30cfddf6b7f23e6c673c760c121
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,556,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field3);,3adb1876a2b0d9aa59c7def648c32a12ee89fa783aa5aaddf9b7e6d434a9d17c
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,560,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field4);,b4cd49361d67c1a1ad7b07fe48e73063808d830de721797317cd3ff5241af3cb
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,567,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field5);,aea9a1d5d1b50f766407c0c002d854fe89e6df31137ba85ce1a4337822934ea2
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,578,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field1);,60ceb270e6c3d22813f705c60c3a753f169b63f00d4e9fa33f49de5a200c0338
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,582,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field2);,2b48e5008cfa2773f1db32ecca140bcf79b9b30cfddf6b7f23e6c673c760c121
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,587,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field3);,3adb1876a2b0d9aa59c7def648c32a12ee89fa783aa5aaddf9b7e6d434a9d17c
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,591,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field4);,b4cd49361d67c1a1ad7b07fe48e73063808d830de721797317cd3ff5241af3cb
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,595,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str_len = (gint)strlen(field5);,aea9a1d5d1b50f766407c0c002d854fe89e6df31137ba85ce1a4337822934ea2
wireshark-2.2.17/epan/dissectors/packet-mrcpv2.c,646,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                if (strncmp(p->strptr, header_name, strlen(p->strptr)) == 0)",11ce86942370a6ae9bc7bcd2c03596ebf90d0560519d69b8e59757d5aea92b9c
wireshark-2.2.17/epan/dissectors/packet-ms-mms.c,758,22,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"    fields_matched = sscanf(transport_info, ""%*c%*c%u.%u.%u.%u%*c%3s%*c%u"",",982ede1f9b1feed17e9c4ebe6daf32ff158c8beaa6458a9ccc66e6f028950a69
wireshark-2.2.17/epan/dissectors/packet-ms-mms.c,851,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    format_text((guchar*)server_version, strlen(server_version)));",591ec227817a83f37f700d727463ec29ce9dfc6324d81c8a467f1545289b8961
wireshark-2.2.17/epan/dissectors/packet-ms-mms.c,905,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    format_text((guchar*)player_info, strlen(player_info)));",d8f6afa75e9e0860224e6b75b0586469040f65a292303e7ff25aad7e6987d1c6
wireshark-2.2.17/epan/dissectors/packet-ms-mms.c,980,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    format_text((guchar*)server_file, strlen(server_file)));",1ce0f756aca0d29f140ae7bf47c7ad6e0763b754ea0459304a7765ddc5c16af1
wireshark-2.2.17/epan/dissectors/packet-msrp.c,47,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,#define MSRP_HDR_LEN (strlen (MSRP_HDR)),9011fb8b72adce665ebaef523e1c8bbca783e07da9550242a583ae19bb1f1216
wireshark-2.2.17/epan/dissectors/packet-msrp.c,283,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (header_len == strlen(msrp_headers[i].name) &&,5e3629ac2e932ece61eb58e1d24c38afeb4f71e3b393fefe637380e87ae7185b
wireshark-2.2.17/epan/dissectors/packet-mtp3.c,414,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return (int)(strlen(buf)+1);,ce3f1081deaab4a5ac34b880987eca70eda4fedaac0b9f516aa46f4aa0296847
wireshark-2.2.17/epan/dissectors/packet-multipart.c,230,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    ret = (char *)wmem_alloc(wmem_packet_scope(), strlen(lines) + 1);",3df3b00bfc0e9466dca722a97c23861debae2f8f85ec443c2cf695912f6dde72
wireshark-2.2.17/epan/dissectors/packet-multipart.c,373,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    m_info->boundary_length = (guint)strlen(start_boundary);,5bc8ce9ab6938cb004a272075afcf5472282c5639acad53011a1f18144cfd19c
wireshark-2.2.17/epan/dissectors/packet-multipart.c,377,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        m_info->protocol_length = (guint)strlen(start_protocol);,fa32b09540ec8299ce6197fe152f1ab3754b324fbc6c16e680ce88f035dcbf3a
wireshark-2.2.17/epan/dissectors/packet-multipart.c,706,57,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                                                        strlen(m_info->protocol)) != 0)),7bde56d8de60a2b6348a9f0884cab2ead3e3c5bd16dd4c2748fadfb2b592704e
wireshark-2.2.17/epan/dissectors/packet-multipart.c,906,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (len == strlen(multipart_headers[i].name) &&,b749e866b1945567edb686a5251f75ba5419ac325781fbd171ce3297b36c1c55
wireshark-2.2.17/epan/dissectors/packet-multipart.c,910,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            len == strlen(multipart_headers[i].compact_name) &&,8a0fe8979313ce893eb2545557efad890420238f2f121048d0e342434a231d67
wireshark-2.2.17/epan/dissectors/packet-nbt.c,407,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    pname_ret += MIN(strlen(name_ret), (size_t) name_ret_len);",ab5be1c467d8c3ff6e047c5b5f7eaf8755f853e0a7378da476cd1994fbe89ad2
wireshark-2.2.17/epan/dissectors/packet-ndps.c,2632,68,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    proto_item_append_text(aitem, "": %s"", format_text(server_name, strlen(server_name)));",6576012674cda73d5ab9e559fbebc05f41921d7d912ea91b182aa0fb7f47b416
wireshark-2.2.17/epan/dissectors/packet-nfs.c,1120,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		nns->name_len = (int)strlen(name);,4b5bde0262044f5159aba8b0147f91009ef8de3d3fc2a2f0d9be1daf5b8cecd9
wireshark-2.2.17/epan/dissectors/packet-nfs.c,7378,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	if (strlen(protocol) == 3 && strncmp(protocol, ""tcp"", 3) == 0) {",46e6d722139f29cadceba5d0529732021a42b62f55e347a60ceafde6947e235b
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,416,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  password_len = strlen(nt_password);,a10805bb7abbe031cdccbe9d7c952cdc01e782ba2b244cb2400266744ed1192e
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,492,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if ((nt_password[0] != '\0') && (strlen(nt_password) < 129)) {,4545c20c2bb1526ce9e019a7f9793ae5d0b08d5f3ffa3a9c20b3e53b9fdb96dd
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,495,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    password_len = (int)strlen(nt_password);,480ca79a09cec7024164aa3214e3baca5a6a8b78d82de2cc7ce2eda19c907a07
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,560,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  user_len = strlen(ntlmssph->acct_name);,f5f928a13a03e9679408f0213895b2ad2d2fe6ad0bc86bbed8bda19f2e19058e
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,574,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  domain_len = strlen(ntlmssph->domain_name);,767e10f434490b2567d119ee0bbb3d55ec3d1284c2e65eb2c5c60b205c12f7c8
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,675,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    password_len = strlen(nt_password);,a10805bb7abbe031cdccbe9d7c952cdc01e782ba2b244cb2400266744ed1192e
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,795,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  md5_append(&md5state, CLIENT_SIGN_TEXT, strlen(CLIENT_SIGN_TEXT)+1);",e3bc4f7c7d7dbe3b1d18c77bfa67430de2e47a0685a27e07827a3e228ce87188
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,799,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  md5_append(&md5state2, SERVER_SIGN_TEXT, strlen(SERVER_SIGN_TEXT)+1);",ee0bc6e157a8956d364a722257188138cec1a99d148b69fb10ea93c49350c890
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,839,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    md5_append(&md5state, CLIENT_SEAL_TEXT, strlen(CLIENT_SEAL_TEXT)+1);",39e278f83bd18e818ffbbae3e66d870c132777b3a0c8288851808b325e24250c
wireshark-2.2.17/epan/dissectors/packet-ntlmssp.c,843,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    md5_append(&md5state2, SERVER_SEAL_TEXT, strlen(SERVER_SEAL_TEXT)+1);",e90360f4ee675038d65ae2e9429372f486f2010aef4603212c1787cf676cc898
wireshark-2.2.17/epan/dissectors/packet-opa.c,1128,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        set_address(&pinfo->dst, AT_STRINGZ, (int)strlen(""IPv6 over OPA Packet"") + 1,",856e8b36a0f701798a48bf2a4457949e05d110f04fa348ef2f3c9b2ff4c5ce20
wireshark-2.2.17/epan/dissectors/packet-opensafety.c,1374,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if ( scm_udid_test != NULL && strlen( scm_udid_test ) == 17 ),0fcd4a09fa0f727ec35c5df304a2f3d7379a082e92a87eb481ae40943e58fb9a
wireshark-2.2.17/epan/dissectors/packet-opensafety.c,1864,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ( strlen( (local_scm_udid != NULL ? local_scm_udid : global_scm_udid) ) > 0  && udidLen == 6 ),67302568041a149da88ccc90cb88370685efc79fe798ec19a1869eafd5357d59
wireshark-2.2.17/epan/dissectors/packet-opensafety.c,1969,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if ( strlen( sub_diss_handle ) > 0 ),292e031e562b77563dc6817fb855c42e9032deb306f7aa6f9d2369820f1a8aa1
wireshark-2.2.17/epan/dissectors/packet-pcnfsd.c,199,63,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            ident_decoded = pcnfsd_decode_obscure(ident, (int)strlen(ident));",1a8a7911d4e996f4b2f968a57b4801b1e0568ea2dfe9e5f7adcd15cf28a4e5c0
wireshark-2.2.17/epan/dissectors/packet-pcnfsd.c,206,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                tvb, offset+4, (gint)strlen(ident_decoded), ident_decoded);",6216e9f1e8764d2b5e8d3b83cc6cac1078fd3644837b6800ccc55f9d69f30966
wireshark-2.2.17/epan/dissectors/packet-pcnfsd.c,227,50,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            pcnfsd_decode_obscure(password, (int)strlen(password));",0dbcae3a6c5d117445057fddffd1f75b376fad1d39eedccdf697220b0211dfe1
wireshark-2.2.17/epan/dissectors/packet-pcnfsd.c,232,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                tvb, offset+4, (gint)strlen(password), password);",c8aaf87b02a07498f95132cb4cca47e75d262961c6f79663327710c913c27a98
wireshark-2.2.17/epan/dissectors/packet-pdcp-lte.c,216,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    guint length = (gint)strlen(raw_string);,37b2edbd07b132778285e9e6d69317203b4128fee9e797514c37a8cbaaadd4d4
wireshark-2.2.17/epan/dissectors/packet-pdcp-lte.c,1272,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (tvb_captured_length_remaining(tvb, offset) < (gint)(strlen(PDCP_LTE_START_STRING)+3+2)) {",7f3b82efadf41a854a7c17a59cbd75cd710d417b8292eaf77fd8fab6c8768adc
wireshark-2.2.17/epan/dissectors/packet-pdcp-lte.c,1277,57,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (tvb_strneql(tvb, offset, PDCP_LTE_START_STRING, strlen(PDCP_LTE_START_STRING)) != 0) {",843593ad26658c0bb3b422c73d59c94c5c01764e4e511500b8a776d88fc570a9
wireshark-2.2.17/epan/dissectors/packet-pdcp-lte.c,1280,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    offset += (gint)strlen(PDCP_LTE_START_STRING);,484f0206c3005b8a34f48d36fb05c1dd3b1d66d9ac87dff33fe43e6bac76c229
wireshark-2.2.17/epan/dissectors/packet-pkcs12.c,205,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    pwlen = strlen(pw);,4191727ceafd7c4c4666e7110a729c9e605901abc7442cb1e1f78676083354f5
wireshark-2.2.17/epan/dissectors/packet-pmproxy.c,93,84,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                proto_tree_add_string(tree, hf_pmproxy_host, tvb, offset, (guint32)strlen(host), host);",52a6e5a7a17f1cc6ba9c3592f41a748b366bdf658db97f64959fc39189220ddf
wireshark-2.2.17/epan/dissectors/packet-pmproxy.c,94,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                offset += (int)strlen(host) + PMPROXY_HOST_AND_PORT_DELIMETER_LENGTH;,22e9718646ea7ea6aab6689fa98f37769b378b89f5188b677c4ddb12d395b345
wireshark-2.2.17/epan/dissectors/packet-pmproxy.c,97,88,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    proto_tree_add_string(tree, hf_pmproxy_port, tvb, offset, (guint32)strlen(port), port);",dc63b0d85eddc88702270dcefdfaee0102b1ce076919be9847895eb9ebf1f893
wireshark-2.2.17/epan/dissectors/packet-pop.c,358,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  if (strncmp(data, ""+OK"", strlen(""+OK"")) == 0)",e298aeed040bd00d429caee3de019eea426d0c1c28cc1c58176cb1808c93823e
wireshark-2.2.17/epan/dissectors/packet-pop.c,361,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  if (strncmp(data, ""-ERR"", strlen(""-ERR"")) == 0)",f48356a5beeb8808e9a36c875750edfdd1a961f0bc6fc951323067a03b54b699
wireshark-2.2.17/epan/dissectors/packet-pvfs2.c,897,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,						(int)strlen(string_buffer));,f2af9ebae284979bbe0a6206c15d39ffaaed9e5a1ae0a81376af0b06626bb60d
wireshark-2.2.17/epan/dissectors/packet-pvfs2.c,899,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				string_buffer_size = strlen(formatted) + 12 + 1;,549b5eac6286ddfca37e0109f2db1a75de6bdc9423c750c1e86e83ea95dc157d
wireshark-2.2.17/epan/dissectors/packet-pvfs2.c,922,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,								 (int)strlen(string_buffer)));,a76a6979b4b01820a88620d4d8dc63ab69f26ec4abc75924272ebb49b930d6ae
wireshark-2.2.17/epan/dissectors/packet-quake3.c,92,57,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"#define string_starts_with(s1, s2) (strncmp((s1), (s2), strlen(s2)) == 0)",efd33cec4d17818f914199e8babdc4c4163354793e6e00f623d5679dd3696dbf
wireshark-2.2.17/epan/dissectors/packet-radius.c,936,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	md5_append(&md_ctx, (const guint8 *)shared_secret, (int)strlen(shared_secret));",0a66aed45846c1f2e84b9cd45706826ec5f1f60170986fbe4cbfa89fdc8ec08c
wireshark-2.2.17/epan/dissectors/packet-radius.c,1792,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	md5_append(&md_ctx, shared_secret, strlen(shared_secret));",f95b023e2de82ae704087d82001a8a6235ac3915243d3cd97ad85b96f6600d5e
wireshark-2.2.17/epan/dissectors/packet-rdp.c,2165,67,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    col_append_str(pinfo->cinfo, COL_INFO, format_text(stringval, strlen(stringval)));",358e531b9134b741b8f19ce2992ff0c00db9c315ea002bbd9170df90be32dfd2
wireshark-2.2.17/epan/dissectors/packet-rlc-lte.c,2772,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (tvb_captured_length_remaining(tvb, offset) < (gint)(strlen(RLC_LTE_START_STRING)+1+2)) {",72be04aff23a75b66c7cdb50a56dad17bc71fadd26b14b943dfc7a9a34f5d447
wireshark-2.2.17/epan/dissectors/packet-rlc-lte.c,2777,62,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (tvb_strneql(tvb, offset, RLC_LTE_START_STRING, (gint)strlen(RLC_LTE_START_STRING)) != 0) {",f4b975d849720162d3bd600806bafc03f949972d846ca372ad8460d7b063ff14
wireshark-2.2.17/epan/dissectors/packet-rlc-lte.c,2780,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    offset += (gint)strlen(RLC_LTE_START_STRING);,b3d3e17c96d512b88942278bca59dfaaed3eb508e619cff2e32fa2e8c9cc809b
wireshark-2.2.17/epan/dissectors/packet-rlc.c,1374,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    j= (int)(strlen(char_key)/2)-1;,374874a668dda04af36a001f833bb8a6822c0e226152b60353d56af8cac61f83
wireshark-2.2.17/epan/dissectors/packet-rlc.c,1376,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    for(i = (int)strlen(char_key); i> 0; i-=2 ){,8b5a6665277f958bd3d04cc226e2ee076c48753f799241a1dbbc4e2b4da8a6dc
wireshark-2.2.17/epan/dissectors/packet-rlc.c,1417,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    out = wmem_alloc0(wmem_packet_scope(), strlen(global_rlc_kasumi_key)+1);",a554d3b2055760f99df62ecbd97547680a3cf068825b1360bf7e9a59ba035a33
wireshark-2.2.17/epan/dissectors/packet-rlc.c,1418,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    memcpy(out,global_rlc_kasumi_key,strlen(global_rlc_kasumi_key));    /*Copy from prefrence const pointer*/",44573b7f448f2efc5e641f145d0fa0f61dbdf1fcdf89891303cf6202ee77cbce
wireshark-2.2.17/epan/dissectors/packet-rlc.c,2594,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (tvb_captured_length_remaining(tvb, offset) < (gint)(strlen(RLC_START_STRING)+2+2)) {",25e32962f9aaaffe076dd47793c731b9925db11a45684c8165aa7895718a837a
wireshark-2.2.17/epan/dissectors/packet-rlc.c,2599,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (tvb_strneql(tvb, offset, RLC_START_STRING, (gint)strlen(RLC_START_STRING)) != 0) {",7d115114445d596bf33e7b11f88135afdc1390a68a8da69229d73f5900680311
wireshark-2.2.17/epan/dissectors/packet-rlc.c,2602,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    offset += (gint)strlen(RLC_START_STRING);,9ab08ef77d77513ac73fb07faea4a11db8cd479b1b7372e938e6d77093c1dc86
wireshark-2.2.17/epan/dissectors/packet-rpc.c,799,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				formatted = format_text(string_buffer, strlen(string_buffer));",232f107197c4e8607cc45341842e6088dc5f7cea596f3dbcbd91aef9644afc1f
wireshark-2.2.17/epan/dissectors/packet-rpc.c,808,69,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				    wmem_strdup(wmem_packet_scope(), format_text(string_buffer, strlen(string_buffer)));",86e434d68ac5b73fe8c0470110945ca96d267531afe06617d2ec38a0f728f5bd
wireshark-2.2.17/epan/dissectors/packet-rtmpt.c,677,70,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                if (tvb_strneql(tvb, offset+2, prop, strlen(prop)) == 0) {",9d5975079d8e002597c8996cb609e230c1ff919240f62d23e25aaab1a05c451f
wireshark-2.2.17/epan/dissectors/packet-rtpproxy.c,357,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    codec_len = (guint)strlen(codecs[i]);,52aa84a55f08e90bf565cdfbe8eeefb41ca59a7bb5930093a22bcd43d3169821
wireshark-2.2.17/epan/dissectors/packet-rtpproxy.c,651,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if ((tmp == 'v') && (offset + (gint)strlen(""VF YYYYMMDD"") <= realsize)){",110e336ba05e3116c4269da87aa2babaeadaa38c2e024fd09338d8bc1247057c
wireshark-2.2.17/epan/dissectors/packet-rtpproxy.c,653,65,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                new_offset = tvb_skip_wsp(tvb, offset + ((guint)strlen(""VF"") + 1), -1);",09f4b294a9a1578589c4f40e5f3363a1a884044aa36c1de808f6b0bbc71f018a
wireshark-2.2.17/epan/dissectors/packet-rtpproxy.c,654,120,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                ti = proto_tree_add_item_ret_string(rtpproxy_tree, hf_rtpproxy_version_request, tvb, new_offset, (gint)strlen(""YYYYMMDD""), ENC_ASCII | ENC_NA, wmem_packet_scope(), &tmpstr);",ece8aa8075064540a9f84ffe7efad4230664a48b27fb3e632df8d1d7328f3689
wireshark-2.2.17/epan/dissectors/packet-rtpproxy.c,672,80,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            new_offset = (tmp == 'i' ? (realsize - 1 > offset ? offset + (gint)strlen(""Ib"") : offset + (gint)strlen(""I"")) : tvb_find_guint8(tvb, offset, -1, ' '));",3e3ac71435062b563b481e58b3a15d5601d058ca65ea83ce3bf670e5e0992dd3
wireshark-2.2.17/epan/dissectors/packet-rtpproxy.c,672,110,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            new_offset = (tmp == 'i' ? (realsize - 1 > offset ? offset + (gint)strlen(""Ib"") : offset + (gint)strlen(""I"")) : tvb_find_guint8(tvb, offset, -1, ' '));",3e3ac71435062b563b481e58b3a15d5601d058ca65ea83ce3bf670e5e0992dd3
wireshark-2.2.17/epan/dissectors/packet-rtpproxy.c,811,95,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                ti = proto_tree_add_item(rtpproxy_tree, hf_rtpproxy_error, tvb, offset, (gint)strlen(tmpstr), ENC_ASCII | ENC_NA);",e317232efff74add7490d7d065189926bed3deba659a2035e8bfca4c68e74f6e
wireshark-2.2.17/epan/dissectors/packet-rtpproxy.c,822,79,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (((tmp == '0') || (tmp == '1')) && (realsize == offset + (gint)strlen(""X""))){",e54d0189598734af640b0120cb07ff34e900159611fe1f891ba067d5b2df964d
wireshark-2.2.17/epan/dissectors/packet-rtpproxy.c,833,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (realsize == offset + (gint)strlen(""YYYYMMDD"")){",942f2138277a7fcd6c989a1ed6caa5c9bc9a147f1f6a6b9b01af470c1902f60b
wireshark-2.2.17/epan/dissectors/packet-rtpproxy.c,834,105,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                proto_tree_add_item(rtpproxy_tree, hf_rtpproxy_version_supported, tvb, offset, (guint32)strlen(""YYYYMMDD""), ENC_ASCII | ENC_NA);",d960433eb09def6c9b8e9f6bad45323e780414b525ef47080a1c3d5625a0d7b6
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,478,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        size_t len = strlen(rtsp_methods[ii]);,758eccc0f150a4af709827dba9ef1d87986783a680f09b710fbff43218e01f69
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,534,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (g_ascii_strncasecmp(tmp, rtsp_rtp, strlen(rtsp_rtp)) == 0)",c16bc035bba4880a63ba7e6232aad05456b9facd59c79e587385f6fca8fa8878
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,537,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (g_ascii_strncasecmp(tmp, rtsp_real_rdt, strlen(rtsp_real_rdt)) == 0 ||",09ff6f7aed49eb01dbfc3f4ffc4f3129c15b897f1b8243422946d2af197cf81d
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,538,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        g_ascii_strncasecmp(tmp, rtsp_real_tng, strlen(rtsp_real_tng)) == 0)",7a567ecb5423a6b980e7b004ffaecb86b105a55aa8d7666dc4660328d83b4f18
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,552,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        tmp += strlen(rtsp_sps);,6a49a51b9f0184f0af97e27ee14b1390ef43891cfcc083f4e2f60f68500b611a
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,560,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        tmp += strlen(rtsp_cps);,4a78332ffeaba6ffa1f5afab313b7cca65298965f55bbed450f6c5d31520e855
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,584,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        tmp += strlen(rtsp_inter);,2fe716261f5e26fd3638c2d7772d6364c8ef42bbf5e856c3fce903b33e75263d
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,1276,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        size_t len = strlen(rtsp_methods[ii]);,758eccc0f150a4af709827dba9ef1d87986783a680f09b710fbff43218e01f69
wireshark-2.2.17/epan/dissectors/packet-rtsp.c,1300,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                          (gint) strlen(rtsp_methods[ii]), rtsp_methods[ii]);",23f2574ddec06d27cd61854e45eec68b42813b675ddd216a09b9c99e9bfe4620
wireshark-2.2.17/epan/dissectors/packet-s7comm.c,2353,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(str) > 2),c6684c82453a2e2e69e4f487be2d184255814d333cd7896b316c61cfa6a481dc
wireshark-2.2.17/epan/dissectors/packet-s7comm.c,2354,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        str[strlen(str) - 2 ] = '\0';,013d1c7ae45ebafaeef4edd456f13971c9245e8e4c25d779cf1f55d7b8e5d09b
wireshark-2.2.17/epan/dissectors/packet-s7comm.c,3790,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (strlen(events_string) > 2),1a94de743444e0aa553a8e72de01e1933fe55540e610e173f2b7aadd55abb312
wireshark-2.2.17/epan/dissectors/packet-s7comm.c,3791,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                events_string[strlen(events_string) - 1 ] = '\0';,26064f4c2a04d172ab34be73cf2232369ff91c38ef4a8ff2a7800d392947b1cf
wireshark-2.2.17/epan/dissectors/packet-sap.c,231,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        if (tvb_strneql(tvb, offset, ""v="", strlen(""v=""))) {",1577048fa3b4907d29e68af236f926c12dcdeb35cf8a319d9ef9ae092e912ff3
wireshark-2.2.17/epan/dissectors/packet-sccp.c,1654,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      set_address(&pinfo->dst, AT_STRINGZ, 1+(int)strlen(gt_digits), gt_digits);",35696b852fe338549cbbb22c81a8ae9e1d645dd9a3738c91372d9f8432142dad
wireshark-2.2.17/epan/dissectors/packet-sccp.c,1656,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      set_address(&pinfo->src, AT_STRINGZ, 1+(int)strlen(gt_digits), gt_digits);",001e6e065c0fd2084a4b4d9c1d32f4811463948d2d6cee98a1851b01cec71f34
wireshark-2.2.17/epan/dissectors/packet-sccp.c,1663,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                      tvb, 0, length, (guint32)strlen(gt_digits));",954924bfe1ebae092136902ba92265aa0508a0b8870ada4056a272d1d18dd640
wireshark-2.2.17/epan/dissectors/packet-sdp.c,1297,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((len == strlen(sdp_media_attribute_names[i].name)) &&,2da34a769021393ab4be9059fa6e0cb5b782b94306e2d28ac58d35792c781e76
wireshark-2.2.17/epan/dissectors/packet-sdp.c,1511,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (strncmp((char*)attribute_value, msrp_res, strlen(msrp_res)) == 0) {",c0a728733af644ed66c82157a307bcf4682e485840011fa474379b514e8d928c
wireshark-2.2.17/epan/dissectors/packet-sdp.c,1515,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                address_offset = offset + (int)strlen(msrp_res);,6df440c238391d7bc7cee947dee354de814676349ea9c108575c91addcb146f9
wireshark-2.2.17/epan/dissectors/packet-sdp.c,1540,69,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (strncmp((char*)attribute_value, h324ext_h223lcparm, strlen(msrp_res)) == 0) {",18416dde4d7dd509c4dd95ba6e682a6c90110d2eb3862190463a08aa97aef986
wireshark-2.2.17/epan/dissectors/packet-sdp.c,1550,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                len = (gint)strlen(attribute_value);,c6a1d5b1ceda99268cf71cf6ce839654d77abc2bf8dcd053bfe819b621c18d6c
wireshark-2.2.17/epan/dissectors/packet-sdp.c,2548,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        if (strlen(sdp_pi->summary_str)),bad18d7c81541ca72ced5694cebbd4110a480f243bf96aae8b6d3f96c5756683
wireshark-2.2.17/epan/dissectors/packet-sdp.c,2554,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        if (strlen(sdp_pi->summary_str)),bad18d7c81541ca72ced5694cebbd4110a480f243bf96aae8b6d3f96c5756683
wireshark-2.2.17/epan/dissectors/packet-sdp.c,2559,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    if (strlen(sdp_pi->summary_str)),bad18d7c81541ca72ced5694cebbd4110a480f243bf96aae8b6d3f96c5756683
wireshark-2.2.17/epan/dissectors/packet-sdp.c,2582,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (strlen(sdp_pi->summary_str)),bad18d7c81541ca72ced5694cebbd4110a480f243bf96aae8b6d3f96c5756683
wireshark-2.2.17/epan/dissectors/packet-sip.c,4468,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (meth_len == strlen(sip_methods[i]) &&,364b58350da432662344c56635be099c6f9f9cf5e5060a24ffebce8788a8fce7
wireshark-2.2.17/epan/dissectors/packet-sip.c,4497,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                header_len == strlen(sip_headers[pos].compact_name) &&,bd385ff91e5f2ecfb7881bdc155f7a6c87e270e4872fa206b319cd75241879ca
wireshark-2.2.17/epan/dissectors/packet-sita.c,153,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                strlen(flags_string) ? "", "" : """",",572c36abbc5a533d4dae9e8ed34ec27b5b1167a102d6bb156d7318bb6645e5da
wireshark-2.2.17/epan/dissectors/packet-slsk.c,226,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  if (strlen(con_type) != 1) return ""Unknown"";",19b3d6cf669d78b97e1b1db13d09a0a08511d042f4a7340e2f06246288d2b3f4
wireshark-2.2.17/epan/dissectors/packet-smb.c,2668,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(dn, strlen(dn)));",b01b7b7fbee10b12d1cc5bc5720e064ba229a644ed2187f43aebbbf48e043fcf
wireshark-2.2.17/epan/dissectors/packet-smb.c,2807,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(an, strlen(an)));",bc334461ba1790bb2d1e653b6726ad5dcb1ce7e96bb994273efc64c9245b7417
wireshark-2.2.17/epan/dissectors/packet-smb.c,3089,52,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		fn_len,	fn, ""Old File Name: %s"", format_text(fn, strlen(fn)));",e245331d1e6fdffbf105f4d1bac9c7bc51661f435a55f36dc26c7b5f914f53a0
wireshark-2.2.17/epan/dissectors/packet-smb.c,3093,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,3106,52,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		fn_len,	fn, ""New File Name: %s"", format_text(fn, strlen(fn)));",6e722dee9d6eff3515657ac479a4f186f3fffe14c409c9e5c7601d0d8808239e
wireshark-2.2.17/epan/dissectors/packet-smb.c,3110,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,3153,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		fn_len, fn, ""Source File Name: %s"", format_text(fn, strlen(fn)));",193e3aa285fae43d9d7c5384d99ec0abbb82307f5f805542489679be4df3243b
wireshark-2.2.17/epan/dissectors/packet-smb.c,3157,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,3171,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,3174,84,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	col_append_fstr(pinfo->cinfo, COL_INFO, "", Destination Name: %s"", format_text(fn, strlen(fn)));",738fe9db91b84b483374ab32ce7df67302392f0b7b860da5320f108e0cfdfd07
wireshark-2.2.17/epan/dissectors/packet-smb.c,3265,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,3828,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,3896,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,3937,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,3955,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,4010,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,4027,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,4064,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,4139,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,4584,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,5411,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,6110,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,7205,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					format_text(dn, strlen(dn)),",11565cd2b03feb016929de43b92452c53fa8c9872e07bd224bdb0d80339fb0fa
wireshark-2.2.17/epan/dissectors/packet-smb.c,7206,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"					format_text(an, strlen(an)));",bc334461ba1790bb2d1e653b6726ad5dcb1ce7e96bb994273efc64c9245b7417
wireshark-2.2.17/epan/dissectors/packet-smb.c,7564,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(an, strlen(an)));",bc334461ba1790bb2d1e653b6726ad5dcb1ce7e96bb994273efc64c9245b7417
wireshark-2.2.17/epan/dissectors/packet-smb.c,10006,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,10624,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,10704,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,10746,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,10786,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,10848,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,10873,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,10999,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,11029,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,11046,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,11725,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		proto_item_append_text(item, "": %s"", format_text(name, strlen(name)));",057a0c523416d8f8f1c689db4299c8c91f8d970c17699b51a4f45d1f9852a2dc
wireshark-2.2.17/epan/dissectors/packet-smb.c,12111,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		proto_item_append_text(item, "": %s"", format_text(fn, strlen(fn)));",5c29ef88196756be08de690006fd1602169c94c66a38791943a967ee89151ddd
wireshark-2.2.17/epan/dissectors/packet-smb.c,13908,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,13910,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-2.2.17/epan/dissectors/packet-smb.c,14019,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,14021,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-2.2.17/epan/dissectors/packet-smb.c,14132,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,14134,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-2.2.17/epan/dissectors/packet-smb.c,14217,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,14234,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-2.2.17/epan/dissectors/packet-smb.c,14324,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,14341,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-2.2.17/epan/dissectors/packet-smb.c,14457,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,14474,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-2.2.17/epan/dissectors/packet-smb.c,14579,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,14596,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-2.2.17/epan/dissectors/packet-smb.c,14722,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,14739,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-2.2.17/epan/dissectors/packet-smb.c,14803,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		    format_text(fn, strlen(fn)));",fd847424e1f288ede0cc4fbc770bf7cc2a3c64bb0e98257ad8a7a0f4ddd65a37
wireshark-2.2.17/epan/dissectors/packet-smb.c,14820,60,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	proto_item_append_text(item, "" File: %s"", format_text(fn, strlen(fn)));",71cb6b2e1cee1183d914902a3c448412fe3163a05a84e857ad96b1034367007d
wireshark-2.2.17/epan/dissectors/packet-smb2.c,1050,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (strlen(si->tree->name)>0 && strlen(si->tree->name)<=256) {,ef0267fdd6259f440ce324836a961d829ed9a3779473ba051b0125279b140207
wireshark-2.2.17/epan/dissectors/packet-smb2.c,1050,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (strlen(si->tree->name)>0 && strlen(si->tree->name)<=256) {,ef0267fdd6259f440ce324836a961d829ed9a3779473ba051b0125279b140207
wireshark-2.2.17/epan/dissectors/packet-smpp.c,1960,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            set_address(&(pinfo->src), AT_STRINGZ, 1+(int)strlen(src_str), src_str);",ec210bb2d38b8641775a696a4fb39c5423bbadf11f79c027b72301a39d1da0ce
wireshark-2.2.17/epan/dissectors/packet-smpp.c,1961,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            set_address(&(pinfo->dst), AT_STRINGZ, 1+(int)strlen(dst_str), dst_str);",727dedfddf5f35487c8e2149362f3cdb7557eda1227a101679f7b34c8af2c3be
wireshark-2.2.17/epan/dissectors/packet-smtp.c,329,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      length_user1 = (gint)strlen(decrypt);,d550be5278037b81001b1b7e92b2fe3702ef49fd057b1c8ef8533f1453e999fc
wireshark-2.2.17/epan/dissectors/packet-smtp.c,331,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        length_user2 = (gint)strlen(decrypt + length_user1 + 1);,60215dfae0234448cd0dfeb2d3705be453e16075ab4ef73905aa8a94ae0a149d
wireshark-2.2.17/epan/dissectors/packet-smtp.c,338,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          length_pass = (gint)strlen(decrypt + length_user1 + length_user2 + 2);,202b71ccbb2dcf9035c6a67da8c9fb0c22cf492e684ffbe89eceb64e9a2ebf19
wireshark-2.2.17/epan/dissectors/packet-sna.c,865,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	return (int)strlen(buf)+1;,e676e70622d90131b0f5b047f2b1c20c8179690b79a6d62de298969478b64f9d
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2368,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    usage_len = strlen(usage);,ad8301a932828d1c7093cc9cb6a34adbed7c53b93ed360f168b7f2647331857a
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2442,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    usage_len = strlen(usage);,ad8301a932828d1c7093cc9cb6a34adbed7c53b93ed360f168b7f2647331857a
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,2865,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        if (!from_hex(&ssl_session->psk, ssl_psk, strlen(ssl_psk))) {",159d6f2d05d3c5aaa5916253f138faf4c89d3339100dca84f2078806f5f7d176
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4477,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if ((gint)strlen(uats->password) == 0) {,3967969e35f2e5640dab1740635e1d5db65dabdd0fb13522b328fe0fa29c8d6a
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4815,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        bytes_read = strlen(line);,0d41aa53464b15ffc749d5d56ca35d9ed835ff3d15521bd7fb7305efb60937e0
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4837,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (hex_pre_ms_or_ms == NULL || strlen(hex_pre_ms_or_ms) == 0){,d121a1525c2964985fa8183601489090bcb0f533692164faf77da75c9cf65a27
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4842,50,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            DISSECTOR_ASSERT(hex_pre_ms_or_ms && strlen(hex_pre_ms_or_ms));,08a77150cf1511f40b9af44fb64126f445c520fb743c837414e628d28b85d28f
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4846,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            from_hex(pre_ms_or_ms, hex_pre_ms_or_ms, strlen(hex_pre_ms_or_ms));",a38ff91fe94dfc01e25d11aded210c9009d9016d1a65c22c17f1ddaff80cb0b0
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4856,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    from_hex(key, hex_key, strlen(hex_key));",f0cee1b07b2cb8a661f1d5971e22d4fdadb4b92bc439fe62f5bbe392be6c90d8
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4971,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (!p || strlen(p) == 0u) {,8f47087139ccacc05a17fdfee41e6b13362ca3dc8b81670bbe378c6d792dca79
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,4983,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (!p || strlen(p) == 0u) {,8f47087139ccacc05a17fdfee41e6b13362ca3dc8b81670bbe378c6d792dca79
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,5005,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (!p || strlen(p) == 0u) {,8f47087139ccacc05a17fdfee41e6b13362ca3dc8b81670bbe378c6d792dca79
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,5026,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (p && (strlen(p) > 0u)) {,ef3752b90aa986a02a258d34c2064a4e838af34892bdff01682313964bcf33fa
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,5071,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    const int l = (const int)strlen(data->str);,084fb672b4061c89829511f3d9a9460adec1ddcb99fb0a47e860a6008f6fcb95
wireshark-2.2.17/epan/dissectors/packet-ssl-utils.c,5250,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        name_length == strlen(alpn_proto->proto_name) &&,efe31c93508e6772ee83d848cb13712e941d3739fd9c0802096316cbe1cff423
wireshark-2.2.17/epan/dissectors/packet-ssl.c,442,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                gchar *path = uat_esc(parts[3], (guint)strlen(parts[3]));",e34b7707aba481a230b9a09c5bbf538da0784c5e8ac6ab410c6e30db5f0141b8
wireshark-2.2.17/epan/dissectors/packet-ssl.c,3599,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (!p || strlen(p) == 0u) {,8f47087139ccacc05a17fdfee41e6b13362ca3dc8b81670bbe378c6d792dca79
wireshark-2.2.17/epan/dissectors/packet-sua.c,2253,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      set_address(&pinfo->src, AT_STRINGZ, 1+(int)strlen(sua_source_gt), wmem_strdup(pinfo->pool, sua_source_gt));",f93368a56a1889465d8ad59cdcd01b9cb1344125ac1e491d8af7d97bcb168899
wireshark-2.2.17/epan/dissectors/packet-sua.c,2255,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      set_address(&pinfo->dst, AT_STRINGZ, 1+(int)strlen(sua_destination_gt), wmem_strdup(pinfo->pool, sua_destination_gt));",0ba48372d27eff0a7fe806984f84552ec65a725d03a3f476cd660eea456bb60c
wireshark-2.2.17/epan/dissectors/packet-syslog.c,198,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (msu_hex_dump && (len = strlen(msu_hex_dump))) {,735225f2e40fdbbfd6f8c46fd5a7845d06c4f202d81a9b0fc4eb25316e565f01
wireshark-2.2.17/epan/dissectors/packet-tacacs.c,814,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		set_address(*addr, AT_STRINGZ, (int)strlen(ADDR_INVLD)+1, ADDR_INVLD);",ec64fb13fb0b045aeff2f1391dda2bdfdb376078351ce8586c247f5ab00e17a1
wireshark-2.2.17/epan/dissectors/packet-tacacs.c,1295,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	md5_len = 4 /* sizeof(session_id) */ + strlen(key),d70a213bb6373576d7055f512dfa975bc509e65da1b6c762aa7a3de9b235d207
wireshark-2.2.17/epan/dissectors/packet-tacacs.c,1304,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	memcpy(mdp, key, strlen(key));",35295c06a91fe8861190f000057666cdba1f708e0496bb43f2c31d15e1e6f795
wireshark-2.2.17/epan/dissectors/packet-tacacs.c,1305,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	mdp += strlen(key);,b81a04d1d2506da4eca14bbf29c9e453d669be28408d0f0227531153037c1022
wireshark-2.2.17/epan/dissectors/packet-tcp.c,923,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                                                  (guint)strlen(dummy_str)+1);,9eb7eb45b13faa029304422a965c35e46fbc7fb9d49e0ef3830f51c74c16bfd8
wireshark-2.2.17/epan/dissectors/packet-tipc.c,638,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	return (int)(strlen(buf)+1);,ce3f1081deaab4a5ac34b880987eca70eda4fedaac0b9f516aa46f4aa0296847
wireshark-2.2.17/epan/dissectors/packet-tivoconnect.c,102,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            length = (int)strlen(field) + 1;,eac70eb0871ac02b8a687c55fb1cae12b9dde8080a46b638030bf3e74bcd739e
wireshark-2.2.17/epan/dissectors/packet-tivoconnect.c,109,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            fieldlen = (int)strlen(field) + 1;,f3da2bd417348d4ad921c4686137164c06b7a2a33b3f005bc6b5f1c4c05f62a6
wireshark-2.2.17/epan/dissectors/packet-tpncp.c,355,13,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"        if (sscanf(line_in_file, ""%255s %d"", tpncp_name, &tpncp_id) == 2) {",3c8055bd18dabde1780074c5ff1a1d0c4df3a2dada48ffd712e61a73a34d24bb
wireshark-2.2.17/epan/dissectors/packet-tpncp.c,394,13,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"        if (sscanf(line_in_file, ""%255s %255s %d"", enum_name, enum_str, &enum_id) == 3) {",b47ffbdcc191278b600311ff1388ae832fc08d4c384d4e41e1f251c25b43587b
wireshark-2.2.17/epan/dissectors/packet-usb.c,1274,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return (int)(strlen(buf)+1);,ce3f1081deaab4a5ac34b880987eca70eda4fedaac0b9f516aa46f4aa0296847
wireshark-2.2.17/epan/dissectors/packet-wbxml.c,6978,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		proto_item_append_text(ti, "" '%s'"", format_text(str, strlen(str)));",c5ae495f3c02586af85f530c3cd6289aa5a67ce7dc75433e30cc807c6d07925a
wireshark-2.2.17/epan/dissectors/packet-xcsl.c,185,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ( strlen(str) == 0 ) {,fa15c10e4736c83d0156b45f1c1ca71368902a2c5100a538acabd1f36e266cc7
wireshark-2.2.17/epan/dissectors/packet-xml.c,1315,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                namelen = (int)strlen(filename);,ad70dc70fd3c8f2ac615163521544189a645257f1f0112edc482631ba817d7b6
wireshark-2.2.17/epan/dissectors/packet-xmpp-jingle.c,320,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            parent_item_label[strlen(parent_item_label)-1]= '\0';,fec08ef36e6be01efd0aba5ef02c5401de9dbd80afdcd0b3da8d3921e61bc4b1
wireshark-2.2.17/epan/dissectors/packet-xmpp-utils.c,365,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    gint len = (int)strlen(string);,68c489cb4589d15cb1cdc7b4d5ee763b259fa4ecfd5827ed6c46d03f81bedfc8
wireshark-2.2.17/epan/dissectors/packet-xmpp-utils.c,584,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    if(attr->name[5] == ':' && strlen(attr->name) > 6),d2553afda9dbdb8a2d2b356a623ceafc5258dcc5b8d4e4e2e2713594044463fb
wireshark-2.2.17/epan/dissectors/packet-zbee-nwk.c,536,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        set_address(&pinfo->net_dst, AT_STRINGZ, (int)strlen(dst_addr)+1, dst_addr);",9c7c3d74cfb015638ce4985f560576056369bb6fca7e576f6b26454ae8d911a6
wireshark-2.2.17/epan/dissectors/packet-zbee-nwk.c,563,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        set_address(&pinfo->net_src, AT_STRINGZ, (int)strlen(src_addr)+1, src_addr);",a9baf475fd00757b86223d32d55a4ce122338ba7de1b13a9fdd71ba6fe67ce4d
wireshark-2.2.17/epan/dissectors/packet-zvt.c,514,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_ECR)+1, ADDR_ECR);",b3a48dd286f622c4578067cb55fa8c3f22c024b5b30af73b318112405d15c700
wireshark-2.2.17/epan/dissectors/packet-zvt.c,516,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_PT)+1, ADDR_PT);",f9c1ba6b3b2519981c2612245da41bdc057653b5ee19723a6c693f0e5bf33b91
wireshark-2.2.17/epan/dissectors/packet-zvt.c,520,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_PT)+1, ADDR_PT);",f9c1ba6b3b2519981c2612245da41bdc057653b5ee19723a6c693f0e5bf33b91
wireshark-2.2.17/epan/dissectors/packet-zvt.c,522,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (int)strlen(ADDR_ECR)+1, ADDR_ECR);",b3a48dd286f622c4578067cb55fa8c3f22c024b5b30af73b318112405d15c700
wireshark-2.2.17/epan/dtd_parse.c,1103,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-2.2.17/epan/dtd_parse.c,2346,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);",f6db99431b143cf4d85bbc3049addd0480055ecadec213a4a82bfa4cdffcb561
wireshark-2.2.17/epan/dtd_preparse.c,1017,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-2.2.17/epan/dtd_preparse.c,2034,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);",f6db99431b143cf4d85bbc3049addd0480055ecadec213a4a82bfa4cdffcb561
wireshark-2.2.17/epan/exported_pdu.c,207,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	proto_str_len = (int)strlen(proto_name);,cce4d6ffabcfc5e5c849cfe91f6dfa2256fc992553a5b1ee4fd1c75ee77f4482
wireshark-2.2.17/epan/ftypes/ftype-bytes.c,239,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	g_byte_array_append(bytes, (const guint8 *)s, (guint)strlen(s));",c77a54bf5caa33ff610d79e5ebfc68b29ab718adfc80cc1b530defda48313aaf
wireshark-2.2.17/epan/ftypes/ftype-guid.c,50,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    n = strlen(s);,629d51c605602308d650d5cfd2293e04902ec1bf31140ac38541188f84e3d055
wireshark-2.2.17/epan/ftypes/ftype-guid.c,51,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (n != strlen(fmt)),61790d62d99225a442d7472b755d947122ad47ca392c16d5161dab6998cbdbf0
wireshark-2.2.17/epan/ftypes/ftype-pcre.c,57,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len = strlen(s);,3c16192165fa76c568a6264d3b0ba7a8f55ab06662383dfa3699ee6e8a68e8c7
wireshark-2.2.17/epan/ftypes/ftype-pcre.c,124,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return (int)strlen(g_regex_get_pattern(fv->value.re));,f99bbb398006fad0f2e3488e5142099307400bb430ab209dcd58a19044bee6e3
wireshark-2.2.17/epan/ftypes/ftype-protocol.c,77,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	private_data = (guint8 *)g_memdup(s, (guint)strlen(s));",9f14ca5588897750baee2fb7b7d0a83da77a4bd86b7f5ec8168c56b0a91b5b70
wireshark-2.2.17/epan/ftypes/ftype-protocol.c,79,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			(guint)strlen(s), (gint)strlen(s));",e217d9cdff09bef3e43141b488cbd6bbbf19a20df82bb34abb72a7bb7ff45410
wireshark-2.2.17/epan/ftypes/ftype-protocol.c,79,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			(guint)strlen(s), (gint)strlen(s));",e217d9cdff09bef3e43141b488cbd6bbbf19a20df82bb34abb72a7bb7ff45410
wireshark-2.2.17/epan/ftypes/ftype-protocol.c,384,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			if ((strlen(fv_b->value.protocol.proto_string) != 0) &&,ac1ea53a203c374df84fe286281dbc3bc357912e005dc9175d7968d42140854a
wireshark-2.2.17/epan/ftypes/ftype-protocol.c,435,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			(int)strlen(a->proto_string),	/* ... and its length */",8d3653361180339291a387bd0843e8244270a9d8041766adb084e304474418fc
wireshark-2.2.17/epan/ftypes/ftype-string.c,59,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			return (int)strlen(fv->value.string);,4b78d47986ba57e40203771dac01093aac72b707edb71dcf662e43edadbff66b
wireshark-2.2.17/epan/ftypes/ftype-string.c,131,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	return (guint)strlen(fv->value.string);,0a9d7ff996c9898974cd3dbe402eb80a05db35df21f614d2166dbc7a88361d17
wireshark-2.2.17/epan/ftypes/ftype-string.c,188,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (strlen(fv_b->value.string) == 0) {,c4beca833947ba20a4ac845990a5643dbdb59cabc7a0ad383750e7b65b80a3c1
wireshark-2.2.17/epan/ftypes/ftype-string.c,219,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			(int)strlen(str),	/* ... and its length */",e07d5b13eaf7b9056964b55a7d8ceab3f46b3c5eed5fdbc6f9bff58e5f412cf3
wireshark-2.2.17/epan/ftypes/ftype-time.c,125,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	ndigits = (int)strlen(startp);,d79e4b9640b559a4fcb9d15418a5f5c004c8430e55e7fc6211a2171d7d586b51
wireshark-2.2.17/epan/ftypes/ftype-time.c,334,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	ret = (int)strlen(rep) + ((rtype == FTREPR_DFILTER) ? 2 : 0);	/* 2 for opening and closing quotes */,d26af515be03370b6618a41ca7c88d037b578e8e5d32ce047bfaa7799dc79728
wireshark-2.2.17/epan/ftypes/ftype-time.c,353,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		buf += strlen(rep);,3e9b115084eb266a21891189c7ff8856a7dacc7f1166c8c79dc63953eeb882ca
wireshark-2.2.17/epan/ftypes/ftype-time.c,367,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	ret = (int)strlen(rep);,a0b5c5f3d4876474062577307c61be3be5a0935f4a51cdb91fbe9adab7471ddc
wireshark-2.2.17/epan/guid-utils.c,71,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			return (int) strlen(uuid_name);,9efa9b6e85ce0956579fc235273710e137a7005f6102b84c00af867da7f35f92
wireshark-2.2.17/epan/media_params.c,158,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    keylen = (gsize) strlen(key);,221a5f567e0de622d2021b4bc326b54022e1df8f3016f8ed27b2c6387c2f27da
wireshark-2.2.17/epan/oids.c,1290,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (strlen(path) > 0 ) {,d3f40df35d49b245a2b30dd7f43464789d145360f8dcb6c7b10f35a67c7b741d
wireshark-2.2.17/epan/osi-utils.c,70,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    cur += strlen( cur );,eee02d90e145666187ef034f1314eca745fd8d9e8e40a4f862af9f9240e2b5ea
wireshark-2.2.17/epan/osi-utils.c,72,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    cur += strlen( cur );,eee02d90e145666187ef034f1314eca745fd8d9e8e40a4f862af9f9240e2b5ea
wireshark-2.2.17/epan/osi-utils.c,283,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    return (int)strlen(buf)+1;,e676e70622d90131b0f5b047f2b1c20c8179690b79a6d62de298969478b64f9d
wireshark-2.2.17/epan/plugin_if.c,54,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    g_assert(menulabel != NULL && strlen ( menulabel ) > 0 );,b6a3311b8d5f51d607ec24c9e9ea6370afb8dd4b865af1e22e01d6ee1c406dfd
wireshark-2.2.17/epan/plugin_if.c,102,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    g_assert(menulabel != NULL && strlen ( menulabel ) > 0 );,b6a3311b8d5f51d607ec24c9e9ea6370afb8dd4b865af1e22e01d6ee1c406dfd
wireshark-2.2.17/epan/plugin_if.c,135,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    g_assert(label != NULL && strlen ( label ) > 0 );,8049677750da8baf92c3545680fabda97ae31ec0458b09e40499a7dafc5be87a
wireshark-2.2.17/epan/plugin_if.c,146,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if ( tooltip != NULL && strlen(tooltip) > 0 ),f4365e28708a793169f2feb05dd62c8492771f3cd147deb2e6318698a0f1e2cf
wireshark-2.2.17/epan/plugin_if.c,168,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    g_assert(url != NULL && strlen ( url ) > 0 );,cea3ff0dcbed5561deda6de9a00ca1b75d6e5f7cb3913398cf59ef1764587d13
wireshark-2.2.17/epan/prefs.c,838,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        if (!((strncmp(name, module->name, strlen(module->name)) != 0) ||",56b65a74baa7f4cada0c98fac21eb279493cf643d3836928efab6d6b6312dcfb
wireshark-2.2.17/epan/prefs.c,839,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            (((name[strlen(module->name)]) != '.') && ((name[strlen(module->name)]) != '_')))),8425fb72bc62c57e18ef570b9fb9d088d6cea4332ff59410d58161c88c1d181a
wireshark-2.2.17/epan/prefs.c,839,62,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            (((name[strlen(module->name)]) != '.') && ((name[strlen(module->name)]) != '_')))),8425fb72bc62c57e18ef570b9fb9d088d6cea4332ff59410d58161c88c1d181a
wireshark-2.2.17/epan/prefs.c,2954,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    size_t cust_format_len = strlen(cust_format);,ce9b6bf46b5e367215631fcb14ec8e1f082efee22a2ae4fbf3ae6b83f595e8f2
wireshark-2.2.17/epan/prefs.c,2965,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if ((strlen(fmt) > cust_format_len) && (fmt[cust_format_len] == ':') &&,47bf6f02c106b7933bf09b9dc2c34430819228b9dca8e5ad3c2456a51e2c1795
wireshark-2.2.17/epan/prefs.c,3482,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        prefs.saved_at_version = g_strndup(ver, strlen(ver) - 1);",b35f4d5ae900714465a67c16b81184df20b1fb700ebfdff088d2cd3bc3790438
wireshark-2.2.17/epan/prefs.c,3760,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        len = strlen (name);,19d06c780b60be0639c83846a3dc98e0e6368838f08ed2958695778f2784fea5
wireshark-2.2.17/epan/prefs.c,3762,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (strlen (tok) == len && strcmp (name, tok) == 0) {",9a77973bd07a39a7f3ae53bd403110d844a5bf370dd5d0e31cd90e4da383777d
wireshark-2.2.17/epan/prefs.c,3864,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        len = strlen (name);,19d06c780b60be0639c83846a3dc98e0e6368838f08ed2958695778f2784fea5
wireshark-2.2.17/epan/prefs.c,3866,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (strlen (tok) == len && strcmp (name, tok) == 0) {",9a77973bd07a39a7f3ae53bd403110d844a5bf370dd5d0e31cd90e4da383777d
wireshark-2.2.17/epan/print.c,260,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        fmt_ts[strlen(fmt_ts)-1] = 0; /* overwrite \n */,656054a58a306c0b4d4be37272b1f9b0020bb9a540d9c2f0311dd5f0b2cbb215
wireshark-2.2.17/epan/print.c,1078,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                if (strlen(fi->hfinfo->abbrev) > 0) {,711ad46a264900187e822b7d3b5c063f8ac742994a29e450e7a70b4a6428e002
wireshark-2.2.17/epan/print.c,1792,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (!strncmp(field, COLUMN_FIELD_FILTER, strlen(COLUMN_FIELD_FILTER)))",b20c4ba8d92d13777c6912b5b3dcc75d6d8a4b4ccc1ffe66be5396c40f63f05a
wireshark-2.2.17/epan/print.c,1803,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (!strncmp(field, COLUMN_FIELD_FILTER, strlen(COLUMN_FIELD_FILTER)))",b20c4ba8d92d13777c6912b5b3dcc75d6d8a4b4ccc1ffe66be5396c40f63f05a
wireshark-2.2.17/epan/print.c,1840,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    option_value = option + strlen(option_name) + 1;,f19f8dbd1aa165d0d98609b71fbe48e0285a8d4c11b69ba8de66cd5a2e1888de
wireshark-2.2.17/epan/print_stream.c,147,37,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            DWORD out_len = (DWORD) wcslen((wchar_t *) tty_out);,b1af2a0ec275e1e5200cc0209b588c930ac32e29b02c4b305e4df8c94b1fa737
wireshark-2.2.17/epan/proto.c,4827,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			return format_text(string, strlen(string));",75da2dc15d311fa0682e739e54958bb7fee7cce0c3b1d8f7f2b2d96fce53885b
wireshark-2.2.17/epan/proto.c,4837,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return format_text(string, strlen(string));",75da2dc15d311fa0682e739e54958bb7fee7cce0c3b1d8f7f2b2d96fce53885b
wireshark-2.2.17/epan/proto.c,5112,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,						offset_e = (int)strlen(expr);,0f2af9efcc15c734e7f625d220bcbf9fb5b15919006338c1ca3d0463f801dfe5
wireshark-2.2.17/epan/proto.c,5157,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,						offset_e = (int)strlen(expr);,0f2af9efcc15c734e7f625d220bcbf9fb5b15919006338c1ca3d0463f801dfe5
wireshark-2.2.17/epan/proto.c,5171,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,						offset_r = (int)strlen(result);,e9538732f497985c856632b4e114399e8e0884874812768fd85c7882f3f7e8e8
wireshark-2.2.17/epan/proto.c,5178,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,						offset_r = (int)strlen(result);,e9538732f497985c856632b4e114399e8e0884874812768fd85c7882f3f7e8e8
wireshark-2.2.17/epan/proto.c,5184,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,						offset_r = (int)strlen(result);,e9538732f497985c856632b4e114399e8e0884874812768fd85c7882f3f7e8e8
wireshark-2.2.17/epan/proto.c,5190,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,						offset_r = (int)strlen(result);,e9538732f497985c856632b4e114399e8e0884874812768fd85c7882f3f7e8e8
wireshark-2.2.17/epan/proto.c,5232,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,						offset_r = (int)strlen(result);,e9538732f497985c856632b4e114399e8e0884874812768fd85c7882f3f7e8e8
wireshark-2.2.17/epan/proto.c,5238,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,						offset_r = (int)strlen(result);,e9538732f497985c856632b4e114399e8e0884874812768fd85c7882f3f7e8e8
wireshark-2.2.17/epan/proto.c,5257,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,						offset_r = (int)strlen(result);,e9538732f497985c856632b4e114399e8e0884874812768fd85c7882f3f7e8e8
wireshark-2.2.17/epan/proto.c,5265,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,						offset_r = (int)strlen(result);,e9538732f497985c856632b4e114399e8e0884874812768fd85c7882f3f7e8e8
wireshark-2.2.17/epan/proto.c,5379,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		curlen = strlen(fi->rep->representation);,f0357a3c1890e8ccd38f278060cf108b16753d488d64cf02c8e5f53da007ac00
wireshark-2.2.17/epan/proto.c,8632,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			else if (strlen(blurb) == 0),1dc7f66bd131f8b716f7ad846c5d98b5e29884c5bd886ad563410ef4aafe225e
wireshark-2.2.17/epan/proto.c,8688,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	abbrev_len = (int) strlen(hfinfo->abbrev);,4219943b9cab94deb2b022a51f03af8387713c970f82c186047232a7be503409
wireshark-2.2.17/epan/radius_dict.c,1430,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-2.2.17/epan/radius_dict.c,2781,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);",f6db99431b143cf4d85bbc3049addd0480055ecadec213a4a82bfa4cdffcb561
wireshark-2.2.17/epan/req_resp_hdrs.c,199,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,					len = (guint) strlen(header_val);,e7c70bfaa2a76faeda3d5f0a999af680e10ded3553735c01a85880d33997ee20
wireshark-2.2.17/epan/rtd_table.c,160,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    guint len = (guint) strlen(cmd_str);,821772d70b3566c53643f1bf285cde7fa16305d69a310d6296c349ef975f798c
wireshark-2.2.17/epan/srt_table.c,170,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    guint len = (guint32)strlen(cmd_str);,cc51ac90326aba69e8accd8ab727f46c5d1d000a5f537eaf9c78de182e65cbdb
wireshark-2.2.17/epan/stat_tap_ui.c,88,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        if(!strncmp(sca->cmd,optstr,strlen(sca->cmd))){",fe6f67bad6919060e08013544891d6993df843a3876f0a1f82772c1f355e20b4
wireshark-2.2.17/epan/stat_tap_ui.c,154,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    guint len = (guint) strlen(new_stat->cli_string);,1d8256fb7d1dd042e826c8f138b0771fdce81689ce4ae297f581acbebbd5505d
wireshark-2.2.17/epan/stats_tree.c,93,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        len = (guint) strlen(display_name) + indent;,733f01042a16136b538588c187119a232e500f6b2eb8e0bee979eeaa6c9b18ec
wireshark-2.2.17/epan/stats_tree.c,97,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len = (guint) strlen(node->name) + indent;,9ee12894cb278f62a11094f2300ce64e89998e0dd4b6e18e644e06bd521eadc3
wireshark-2.2.17/epan/stats_tree.c,929,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            memmove(sep,sep+1,strlen(sep));",4859741155896f7d907d23b14bda52e98c595510d1fb400acede614f960b0ba1
wireshark-2.2.17/epan/stats_tree.c,933,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            memmove(buf,sep,strlen(sep)+1);",806a69b2cbff3455a52f07c9d8b4e8798b7cda16971fb5fea5cbab07e847334b
wireshark-2.2.17/epan/strutil.c,1063,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    gsize hlen = strlen(haystack);,0627c8b9b8bdb1c6f7631df96fb301c325bb965dc29fcadda6173f1b44ef3a5f
wireshark-2.2.17/epan/strutil.c,1064,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    gsize nlen = strlen(needle);,49a0119c31963ee4fda39b068afa46f5fe4b808110f8b4f79b4dd84cbdb5ef46
wireshark-2.2.17/epan/strutil.c,1211,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    q = new_str = (gchar *)g_malloc (strlen(str) * 2 + 1);,7b3388dcb8b463cbba3e1f14a31d4fefb93394a87690cae1973f76c35272c930
wireshark-2.2.17/epan/strutil.c,1239,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    q = new_str = (gchar *)g_malloc (strlen(str) + 1);,549b8775deeecbf47b006609fc05eb2a96855acbb4d7dd7848bc7af7379892b7
wireshark-2.2.17/epan/tvbparse.c,358,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    w->len = (int) strlen(str);,68f9806553c514c722076c6b7c95d11b36a2d952d4c1f9dfa1fca709c7d17ae6
wireshark-2.2.17/epan/tvbparse.c,397,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    w->len = (int) strlen(str);,68f9806553c514c722076c6b7c95d11b36a2d952d4c1f9dfa1fca709c7d17ae6
wireshark-2.2.17/epan/uat.h,380,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			*out_len = (unsigned)strlen((((rec_t*)rec)->field_name)); \,2fc54d83c4dd3a3b398eca8fb78c2c9fed4e88ae5b2cd2dfd1645b2c9ddd9c9b
wireshark-2.2.17/epan/uat.h,435,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		*out_len = (unsigned)strlen(*out_ptr); \,e11115f87bd62ed7654a20a2c1b1337b2c3e8a5334de185440ebafafe526a15e
wireshark-2.2.17/epan/uat.h,477,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	*out_len = (unsigned)strlen(*out_ptr); },f64d63b63898a51d76c86fb01e3299954b61e3427d54716616b8ac0a06566c5e
wireshark-2.2.17/epan/uat.h,497,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	*out_len = (unsigned)strlen(*out_ptr); },f64d63b63898a51d76c86fb01e3299954b61e3427d54716616b8ac0a06566c5e
wireshark-2.2.17/epan/uat.h,528,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			*out_len = (unsigned)strlen(*out_ptr); \,e11115f87bd62ed7654a20a2c1b1337b2c3e8a5334de185440ebafafe526a15e
wireshark-2.2.17/epan/uat.h,533,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	*out_len = (unsigned)strlen(default_str); },c0b18bc295e6f38b8ea4eff9ab9bf7a28b03bbbd9c889b62a34c78712d5e6167
wireshark-2.2.17/epan/uat.h,552,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			*out_len = (unsigned)strlen((((rec_t*)rec)->field_name)); \,2fc54d83c4dd3a3b398eca8fb78c2c9fed4e88ae5b2cd2dfd1645b2c9ddd9c9b
wireshark-2.2.17/epan/uat.h,579,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		*out_len = (unsigned)strlen(*out_ptr); \,e11115f87bd62ed7654a20a2c1b1337b2c3e8a5334de185440ebafafe526a15e
wireshark-2.2.17/epan/uat.h,600,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		*out_len = (unsigned)strlen(*out_ptr); \,e11115f87bd62ed7654a20a2c1b1337b2c3e8a5334de185440ebafafe526a15e
wireshark-2.2.17/epan/uat_load.c,803,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		size_t pslen = strlen(yyextra->parse_str); \,5c88bbccbb3cbb70801e592f317da9f78bb861ba817c8431f61b1800af0e41c8
wireshark-2.2.17/epan/uat_load.c,1003,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-2.2.17/epan/uat_load.c,2098,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);",f6db99431b143cf4d85bbc3049addd0480055ecadec213a4a82bfa4cdffcb561
wireshark-2.2.17/epan/wmem/wmem_core.c,198,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        if (strncmp(override_env, ""simple"", strlen(""simple"")) == 0) {",030a89d61cc584d9738e204171424bd22524b426a57789b2aebed49e64ed8c6f
wireshark-2.2.17/epan/wmem/wmem_core.c,201,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        else if (strncmp(override_env, ""block"", strlen(""block"")) == 0) {",0b0b6c50aab80b47dadd73113681cdb0fd8c513ee92621399c96446fe1adc6c9
wireshark-2.2.17/epan/wmem/wmem_core.c,204,50,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        else if (strncmp(override_env, ""strict"", strlen(""strict"")) == 0) {",f0fad0d544272fef07ec40aba8d8cf688b2ef1ff8ca2a0e255e126ea83802e1b
wireshark-2.2.17/epan/wmem/wmem_core.c,207,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        else if (strncmp(override_env, ""block_fast"", strlen(""block_fast"")) == 0) {",d93b80acc1de035006471b8b9a5f48a3caabdcac6a120336a281064dcaed8859
wireshark-2.2.17/epan/wmem/wmem_map.c,283,50,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    return wmem_strong_hash((const guint8 *)key, strlen((const char *)key));",acf15ad0d2a64ef9e47ef6c78af584049b2f2f585770a1983dd25bd8cc87df93
wireshark-2.2.17/epan/wmem/wmem_strbuf.c,90,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len       = str ? strlen(str) : 0;,a268147257b83b9d9cc4a5b78b931a2e0b041d52579b2f4e749a06d347032067
wireshark-2.2.17/epan/wmem/wmem_strbuf.c,152,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    append_len = strlen(str);,9cfca0294e9ab514c2f46cc96e8e6e0b4e79f6a267e2b4c6e9156d1d310c9cca
wireshark-2.2.17/epan/wmem/wmem_strutl.c,51,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len = strlen(src) + 1; /* +1 for the null-terminator */,2cb7db0770eb367dfc38c8d3ecb3a4ddbd4ce95324ade62b19a0f1628e749192
wireshark-2.2.17/epan/wmem/wmem_strutl.c,164,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len = 1 + strlen(first);,6c66403350c2aacc4a49284b92b4d2eebdf488533dbee88a50a0e49910e614d2
wireshark-2.2.17/epan/wmem/wmem_strutl.c,167,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        len += strlen(s);,03891a398d559305e90a8eae1337075d919f9fd5d6443f0e5b810701e95d85da
wireshark-2.2.17/epan/wmem/wmem_strutl.c,204,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    sep_len = (guint)strlen(delimiter);,60c5f9e6cbc6178a8c4f13899f21292922885c2679280789f7f8ac89869400e8
wireshark-2.2.17/epan/wmem/wmem_strutl.c,249,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        len = strlen (str);,76db8eb36b0638d1d8f8b8bce8756859e5dd4e46dc90b749b8545f2c29b9b3f2
wireshark-2.2.17/epan/wmem/wmem_test.c,1033,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    g_assert(strlen(str) == 9);,286fad30c1bf6db6003a808f2696dce5f0f8c8248e273f24c434dede99931f99
wireshark-2.2.17/epan/wmem/wmem_test.c,1047,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    g_assert(strlen(wmem_strbuf_get_str(strbuf)) ==,23ec4e1453744b696e00a4d80e80f4ebe3c4206b662c22e3748147d66b734e83
wireshark-2.2.17/epan/wslua/wslua.h,637,104,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            wtap_block_set_string_option_value(g_array_index(obj->member, wtap_block_t, 0), option, s, strlen(s)); \",02a085c1d97e272fa35a0de5ba6bc4b4e343f789f1afc2dbcd07c2413bbc6e9a
wireshark-2.2.17/epan/wslua/wslua.h,655,111,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            wtap_block_set_nth_string_option_value(g_array_index(obj->member, wtap_block_t, 0), option, 0, s, strlen(s)); \",7f1b6d3849df183c8aa00079e44aceff6c1432b9e04694835297a77af9451c38
wireshark-2.2.17/epan/wslua/wslua_field.c,592,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (fake_tap && fake_tap_filter->len > strlen(""frame"")) {",5beffa18e1cc8c959947549515efe66aeb0e839d74d2b71b5776df8b1cbb7ff5
wireshark-2.2.17/epan/wslua/wslua_file.c,503,28,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","    WSLUA_CLASS_FNREG(File,read),",4f262b593b5b1ab4ce7e3f77d3dac0f8a4191326fb7e14ad750ba9b19ba1b1d7
wireshark-2.2.17/epan/wslua/wslua_file_handler.c,268,30,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","    INIT_FILEHANDLER_ROUTINE(read,FALSE);",22e42245cf8a0c925f5ca07eb714de1c5bc36caf88a0711f10e479445216de59
wireshark-2.2.17/epan/wslua/wslua_file_handler.c,830,41,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","WSLUA_ATTRIBUTE_FUNC_SETTER(FileHandler,read);",00bad0d0d582e746f278aee8d72563308cf6c6b037ea06cb9bb38840954d398c
wireshark-2.2.17/epan/wslua/wslua_file_handler.c,953,39,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","    WSLUA_ATTRIBUTE_WOREG(FileHandler,read),",f62bf089a19b7c5d895e01773c73c6f34de044d100b6b84cc033bc6a390c1c01
wireshark-2.2.17/epan/wslua/wslua_internals.c,548,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (sep) seplen = (guint) strlen(sep);,8513954fcbfb63ad2a670fdfb75a451e8fa96cf835bfcf136d7796df495d9690
wireshark-2.2.17/epan/wslua/wslua_tvb.c,932,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    lua_pushlstring(L, str, strlen(str));",aa9c0f7ed2407f744cbace909acd30a928b11c2d7c55bab015c4d6632f187a75
wireshark-2.2.17/extcap.c,505,72,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            gchar * pref_name = g_regex_replace(regex_name, arg->call, strlen(arg->call), 0, """", (GRegexMatchFlags) 0, NULL );",430ec26db5b0b6552994482a73daddd6d990adbcccea1479f4b749de219c079d
wireshark-2.2.17/extcap.c,506,79,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            gchar * ifname_underscore = g_regex_replace(regex_ifname, ifname, strlen(ifname), 0, ""_"", (GRegexMatchFlags) 0, NULL );",074d1ec9a17b233f134ab5af6c2fafec2c3062ccfdd8fce2b1632cd6743ba1eb
wireshark-2.2.17/extcap.c,559,80,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    gchar * pref_name = g_regex_replace(regex_name, arg->call, strlen(arg->call), 0, """", (GRegexMatchFlags) 0, NULL );",430ec26db5b0b6552994482a73daddd6d990adbcccea1479f4b749de219c079d
wireshark-2.2.17/extcap.c,560,87,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    gchar * ifname_underscore = g_regex_replace(regex_ifname, ifname, strlen(ifname), 0, ""_"", (GRegexMatchFlags) 0, NULL );",074d1ec9a17b233f134ab5af6c2fafec2c3062ccfdd8fce2b1632cd6743ba1eb
wireshark-2.2.17/extcap.c,575,72,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        if (! arg->pref_valptr && pref->varp.string && strlen(*pref->varp.string)),07bf3a1daf3d3ea4cca80f1e6e96520d5b2ce0ee973edb31264e6f2dbc462ff7
wireshark-2.2.17/extcap.c,773,21,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","                if (read(userdata->extcap_stderr_rd, buffer, sizeof(gchar) * STDERR_BUFFER_SIZE) <= 0 )",ce10f9063d56e75f1324430d69961476694b4c912d8e98bf1f286b0ccadf9485
wireshark-2.2.17/extcap.c,776,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                if ( strlen ( buffer) > 0 ),b10797135cb65b9ff9cab24e75af32dfb8fc672c1d46191e456176cffa725ca8
wireshark-2.2.17/extcap.c,927,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (interface_opts.cfilter && strlen(interface_opts.cfilter) > 0) {,8eee4a8d97902c51ab41705d9fd22431f76b714b56fa8288766b2f90417ed33f
wireshark-2.2.17/extcap/androiddump.c,259,50,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    return !strncmp(interface, interface_prefix, strlen(interface_prefix));",602a1460cd0e598eea5a3d0172c448fd827b1a85a77fc76ebc72fa5419619110
wireshark-2.2.17/extcap/androiddump.c,534,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    adb_service_length = strlen(adb_service);,e4c68f2b36fd2676cb35e4ccb89f30f461cf88233fcd0a7e7e0ab7e4c28a7ada
wireshark-2.2.17/extcap/androiddump.c,596,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    adb_service_length = strlen(adb_service);,e4c68f2b36fd2676cb35e4ccb89f30f461cf88233fcd0a7e7e0ab7e4c28a7ada
wireshark-2.2.17/extcap/androiddump.c,655,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    adb_service_length = strlen(adb_service);,e4c68f2b36fd2676cb35e4ccb89f30f461cf88233fcd0a7e7e0ab7e4c28a7ada
wireshark-2.2.17/extcap/androiddump.c,773,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number_length = strlen(serial_number);,681fb06d9171d02ef1692f82ca718d3ed0d23faaf6830cc5cd2b147025c3fab7
wireshark-2.2.17/extcap/androiddump.c,941,33,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"                if (data_str && sscanf(data_str, ""%*s %15s"", pid) == 1) {",e744b32ec837ee2ef60eecf27c440dc7cb3e4b42507ab7a0c243fc6d7b7b3d8d
wireshark-2.2.17/extcap/androiddump.c,962,106,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    result = g_snprintf((char *) helpful_packet, PACKET_LENGTH, adb_check_port_templace, strlen(adb_check_port_templace) - 6 + strlen(pid), pid);",3f03bfd4055ac512cdf1715a10c10b9c346ab78abf81b4441e3941e1f658cee2
wireshark-2.2.17/extcap/androiddump.c,962,144,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    result = g_snprintf((char *) helpful_packet, PACKET_LENGTH, adb_check_port_templace, strlen(adb_check_port_templace) - 6 + strlen(pid), pid);",3f03bfd4055ac512cdf1715a10c10b9c346ab78abf81b4441e3941e1f658cee2
wireshark-2.2.17/extcap/androiddump.c,978,41,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"                        if (data_str && sscanf(data_str, ""%*s %15s"", pid) == 1 && strlen(pid) > 10 && strcmp(pid + 9, ""10EA"") == 0) {",4cad27d4bedc8d79e36f086bb059405d67545e536c9101808cce3d391f6d5757
wireshark-2.2.17/extcap/androiddump.c,978,83,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        if (data_str && sscanf(data_str, ""%*s %15s"", pid) == 1 && strlen(pid) > 10 && strcmp(pid + 9, ""10EA"") == 0) {",4cad27d4bedc8d79e36f086bb059405d67545e536c9101808cce3d391f6d5757
wireshark-2.2.17/extcap/androiddump.c,1033,33,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"                if (data_str && sscanf(data_str, ""%*s %15s"", pid) == 1) {",e744b32ec837ee2ef60eecf27c440dc7cb3e4b42507ab7a0c243fc6d7b7b3d8d
wireshark-2.2.17/extcap/androiddump.c,1054,106,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    result = g_snprintf((char *) helpful_packet, PACKET_LENGTH, adb_check_port_templace, strlen(adb_check_port_templace) - 6 + strlen(pid), pid);",3f03bfd4055ac512cdf1715a10c10b9c346ab78abf81b4441e3941e1f658cee2
wireshark-2.2.17/extcap/androiddump.c,1054,144,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    result = g_snprintf((char *) helpful_packet, PACKET_LENGTH, adb_check_port_templace, strlen(adb_check_port_templace) - 6 + strlen(pid), pid);",3f03bfd4055ac512cdf1715a10c10b9c346ab78abf81b4441e3941e1f658cee2
wireshark-2.2.17/extcap/androiddump.c,1070,41,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"                        if (data_str && sscanf(data_str, ""%*s %15s"", pid) == 1 && strlen(pid) > 10 && strcmp(pid + 9, ""22A8"") == 0) {",3ba260744639386305e0ef9099adaa2d0ffa7fd5e667a1d6e9496b2bab01cf82
wireshark-2.2.17/extcap/androiddump.c,1070,83,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        if (data_str && sscanf(data_str, ""%*s %15s"", pid) == 1 && strlen(pid) > 10 && strcmp(pid + 9, ""22A8"") == 0) {",3ba260744639386305e0ef9099adaa2d0ffa7fd5e667a1d6e9496b2bab01cf82
wireshark-2.2.17/extcap/androiddump.c,1201,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            strlen(interface) > strlen(INTERFACE_ANDROID_BLUETOOTH_HCIDUMP) + 1) {,4129482d62a9b65684b412d7e6aaee3b5e77faa496005044e1a0c46eaa851295
wireshark-2.2.17/extcap/androiddump.c,1201,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            strlen(interface) > strlen(INTERFACE_ANDROID_BLUETOOTH_HCIDUMP) + 1) {,4129482d62a9b65684b412d7e6aaee3b5e77faa496005044e1a0c46eaa851295
wireshark-2.2.17/extcap/androiddump.c,1202,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_BLUETOOTH_HCIDUMP) + 1;,ba28fbf11fe5733fbcab2ec69d825e676fa360a7db10882c5a3dcde3a30c119d
wireshark-2.2.17/extcap/androiddump.c,1203,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number_length = strlen(serial_number);,681fb06d9171d02ef1692f82ca718d3ed0d23faaf6830cc5cd2b147025c3fab7
wireshark-2.2.17/extcap/androiddump.c,1542,104,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    result = g_snprintf(helpful_packet, PACKET_LENGTH, adb_forward_template, (serial_number) ? 5 + 7 + strlen(serial_number) + 28 : 4 + 28, (serial_number) ? ""host-serial:"" : ""host"", (serial_number) ?  serial_number: """", local_tcp_port, server_tcp_port);",21b750884b92c9539ad5cfb6e08dc77bab2e931744c97f59d9408520dc391264
wireshark-2.2.17/extcap/androiddump.c,1583,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            strlen(interface) > strlen(INTERFACE_ANDROID_BLUETOOTH_EXTERNAL_PARSER) + 1) {,53f39126b0c7fa4d9433fa487845272834e5d163392a5a88bba3ee9bf1c1882a
wireshark-2.2.17/extcap/androiddump.c,1583,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            strlen(interface) > strlen(INTERFACE_ANDROID_BLUETOOTH_EXTERNAL_PARSER) + 1) {,53f39126b0c7fa4d9433fa487845272834e5d163392a5a88bba3ee9bf1c1882a
wireshark-2.2.17/extcap/androiddump.c,1584,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_BLUETOOTH_EXTERNAL_PARSER) + 1;,ae8a738868085f3b72b6259cedb1aacaa87a35883d74e7420609c8c8f4033749
wireshark-2.2.17/extcap/androiddump.c,1585,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number_length = strlen(serial_number);,681fb06d9171d02ef1692f82ca718d3ed0d23faaf6830cc5cd2b147025c3fab7
wireshark-2.2.17/extcap/androiddump.c,1857,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            strlen(interface) > strlen(INTERFACE_ANDROID_BLUETOOTH_BTSNOOP_NET) + 1) {,9a80d865fdc5fb30f6c603d96f22abedebefe4ce00139f0089c5062e06d385ae
wireshark-2.2.17/extcap/androiddump.c,1857,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            strlen(interface) > strlen(INTERFACE_ANDROID_BLUETOOTH_BTSNOOP_NET) + 1) {,9a80d865fdc5fb30f6c603d96f22abedebefe4ce00139f0089c5062e06d385ae
wireshark-2.2.17/extcap/androiddump.c,1858,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_BLUETOOTH_BTSNOOP_NET) + 1;,82c28915003877284a1ba4454736eca2e17d8e19655528506c10eee4655b9b90
wireshark-2.2.17/extcap/androiddump.c,1859,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number_length = strlen(serial_number);,681fb06d9171d02ef1692f82ca718d3ed0d23faaf6830cc5cd2b147025c3fab7
wireshark-2.2.17/extcap/androiddump.c,1995,64,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    exported_pdu_header_protocol_normal.length = GUINT16_TO_BE(strlen(wireshark_protocol_logcat_text) + 2);,d4f73342af4a72708db6bbb157bdeb3fa055459feac09f379b3fcba135f0e78f
wireshark-2.2.17/extcap/androiddump.c,2001,77,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_MAIN) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_MAIN) + 1) {",335d7e539e2b492b2cb0c3092d7cbba54733ed6ca8d8fe07bfe6b2814c3b085e
wireshark-2.2.17/extcap/androiddump.c,2001,97,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_MAIN) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_MAIN) + 1) {",335d7e539e2b492b2cb0c3092d7cbba54733ed6ca8d8fe07bfe6b2814c3b085e
wireshark-2.2.17/extcap/androiddump.c,2002,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_MAIN) + 1;,280e036e762897ff00f9e127045e306f3c17ae1b3b82ac4e3ea4c47ee1b8869d
wireshark-2.2.17/extcap/androiddump.c,2003,86,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_SYSTEM) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_SYSTEM) + 1) {",3a3e65b56774f18d3e603fb89295c1678421e212135aba79e0cddbe62ba4d8f1
wireshark-2.2.17/extcap/androiddump.c,2003,106,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_SYSTEM) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_SYSTEM) + 1) {",3a3e65b56774f18d3e603fb89295c1678421e212135aba79e0cddbe62ba4d8f1
wireshark-2.2.17/extcap/androiddump.c,2004,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_SYSTEM) + 1;,2a71be575db59d7ec5f1109658852fe3ccfc4d6c9ac0b3812dbd8d3dd1954c70
wireshark-2.2.17/extcap/androiddump.c,2005,85,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_RADIO) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_RADIO) + 1) {",f2822613a2fbe27a1880b20940f4a2207c1d71c52c052343d1f06e7cda6a6aaa
wireshark-2.2.17/extcap/androiddump.c,2005,105,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_RADIO) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_RADIO) + 1) {",f2822613a2fbe27a1880b20940f4a2207c1d71c52c052343d1f06e7cda6a6aaa
wireshark-2.2.17/extcap/androiddump.c,2006,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_RADIO) + 1;,4c7f424f6f353c5f76339f272c7476742de259c09d58ef829bb8c9d416b7f59f
wireshark-2.2.17/extcap/androiddump.c,2007,86,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_EVENTS) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_EVENTS) + 1) {",9c61f4e02bfb3766db6846692dd84488bc24c72f6bcd0ce4eb86d8281b9fb573
wireshark-2.2.17/extcap/androiddump.c,2007,106,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_EVENTS) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_EVENTS) + 1) {",9c61f4e02bfb3766db6846692dd84488bc24c72f6bcd0ce4eb86d8281b9fb573
wireshark-2.2.17/extcap/androiddump.c,2008,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_EVENTS) + 1;,c269268b7b9e98c57cb8505087d160ff03b3c40bd3890d3e9d62e6f53168450a
wireshark-2.2.17/extcap/androiddump.c,2009,89,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_TEXT_MAIN) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_TEXT_MAIN) + 1) {",968f0d31cd8e2c1c66bfe673b9146c3d7bcb3cd8ad906da0a8d88f7710362803
wireshark-2.2.17/extcap/androiddump.c,2009,109,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_TEXT_MAIN) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_TEXT_MAIN) + 1) {",968f0d31cd8e2c1c66bfe673b9146c3d7bcb3cd8ad906da0a8d88f7710362803
wireshark-2.2.17/extcap/androiddump.c,2010,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_TEXT_MAIN) + 1;,1944cd0475cb905ef8a1f87d435b452fc879364491193326afc72874ece72719
wireshark-2.2.17/extcap/androiddump.c,2011,91,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_TEXT_SYSTEM) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_TEXT_SYSTEM) + 1) {",f4b29417458be58720299cac8b13787bd12c0abb97744dcc8b7a965be1148d69
wireshark-2.2.17/extcap/androiddump.c,2011,111,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_TEXT_SYSTEM) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_TEXT_SYSTEM) + 1) {",f4b29417458be58720299cac8b13787bd12c0abb97744dcc8b7a965be1148d69
wireshark-2.2.17/extcap/androiddump.c,2012,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_TEXT_SYSTEM) + 1;,e0ab323f9dd5fbc59c807f80fec931287a9ec5c3745e06a7fa25033f7646bdae
wireshark-2.2.17/extcap/androiddump.c,2013,90,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_TEXT_RADIO) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_TEXT_RADIO) + 1) {",02b3dcf563152ee041b8af8142f93594add869fe9ac0540ebd961192464265ae
wireshark-2.2.17/extcap/androiddump.c,2013,110,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_TEXT_RADIO) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_TEXT_RADIO) + 1) {",02b3dcf563152ee041b8af8142f93594add869fe9ac0540ebd961192464265ae
wireshark-2.2.17/extcap/androiddump.c,2014,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_TEXT_RADIO) + 1;,966be403e5ed9d18f3cd85e4bc52ddbe37881c1e466a262cd368ca1625a76b3f
wireshark-2.2.17/extcap/androiddump.c,2015,91,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_TEXT_EVENTS) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_TEXT_EVENTS) + 1) {",0be55ab8f4ccd59c6bb40f1648237ecd4a3484dfbaaa4ee614d427cfd6a2dfbd
wireshark-2.2.17/extcap/androiddump.c,2015,111,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_TEXT_EVENTS) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_TEXT_EVENTS) + 1) {",0be55ab8f4ccd59c6bb40f1648237ecd4a3484dfbaaa4ee614d427cfd6a2dfbd
wireshark-2.2.17/extcap/androiddump.c,2016,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_TEXT_EVENTS) + 1;,e1660fcab60f1405fffa3f63adbbf7e28354dd5caecc6308fca048e4d48309ae
wireshark-2.2.17/extcap/androiddump.c,2017,90,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_TEXT_CRASH) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_TEXT_CRASH) + 1) {",ad2bdcbd1ca3ec1a42e281b60ddc50ed0cda9ec7ed84be8d2adcaf5cd375e5ac
wireshark-2.2.17/extcap/androiddump.c,2017,110,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_TEXT_CRASH) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_TEXT_CRASH) + 1) {",ad2bdcbd1ca3ec1a42e281b60ddc50ed0cda9ec7ed84be8d2adcaf5cd375e5ac
wireshark-2.2.17/extcap/androiddump.c,2018,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_TEXT_CRASH) + 1;,5df01f4624f2dd77982bc558be9b7f9e37877fdcda1f4cf8671bda164e3fd920
wireshark-2.2.17/extcap/androiddump.c,2029,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number_length = strlen(serial_number);,681fb06d9171d02ef1692f82ca718d3ed0d23faaf6830cc5cd2b147025c3fab7
wireshark-2.2.17/extcap/androiddump.c,2063,78,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    result = g_snprintf((char *) packet, PACKET_LENGTH, adb_logcat_template, strlen(adb_logcat_template) + -8 + strlen(logcat_buffer), logcat_buffer, """");",4a2b54aacab363419aa148e1cb3c616ecaf26c2ad0be7521c79f847637d3fb47
wireshark-2.2.17/extcap/androiddump.c,2063,113,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    result = g_snprintf((char *) packet, PACKET_LENGTH, adb_logcat_template, strlen(adb_logcat_template) + -8 + strlen(logcat_buffer), logcat_buffer, """");",4a2b54aacab363419aa148e1cb3c616ecaf26c2ad0be7521c79f847637d3fb47
wireshark-2.2.17/extcap/androiddump.c,2189,64,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    exported_pdu_header_protocol_events.length = GUINT16_TO_BE(strlen(wireshark_protocol_logcat_events) + 2);,4c70f199fdf3d9a95e79c77c138ab628609355507bc2f190058966f5f34b47ca
wireshark-2.2.17/extcap/androiddump.c,2192,64,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    exported_pdu_header_protocol_normal.length = GUINT16_TO_BE(strlen(wireshark_protocol_logcat) + 2);,f4780b32714a66df959586cdfe449af5ca28e564fc46e7d7f4c7eb7eee9d4ed5
wireshark-2.2.17/extcap/androiddump.c,2198,77,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_MAIN) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_MAIN) + 1) {",335d7e539e2b492b2cb0c3092d7cbba54733ed6ca8d8fe07bfe6b2814c3b085e
wireshark-2.2.17/extcap/androiddump.c,2198,97,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_MAIN) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_MAIN) + 1) {",335d7e539e2b492b2cb0c3092d7cbba54733ed6ca8d8fe07bfe6b2814c3b085e
wireshark-2.2.17/extcap/androiddump.c,2199,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_MAIN) + 1;,280e036e762897ff00f9e127045e306f3c17ae1b3b82ac4e3ea4c47ee1b8869d
wireshark-2.2.17/extcap/androiddump.c,2200,86,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_SYSTEM) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_SYSTEM) + 1) {",3a3e65b56774f18d3e603fb89295c1678421e212135aba79e0cddbe62ba4d8f1
wireshark-2.2.17/extcap/androiddump.c,2200,106,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_SYSTEM) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_SYSTEM) + 1) {",3a3e65b56774f18d3e603fb89295c1678421e212135aba79e0cddbe62ba4d8f1
wireshark-2.2.17/extcap/androiddump.c,2201,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_SYSTEM) + 1;,2a71be575db59d7ec5f1109658852fe3ccfc4d6c9ac0b3812dbd8d3dd1954c70
wireshark-2.2.17/extcap/androiddump.c,2202,85,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_RADIO) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_RADIO) + 1) {",f2822613a2fbe27a1880b20940f4a2207c1d71c52c052343d1f06e7cda6a6aaa
wireshark-2.2.17/extcap/androiddump.c,2202,105,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_RADIO) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_RADIO) + 1) {",f2822613a2fbe27a1880b20940f4a2207c1d71c52c052343d1f06e7cda6a6aaa
wireshark-2.2.17/extcap/androiddump.c,2203,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_RADIO) + 1;,4c7f424f6f353c5f76339f272c7476742de259c09d58ef829bb8c9d416b7f59f
wireshark-2.2.17/extcap/androiddump.c,2204,86,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_EVENTS) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_EVENTS) + 1) {",9c61f4e02bfb3766db6846692dd84488bc24c72f6bcd0ce4eb86d8281b9fb573
wireshark-2.2.17/extcap/androiddump.c,2204,106,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (is_specified_interface(interface, INTERFACE_ANDROID_LOGCAT_EVENTS) && strlen(interface) > strlen(INTERFACE_ANDROID_LOGCAT_EVENTS) + 1) {",9c61f4e02bfb3766db6846692dd84488bc24c72f6bcd0ce4eb86d8281b9fb573
wireshark-2.2.17/extcap/androiddump.c,2205,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_LOGCAT_EVENTS) + 1;,c269268b7b9e98c57cb8505087d160ff03b3c40bd3890d3e9d62e6f53168450a
wireshark-2.2.17/extcap/androiddump.c,2216,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number_length = strlen(serial_number);,681fb06d9171d02ef1692f82ca718d3ed0d23faaf6830cc5cd2b147025c3fab7
wireshark-2.2.17/extcap/androiddump.c,2419,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            && strlen(interface) > strlen(INTERFACE_ANDROID_WIFI_TCPDUMP) + 1) {,e867ebdfdac3545e23dd3088aa7fc856835ad3f15e225f873b920476a7f52720
wireshark-2.2.17/extcap/androiddump.c,2419,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            && strlen(interface) > strlen(INTERFACE_ANDROID_WIFI_TCPDUMP) + 1) {,e867ebdfdac3545e23dd3088aa7fc856835ad3f15e225f873b920476a7f52720
wireshark-2.2.17/extcap/androiddump.c,2420,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        serial_number = interface + strlen(INTERFACE_ANDROID_WIFI_TCPDUMP) + 1;,4bbae32dd36441e66123d7b8d2eef69f47131e3bc5843837b145573efb5e304e
wireshark-2.2.17/extcap/androiddump.c,2435,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            15 + strlen(serial_number), serial_number);",afdba61ed21eeb75b84f43913029e43e067165f49bd55a422fd97b907e2d1223
wireshark-2.2.17/extcap/ciscodump.c,185,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		output_ptr = g_strstr_len(output, strlen(output), ""Packets"");",78823e4eef0a991708116eaf3fda6eac7740eb6e6e69002b69d8898b273f2939
wireshark-2.2.17/extcap/ciscodump.c,205,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (strlen(line) <= 1) {,6508353cca8f134733837275afa957a2e05fcafadc1b68a65f31e8e84ccd5d46
wireshark-2.2.17/extcap/ciscodump.c,230,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (strlen(*part) > 1) {,afacf8cc4f7212c827a830f9c664d2a1f597bcfe6e99104cc3115e2255fa9cd0
wireshark-2.2.17/extcap/ciscodump.c,233,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			size = strlen(*part) / 2;,e7450e26b64a5e2b3fc6b80ba56f78e14c7936db9061cf907493c988a573186b
wireshark-2.2.17/extcap/ciscodump.c,299,51,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	if (ssh_channel_write(channel, cmdline, (guint32)strlen(cmdline)) == SSH_ERROR)",94af8e475a3c59f42c368a30cc344d3d4305a84d8ea56d684967c2236c7ba78b
wireshark-2.2.17/extcap/ciscodump.c,301,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	if (read_output_bytes(channel, (int)strlen(cmdline), NULL) == EXIT_FAILURE)",369ead565225ad1221aec2a5bd117f8782f673f7fe2741f826f517063cdf2cf9
wireshark-2.2.17/extcap/ciscodump.c,306,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	cur = g_strstr_len(version, strlen(version), ""Version"");",0cd0abde8e58988f1c47b8f894f343e785876289c256782b4e760b98ca44c534
wireshark-2.2.17/extcap/ciscodump.c,308,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		cur += strlen(""Version "");",ae9ba7334b821b3bcc8725b31ab9a508ff14c4b0124680cdf74d1df811288b60
wireshark-2.2.17/extcap/ciscodump.c,370,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		while((chr = g_strstr_len(chr, strlen(chr), "","")) != NULL) {",5622ea605add28ed9c236c4cbdbe8da84c42cedc0e7ef7590aa15fa5230b326f
wireshark-2.2.17/extcap/ciscodump.c,374,64,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		ret = ssh_channel_write(channel, multiline_filter, (uint32_t)strlen(multiline_filter));",c5274e3916d69c88ea5fddd4b6b062a29f543a9d4e281b5fa2637137260c3b47
wireshark-2.2.17/extcap/ciscodump.c,411,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	if (read_output_bytes(channel, (int)strlen(cmdline), NULL) == EXIT_FAILURE)",369ead565225ad1221aec2a5bd117f8782f673f7fe2741f826f517063cdf2cf9
wireshark-2.2.17/extcap/ciscodump.c,640,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			memset(optarg, 'X', strlen(optarg));",56a1dc47e8aaa7a767702e0a1cefe02ed54a0756042e2a2621ba60503d92c7ad
wireshark-2.2.17/extcap/ciscodump.c,651,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			memset(optarg, 'X', strlen(optarg));",56a1dc47e8aaa7a767702e0a1cefe02ed54a0756042e2a2621ba60503d92c7ad
wireshark-2.2.17/extcap/extcap-base.c,228,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (extcap->capture && (extcap->fifo == NULL || strlen(extcap->fifo) <= 0)) {,5ce01a7937e517d387226a112bc4b083e6ae23d3a8001ce59cf0981833a82306
wireshark-2.2.17/extcap/ssh-base.c,146,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	if (ssh_channel_write(channel, buf, (guint32)strlen(buf)) == SSH_ERROR)",3b08b4aee73203c33ff4c10fa591246781723489a2e0053b46f28a589bbdeef8
wireshark-2.2.17/extcap/sshdump.c,429,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			memset(optarg, 'X', strlen(optarg));",56a1dc47e8aaa7a767702e0a1cefe02ed54a0756042e2a2621ba60503d92c7ad
wireshark-2.2.17/extcap/sshdump.c,440,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			memset(optarg, 'X', strlen(optarg));",56a1dc47e8aaa7a767702e0a1cefe02ed54a0756042e2a2621ba60503d92c7ad
wireshark-2.2.17/extcap_parser.c,426,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(target_arg->call) == 0) {,637f00fd7d42cd64b4dfbede82f44bf1d100ff545e4671783158b78d63a4fb12
wireshark-2.2.17/file.c,2269,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = (int) strlen(col_item->col_data);,66823e424d7f3991e843a6aceabcd72b71c630bb2470b24f6fe05ce984c001e4
wireshark-2.2.17/file.c,2440,62,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        callback_args.col_widths[visible_col_count] = (gint) strlen(cf->cinfo.columns[i].col_title);,6ac384b65c83879efc65f0b1b10dfb7d4aeb948d09f36ea0d8b10248fef739e3
wireshark-2.2.17/file.c,2447,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = (int) strlen(cf->cinfo.columns[i].col_title);,f85339c6c819d078ad12344b0c6d489440654e1da6a4b1439623aeac66d563fe
wireshark-2.2.17/file.c,2920,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  mdata.string_len = strlen(string);,da108c533e2b9b03cfae15437657a598392396fa0475a6e05da8e057a1f268fc
wireshark-2.2.17/file.c,2929,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  mdata->string_len = strlen(mdata->string);,7512cc0f0d092b8a03770a42f5133b953854edae0ce6d51f10d202ffabcac993
wireshark-2.2.17/file.c,3005,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    label_len = strlen(label_ptr);,1081943a3f538f0963c614f9524f2dc805bbe32edec7cb1f32e1991acf0d906c
wireshark-2.2.17/file.c,3035,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  mdata.string_len = strlen(string);,da108c533e2b9b03cfae15437657a598392396fa0475a6e05da8e057a1f268fc
wireshark-2.2.17/file.c,3071,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      info_column_len = strlen(info_column);,88c76505700e7e550654e4b477af30bc5aed1f56f3a97de74dd04153fdf6269f
wireshark-2.2.17/file.c,3873,65,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    wtap_block_add_string_option(shb_inf, OPT_COMMENT, comment, strlen(comment));",f0f5b0e32ac207457bdf691ed4584c00db101973338ee0c1c6a3abc5124dd21c
wireshark-2.2.17/file.c,3882,78,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    wtap_block_set_nth_string_option_value(shb_inf, OPT_COMMENT, 0, comment, strlen(comment));",5a6000b7b0b5c5a56712fe5043ad98048852c8d45045c16fdc2acc67331288a7
wireshark-2.2.17/fileset.c,76,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    size_t      minlen = strlen(""_00001_20050418010750"");",631a10b48686507a6ec22ef74738c62a541b5d3c86efec64172cf57e28467390
wireshark-2.2.17/fileset.c,86,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        pfx = filename + strlen(filename);,1ff4ce1f99ab2a9d64a38e13238b61425a255e807be83d87146b4701ad71b884
wireshark-2.2.17/fileset.c,92,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    baselen = strlen(filename);,8570197a33116e08927aa3535cc9cda55c623f29a97774c75dfec4b28a932a8a
wireshark-2.2.17/fileset.c,134,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    size_t       minlen = strlen(""_00001_20050418010750"");",401c9cd05c5fee50eb35295a56c3cd34f9d1ec324f7b571c7b3ae91f20c9d9f6
wireshark-2.2.17/fileset.c,147,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (!pfx1) pfx1 = dup_f1 + strlen(dup_f1);,4b79585be5ba5f81bae61975782c96efd49263ef32b64d2b4b1e2aaf6c829780
wireshark-2.2.17/fileset.c,148,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (!pfx2) pfx2 = dup_f2 + strlen(dup_f2);,53779e740bc18f5c88ae29721c791fc9420e546d9f5ec094727d8c46300b4ac9
wireshark-2.2.17/filter_files.c,110,15,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",  while ((c = getc(ff)) != EOF && c != '\n' && g_ascii_isspace(c)),686eb6c9d555cbc367c5515cbe219fbf09f59149b18fc4aee2cfd66575347a32
wireshark-2.2.17/filter_files.c,120,7,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",  c = getc(ff);,57b021ad5f6e1ebf727b2de509697b2cb37681fb30d6e4e9c49d67e0cd61650d
wireshark-2.2.17/filter_files.c,125,9,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",    c = getc(ff);,57b021ad5f6e1ebf727b2de509697b2cb37681fb30d6e4e9c49d67e0cd61650d
wireshark-2.2.17/filter_files.c,263,13,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",        c = getc(ff);   /* skip to the end of the line */,e84d6d1fe322a7179bb973c897041812638b9887b1b0b0e047aa14a99fa7a85d
wireshark-2.2.17/plugins/ethercat/packet-ethercat-datagram.c,1245,36,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",                  if ( cnt > 0 || !read ),2bcb11e6b2beedfa60808a5b2d8990938b56d8acf113b409554ef9a433a71aa7
wireshark-2.2.17/plugins/irda/packet-ircomm.c,278,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    if (strlen(buf) > 2),1768d9fb73f5df7907024c945ef64a1f9a1e367b45a0eae2eb41a215c039ccf7
wireshark-2.2.17/plugins/irda/packet-ircomm.c,296,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    if (strlen(buf) > 2),1768d9fb73f5df7907024c945ef64a1f9a1e367b45a0eae2eb41a215c039ccf7
wireshark-2.2.17/plugins/mate/mate_parser.c,1137,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-2.2.17/plugins/mate/mate_parser.c,2430,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);",f6db99431b143cf4d85bbc3049addd0480055ecadec213a4a82bfa4cdffcb561
wireshark-2.2.17/plugins/mate/mate_util.c,136,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		len = strlen(s) + 1;,22d12f8bbe245a82c3444261d856ddcfae28722ed2b81fadb1c40361a6e7bf73
wireshark-2.2.17/plugins/mate/mate_util.c,179,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			len = strlen(orig);,1b7f8eb5743eda0b7312787f4a76fae46d952a8cf7e42f55ceee2be958eb226f
wireshark-2.2.17/plugins/mate/mate_util.c,925,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			return strncmp(src->v,op->v,strlen(op->v)) == 0 ? src : NULL;",8ae15442ad29a41cff59638483a28a5f6f82908bb911837a34f79db5a1105daa
wireshark-2.2.17/plugins/mate/mate_util.c,956,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			ls = (guint) strlen(src->v);,f71a530972178917e6d91d8f18eb2e8158804e2f22d7f3ffbd92687049b3e899
wireshark-2.2.17/plugins/mate/mate_util.c,957,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			lo = (guint) strlen(op->v);,fba6572282d9d73a1d38aff742b252d496881dc3920e029af8bba8782ea45e3e
wireshark-2.2.17/plugins/mate/mate_util.c,1610,23,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",		while(( c = (gchar) fgetc(fp) )){,9f798d3ddacc148dcc0fe2475194a5fb46461ee548a9764f6e6b0c3333e36b2c
wireshark-2.2.17/plugins/mate/mate_util.c,1666,20,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",							c = (gchar) fgetc(fp);,d75f6d8af5fe7117a9e974282a4ef49dfd8cb404c04ebf38bd68b18d363c4468
wireshark-2.2.17/plugins/mate/mate_util.c,1719,30,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",								value[i++] = (gchar) fgetc(fp);,875311e50c2b4d05d82e4aaeb213f6efd004125cb05649898442f27741099170
wireshark-2.2.17/plugins/profinet/packet-dcom-cba.c,574,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(szStr) > 0) {,c0cbaad352f5bce8921995421e7882dd10f1424adf365a4240a463ad8e72583c
wireshark-2.2.17/plugins/wimaxasncp/wimaxasncp_dict.c,1335,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-2.2.17/plugins/wimaxasncp/wimaxasncp_dict.c,2758,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);",f6db99431b143cf4d85bbc3049addd0480055ecadec213a4a82bfa4cdffcb561
wireshark-2.2.17/plugins/wimaxasncp/wimaxasncp_dict.c,3249,2,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120),,,CWE-120,"	strncpy(state->write_ptr,txt,len);",acd167eb5c06c9096aea4c2a3bf2f155b012a9cb7b04cbed2ec880af177c9cb2
wireshark-2.2.17/rawshark.c,289,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (pos && g_ascii_strncasecmp(pos, PIPE_STR, strlen(PIPE_STR)) != 0)",9d8c1491670f56b277c0d2e42d711f559c254555f51bc97586a569e06351f675
wireshark-2.2.17/rawshark.c,363,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (strncmp(lt_arg, ""encap:"", strlen(""encap:"")) == 0) {",125f00f60a1d0e16b178b77c4a4ee4aad0382c6fda90d5417c222ca43d968abd
wireshark-2.2.17/rawshark.c,388,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    } else if (strncmp(lt_arg, ""proto:"", strlen(""proto:"")) == 0) {",a71de905eaaadab91ada96c5450414f7f3d611a39fccbb9f625d06ab703584a0
wireshark-2.2.17/rawshark.c,1431,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len = strlen(format);,cd730fe4e118c03e57ee9b6607ffbe829f1ee5f3eea5a36372318c262b1d95ef
wireshark-2.2.17/sync_pipe_write.c,69,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        len = (int) strlen(msg) + 1;    /* including the terminating '\0'! */,0c78b4e1a12165e89f2274761cd52306bc344b7aaca25d26f1a40ebec747e340
wireshark-2.2.17/sync_pipe_write.c,101,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    pipe_write_header(pipe_fd, SP_ERROR_MSG, (int) (strlen(error_msg) + 1 + 4 + strlen(secondary_error_msg) + 1 + 4));",95efb820e6554bb003b8386245ee59f4b1ed85975b17405a4ec913e1f7bdc6ee
wireshark-2.2.17/sync_pipe_write.c,101,81,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    pipe_write_header(pipe_fd, SP_ERROR_MSG, (int) (strlen(error_msg) + 1 + 4 + strlen(secondary_error_msg) + 1 + 4));",95efb820e6554bb003b8386245ee59f4b1ed85975b17405a4ec913e1f7bdc6ee
wireshark-2.2.17/text2pcap-scanner.c,657,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-2.2.17/text2pcap-scanner.c,1609,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes( yystr, (int) strlen(yystr) );",2c9f9f682a43d073dd295e599432c47fc772fbde9a2e834cc8e9ed76f8caa580
wireshark-2.2.17/text2pcap.c,945,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    toklen = strlen(str);,c84b0c40b236297163ca4fa5b464301e1d880cb136eb12274becd892265dcb19
wireshark-2.2.17/text2pcap.c,1030,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(packet_preamble) > 2) {,2ce19ca92f713a5a366308bebd310680249aabd5a3e7474e3014c75bede5df13
wireshark-2.2.17/tfshark.c,1841,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = col_len = strlen(col_item->col_data);,5b48b1ff262d84babd5a9fdff868635ce8fddc1e6f7786293f0761f00b49d9e2
wireshark-2.2.17/tfshark.c,1856,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = col_len = strlen(col_item->col_data);,5b48b1ff262d84babd5a9fdff868635ce8fddc1e6f7786293f0761f00b49d9e2
wireshark-2.2.17/tfshark.c,1872,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = col_len = strlen(col_item->col_data);,5b48b1ff262d84babd5a9fdff868635ce8fddc1e6f7786293f0761f00b49d9e2
wireshark-2.2.17/tfshark.c,1888,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = col_len = strlen(col_item->col_data);,5b48b1ff262d84babd5a9fdff868635ce8fddc1e6f7786293f0761f00b49d9e2
wireshark-2.2.17/tfshark.c,1896,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = strlen(col_item->col_data);,8fd675a6552eb5042c1a0e45496555f8268fff9e69f840edd9b937b22c2fb3c9
wireshark-2.2.17/tools/lemon/lemon.c,62,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,#define lemonStrlen(X)   ((int)strlen(X)),9fa0d4dc24c5b4d20c6140ec38371081c5aaf441b8ba40b8d102d71fb5d4d58f
wireshark-2.2.17/tools/lemon/lemon.c,1491,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    new_string = (char *) malloc( strlen(fullname) + 1 );,09bcbc020b851e78c8e4199674172d22b6c7ae794901e5a13575166f7446224b
wireshark-2.2.17/tools/lemon/lemon.c,1498,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    new_string = (char *) malloc( strlen(cp) + 1 );,40072f0721a32a594509cf11bfa9b865d0abca2edcf1e045dfa1f37deef75b14
wireshark-2.2.17/tools/lemon/lemon.c,4339,16,1,buffer,fgetc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",    nextChar = fgetc(in);,23b68ed30810486c9cf4b02c0ee9a59e522ae8cc8450157f7f1aac4933dd33ee
wireshark-2.2.17/tshark.c,3615,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = col_len = strlen(col_item->col_data);,5b48b1ff262d84babd5a9fdff868635ce8fddc1e6f7786293f0761f00b49d9e2
wireshark-2.2.17/tshark.c,3630,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = col_len = strlen(col_item->col_data);,5b48b1ff262d84babd5a9fdff868635ce8fddc1e6f7786293f0761f00b49d9e2
wireshark-2.2.17/tshark.c,3646,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = col_len = strlen(col_item->col_data);,5b48b1ff262d84babd5a9fdff868635ce8fddc1e6f7786293f0761f00b49d9e2
wireshark-2.2.17/tshark.c,3662,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = col_len = strlen(col_item->col_data);,5b48b1ff262d84babd5a9fdff868635ce8fddc1e6f7786293f0761f00b49d9e2
wireshark-2.2.17/tshark.c,3670,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      column_len = strlen(col_item->col_data);,8fd675a6552eb5042c1a0e45496555f8268fff9e69f840edd9b937b22c2fb3c9
wireshark-2.2.17/ui/capture_ui_utils.c,53,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (if_name == NULL || strlen(if_name) < 1) {,c50c59fd3f07fa723a4d85bec228989e157ded4efe3ebd15b0bb7350495e4f44
wireshark-2.2.17/ui/capture_ui_utils.c,57,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (pref == NULL || strlen(pref) < 1) {,c267c43414aa962608eadfd3a945b1d5ba28195af1a05d050c5beeb2da2e72f2
wireshark-2.2.17/ui/capture_ui_utils.c,90,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if (strlen(opening_parenp + 1) > 0) {,74c3d28e958d689b84cea4ca871fc04cc51f9dbc474529159480402a2100cd7e
wireshark-2.2.17/ui/capture_ui_utils.c,163,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (if_name == NULL || strlen(if_name) < 1) {,c50c59fd3f07fa723a4d85bec228989e157ded4efe3ebd15b0bb7350495e4f44
wireshark-2.2.17/ui/capture_ui_utils.c,429,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,   if_name = if_text + strlen(if_text);,b45e88e28b4454de68d5bf9d03d06be96139ab654bc340f60ceb2a9107b5b335
wireshark-2.2.17/ui/capture_ui_utils.c,591,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            strlen(interface_opts.cfilter) > 0) {,15dd153695b30c384740ddde211f8c22567e378f56373413132e12f5a6bffeca
wireshark-2.2.17/ui/cli/tap-follow.c,295,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  size_t len = strlen(strp);,5ad9d53b0380395e256519978466932982e2fcd6e62366c8a324f3d652ffa834
wireshark-2.2.17/ui/cli/tap-follow.c,454,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  opt_argp += strlen(STR_FOLLOW);,783efd6a505bf049ec25675febb8299624d1dee3bcd9434a965200d0f8f286ab
wireshark-2.2.17/ui/cli/tap-follow.c,455,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  opt_argp += strlen(proto_get_protocol_filter_name(get_follow_proto_id(follower)));,1d24b867565feca0f95b9b0788f37dd6335c1d2c8cbdc0a4a4043ee59242427e
wireshark-2.2.17/ui/cli/tap-icmpstat.c,276,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        filter = opt_arg + strlen(""icmp,srt,"");",bb654eac3d1807b8207bbbd96c84ae8c2837e35a0b928e1fc52fec0cd4b649e0
wireshark-2.2.17/ui/cli/tap-icmpv6stat.c,277,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        filter = opt_arg + strlen(""icmpv6,srt,"");",4e028f5d9ebb07ebe6875bd6eea40f40c4d1e434446dea7f00c9b8905dccf7d4
wireshark-2.2.17/ui/cli/tap-iostat.c,543,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    int lenlab = (int) strlen(label), len;",5a210babe810b67858f298d08b9ecc752362cca56adc5532a04eab61136581a7
wireshark-2.2.17/ui/cli/tap-iostat.c,546,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    len = (int) (strlen(spaces)) - (((lenval-lenlab) / 2) + numpad);,6584dc7a6344285774f0544898f8eabda112b637d977e77ed104ef7ba6999135
wireshark-2.2.17/ui/cli/tap-iostat.c,683,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            namelen = (int) strlen(calc_type_table[type].func_name);,d893c7ad02562bb8c52a4113a663d74ebef4133d0ca9d0a96b4d3fe390c469cc
wireshark-2.2.17/ui/cli/tap-iostat.c,780,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            k = (int) (strlen(iot->filters[j]) + 11);,e4d2295d224ccb7bcf6eea62c0df02fbd467a513f2d9b7e3414ba66a2ef7530c
wireshark-2.2.17/ui/cli/tap-iostat.c,852,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            len_filt = (int) strlen(filter);,36148d461880381b7bc271d1fb1fec46594e1e37b21bb9b55b67c2ace5e0df17
wireshark-2.2.17/ui/cli/tap-iostat.c,881,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                            len = (gsize) strlen(sfilter1);,14be5b7d0b7b71f7823acb79f9806fd91eff5fda629e423e3794f0ffaa82d83b
wireshark-2.2.17/ui/cli/tap-iostat.c,891,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                        len_filt = (int) strlen(filter);,36148d461880381b7bc271d1fb1fec46594e1e37b21bb9b55b67c2ace5e0df17
wireshark-2.2.17/ui/cli/tap-iostat.c,893,65,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        printf(""%s%s|\n"", filter, &spaces[((int)strlen(filter))+10]);",3925e71b7ad000bdbf30d7ad6e3942214a3f4db2dbf50b706683565bea6660cb
wireshark-2.2.17/ui/cli/tap-iostat.c,1264,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        namelen = strlen(calc_type_table[j].func_name);,7c82eec9c7e058b40203842c03dc5dbea606e054ed80942a3babca175cee0d40
wireshark-2.2.17/ui/cli/tap-iostat.c,1408,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if ((*(opt_arg+(strlen(opt_arg)-1)) == ',') ||",52ef1a4f6714881aea8766dc752612461fbbed80d29df884df3b6922d3a0a132
wireshark-2.2.17/ui/cli/tap-stats_tree.c,75,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			if (strncmp (opt_arg, cfg->pr->init_string, strlen(cfg->pr->init_string)) == 0) {",bf4e19a3a7f144e81bc59e3bf781404d08f1defe98f2d9118a63306a1079142d
wireshark-2.2.17/ui/cli/tap-stats_tree.c,76,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				st = stats_tree_new(cfg, NULL, opt_arg+strlen(cfg->pr->init_string));",21a18ee84460a5ed75a8d62ec5caac6212b87b74afc8fb64204bb3c0f07fd033
wireshark-2.2.17/ui/decode_as_utils.c,533,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    while (table_name[strlen(table_name) - 1] == ' '),228e5ba9340b1e2decfdced28952f5d4b7c4c4e80033da947cfea1d2bfabc3f0
wireshark-2.2.17/ui/decode_as_utils.c,534,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        table_name[strlen(table_name) - 1] = '\0'; /* Note: if empty string, while loop will eventually exit */",31e7d5414dbc4ef0c83356d669b4e97684ee151b3dfffa5e4a7245e57c8cea3d
wireshark-2.2.17/ui/decode_as_utils.c,660,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    while (dissector_str[strlen(dissector_str) - 1] == ' '),33e4fcbd3334c4f1ba78de660962e77e630e083d2d31abf5257f61ebdee07fe3
wireshark-2.2.17/ui/decode_as_utils.c,661,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        dissector_str[strlen(dissector_str) - 1] = '\0'; /* Note: if empty string, while loop will eventually exit */",1857565f2df50462b8f108f6d4c26b5583296b769461fad63e0961c507b968c0
wireshark-2.2.17/ui/export_object.c,123,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ( gstr->len >= (MAXFILELEN - (strlen(gstr_tmp->str) + ext_str->len)) ),aa53dbdeb0fd1b348e4d8ab161e0b5e104837dd1c531015874eb0374f07a24c0
wireshark-2.2.17/ui/export_object.c,124,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            gstr = g_string_truncate(gstr, MAXFILELEN - (strlen(gstr_tmp->str) + ext_str->len));",4b6ad7cd5c8dfab7a3f71b9b2df49ed8298c39946d6ba4b1c978403b0d028181
wireshark-2.2.17/ui/export_object.c,130,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ( gstr->len >= (MAXFILELEN - strlen(gstr_tmp->str)) ),59f6b2f02652ac760f415697e925da8128a226ce08e145536a91363c55b1f3f7
wireshark-2.2.17/ui/export_object.c,131,57,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            gstr = g_string_truncate(gstr, MAXFILELEN - strlen(gstr_tmp->str));",8794932716f341d4e9d9a1633bd00f89c14c48e4ac67ffb5746e85959d66fcae
wireshark-2.2.17/ui/gtk/airpcap_gui_utils.c,267,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    strsize = strlen(key);,9bdac933f6a81be9f7a6aca395561f4312ef8a97953653068ff35380e5db5043
wireshark-2.2.17/ui/gtk/airpcap_gui_utils.c,2057,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        key_len = strlen(row_key);,e7dc598623f89954566b9356de1d06e20bee8b70bf2e8da80b39ce397cbae4e4
wireshark-2.2.17/ui/gtk/capture_dlg.c,766,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if (device.if_info.extcap != NULL && strlen(device.if_info.extcap) > 0),09c3ecbc6de4d0d16119a838e80e17d0ee21286796ad71d4c4946b784bb9da50
wireshark-2.2.17/ui/gtk/capture_dlg.c,770,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if (strlen(filter_text) == 0) {,15f2dcd5220f429821d180932e2fdf0395c8acb1acb3896f7f58b120c69844f0
wireshark-2.2.17/ui/gtk/capture_dlg.c,772,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(device.cfilter) > 0) {,d078b4fdf902d25ef7c9412f4c8341336fe3acc542837ec8feb33a99d09a51fb
wireshark-2.2.17/ui/gtk/capture_dlg.c,843,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen(filter_text) == 0) {,15f2dcd5220f429821d180932e2fdf0395c8acb1acb3896f7f58b120c69844f0
wireshark-2.2.17/ui/gtk/capture_dlg.c,2929,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (global_capture_opts.default_options.cfilter && (strlen(global_capture_opts.default_options.cfilter) > 0)) {,8891cdf58f3c44706a57000816b0b13f5cf41ccae7c2a97a28f3eec2db0cda4f
wireshark-2.2.17/ui/gtk/capture_dlg.c,2936,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (device.cfilter && (strlen(device.cfilter) > 0)) {,6ee7a5bb15398acc543fd05490cf9c81ff7234f62047153556b614add76c5688
wireshark-2.2.17/ui/gtk/capture_dlg.c,3212,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(filter_text) != 0) {,586c101611f95a3248725c905e760ff5a321aa80e34f80ea2742dbcc4c3c6055
wireshark-2.2.17/ui/gtk/capture_dlg.c,4900,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (global_capture_opts.default_options.cfilter && (strlen(global_capture_opts.default_options.cfilter) > 0)) {,8891cdf58f3c44706a57000816b0b13f5cf41ccae7c2a97a28f3eec2db0cda4f
wireshark-2.2.17/ui/gtk/capture_file_dlg.c,352,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen(value) != 0) {,1e427999e41056bb89378dfaaad32cb3e2f9572d6a63747169b851da0430c799
wireshark-2.2.17/ui/gtk/capture_if_details_dlg_win32.c,807,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(value) != 0) {,1e427999e41056bb89378dfaaad32cb3e2f9572d6a63747169b851da0430c799
wireshark-2.2.17/ui/gtk/capture_if_dlg.c,752,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(gtk_label_get_text(GTK_LABEL(data.device_lb))) > SOFT_LABEL_LEN) {,e6b8e0c7a2a8204c17edfb728dcd765ded5548a1b8ac75ad154a0972eb45fa84
wireshark-2.2.17/ui/gtk/capture_if_dlg.c,770,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(gtk_label_get_text(GTK_LABEL(data.descr_lb))) > SOFT_LABEL_LEN) {,b1616d880be0231752c3f4906910e31e1fe97af07fe979eebeccf56e44d8d921
wireshark-2.2.17/ui/gtk/conversations_table.c,101,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (filter && strlen(filter)) {,2288ea41d1f4ac8dcb848c3301b9aded13d79d81dc81a88ecbc3bd8017b14e2d
wireshark-2.2.17/ui/gtk/dfilter_expr_dlg.c,770,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                             (gint) strlen(hfinfo->abbrev), &pos);",f9c1e6e12daa9672ed20f972ed1b84be1c9a64dc7e7d24158e8b996b4326f522
wireshark-2.2.17/ui/gtk/dfilter_expr_dlg.c,774,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                 stripped_range_str, (gint) strlen(stripped_range_str), &pos);",917a93616c1c695bea97bddce10c4d29f6ff55ebac90041be9aed65c3736cc34
wireshark-2.2.17/ui/gtk/dfilter_expr_dlg.c,781,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                 (gint) strlen(item_str), &pos);",7271f514f4e7f1b2b8626b79b6c3999f3a5390eecee432e0a1bdc1198cab0ab6
wireshark-2.2.17/ui/gtk/dfilter_expr_dlg.c,817,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                 stripped_value_str, (gint) strlen(stripped_value_str), &pos);",77b66d3eae8036898d501331b5c81c4c32e7a508c5ac2ccd85dc33cef7cf51c0
wireshark-2.2.17/ui/gtk/drag_and_drop.c,293,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    size_t length = strlen(path);,67dab9d2206ffe5827e533de2a5f6290a92abeeced873d67d044a4cb318f2d9e
wireshark-2.2.17/ui/gtk/expert_comp_table.c,245,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-2.2.17/ui/gtk/expert_comp_table.c,251,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-2.2.17/ui/gtk/expert_comp_table.c,257,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-2.2.17/ui/gtk/expert_comp_table.c,263,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-2.2.17/ui/gtk/export_object_dlg.c,213,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			if ((strlen(save_in_path) < MAXFILELEN)) {,6c4845ec35abb3e85e0e5823ab17fcf3e7df71c0257f2c829eee621c828befe2
wireshark-2.2.17/ui/gtk/export_object_dlg.c,218,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"							MAXFILELEN - strlen(save_in_path), count);",bd807b603c078781a98b0d89a4db7dc6817996c9c4cfcd9d7abb16d267e09be0
wireshark-2.2.17/ui/gtk/export_object_dlg.c,227,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"							MAXFILELEN - strlen(save_in_path), count);",bd807b603c078781a98b0d89a4db7dc6817996c9c4cfcd9d7abb16d267e09be0
wireshark-2.2.17/ui/gtk/export_sslkeys.c,85,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (ws_write(fd, keylist, (unsigned int)strlen(keylist)) < 0) {",62e118c547480ec5ce6e154b7ea82c35d09f71b29152887a18300c434b6483bc
wireshark-2.2.17/ui/gtk/file_dlg.c,134,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    size_t filename_len = strlen(filename);,aa3741e08ec8e33c34341ba844d4886ef7be407a68c1053eec99b07919d5e9a9
wireshark-2.2.17/ui/gtk/file_dlg.c,441,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        len = strlen(dirname);,5af2fb201fa40a541497bb75ba9597d575b2cc63e0688e5b52bbdb66c47e6bdb
wireshark-2.2.17/ui/gtk/file_import_dlg.c,506,82,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    wtap_block_add_string_option(int_data, OPT_IDB_NAME, ""Fake IF File->Import"", strlen(""Fake IF File->Import""));",3993d0ca068394370881e8fce44e42b3eb07dd57b91a96b30e4a27e503280967
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,100,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        op_len = (int) strlen(logic_ops[i]);,6f308516771b9a9b727a52e6a09d048cc90f7b259dad602631ffd86ab05d60b1
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,139,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  pch = filter_str + strlen(filter_str);,5f4a0c1d7fa89efc480c9c6598bf91a350f39b52fa6ad0a4671a19903a96a5cd
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,155,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    pch = (selected_str + strlen(pch));,8d02f4147b706159a16628872f215d679afce2dbb8cdcb72dbff84d9e09ebd30
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,158,65,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  gtk_editable_insert_text(GTK_EDITABLE(filter_te), pch, (gint) strlen(pch), &pos);",3a27e233ef592173a5a59ee8a3b44dd0da8e225b9d78f4d77cb5cc50fe683178
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,215,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  gint pos2 = pos1 + (gint) strlen(string) - str_len;,fa21067e11c54c807960d8a712593e54f3fe25fbcfd348454ef2c2b535e878ec
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,271,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  unsigned int str_len = (unsigned int) strlen(str);,0027cab29da698482952a0bd456ca7d9e62f359ffc226512c62a697d06dbb63d
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,287,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(curr_str) == str_len) {,e062dd6eb20580fd8bcfa1dd2642cc1c9fbd6a70fef6238256581bae6eff633e
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,420,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  prefix = prefix_start + strlen(prefix_start);,66c12c25b593060ff98200f3cdfb51045b03c171277da46202ad9c40fb8f6f91
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,454,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if(strlen(prefix) > 1) {,59cfaa20293285b34be5afad6f534c06abf3deee9899f02bced1a5ac1411b1ba
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,456,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      prefix[strlen(prefix)-1] = '\0';,fb139b629383775236dbd4724aa9c9070e5b5cbf399ea2b86b50b536e22e6922
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,460,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      } else if(strlen(prefix) && is_protocol_name_being_typed(filter_te, (int) strlen(prefix)+2)) {",3377a2d0bcddcc08d53167ae54759fe58f193732329f77fcf8af0e8de5081a00
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,460,81,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      } else if(strlen(prefix) && is_protocol_name_being_typed(filter_te, (int) strlen(prefix)+2)) {",3377a2d0bcddcc08d53167ae54759fe58f193732329f77fcf8af0e8de5081a00
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,470,77,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if( !strchr(name, '.') && is_protocol_name_being_typed(filter_te, (int) strlen(name)) ) {",59d2b72b7190cd8f12908a096e25667a4720b4ad8cc38aa34a0a4118a424f069
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,646,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  protocol_name_len = (unsigned int) strlen(protocol_name);,1a78a238757d5c31be89fc1d23165315f19a8b99b2eb9a90e50f4e99e0049409
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,665,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(name) == protocol_name_len) {,07caf139ee911458d0ea59fdbc21fe56f49d0c4f9e5e82cc38bab29f73297ab8
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,683,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          if (strlen(hfinfo->abbrev) == protocol_name_len) {,da402422dfc3caeef5d01f3aa85ca9016200e525cfe6b016037dad5eff30f5af
wireshark-2.2.17/ui/gtk/filter_autocomplete.c,812,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  prefix_len = strlen(prefix);,238cc55a48e6e9ab8660001c51d2e6fe14da7990b28c9d82dfd9c0fc7239cd97
wireshark-2.2.17/ui/gtk/filter_dlg.c,1079,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(name) == 0) {,1d1b5b684b3635a2888843536138223295fb9aa8f6ca6f2bc634eb4190c96943
wireshark-2.2.17/ui/gtk/filter_dlg.c,1084,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(strval) == 0) {,593f031b4f6836f2819884e284a208f5d71696413fd7c51454844820eb28eb60
wireshark-2.2.17/ui/gtk/filter_dlg.c,1160,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (strlen(name) > 0 && strlen(strval) > 0 && filt) {,7d02ba8b26fff0717243a63dd590912430b36beee861abe7d6f1c0586e2411cd
wireshark-2.2.17/ui/gtk/filter_dlg.c,1160,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (strlen(name) > 0 && strlen(strval) > 0 && filt) {,7d02ba8b26fff0717243a63dd590912430b36beee861abe7d6f1c0586e2411cd
wireshark-2.2.17/ui/gtk/filter_dlg.c,1387,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (strlen(strval) == 0) {,593f031b4f6836f2819884e284a208f5d71696413fd7c51454844820eb28eb60
wireshark-2.2.17/ui/gtk/filter_utils.c,55,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-2.2.17/ui/gtk/filter_utils.c,61,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-2.2.17/ui/gtk/filter_utils.c,67,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-2.2.17/ui/gtk/filter_utils.c,73,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if ((!current_filter) || (0 == strlen(current_filter))),ea573fbd76972c144104981a605eaf6f1e0ff9d7d20a8b5aa7acb9edb59bde6f
wireshark-2.2.17/ui/gtk/find_dlg.c,689,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      found_packet = cf_find_packet_data(&cfile, string, strlen(string), cfile.dir);",97b9ed0fd934a7d1a5e37d4578b924c8181a789598a9f0d61d19d8addbce78a2
wireshark-2.2.17/ui/gtk/find_dlg.c,755,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        cf_find_packet_data(&cfile, string, strlen(string), dir);",4e15ca47364e084418ae5f3f8ef1ddba3088056ba4047a6164c4e7b4e1af256b
wireshark-2.2.17/ui/gtk/firewall_dlg.c,377,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(hint) > 0) {,edf4dd60a53bc0d24836b3b9e6c99182b74c177ae1652e3e093de72c44a2e41c
wireshark-2.2.17/ui/gtk/follow_stream.c,216,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    filter_out_filter_len = (int)(strlen(follow_filter) + strlen(previous_filter) + 16);,db39f8967d38d8086479839f7f4a4e31ead76e56b843e16abb98474283d4dfd3
wireshark-2.2.17/ui/gtk/follow_stream.c,216,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    filter_out_filter_len = (int)(strlen(follow_filter) + strlen(previous_filter) + 16);,db39f8967d38d8086479839f7f4a4e31ead76e56b843e16abb98474283d4dfd3
wireshark-2.2.17/ui/gtk/follow_stream.c,220,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if(strlen(previous_filter)) {,393a7e20d41006bf1486f91e7cf63d302889c66540411ea70baaaead7f6e3208
wireshark-2.2.17/ui/gtk/follow_stream.c,1132,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (!follow_print(hexbuf, strlen(hexbuf), is_from_server, arg))",ef00617f86f3d6d7794b7dd40d799995e6c39a186326e518d4ef439d8d609206
wireshark-2.2.17/ui/gtk/follow_stream.c,1142,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        if (!follow_print(initbuf, strlen(initbuf), is_from_server, arg))",35aae8b5b4ce9fff601f6795f8f4ec922dfc2b34227aa8bcac9f56359d4ae264
wireshark-2.2.17/ui/gtk/follow_stream.c,1174,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (!follow_print(hexbuf, strlen(hexbuf), is_from_server, arg))",ef00617f86f3d6d7794b7dd40d799995e6c39a186326e518d4ef439d8d609206
wireshark-2.2.17/ui/gtk/funnel_stat.c,230,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    nchars = (int) strlen(str);,27ca570b5eb0fc59b4aee2e34a8953438b17711c1030bfb4f306e632d44bbba8
wireshark-2.2.17/ui/gtk/funnel_stat.c,266,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    nchars = (int) strlen(str);,27ca570b5eb0fc59b4aee2e34a8953438b17711c1030bfb4f306e632d44bbba8
wireshark-2.2.17/ui/gtk/hostlist_table.c,105,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (filter && strlen(filter)) {,2288ea41d1f4ac8dcb848c3301b9aded13d79d81dc81a88ecbc3bd8017b14e2d
wireshark-2.2.17/ui/gtk/mac_lte_stat_dlg.c,232,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                   strlen(mac_lte_stat->filter) ? mac_lte_stat->filter : ""none"");",193619487e467d78de706ea380f24db65b9776d48f8c8472cb8e5334a177bc56
wireshark-2.2.17/ui/gtk/mac_lte_stat_dlg.c,710,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"               strlen(hs->filter) ? hs->filter : ""none"");",ed6b73d12688f344fe873b2e7666c9d5e307a6da7c0f066e086e03a5cc548ec1
wireshark-2.2.17/ui/gtk/mac_lte_stat_dlg.c,825,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(DCTErrorSubstring) > 0) {,1d5e75ee2e2f7521a1b01572efacb8c887d7fab37bf607cfe4aa60bf35b4df4f
wireshark-2.2.17/ui/gtk/mac_lte_stat_dlg.c,837,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(hs->filter)) {,d188b7c46592f62b2504df708c63a5cf04228b2cca3a6cc4f500fa1d3aa84c90
wireshark-2.2.17/ui/gtk/main.c,255,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if ((!text) || (0 == strlen(text))) {,0b2343039f2f61fddc0d6daf7170e61fbe21d60520c2494f70146e2a81f6064e
wireshark-2.2.17/ui/gtk/main.c,271,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((!cur_filter) || (0 == strlen(cur_filter))),8bedd9667998b369fe59db1638da23d2cd24fd268521452b5563bebaa14c783d
wireshark-2.2.17/ui/gtk/main.c,278,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((!cur_filter) || (0 == strlen(cur_filter))),8bedd9667998b369fe59db1638da23d2cd24fd268521452b5563bebaa14c783d
wireshark-2.2.17/ui/gtk/main.c,289,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((!cur_filter) || (0 == strlen(cur_filter))),8bedd9667998b369fe59db1638da23d2cd24fd268521452b5563bebaa14c783d
wireshark-2.2.17/ui/gtk/main.c,296,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((!cur_filter) || (0 == strlen(cur_filter))),8bedd9667998b369fe59db1638da23d2cd24fd268521452b5563bebaa14c783d
wireshark-2.2.17/ui/gtk/main.c,352,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((!filter) || (0 == strlen(filter))) {,a0cb255821321c21d3768075953b584c875fbd220940dd6acfcc292acb2e0902
wireshark-2.2.17/ui/gtk/main.c,505,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        strlen(cfile.cinfo.col_expr.col_expr_val[column])),94194308efa3c9b579a960d0f010153344b28d47cca6b1ed68f9eb8c98bd5370
wireshark-2.2.17/ui/gtk/main.c,589,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (strlen(cfile.cinfo.col_expr.col_expr[column]) != 0 &&,64286ef19d18baf365c2edfe41ee93fb185dfd876307c125effbacec0664012d
wireshark-2.2.17/ui/gtk/main.c,590,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                strlen(cfile.cinfo.col_expr.col_expr_val[column]) != 0) {,7eba4d226300ad835385159e9fe2aa0204ed92c37304d2634f196fc19402b9e0
wireshark-2.2.17/ui/gtk/main.c,647,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            strlen(cfile.finfo_selected->rep->representation) > 0) {,0c307152042871159c6879959e9dfee2db9d0fc5aac0767f8acb7a983d0b4cc0
wireshark-2.2.17/ui/gtk/main.c,822,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            length = (guint) strlen(finfo->hfinfo->blurb);,75e4b4d30d1441c4fd3aee8b31b3d30b67729e4415eefc62cf602a4868080b4f
wireshark-2.2.17/ui/gtk/main.c,824,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            length = (guint) strlen(finfo->hfinfo->name);,3c7737a9dd784825f769eb60c67cdd999c5b16ff039348d7b66b4b024162bf18
wireshark-2.2.17/ui/gtk/main_filter_toolbar.c,130,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            filter_length = strlen(filter_string);,d33b979353f910b40e716337e64d1963c394b32ab8533ce485f5268aa3afd650
wireshark-2.2.17/ui/gtk/main_filter_toolbar.c,413,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (!s || strlen (s) == 0) {,0eea3663aa94557d86e19241a6ab71776fd52b3ca72c95592a68730285d6a457
wireshark-2.2.17/ui/gtk/main_filter_toolbar.c,422,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (cf_status == CF_OK && strlen(s) > 0) {,f4abf493b114eabb773f80c2e78d39696bf971937984202b4c637735f06ceedc
wireshark-2.2.17/ui/gtk/main_menubar.c,3346,11,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    len = strlen(""/Menubar"");",41b693ca83ab1cb2508eeaf20affde3f8a7555850eba8faad8ae3fefef905a17
wireshark-2.2.17/ui/gtk/main_menubar.c,3825,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            submenu_path_size = (gsize)(strlen(MENU_STATISTICS_PATH)+strlen(cfg->name)+strlen(cfg->abbr)+1);   /* worst case length */,8ad40166b4f4e9a28f1908a89a12c1fa9e8dfebdee24ca188077114370f87e6d
wireshark-2.2.17/ui/gtk/main_menubar.c,3825,70,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            submenu_path_size = (gsize)(strlen(MENU_STATISTICS_PATH)+strlen(cfg->name)+strlen(cfg->abbr)+1);   /* worst case length */,8ad40166b4f4e9a28f1908a89a12c1fa9e8dfebdee24ca188077114370f87e6d
wireshark-2.2.17/ui/gtk/main_menubar.c,3825,88,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            submenu_path_size = (gsize)(strlen(MENU_STATISTICS_PATH)+strlen(cfg->name)+strlen(cfg->abbr)+1);   /* worst case length */,8ad40166b4f4e9a28f1908a89a12c1fa9e8dfebdee24ca188077114370f87e6d
wireshark-2.2.17/ui/gtk/main_menubar.c,3832,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                    memmove(sep,sep+1,strlen(sep));",4859741155896f7d907d23b14bda52e98c595510d1fb400acede614f960b0ba1
wireshark-2.2.17/ui/gtk/main_menubar.c,5175,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            menu_item_len = strlen(menu_item_name);,1607f9e03cfc6710e1617c51838435894a34a2b3031c1f13615b8c84bc4d068c
wireshark-2.2.17/ui/gtk/main_menubar.c,5379,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    g_assert(xpath_parent != NULL && strlen(xpath_parent) > 0);,0fa973ead8d1100eb18220e03b9d2b5250b52603e96b85350e478cccb3a9ce86
wireshark-2.2.17/ui/gtk/main_menubar.c,5428,59,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            g_assert(paths != NULL && paths[1] != NULL && strlen(paths[1]) > 0);,6d63de755165d410cbe7a0ca3e557896cf1506c2dcdcd299f69e851e3f77693f
wireshark-2.2.17/ui/gtk/main_statusbar.c,818,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen (interface_names->str) > 0) {,df7f5f6e0c62238cfe3b4af91515d440782c25e6ae70a13e475a20764bc6a7f1
wireshark-2.2.17/ui/gtk/manual_addr_resolv.c,64,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen(addr) && strlen(name)) {,9f0ad1ae31439fa48222187f1687820044cce9d514d2ae3fb1e54fd8d0ed71e0
wireshark-2.2.17/ui/gtk/manual_addr_resolv.c,64,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen(addr) && strlen(name)) {,9f0ad1ae31439fa48222187f1687820044cce9d514d2ae3fb1e54fd8d0ed71e0
wireshark-2.2.17/ui/gtk/manual_addr_resolv.c,111,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  gtk_widget_set_sensitive(ok_bt, strlen(name) > 0 && strlen(addr) && active ? TRUE : FALSE);",23c0d03317ac8655a5499052a5f88190b266f47bae63e30ab1161554aed297c2
wireshark-2.2.17/ui/gtk/manual_addr_resolv.c,111,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  gtk_widget_set_sensitive(ok_bt, strlen(name) > 0 && strlen(addr) && active ? TRUE : FALSE);",23c0d03317ac8655a5499052a5f88190b266f47bae63e30ab1161554aed297c2
wireshark-2.2.17/ui/gtk/packet_list.c,1607,5,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if(strlen(new_packet_comment) == 0) {,f03b4456946f1af868203c75029e963a3069e5fcc44250b9d23a41637138d274
wireshark-2.2.17/ui/gtk/packet_list_store.c,678,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				col_text_len = strlen(col_item->col_data);,306d38de30330a29d853952df1693633e00dc04842c0a2a9e5cc50e08acc582f
wireshark-2.2.17/ui/gtk/packet_list_store.c,712,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				col_text_len = strlen(col_item->col_data);,306d38de30330a29d853952df1693633e00dc04842c0a2a9e5cc50e08acc582f
wireshark-2.2.17/ui/gtk/packet_list_store.c,1227,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			column_len = (gint) strlen(cfile.cinfo.columns[col].col_buf);,a51e9294214d8aad1d2402cde6462e1f85bcbf93554a0e6c5dd2f74da208db24
wireshark-2.2.17/ui/gtk/packet_panes.c,919,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                blen = (int)strlen(cfile.sfilter);,4184b9da30d76c47b89bd254479b56dd4ea8963644a1e2e9912ea87c8a538c24
wireshark-2.2.17/ui/gtk/prefs_capture.c,2124,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			if (strlen(desc) == 0){,983b89c97a788c6866e91266e68a3d303a2f8df468fe8678cbe9de9dbdde2b92
wireshark-2.2.17/ui/gtk/prefs_dlg.c,135,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  label_len = strlen(title) + 2;,bc0f57c16ad24068ad3ccd09da9cec77429f3dcba893ed93e0ac048dd38c31bb
wireshark-2.2.17/ui/gtk/prefs_dlg.c,994,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(str_val) != 0) {,96ebd0739db31edac35d1e48ac3621a7d3013018cf5b67a455ebd7d69f0b4a2f
wireshark-2.2.17/ui/gtk/prefs_gui.c,535,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	fileopen_dir_te_length = (gint) strlen(gtk_entry_get_text (GTK_ENTRY(fileopen_dir_te)));,d8a03c805b7da5f86402a87df4a99aabfd7e137f4b470b0752804edb7363a866
wireshark-2.2.17/ui/gtk/profile_dlg.c,374,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if ((strlen(name) > 0) && profile && !profile->is_global) {,4f1fa5d86d36a190db0a03b2bc05695f22a0a0b6694e1dcb0a78a6846f9bd7a1
wireshark-2.2.17/ui/gtk/profile_dlg.c,726,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen(new_name) == 0) {,1ddbab067a2a22e8f719e7f695512ffabd0f64a29391702d56dd5da0af6bb0a9
wireshark-2.2.17/ui/gtk/profile_dlg.c,771,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    } else if (strlen(profile_name) &&,455145976dc2c4eea194a813464967673e36f6fe2d34914a6dc77753a94e80df
wireshark-2.2.17/ui/gtk/progress_dlg.c,95,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(item_title_dup) > 110) {,d7af5f59ebc54d767c1f17d2c4b3c4a6ea28fde3c2cc89d7e9d37ddd517cede3
wireshark-2.2.17/ui/gtk/proto_help.c,274,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (!loc || !strlen(loc)) continue;,211c1b35e635189df68cdea1ac6d8f03ee6b98a7bf7a5c7098bf84e3915ceb7d
wireshark-2.2.17/ui/gtk/proto_help.c,306,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				if(!value || !strlen(value)) continue;,afc99f38c3fbba52e5ff19158af75008fcd52aa0e368628bd9e8703a5635bfed
wireshark-2.2.17/ui/gtk/proto_help.c,310,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				if (!loc || !strlen(loc)) continue;,211c1b35e635189df68cdea1ac6d8f03ee6b98a7bf7a5c7098bf84e3915ceb7d
wireshark-2.2.17/ui/gtk/proto_help.c,437,5,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	   strlen(cf->finfo_selected->rep->representation) > 0),b28421fb7a38db975dac6897dd3dd389fdc1abad5bb7961108c1c7ab8cff38f1
wireshark-2.2.17/ui/gtk/proto_hier_stats_dlg.c,86,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (filter && strlen(filter) > 0) {,cd3a3eac9482648934eda0a67db0adc2ea61c883228170bd9aef37c237216e4b
wireshark-2.2.17/ui/gtk/proto_hier_stats_dlg.c,100,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (filter && strlen(filter) > 0) {,cd3a3eac9482648934eda0a67db0adc2ea61c883228170bd9aef37c237216e4b
wireshark-2.2.17/ui/gtk/proto_hier_stats_dlg.c,568,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (current_filter && strlen(current_filter) != 0) {,8be638e33a2a5b3b376cdc02a11c3ef33e3768cdc0c98e577b19e329272b87a6
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,294,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                   strlen(rlc_lte_stat->filter) ? rlc_lte_stat->filter : ""none"");",cd6a0f137dc5ed422a782bd57705dcc3cbd23d8d6e8591e535deb4d216669cd6
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,774,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"               strlen(hs->filter) ? hs->filter : ""none"");",ed6b73d12688f344fe873b2e7666c9d5e307a6da7c0f066e086e03a5cc548ec1
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,1026,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen(DCTErrorSubstring) > 0) {,1d5e75ee2e2f7521a1b01572efacb8c887d7fab37bf607cfe4aa60bf35b4df4f
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,1038,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(hs->filter)) {,d188b7c46592f62b2504df708c63a5cf04228b2cca3a6cc4f500fa1d3aa84c90
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,1157,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(sn_string) > 0) {,39e110c54325ce5e5b751679d0d8bd3b58330318351fd65d9045a101be1b0669
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,1186,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(sn_string) > 0) {,39e110c54325ce5e5b751679d0d8bd3b58330318351fd65d9045a101be1b0669
wireshark-2.2.17/ui/gtk/rlc_lte_stat_dlg.c,1215,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(sn_string) > 0) {,39e110c54325ce5e5b751679d0d8bd3b58330318351fd65d9045a101be1b0669
wireshark-2.2.17/ui/gtk/rtp_analysis.c,2550,26,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",				while ((f_rawvalue = getc(forw_stream)) != EOF) {,3fd4b1fd13b97de7e097f2b8393cdbd5c49d858ba5c87a423d901cfb456eb133
wireshark-2.2.17/ui/gtk/rtp_analysis.c,2583,26,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",				while ((r_rawvalue = getc(rev_stream)) != EOF) {,ef5a2a2761c27ad8fd829384fc06fa13a88fe4e07a58d647a2fca0feed0a4c96
wireshark-2.2.17/ui/gtk/rtp_analysis.c,2642,20,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",						r_rawvalue = getc(rev_stream);,0f5313a363ed25025f8baa8acc6e018b7cfc8d8d891df84c25880af5703739f3
wireshark-2.2.17/ui/gtk/rtp_analysis.c,2657,20,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",						f_rawvalue = getc(forw_stream);,24b3cfad12166751e05d6aeefb613bc515fc646154e1f9281bcfe1d1a59bacd1
wireshark-2.2.17/ui/gtk/rtp_analysis.c,2672,20,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",						f_rawvalue = getc(forw_stream);,24b3cfad12166751e05d6aeefb613bc515fc646154e1f9281bcfe1d1a59bacd1
wireshark-2.2.17/ui/gtk/rtp_analysis.c,2673,20,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",						r_rawvalue = getc(rev_stream);,0f5313a363ed25025f8baa8acc6e018b7cfc8d8d891df84c25880af5703739f3
wireshark-2.2.17/ui/gtk/rtp_analysis.c,2729,22,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",		while ((rawvalue = getc(stream)) != EOF) {,3fb3e33cbd7c8c13a62217cca6be73c306763be1e6ce7f4a7b878629a97fc910
wireshark-2.2.17/ui/gtk/service_response_time_table.c,727,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if ((filter != NULL) && (strlen(filter) > MAX_FILTER_STRING_LENGTH)),3cc7e33a084e21622b82a6aaf90d767ca7757185441bd96fd3bad51fd1f2c639
wireshark-2.2.17/ui/gtk/stats_tree_stat.c,424,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			init_strlen = strlen(cfg->pr->stat_dlg->init_string);,bacf89e3c3cea16d9661d10ca68da749e5f27817ba37cb2708f6386c5a00a2b0
wireshark-2.2.17/ui/gtk/stats_tree_stat.c,427,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				if (init_strlen == strlen(opt_arg)) {,f8f3cca75b7e4f030d46824f8c217ccc39047796e13a5e23fad89c2d5276eac8
wireshark-2.2.17/ui/gtk/summary_dlg.c,62,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if(strlen(value) != 0) {,70a1777c45f155e8f48b0aa746c2ff4defa5e082a93e5d26e4ef0e320bf43efd
wireshark-2.2.17/ui/gtk/summary_dlg.c,68,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(value) == 0) {,2e0ff5dafbd9fcfeb29352df490cf67f80171fe6c6f50e9a35407c326bc9e29b
wireshark-2.2.17/ui/gtk/supported_protos_dlg.c,218,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if ((len = (int) strlen(name)) > namel),7e0dd3bfb0cf313614113c38d88ace3dc2cf8b23686ec7f356fc1e446e0b7c59
wireshark-2.2.17/ui/gtk/supported_protos_dlg.c,220,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if ((len = (int) strlen(short_name)) > short_namel),7ec3e0cccab70fb536b66b6b441bba499e34b96bfaa5eadd9202f39167ada310
wireshark-2.2.17/ui/gtk/supported_protos_dlg.c,222,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      if ((len = (int) strlen(filter_name)) > filter_namel),881e9fc04d487735bc3156bd7d007f75f6e34708041750cbf8994465fd58ec0f
wireshark-2.2.17/ui/gtk/supported_protos_dlg.c,261,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((len = (int) strlen(hfinfo->abbrev)) > maxlen),b191fd47c4ce55500af18aa95a2f973ce5163b0c632d3fa960fe7d9005ab40db
wireshark-2.2.17/ui/gtk/supported_protos_dlg.c,263,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((len = (int) strlen(hfinfo->name)) > maxlen2),cc4dcb58469520c20c7eba4427488440f6e216ecc0bbdda71ba14b81db426387
wireshark-2.2.17/ui/gtk/supported_protos_dlg.c,266,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          if ((len = (int) strlen(hfinfo->blurb)) > maxlen4),c9d568e337c589a126508a6e754521b664c21cfcba21c3892cfbe35d9d2caa5a
wireshark-2.2.17/ui/gtk/supported_protos_dlg.c,272,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    insert_text(w, dfilter_supported, (int) strlen(dfilter_supported));",8c5c5ca3786e6e45a0f7ee2ecaf9e5a71f9ebe1c10ceb61e2552bd2338b6338b
wireshark-2.2.17/ui/gtk/tap_param_dlg.c,81,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    for (i = 0; i < strlen(action_name); i++) {,188724b81b1acbe89a394bc1bf6459a6b3b8a17514dd3a0c63bbcee3bd51f721
wireshark-2.2.17/ui/gtk/text_page_utils.c,117,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            text_page_insert(page, line, (int) strlen(line));",f13a488e25fb0b84a88403fcb425f1cd71d99d4d8f192e63581e78180ee56258
wireshark-2.2.17/ui/gtk/uat_gui.c,325,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,					len = (unsigned) strlen(text);,6acad9e7bf6fe51e267dc1f95fe2b21685d85b6c44bde7156cf9d7d5e273ec80
wireshark-2.2.17/ui/gtk/uat_gui.c,334,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				len = (unsigned) strlen(text);,6acad9e7bf6fe51e267dc1f95fe2b21685d85b6c44bde7156cf9d7d5e273ec80
wireshark-2.2.17/ui/gtk/uat_gui.c,339,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"				text_free = unhexbytes(text, (guint) strlen(text), &len, &err);",d6950c5649fe1507102f7c528aa42716603b7a6dd9e8b159bcf1a69340f33993
wireshark-2.2.17/ui/gtk/uat_gui.c,354,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,				len = (unsigned) strlen(text);,6acad9e7bf6fe51e267dc1f95fe2b21685d85b6c44bde7156cf9d7d5e273ec80
wireshark-2.2.17/ui/gtk/voip_calls_dlg.c,212,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	filter_length = strlen(filter_string);,d33b979353f910b40e716337e64d1963c394b32ab8533ce485f5268aa3afd650
wireshark-2.2.17/ui/gtk/voip_calls_dlg.c,216,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	if (strlen(filter_string) > 0),ad6034d9de2e3b8c7ea61d0da0b321659975da0cdc771635677f2527f5daa380
wireshark-2.2.17/ui/gtk/webbrowser.c,211,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (browser == NULL || ! strlen (browser)),74a993e95f8cfc2e38742b9f01fe79ae4688639feac2fedcf5e4d30c72d1cb2a
wireshark-2.2.17/ui/gtk/webbrowser.c,336,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (browser == NULL || ! strlen (browser)),74a993e95f8cfc2e38742b9f01fe79ae4688639feac2fedcf5e4d30c72d1cb2a
wireshark-2.2.17/ui/gtk/wlan_stat_dlg.c,186,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (filter && strlen(filter)) {,2288ea41d1f4ac8dcb848c3301b9aded13d79d81dc81a88ecbc3bd8017b14e2d
wireshark-2.2.17/ui/help_url.c,51,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if((strlen(filename) > 2) && (filename[1] == ':')) {,6911a7b13cfce51a0e57ad4cbd6e3fca60a188cfa729311c461f8d88c846e197
wireshark-2.2.17/ui/help_url.c,54,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if((strlen(filename) > 1) && (filename[0] == '/')) {,78b63c2739fd0ecd2e49f41d128cf558931f83de091388f5665df6f9bc412659
wireshark-2.2.17/ui/profile.c,373,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (name[0] == '.' || name[strlen(name)-1] == '.') {,5f827d263a21f038f884c1efc7692ade5ffe51545771c042776fd05ad0ae4554
wireshark-2.2.17/ui/proto_hier_stats.c,127,6,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if(strlen(PNODE_FINFO(proto_sibling_node)->hfinfo->name) == 0 && ptree_node->next),6d23af90715e2ec5c047bf7e0077f8a1b7fda910c08d8ab62f552c7286414fac
wireshark-2.2.17/ui/qt/address_editor_frame.cpp,173,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        strlen(cinfo->col_expr.col_expr_val[column])),01d8c40a3d9b72dbd6a5f77732a90604b832d617ca7f5e05a9042f1ab3b5ca4d
wireshark-2.2.17/ui/qt/capture_filter_syntax_worker.cpp,89,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                if (device.if_info.extcap == NULL || strlen(device.if_info.extcap) == 0),c4b0a64baff13bb3ce263a53d5aa69fbe7dd7caffb8730e953940f140864cfd1
wireshark-2.2.17/ui/qt/conversation_dialog.cpp,576,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            setColumnWidth(i, one_en * (int) strlen(""000.000.000.000""));",9d47ca67744b0e3eb781b8d1d227d5f3e37f0bc7680913fb53e97a379cca2f2a
wireshark-2.2.17/ui/qt/conversation_dialog.cpp,580,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            setColumnWidth(i, one_en * (int) strlen(""000000""));",e494417ff6eb9fdd62c6b438760af7b11d1feaf4bbf3a6cfbfa3d6d1541deb39
wireshark-2.2.17/ui/qt/conversation_dialog.cpp,585,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            setColumnWidth(i, one_en * (int) strlen(""00,000""));",bcbf7f1649626289aa1b7fdfbedcf11e262dda68c449ee2803e86765876c3cb1
wireshark-2.2.17/ui/qt/conversation_dialog.cpp,590,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            setColumnWidth(i, one_en * (int) strlen(""000,000""));",b8be2c099732e36d64f8edbff389839fa1bc6df44d86a243bc76dc89eb7762ac
wireshark-2.2.17/ui/qt/conversation_dialog.cpp,593,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            setColumnWidth(i, one_en * (int) strlen(""00.000""));",f3c3b82113c2de1272623ac34b6802a419b21872f91d15e072ae9fc172f48625
wireshark-2.2.17/ui/qt/conversation_dialog.cpp,596,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            setColumnWidth(i, one_en * (int) strlen(""00.000000""));",0beb2a5b78b0e3ecee7e8f2473395e82f1aa0dff498581084c967b5f6678fb0b
wireshark-2.2.17/ui/qt/conversation_dialog.cpp,600,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            setColumnWidth(i, one_en * (int) strlen(""000 k""));",2ae836d75c8dfa63a5afb798a5de00061d62d8ce24063b95fc4add683a8f4335
wireshark-2.2.17/ui/qt/display_filter_edit.cpp,489,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            gsize fw_len = (gsize) strlen(fw_utf8);,b2f7df04fa05b81e0b3c5367d2e96a4f67277e2d6fb30bc9f6d3fb772ee66038
wireshark-2.2.17/ui/qt/display_filter_edit.cpp,494,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    if ((gsize) strlen(hfinfo->abbrev) != fw_len) field_list << hfinfo->abbrev;,640e58ce44b70276fea333e5d2ac7dbd91abe291822898e81a33c37b6d176e42
wireshark-2.2.17/ui/qt/endpoint_dialog.cpp,457,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            setColumnWidth(i, one_en * (int) strlen(""000.000.000.000""));",9d47ca67744b0e3eb781b8d1d227d5f3e37f0bc7680913fb53e97a379cca2f2a
wireshark-2.2.17/ui/qt/endpoint_dialog.cpp,460,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            setColumnWidth(i, one_en * (int) strlen(""000000""));",e494417ff6eb9fdd62c6b438760af7b11d1feaf4bbf3a6cfbfa3d6d1541deb39
wireshark-2.2.17/ui/qt/endpoint_dialog.cpp,465,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            setColumnWidth(i, one_en * (int) strlen(""00,000""));",bcbf7f1649626289aa1b7fdfbedcf11e262dda68c449ee2803e86765876c3cb1
wireshark-2.2.17/ui/qt/endpoint_dialog.cpp,470,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            setColumnWidth(i, one_en * (int) strlen(""000,000""));",b8be2c099732e36d64f8edbff389839fa1bc6df44d86a243bc76dc89eb7762ac
wireshark-2.2.17/ui/qt/endpoint_dialog.cpp,473,46,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            setColumnWidth(i, one_en * (int) strlen(""-00.000000"")); // GeoIP",40eb1ab8bb12ebfcc613587d5633b0af43c0e936d52e2d07287d3068b3ff26cc
wireshark-2.2.17/ui/qt/field_filter_edit.cpp,213,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            gsize fw_len = (gsize) strlen(fw_utf8);,b2f7df04fa05b81e0b3c5367d2e96a4f67277e2d6fb30bc9f6d3fb772ee66038
wireshark-2.2.17/ui/qt/field_filter_edit.cpp,218,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    if ((gsize) strlen(hfinfo->abbrev) != fw_len) field_list << hfinfo->abbrev;,640e58ce44b70276fea333e5d2ac7dbd91abe291822898e81a33c37b6d176e42
wireshark-2.2.17/ui/qt/iax2_analysis_dialog.cpp,1131,42,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",            QByteArray bytes = tempfile->read(chunk_size);,baf8d871e11d4c95cd4805c3d0580fac03b3d88bc8939301d6046c54fea38bb5
wireshark-2.2.17/ui/qt/main_window_slots.cpp,904,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (strlen (interface_names->str) > 0) {,df7f5f6e0c62238cfe3b4af91515d440782c25e6ae70a13e475a20764bc6a7f1
wireshark-2.2.17/ui/qt/main_window_slots.cpp,1878,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        if (ws_write(fd, keylist, (unsigned int)strlen(keylist)) < 0) {",62e118c547480ec5ce6e154b7ea82c35d09f71b29152887a18300c434b6483bc
wireshark-2.2.17/ui/qt/main_window_slots.cpp,1955,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                && strlen (finfo_selected->rep->representation) > 0) {,e212939d04c0995a5295bf7ccbf16f9298dd8cdc83315020186a5ee25cdefe00
wireshark-2.2.17/ui/qt/packet_list.cpp,1003,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (strlen(cap_file_->cinfo.col_expr.col_expr[ctx_column_]) != 0 &&,e7707ceb8488b17be20ae7dfffd28e6d409ce42d2a7e515d3536d4468a3ed5e8
wireshark-2.2.17/ui/qt/packet_list.cpp,1004,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                strlen(cap_file_->cinfo.col_expr.col_expr_val[ctx_column_]) != 0) {,d5133dd78c3364fe4ac7df979fadaa2dbfc9e943280a33ad5ca7a922ef80dd06
wireshark-2.2.17/ui/qt/rtp_analysis_dialog.cpp,1304,42,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",            QByteArray bytes = tempfile->read(chunk_size);,baf8d871e11d4c95cd4805c3d0580fac03b3d88bc8939301d6046c54fea38bb5
wireshark-2.2.17/ui/qt/sctp_chunk_statistics_dialog.cpp,149,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            QString ch = QString(token).mid(1, (int)strlen(token)-2);",8249602bf0e0dfd104359c5479131ac66cb58484a4638633fc427c543a467fca
wireshark-2.2.17/ui/qt/sctp_chunk_statistics_dialog.cpp,162,65,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        QString ch = QString(token).mid(1, (int)strlen(token)-2);",8249602bf0e0dfd104359c5479131ac66cb58484a4638633fc427c543a467fca
wireshark-2.2.17/ui/qt/search_frame.cpp,382,78,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            found_packet = cf_find_packet_data(cap_file_, (guint8 *) string, strlen(string), cap_file_->dir);",69336e249b938d1fadb94d2c0df03393b8c8b53024b996b1dd95718c153d9292
wireshark-2.2.17/ui/qt/uat_dialog.cpp,118,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (uat_->help && strlen(uat_->help) > 0) {,e0714230652dde85089b53b6d7e28143b0628daf8e9349dcfd02c59a32cec865
wireshark-2.2.17/ui/qt/wireshark_application.cpp,250,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (font_string && strlen(font_string) > 0) {,66af1b7ab0fc61839970fdd3f2c04aca8222e09595d368b99bd6e00dd680c937
wireshark-2.2.17/ui/qt/wireshark_application.cpp,584,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        len = strlen(dir_name);,2eb84b2f41048684fbfcdc564a7c50f57d4a2fce3c2c242a6ed4b8961b0ff67e
wireshark-2.2.17/ui/recent.c,476,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen(rh->r_host) == 0) {,cc6e71ccc2fd24f82afa6e47d8cd8a1f2def5a950f3b207f11978fb07116045e
wireshark-2.2.17/ui/recent.c,523,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (li->data && strlen((const char *)li->data)) {,1af57cbee2664eca90a3e5b273f770b91051cb8be7c34c3b4fec367a1e296b0b
wireshark-2.2.17/ui/recent.c,971,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  int cust_format_len = (int) strlen(cust_format);,99ca0e6c824f4e660c270604c80b09fdbabaa099428c07d1eadd52c9a24e6174
wireshark-2.2.17/ui/tap-rtp-common.c,408,88,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		if (g_ascii_strncasecmp(mimetype_and_clock_map[i].pt_mime_name_str,payload_type_str,(strlen(mimetype_and_clock_map[i].pt_mime_name_str))) == 0)",87e668ebecb703007435c0991a2882cadecf61d588178f4755d28cb124743b5d
wireshark-2.2.17/ui/tap-rtp-common.c,567,78,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			if (g_ascii_strncasecmp(""telephone-event"",rtpinfo->info_payload_type_str,(strlen(""telephone-event"")))==0){",e85a55f0bcf6c147c37726955801412e471d902ea8e35b5145de208939005110
wireshark-2.2.17/ui/tap-sctp-analysis.c,190,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			g_strlcpy(data->checksum_type, str, strlen(str));",92750a17696e520b60a2b8ee7973f99bdba506970e6ce51e478f541f70408c89
wireshark-2.2.17/ui/tap-sctp-analysis.c,201,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"			g_strlcpy(data->checksum_type, str, strlen(str));",92750a17696e520b60a2b8ee7973f99bdba506970e6ce51e478f541f70408c89
wireshark-2.2.17/ui/tap-sctp-analysis.c,210,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		g_strlcpy(data->checksum_type, str, strlen(str));",92750a17696e520b60a2b8ee7973f99bdba506970e6ce51e478f541f70408c89
wireshark-2.2.17/ui/tap_export_pdu.c,120,65,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    wtap_block_add_string_option(shb_hdr, OPT_COMMENT, comment, strlen(comment));",5152a2cf3f34b4b6d372625de6f71bb890ee510718b4a2e1bbe1fd42fca2edc7
wireshark-2.2.17/ui/tap_export_pdu.c,151,82,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    wtap_block_add_string_option(int_data, OPT_IDB_NAME, ""Fake IF, PDU->Export"", strlen(""Fake IF, PDU->Export""));",79e62cd22788fee124455011b932114c606d8f082dbb4aed555a97dbb8b2f0d5
wireshark-2.2.17/ui/text_import.c,574,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    toklen = strlen(str);,c84b0c40b236297163ca4fa5b464301e1d880cb136eb12274becd892265dcb19
wireshark-2.2.17/ui/text_import.c,653,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if ( strlen(packet_preamble) > 2 ) {,4c302ad457e016706b95d902edfbba0ccd0cd36793c8541932585fc08e4d8489
wireshark-2.2.17/ui/text_import_scanner.c,912,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-2.2.17/ui/text_import_scanner.c,1881,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);",f6db99431b143cf4d85bbc3049addd0480055ecadec213a4a82bfa4cdffcb561
wireshark-2.2.17/ui/util.c,61,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        len += (int) strlen(argv[i]);,7d9e3b9bf06ce9832ce1c7e38acb8b2ad15598bd6cc3bfa4e7772f725d3bc8a3
wireshark-2.2.17/ui/util.c,344,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        is_remote = (strlen(get_conn_cfilter()) > 0);,d3acaa0f17b8b59ea29ff1e469cbdfbc218aaac0314c37f8d776da71f055bb35
wireshark-2.2.17/ui/voip_calls.c,2112,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                if (strlen(pi->dialedDigits)),bff4566b1769e120f616e65de4a51c7d32f8028c3739feb69a00c9b79177d813
wireshark-2.2.17/ui/win32/file_dlg_win32.c,880,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        if (ws_write(fd, keylist, (unsigned int)strlen(keylist)) < 0) {",62e118c547480ec5ce6e154b7ea82c35d09f71b29152887a18300c434b6483bc
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1153,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (preview_file == NULL || strlen(preview_file) < 1) {,27197891a6675b40a8129e704f97ef859901943336bca5058dd0585c3d16f0c8
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1466,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    sa = g_array_append_vals(sa, str16, (guint) strlen(description_str->str));",3ec8a1322b0e5e19e7f0ca7b2c6075f8de521cd1beb0f9ea9a2470cde405d4cd
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1471,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    sa = g_array_append_vals(sa, str16, (guint) strlen(pattern_str->str));",3ae21536fbc4f3d5df89c4df3919ebcc7321632c2791e1afd05da377b1a3985f
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1507,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    sa = g_array_append_vals(sa, str16, (guint) strlen(""All Files""));",74e3e72ec2f94907c2371f8507a3f165ea0313da2a27bd11f6fdb32152244616
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1510,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    sa = g_array_append_vals(sa, str16, (guint) strlen(ALL_FILES_WILDCARD));",6d77abca10ea7b67afec28a02df9bafacb0d3edc33a6ba9979ac78f217fd3c4d
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1518,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    sa = g_array_append_vals(sa, str16, (guint) strlen(""All Capture Files""));",1e61c9e44615af93a8492c769857eea1ac6c066656f4174b946def6be8579487
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1537,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    sa = g_array_append_vals(sa, str16, (guint) strlen(pattern_str->str));",3ae21536fbc4f3d5df89c4df3919ebcc7321632c2791e1afd05da377b1a3985f
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1601,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    sa = g_array_append_vals(sa, str16, (guint) strlen(description_str->str));",3ec8a1322b0e5e19e7f0ca7b2c6075f8de521cd1beb0f9ea9a2470cde405d4cd
wireshark-2.2.17/ui/win32/file_dlg_win32.c,1606,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    sa = g_array_append_vals(sa, str16, (guint) strlen(pattern_str->str));",3ae21536fbc4f3d5df89c4df3919ebcc7321632c2791e1afd05da377b1a3985f
wireshark-2.2.17/ui/win32/print_win32.c,211,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            TextOut(hdc, X_OFFSET,y_pos, buf, (int) strlen(buf));",0c14a476a8cf02fb5e0c8298866b39e246f2d9d74dfd62eb10e446e6351d2d22
wireshark-2.2.17/ui/win32/print_win32.c,227,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            TextOut(hdc, X_OFFSET,y_pos, buf, (int) strlen(buf));",0c14a476a8cf02fb5e0c8298866b39e246f2d9d74dfd62eb10e446e6351d2d22
wireshark-2.2.17/ui/win32/print_win32.c,244,54,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            TextOut(hdc, X_OFFSET, y_pos, buf, (int) strlen(buf));",0a9873ad4b7001581d11924501ecffda2e107737c568af31c07d004ff33e1b0f
wireshark-2.2.17/ui/win32/print_win32.c,262,42,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        TextOut(hdc, 0,y_pos, buf, (int) strlen(buf));",a2c3d676ee2ba33bb1ab0ab46f76ca713a1b40d01f194ab1120c4e5aafe4182e
wireshark-2.2.17/wiretap/ascend.c,985,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,#   define yystrlen strlen,f58e5af90f443fae6a8a00af8329b8deb4c6b071121abb824c921b654510f050
wireshark-2.2.17/wiretap/ascend_scanner.c,1887,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-2.2.17/wiretap/ascend_scanner.c,2208,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen(atcopy) > 2),1c03496b00e5c2e32ff5ae2e2a6ec1f293d7146ea832c975fe00c748e307c984
wireshark-2.2.17/wiretap/ascend_scanner.c,3195,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);",f6db99431b143cf4d85bbc3049addd0480055ecadec213a4a82bfa4cdffcb561
wireshark-2.2.17/wiretap/catapult_dct2000.c,193,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (((size_t)firstline_length < strlen(catapult_dct2000_magic)) ||,ea6ad7a4393a466b24d88a5b1d50950fb5caef40fbcb9fc0974bd5e45b8ff48c
wireshark-2.2.17/wiretap/catapult_dct2000.c,200,50,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (memcmp(catapult_dct2000_magic, linebuff, strlen(catapult_dct2000_magic)) != 0) {",3674c012a4020585ed9aa468decddff97e8b2dd152bb8048a5aadc78e2be99df
wireshark-2.2.17/wiretap/catapult_dct2000.c,422,68,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            if (((size_t)(dollar_offset - after_time_offset -1) == strlen("" l "")) &&",d61ac5f91ea000d908ceef7741d820048e034f65c2459dddc2a080b0c29a9309
wireshark-2.2.17/wiretap/catapult_dct2000.c,423,61,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                (strncmp(linebuff+after_time_offset, "" l "", strlen("" l "")) == 0)) {",7ddce33cad33edacf903688ab2eabbfb87a570768bb6b42aa7860db9f17b563c
wireshark-2.2.17/wiretap/catapult_dct2000.c,666,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                              strlen(prefix->before_time), err)) {",1c7ae7a906c197f39ab3ee7d88134124c66397c5b2e8bdbc945a5f7be85144ea
wireshark-2.2.17/wiretap/catapult_dct2000.c,695,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    if (!wtap_dump_file_write(wdh, time_string, strlen(time_string), err)) {",7d1c5d0124de6100253493dee6fa29c71e61d1df096edc6258e187fe7602318c
wireshark-2.2.17/wiretap/catapult_dct2000.c,701,47,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        if (!wtap_dump_file_write(wdh, "" l "", strlen("" l ""), err)) {",872d0c506eed659eaf1b6e61b8c24e4590446e75f14a801c8a00b2fb807d4f4a
wireshark-2.2.17/wiretap/catapult_dct2000.c,707,35,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                                  strlen(prefix->after_time), err)) {",167f753cc49e11252f8488d6f4798d3ee4fa816f6305d2f750aa076658df85af
wireshark-2.2.17/wiretap/catapult_dct2000.c,1078,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"        (strncmp(protocol_name, ""nbap_sscfuni"", strlen(""nbap_sscfuni"")) == 0)) {",f30311b6d635260ccea5cb6c67ddcbff09439af840c4644f17f1d4cdcc1ba29d
wireshark-2.2.17/wiretap/catapult_dct2000.c,1310,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    phdr->caplen = (guint)strlen(context_name)+1 +     /* Context name */,e601cd1e5ebba7bda4c49d00b4efa217b3bf32f052dce3c207f64781f656d130
wireshark-2.2.17/wiretap/catapult_dct2000.c,1312,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                   (guint)strlen(timestamp_string)+1 + /* timestamp */,65c9b43f5c0afb10309ee8fc7bce43fe4ee520424c1fb18bf16b8ab53a42a068
wireshark-2.2.17/wiretap/catapult_dct2000.c,1313,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                   (guint)strlen(variant_name)+1 +     /* variant */,93ad1e447d11ca73267ee92b6050bfe58f0a6d8a13c72df0413cf25ca6849eff
wireshark-2.2.17/wiretap/catapult_dct2000.c,1314,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                   (guint)strlen(outhdr_name)+1 +      /* outhdr */,d15372e80bdf9206dbd95f8ebc3f89f92bca82ad3ee6cf540aed26acf9982813
wireshark-2.2.17/wiretap/catapult_dct2000.c,1315,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                   (guint)strlen(protocol_name)+1 +    /* Protocol name */,ae6171e7f3b8d250599a518a9ace05dcd3e778a2ce3c053b3744c1d49f701999
wireshark-2.2.17/wiretap/catapult_dct2000.c,1600,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (strlen(linebuff) > MAX_TIMESTAMP_LINE_LENGTH) {,45ed3afa4c39be45b01fd1c31b097a7fa77e37bed874b079633eae2f9131c86d
wireshark-2.2.17/wiretap/catapult_dct2000.c,1606,18,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"    scan_found = sscanf(linebuff, ""%9s %2d, %4d     %2d:%2d:%2d.%4u"",",2f7610bd7cd117116618f60a1e9f6ada743a0a9f328cb3eb1e9cafc1b7e5d85d
wireshark-2.2.17/wiretap/cosine.c,243,12,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		reclen = strlen(buf);,7f686eefc37111678b69994ea1d84a975d5e25fd0d4b5092dd972466c748e1c6
wireshark-2.2.17/wiretap/cosine.c,244,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (reclen < strlen(COSINE_HDR_MAGIC_STR1) ||,6304620daa407a18010836e160ed3305928bc448de19a3d816fd1e79fcf29773
wireshark-2.2.17/wiretap/cosine.c,245,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			reclen < strlen(COSINE_HDR_MAGIC_STR2)) {,599208dadbf79bbc16c487de60eda9a9d442e65ff5df07963884878cf6364a36
wireshark-2.2.17/wiretap/cosine.c,344,23,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"		num_items_scanned = sscanf(line,",de54cd4ad9e714cc86b57a80ea6f979903c3761a16472ab8d5935ef760b09125
wireshark-2.2.17/wiretap/cosine.c,358,23,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"		num_items_scanned = sscanf(line,",de54cd4ad9e714cc86b57a80ea6f979903c3761a16472ab8d5935ef760b09125
wireshark-2.2.17/wiretap/dbs-etherwatch.c,154,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        reclen = strlen(buf);,7f686eefc37111678b69994ea1d84a975d5e25fd0d4b5092dd972466c748e1c6
wireshark-2.2.17/wiretap/dbs-etherwatch.c,309,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    p += strlen(DEST_MAC_PREFIX);,05703036f79fcdcefdbd3da943b9d8e5ea4ce617f74597a867915772b6df9c9c
wireshark-2.2.17/wiretap/dbs-etherwatch.c,346,8,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if(strlen(line) < LENGTH_POS) {,0c2bd9cf45286c1963a419e997685bf64ddc5c575210706b22a2a91a905b7c45
wireshark-2.2.17/wiretap/dbs-etherwatch.c,352,25,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"    num_items_scanned = sscanf(line + LENGTH_POS,",254a9cded3afed880b5dd86601a19dd7599195bcae789a212258aa88571a916b
wireshark-2.2.17/wiretap/dbs-etherwatch.c,373,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        strlen(ETH_II_CHECK_STR)) == 0) {,5b9caca21f08e6782c0a49b49dd766f87cbfb10a33db1e1e88bc714e73aa48c1
wireshark-2.2.17/wiretap/dbs-etherwatch.c,422,17,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                strlen(SNAP_CHECK_STR)) == 0) {,cfe5698d42b0525c988a5b141f10186a1991a760ab5d04f99beb3e5888268d04
wireshark-2.2.17/wiretap/dct3trace.c,170,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	if( strncmp(dct3trace_magic_line1, line1, strlen(dct3trace_magic_line1)) != 0 ||",b736dd36f833376ea66d5a54126f071578cfb35620f8efd3c57e1de1af6e67b8
wireshark-2.2.17/wiretap/dct3trace.c,171,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		strncmp(dct3trace_magic_line2, line2, strlen(dct3trace_magic_line2)) != 0)",aa5cad20f1d36da593edece8625d669de1277e07c3dbcd6e12dda364901eefd3
wireshark-2.2.17/wiretap/dct3trace.c,198,41,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		if( memcmp(dct3trace_magic_end, line, strlen(dct3trace_magic_end)) == 0 )",66c9192550ba60bf93d648f85d82a819bd593e513a6d104b15d64ce47bc55bc5
wireshark-2.2.17/wiretap/dct3trace.c,204,53,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		else if( memcmp(dct3trace_magic_record_end, line, strlen(dct3trace_magic_record_end)) == 0 )",ca4ff42b1e787ea0915f8fb2329eb56358ea7a438e4c8330a297eaea40bd84c8
wireshark-2.2.17/wiretap/dct3trace.c,233,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		else if( memcmp(dct3trace_magic_record_start, line, strlen(dct3trace_magic_record_start)) == 0 )",752f9481ac7cdf2bdb1c6d4f03003ca84385eacfa5fcfc5362906cb1ff51dab1
wireshark-2.2.17/wiretap/dct3trace.c,287,65,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		else if( !have_data && memcmp(dct3trace_magic_l2_start, line, strlen(dct3trace_magic_l2_start)) == 0 )",561b642389d889f6e8ea99d316be93bb9ec29d524d31af9e58aebc6e3539d825
wireshark-2.2.17/wiretap/erf.c,1392,72,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    wtap_block_set_string_option_value(shb_hdr, OPT_SHB_USERAPPL, tmp, strlen(tmp));",b0d1dee87f90407042b6c27b34f092d190229d2c90f6d6b0312cd38d392a803c
wireshark-2.2.17/wiretap/erf.c,1423,76,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"      wtap_block_set_string_option_value(shb_hdr, OPT_SHB_HARDWARE, descr, strlen(descr));",142d659884b651ba5a1877b45797172e8496761e338543526ff819bad7527483
wireshark-2.2.17/wiretap/erf.c,1427,77,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    wtap_block_set_string_option_value(shb_hdr, OPT_SHB_HARDWARE, modelcpu, strlen(modelcpu));",cb16fd6ae3ec99e04502a8bf1361091954d71bae6a40d9f5be698a3f8f1dcdd2
wireshark-2.2.17/wiretap/iseries.c,352,27,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"      num_items_scanned = sscanf (buf,",9b1ee9e9dc4204145a876d845a72ca76288504703b9353ec7c9d79af92e63001
wireshark-2.2.17/wiretap/iseries.c,442,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            buflen = (long) strlen (buf);,8a7bb2f3ef621729c0fa77a31d1d3cdd82e555cf0eafc0bb7e16bf471522ff0a
wireshark-2.2.17/wiretap/iseries.c,447,11,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"          sscanf (buf+78,",18d04265ab8bc4cdf973c6983452714f924bec4f5156cd7cacae5139000924f1
wireshark-2.2.17/wiretap/iseries.c,609,9,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"        sscanf (data,",303e662889c278c0e6f62d73e63ed9f9aa2beeb724f29d8494c947e8d2e31e72
wireshark-2.2.17/wiretap/iseries.c,676,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          if (strlen(destmac) != 12),3797a5fe6ff09b1cfd26ba83b1e9a7ec4210d5dbbdfd6e45dbbe4c7c6387c46e
wireshark-2.2.17/wiretap/iseries.c,683,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          if (strlen(srcmac) != 12),3b184c6abd9e3b33b5aa602377e876a29175ff60eac81cc1136824066779f206
wireshark-2.2.17/wiretap/iseries.c,690,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          if (strlen(type) != 4),e4524fc04b10c934ae3249393f33a2578db0fd64c189cf356e5d66dc9c0cf23f
wireshark-2.2.17/wiretap/iseries.c,757,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      switch (strlen(csec)),91a480ad5004ec8b3c20cf342074b70b589d9140c04266a8c3e751ceb716e17a
wireshark-2.2.17/wiretap/iseries.c,853,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          buflen = (int) strlen (data);,d6daa647d4385874c1aacb982b60b4ccdcfba3051e187c6c4b76a29491d8983c
wireshark-2.2.17/wiretap/iseries.c,946,11,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"          sscanf (data+78,",8d814e27001045596f516f64886aec3f31c16c9bccf630eee5f85a8e33cdd551
wireshark-2.2.17/wiretap/k12.c,1218,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    obj.record.name_len = (guint16) strlen(src_desc->input_name) + 1;,60b2afd1383bf92fec95be09351a178d6b3e60753518c22d040aea7db1194ada
wireshark-2.2.17/wiretap/k12.c,1219,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    obj.record.stack_len = (guint16) strlen(src_desc->stack_file) + 1;,61a1b31f40db6a52e34976dea6e2c4e8ac31337a1cec3cc4263517025defb0a2
wireshark-2.2.17/wiretap/k12text.c,1351,14,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \,4cf47e7471623ab481df161e506e587625ef7b38e2de1f0b2b1793a282abefed
wireshark-2.2.17/wiretap/k12text.c,2376,37,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);",f6db99431b143cf4d85bbc3049addd0480055ecadec213a4a82bfa4cdffcb561
wireshark-2.2.17/wiretap/k12text.c,3011,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	wl = strlen(p);,b4bfc22b53abaae8f55de876b715296876ce87f116539763752ed02025da51fa
wireshark-2.2.17/wiretap/logcat_text.c,194,33,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    } while (NULL != ret && 3 > strlen(cbuff) && !file_eof(fh));,87d20708a5406977edb0da5b310668c5dc36f3b9a640593d8f6d9b344d61d199
wireshark-2.2.17/wiretap/logcat_text.c,196,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (NULL == ret || 3 > strlen(cbuff)) {,df707ac9936e3187bd42bbdb97a029434fb7f6a6a388a096d4721bed9f496f74
wireshark-2.2.17/wiretap/logcat_text.c,209,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        while (NULL != ret2 && 2 < strlen(lbuff) && !file_eof(fh)) {,63646f8ba7320f49529ddcba59bac6b00d08e4ddea23e0ac048dd0115e19b08e
wireshark-2.2.17/wiretap/logcat_text.c,215,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if(NULL == ret2 || 2 < strlen(lbuff)) {,0889c3013e04e4919fd51b74f2116cf9f320bedd63e106859e024439e58f4303
wireshark-2.2.17/wiretap/logcat_text.c,223,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    phdr->caplen = (guint32)strlen(cbuff);,b06bb757246a0723c9a079cf3905c5548f08f6ea6e91291a25f5b2ba9a885541
wireshark-2.2.17/wiretap/logcat_text.c,278,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            && ((3 > strlen(cbuff)),9c3bc5f25df3aac4aa7f32b4fca03740f098a723a3e1d97eae90973f321d1684
wireshark-2.2.17/wiretap/logcat_text.c,496,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            msg_pre_skip = 1 + (gint) strlen(tag) + 1;,04757c7272a8f827ec5ad4193f37b1e735e8230aea22b7dd55a04a71d387bd9d
wireshark-2.2.17/wiretap/logcat_text.c,503,39,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            msg_pre_skip = 1 + (gint) strlen(tag) + 1;,04757c7272a8f827ec5ad4193f37b1e735e8230aea22b7dd55a04a71d387bd9d
wireshark-2.2.17/wiretap/logcat_text.c,541,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            length = (guint32) strlen(buf);,8ec5f0035aadb8cfa45e69f5481dc358bc455fcd8de636342769ac099ff264a9
wireshark-2.2.17/wiretap/merge.c,393,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        strlen(shb_comment) > 0) {,f71511a8bc503fbc1cfcc517cfa717c1d10f2eb449b9c6ebc81b9c20c028a717
wireshark-2.2.17/wiretap/merge.c,431,95,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"    wtap_block_set_string_option_value(shb_hdr, OPT_SHB_USERAPPL, (char*)app_name, app_name ? strlen(app_name): 0 ); /* NULL if not available, UTF-8 string containing the name */",74eab65b12217303d1b4db582fbee19930191c0cd16db4b02dc7f9d78fd4bca4
wireshark-2.2.17/wiretap/netscreen.c,146,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		reclen = (guint) strlen(buf);,3cf261a71ced9499ee8c059d0e6790f246cb99bc4d3871e2dd76dee447ea475c
wireshark-2.2.17/wiretap/netscreen.c,147,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		if (reclen < strlen(NETSCREEN_HDR_MAGIC_STR1) ||,4513ea885fb4aef41e0714a75bc2cc16a2136d62fea8085c37b6e47e3a48ce95
wireshark-2.2.17/wiretap/netscreen.c,148,13,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			reclen < strlen(NETSCREEN_HDR_MAGIC_STR2)) {,298bd5251af626dc9efbead6bb292610c41b89c47211f77207eb9b08f34da5d2
wireshark-2.2.17/wiretap/netscreen.c,282,6,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"	if (sscanf(line, ""%9d.%9d: %15[a-z0-9/:.-](%1[io]) len=%9d:%12s->%12s/"",",947b1d9bbf4c6d8d7c8cbc4a2743f59fbb65ea3373fe4fea9b05b506444bd0ec
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,440,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		exp_pdu_tags_len += 4 + (int)strlen(exported_pdu_info->proto_col_str);,8c294f40e828720fca9bd0ce7502c9aa151d235bac2cd3cf12e1d5566ed0299a
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,511,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		packet_buf[i] = (guint8)strlen(exported_pdu_info->proto_col_str);,c54b5b0e47452cf59ae3f76c3288f453d54ed2fd34591a9953a58916e677c83f
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,513,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		for (j = 0; j < (int)strlen(exported_pdu_info->proto_col_str); i++, j++) {",2b345fe22b63f438538a267b6297fe7702e20c6d7a771e5a090f12e2f2bedff0
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,757,16,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"															strlen(""File converted to Exported PDU format during opening""));",d439bff601cf7bf311927c351cfd454a3176a7f745873059c7bfbe26443a3e6e
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,790,66,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	wtap_block_add_string_option(int_data, OPT_IDB_NAME, ""Fake IF"", strlen(""Fake IF""));",ff90879615cda7bbb1ae75aa4c936939a02f77e138bcf4220086e0d325712361
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,961,18,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"				scan_found = sscanf(curr_pos, ""%*s %3u.%3u.%3u.%3u, %*s %*s %5u, %*s %*s %4s"",",87717e546d36daa6531e3275e7d8e0e4a71a3bcc2c6e7093e81ed93b7f90c8fd
wireshark-2.2.17/wiretap/nettrace_3gpp_32_423.c,1008,18,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"				scan_found = sscanf(curr_pos, ""%*s %3u.%3u.%3u.%3u, %*s %*s %5u, %*s %*s %4s"",",87717e546d36daa6531e3275e7d8e0e4a71a3bcc2c6e7093e81ed93b7f90c8fd
wireshark-2.2.17/wiretap/network_instruments.c,619,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        comment_length = strlen(comment);,becc3d64cf62a9d39a8bc5bfff30e12c47fee84eafaa94b9055228cb2a3d8984
wireshark-2.2.17/wiretap/pcapng.c,2683,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    size = (guint32)strlen(str) & 0xffff;,696cd5209105dc0bc208b05e8ee9a985181d1354254deb15d5c70d40664d7bbb
wireshark-2.2.17/wiretap/pcapng.c,2736,29,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    guint32 size = (guint32)strlen(str) & 0xffff;,91e5906452c482aef00b24b7f014cba643a2f59367015a053097b18548bf38c9
wireshark-2.2.17/wiretap/pcapng.c,2918,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        comment_len = (guint32)strlen(phdr->opt_comment) & 0xffff;,0d22e904a15746a2613e28edb60f8d24901b73896239e2800c91f1a969f15e30
wireshark-2.2.17/wiretap/pcapng.c,3108,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        comment_len = (guint32)strlen(phdr->opt_comment) & 0xffff;,0d22e904a15746a2613e28edb60f8d24901b73896239e2800c91f1a969f15e30
wireshark-2.2.17/wiretap/pcapng.c,3248,25,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        size = (guint32)strlen(optval->stringval) & 0xffff;,fa2485512fb91cd00525313596f0ffb9b8fb2548d55403ed4904f44036368b99
wireshark-2.2.17/wiretap/pcapng.c,3392,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            hostnamelen = strlen(ipv4_hash_list_entry->name);,639127fae272d3c9800dc5ad5db126e8cc60c10d07be20d5aa8d96c833fe57f4
wireshark-2.2.17/wiretap/pcapng.c,3472,27,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            hostnamelen = strlen(ipv6_hash_list_entry->name);,9576c5c64c4e85b39220a994ef84348f79de6feda2525c02f3e96429274ed796
wireshark-2.2.17/wiretap/pcapng.c,3776,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                size = (guint32)(strlen(filter->if_filter_str) + 1) & 0xffff;,7f0342211b854e74af58c9950f6d15e40af0aeb23be460a50121164e2fefc9ce
wireshark-2.2.17/wiretap/pcapng.c,3866,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                size = (guint32)(strlen(filter->if_filter_str) + 1) & 0xffff;,7f0342211b854e74af58c9950f6d15e40af0aeb23be460a50121164e2fefc9ce
wireshark-2.2.17/wiretap/pcapng_module.h,55,72,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","void register_pcapng_block_type_handler(guint block_type, block_reader read,",05114e97dc4c659a0c03e93050735726aad66bb04fc46e17c9172ecf3d2a5e07
wireshark-2.2.17/wiretap/toshiba.c,166,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,		reclen = (guint) strlen(buf);,3cf261a71ced9499ee8c059d0e6790f246cb99bc4d3871e2dd76dee447ea475c
wireshark-2.2.17/wiretap/toshiba.c,271,22,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"	num_items_scanned = sscanf(line, ""%9d] %2d:%2d:%2d.%9d %9s %9s"",",565274a454bfe4414c6c2813f9170f2f06e4acfbc5f8c008e3f1f46b26b90d20
wireshark-2.2.17/wiretap/vms.c,211,26,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        reclen = (guint) strlen(buf);,3cf261a71ced9499ee8c059d0e6790f246cb99bc4d3871e2dd76dee447ea475c
wireshark-2.2.17/wiretap/vms.c,212,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if (reclen < strlen(VMS_HDR_MAGIC_STR1) ||,64b85a7932c05f7f41549a03c8e83dab02e6014ba076d90fe41299a9c8e83f97
wireshark-2.2.17/wiretap/vms.c,213,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            reclen < strlen(VMS_HDR_MAGIC_STR2) ||,cabb6548b9bdb47b83640193fec5c215db28c4269dd9558a17baf83d17f9e1c5
wireshark-2.2.17/wiretap/vms.c,214,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            reclen < strlen(VMS_HDR_MAGIC_STR3)) {,bf8d196cdb69e2f8a1ec8c4da0376c55aeb0c89af41a60555fe2f9128ae51e7c
wireshark-2.2.17/wiretap/vms.c,357,33,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"            num_items_scanned = sscanf(p,",78d705a9db85965b5cf41ba4fed3ebd50adf24920be5d868e0a60eaafb5c27f1
wireshark-2.2.17/wiretap/vms.c,364,35,1,buffer,sscanf,It's unclear if the %s limit in the format string is small enough (CWE-120),"Check that the limit is sufficiently small, or use a different input function",,CWE-120,"              num_items_scanned = sscanf(p,",78d705a9db85965b5cf41ba4fed3ebd50adf24920be5d868e0a60eaafb5c27f1
wireshark-2.2.17/wiretap/wtap.c,199,132,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"		wtap_block_set_nth_string_option_value(g_array_index(wth->shb_hdrs, wtap_block_t, 0), OPT_COMMENT, 0, comment, (gsize)(comment ? strlen(comment) : 0));",f9a3790efb377f6950f0dd777ac72776b165f4b0e904a717ca3719aa0940b72e
wireshark-2.2.17/wiretap/wtap_opttypes.c,310,100,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"            wtap_block_add_string_option(dest_block, src_opt->option_id, src_opt->value.stringval, strlen(src_opt->value.stringval));",7250a46fee7201e5bcb7e75d6192ca5fdf060f0fd2342d20505a811a7d229da5
wireshark-2.2.17/writecap/pcapio.c,248,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((option_value != NULL) && (strlen(option_value) > 0) && (strlen(option_value) < G_MAXUINT16)) {,079836733927dfe8cf2e07a4ac1e0cc1da8426f141da544e1c1eeb5a520b62d8
wireshark-2.2.17/writecap/pcapio.c,248,70,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((option_value != NULL) && (strlen(option_value) > 0) && (strlen(option_value) < G_MAXUINT16)) {,079836733927dfe8cf2e07a4ac1e0cc1da8426f141da544e1c1eeb5a520b62d8
wireshark-2.2.17/writecap/pcapio.c,251,55,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                                 (guint16)ADD_PADDING(strlen(option_value)));,ddc7d34960369240e7385d95033f76a270d754b0a43f1aeeae36b74b7667e1c1
wireshark-2.2.17/writecap/pcapio.c,267,31,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        option_value_length = strlen(option_value);,0f5997fbfbcf1c205fd9044fb9f4613428b6ea114b5ccf43cc5ef459ad5474f3
wireshark-2.2.17/writecap/pcapio.c,395,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((filter != NULL) && (strlen(filter) > 0) && (strlen(filter) < G_MAXUINT16)) {,a71d1a5ad3974132d2f5edbb88bb9bd6403b9f7304f5633a514b95ae51afa1ea
wireshark-2.2.17/writecap/pcapio.c,395,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((filter != NULL) && (strlen(filter) > 0) && (strlen(filter) < G_MAXUINT16)) {,a71d1a5ad3974132d2f5edbb88bb9bd6403b9f7304f5633a514b95ae51afa1ea
wireshark-2.2.17/writecap/pcapio.c,398,67,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                                            (guint16)(ADD_PADDING(strlen(filter)+ 1)));,229797ee212eae52cab6b93ea8602190bea51e64d4117f5b1292e472c2bbba62
wireshark-2.2.17/writecap/pcapio.c,465,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((filter != NULL) && (strlen(filter) > 0) && (strlen(filter) < G_MAXUINT16 - 1)) {,8b98b2f40049f07f1e63d0cd1057836cd31bb8490309bc0d609a803561b6f56a
wireshark-2.2.17/writecap/pcapio.c,465,58,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        if ((filter != NULL) && (strlen(filter) > 0) && (strlen(filter) < G_MAXUINT16 - 1)) {,8b98b2f40049f07f1e63d0cd1057836cd31bb8490309bc0d609a803561b6f56a
wireshark-2.2.17/writecap/pcapio.c,467,49,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                option.value_length = (guint16)(strlen(filter) + 1 );,4ef32908cccb738042105ebacffb6a7ff06b5505b10c9ea8a747350d2229cc00
wireshark-2.2.17/writecap/pcapio.c,474,72,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                if (!write_to_file(pfile, (const guint8*)filter, (int) strlen(filter), bytes_written, err))",4c46f6067196963f0bec2c4494b4ddfb1445ff2422621b973cc16498bc5cd8bf
wireshark-2.2.17/writecap/pcapio.c,476,22,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                if ((strlen(filter) + 1) % 4) {,dc092b8b4481bda252c57273e066e8121c623529c73c3c90103e49a21f6c53b6
wireshark-2.2.17/writecap/pcapio.c,477,81,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"                        if (!write_to_file(pfile, (const guint8*)&padding, 4 - (strlen(filter) + 1) % 4, bytes_written, err))",ef78126d60f898218ad357829ddb49c1d8597ea738a6d7a2ea7657d3a676f17e
wireshark-2.2.17/wsutil/adler32.c,56,48,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  return update_adler32(1, (const guint8*)buf, strlen(buf));",b0241b46b6695565a2d7c18d6a8b13d4af2679819194a1398fa6ff7dd9c64458
wireshark-2.2.17/wsutil/file_util.c,261,13,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,      len = wcslen (wfilename);,be487b3433b8190a1a4d98599da3ce50bf90692ffce2e5bbce6314186d7e0445
wireshark-2.2.17/wsutil/file_util.h,188,20,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20",#define ws_read    read,636013c96612bd8a6e3e03cfbbafbc944990cc097434b762a397d53b3947fd72
wireshark-2.2.17/wsutil/file_util.h,209,20,1,access,umask,"Ensure that umask is given most restrictive possible setting (e.g., 066 or 077) (CWE-732)",,,CWE-732,#define ws_umask   umask,c182158a255cfa77bdb2241b68027eb93544042640ff0464feb063b7bb6c6b86
wireshark-2.2.17/wsutil/filesystem.c,513,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        msglen = strlen(msg);,06f2261d4f67657ababb56ff53695ffb23d49a4d76995d905f09974ee88e9ed8
wireshark-2.2.17/wsutil/filesystem.c,631,45,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    path_end = path_start + strlen(path_start);,3f3fb9022173dd3bf1a070c217a441083d92d32d18f79560ede29ce3b8f9ddde
wireshark-2.2.17/wsutil/filesystem.c,634,23,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    + strlen(execname) + 1;,4dc865b3d30e563427ae2c540a6f947d4f45599773f2fe64453cbb59cfcecc30
wireshark-2.2.17/wsutil/filesystem.c,1164,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (profilename && strlen(profilename) > 0 &&,8ed6da76a05cff3034de23f993862bb17e8ca5f22378be0cadc856e3425bb491
wireshark-2.2.17/wsutil/filesystem.c,1392,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    if (profilename && strlen(profilename) > 0 &&,8ed6da76a05cff3034de23f993862bb17e8ca5f22378be0cadc856e3425bb491
wireshark-2.2.17/wsutil/filesystem.c,1568,34,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,        pf_dir_parent_path_len = strlen(pf_dir_parent_path);,ec347c801f4fef225044d5f78d268d315b25a6259453f74862e98226c258d9e3
wireshark-2.2.17/wsutil/getopt_long.c,328,56,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,              int len = d->__nonoption_flags_max_len = strlen (orig_str);,5f0fe86041ab37ac7d2aa53f6ddad3a40e30ef29bb6c4dfb335f8480d3e255c7
wireshark-2.2.17/wsutil/getopt_long.c,563,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            if (namelen == (unsigned int) strlen (p->name)),8f0f31a5b8d41e7d89cae0485ce6d97d4a30a917e922245fcafcaa3f6924db60
wireshark-2.2.17/wsutil/getopt_long.c,648,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          d->__nextchar += strlen (d->__nextchar);,32875205432e1fbb476c36907dda8389a8599822283c04e2d596c091609afb10
wireshark-2.2.17/wsutil/getopt_long.c,721,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                  d->__nextchar += strlen (d->__nextchar);,32875205432e1fbb476c36907dda8389a8599822283c04e2d596c091609afb10
wireshark-2.2.17/wsutil/getopt_long.c,761,36,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                  d->__nextchar += strlen (d->__nextchar);,32875205432e1fbb476c36907dda8389a8599822283c04e2d596c091609afb10
wireshark-2.2.17/wsutil/getopt_long.c,766,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,          d->__nextchar += strlen (d->__nextchar);,32875205432e1fbb476c36907dda8389a8599822283c04e2d596c091609afb10
wireshark-2.2.17/wsutil/getopt_long.c,959,63,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,              if ((unsigned int) (nameend - d->__nextchar) == strlen (p->name)),8e98f0c2a263d09b6e6be4622cb02e4ca297b0f7d8d2a6b8ba4d6c62912c1dc0
wireshark-2.2.17/wsutil/getopt_long.c,1007,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            d->__nextchar += strlen (d->__nextchar);,32875205432e1fbb476c36907dda8389a8599822283c04e2d596c091609afb10
wireshark-2.2.17/wsutil/getopt_long.c,1051,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    d->__nextchar += strlen (d->__nextchar);,32875205432e1fbb476c36907dda8389a8599822283c04e2d596c091609afb10
wireshark-2.2.17/wsutil/getopt_long.c,1089,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                    d->__nextchar += strlen (d->__nextchar);,32875205432e1fbb476c36907dda8389a8599822283c04e2d596c091609afb10
wireshark-2.2.17/wsutil/getopt_long.c,1095,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,            d->__nextchar += strlen (d->__nextchar);,32875205432e1fbb476c36907dda8389a8599822283c04e2d596c091609afb10
wireshark-2.2.17/wsutil/inet_ntop.c,176,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,			tp += strlen(tp);,49aa5fb00d8422097c07498fdd29f6b21cc85f409d2a2add9b04c576424cec7c
wireshark-2.2.17/wsutil/sha1.c,383,30,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,                             strlen( msg[i] ) );,acb7a7e82b0d9f1b6b2e71ea83989dad6f97837e3c14a27365b647216761c455
wireshark-2.2.17/wsutil/strptime.c,72,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  ({ size_t len = strlen (cs1);                                               \,e4057d575055d3b6a48b987fb19bb2c4134a9840a7ff712ab5baafc2abe60712
wireshark-2.2.17/wsutil/strptime.c,79,38,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  (g_ascii_strncasecmp ((cs1), (s2), strlen (cs1)) ? 0 : ((s2) += strlen (cs1), 1))",a06e7014809d9a487dc4cecb088c613193ce49edb663199c0268c6f6d0d48ac7
wireshark-2.2.17/wsutil/strptime.c,79,67,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  (g_ascii_strncasecmp ((cs1), (s2), strlen (cs1)) ? 0 : ((s2) += strlen (cs1), 1))",a06e7014809d9a487dc4cecb088c613193ce49edb663199c0268c6f6d0d48ac7
wireshark-2.2.17/wsutil/strptime.c,114,28,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,              size_t len = strlen (alts);                                     \,4ad69e7ebdb826d48b0553785746a31c76cb604880224e35294c5f592d3bda10
wireshark-2.2.17/wsutil/tempfile.c,62,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  len = strlen (path_template);,1db028ee179592fd9f9b38caecc362f890fb640b8b016b9340570d79662874a3
wireshark-2.2.17/wsutil/tempfile.c,108,9,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  len = strlen (path_template);,1db028ee179592fd9f9b38caecc362f890fb640b8b016b9340570d79662874a3
wireshark-2.2.17/wsutil/tempfile.c,212,7,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,  if (strlen(tmp_file) > tf[idx].len) {,177af2727fba572cc7462c4432065b5e04e268a1a3a904fb5d489920ed60a568
wireshark-2.2.17/wsutil/tempfile.c,213,19,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    tf[idx].len = strlen(tmp_file) + 1;,faae05c180c888d7d95a1248c18f7db55abc3b8cf010ebfd02df07f8b8327245
wireshark-2.2.17/wsutil/tempfile.c,229,43,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"  fd = mkstemps(tf[idx].path, sfx ? (int) strlen(sfx) : 0);",7563a50e199eec14b7df9045e11c361859e22b629918c589ba8668ddab9c6e56
wireshark-2.2.17/wsutil/win32-utils.c,108,14,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    errlen = strlen(errbuf);,21a8c2d0b24b239d07d69702d782eea49dfa480ac1b7d6e9d987ce7f76ebe1d0
wireshark-2.2.17/wsutil/ws_mempbrk_sse42.c,67,21,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    size_t length = strlen(needles);,1ed4ec5a7ff21e8999a14827d065d3dd862ccc0dd6aa528878fc09852124e560
